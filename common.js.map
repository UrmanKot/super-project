{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/warehouse/services/tool-order.service.ts","./src/app/warehouse/services/tool-request.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ToolOrder, ToolOrderPaginated} from '../models/tool-order';\r\nimport {map} from 'rxjs/operators';\r\nimport {SerialType} from '../models/serial-type';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolOrderService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'tool_orders/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n\r\n  get(query?: QuerySearch[]): Observable<ToolOrder[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolOrder[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity): Observable<ToolOrder> {\r\n    return this.httpClient.post<{ data: ToolOrder }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: ToolOrder): Observable<ToolOrder> {\r\n    return this.httpClient.put<{ data: ToolOrder }>(this.API_URL + this.url + entity.id + '/', entity).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  get_paginated(query?: QuerySearch[]): Observable<ToolOrderPaginated> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolOrderPaginated }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<ToolOrder> {\r\n    return this.httpClient.get<{ data: ToolOrder }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  complete(id: number): Observable<ToolOrder> {\r\n    return this.httpClient.post<{ data: ToolOrder }>(this.API_URL + this.url + id + '/complete/', null).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  delete(entity: ToolOrder) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ToolRequest} from './tool-request';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolRequestService {\r\n\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'tool_requests/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<ToolRequest[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolRequest[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity): Observable<ToolRequest> {\r\n    return this.httpClient.post<{ data: ToolRequest }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: ToolRequest) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: ToolRequest) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}