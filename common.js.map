{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/correspondent/enum/correspondent-types.enum.ts","./src/app/correspondent/modals/create-edit-correspondnet-category/create-edit-correspondnet-category.component.ts","./src/app/correspondent/modals/create-edit-correspondnet-category/create-edit-correspondnet-category.component.html","./src/app/correspondent/services/correspondents-category.service.ts"],"sourcesContent":["export enum CorrespondentTypes {\r\n  INCOMING = '0',\r\n  OUTGOING = '1'\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\r\nimport {CorrespondentTypes} from '../../enum/correspondent-types.enum';\r\nimport {CorrespondentsCategoriesService} from '../../services/correspondents-category.service';\r\nimport {CorrespondentsCategory} from '../../models/correspondents-category';\r\nimport {take} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-correspondnet-category',\r\n  templateUrl: './create-edit-correspondnet-category.component.html',\r\n  styleUrls: ['./create-edit-correspondnet-category.component.scss']\r\n})\r\nexport class CreateEditCorrespondnetCategoryComponent implements OnInit {\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    name: ['', Validators.required],\r\n    description: ['', Validators.required],\r\n    type: [null],\r\n    parent: [null],\r\n  });\r\n\r\n  correspondentType: CorrespondentTypes;\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CreateEditCorrespondnetCategoryComponent>,\r\n    private categoriesService: CorrespondentsCategoriesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, correspondentType: CorrespondentTypes, category: Partial<CorrespondentsCategory> }\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.correspondentType = this.data.correspondentType;\r\n    this.form.get('type').patchValue(this.correspondentType);\r\n\r\n    if (this.data.type === 'edit') {\r\n      const category = this.data.category;\r\n      this.form.addControl('id' as any, new FormControl(category.id));\r\n      this.form.get('name').patchValue(category.name);\r\n      this.form.get('description').patchValue(category.description);\r\n      this.form.get('parent').patchValue(category.parent);\r\n    }\r\n  }\r\n\r\n  onSelectCategory(category: CorrespondentsCategory) {\r\n    if (category) {\r\n      this.form.get('parent').patchValue(category.id);\r\n    } else {\r\n      this.form.get('parent').patchValue(null);\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    if (this.data.type === 'edit') {\r\n      this.update();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  create() {\r\n    if (this.form.valid) {\r\n      this.categoriesService.create(this.form.value as CorrespondentsCategory).pipe(take(1)).subscribe(\r\n        (response) => {\r\n          this.dialogRef.close(response);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  update() {\r\n    if (this.form.valid) {\r\n      this.categoriesService.update(this.form.value as CorrespondentsCategory).pipe(take(1)).subscribe(\r\n        res => { this.dialogRef.close(res); }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"create-edit-product-structure-category\">\r\n  <div class=\"modal-header\">\r\n    <h2 class=\"modal-header__title\">\r\n      {{data.type}} Correspondents Category\r\n    </h2>\r\n  </div>\r\n\r\n  <mat-dialog-content>\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name*</label>\r\n        <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description*</label>\r\n        <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\"\r\n                  formControlName=\"description\"></textarea>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Parent Category</label>\r\n        <pek-correspondnet-categories-picker\r\n          [correspondentType]=\"correspondentType\"\r\n          [ignoredCategoryId]=\"data.category?.id\"\r\n          [currentCategoryId]=\"form.get('parent').value\"\r\n          (choiceCategory)=\"onSelectCategory($event)\"\r\n        ></pek-correspondnet-categories-picker>\r\n      </div>\r\n    </form>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions class=\"justify-content-between\">\r\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      [label]=\"data.type\"\r\n      [loading]=\"isSaving\"\r\n      [disabled]=\"form.invalid\"\r\n      (click)=\"onSave()\"\r\n    ></button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from '@env/environment';\r\nimport {CorrespondentsCategory} from '../models/correspondents-category';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  CreateEditCorrespondnetCategoryComponent\r\n} from '../modals/create-edit-correspondnet-category/create-edit-correspondnet-category.component';\r\nimport {CorrespondentTypes} from '../enum/correspondent-types.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CorrespondentsCategoriesService {\r\n\r\n  clearSelectedCategories$ = new Subject();\r\n  selectCategories$ = new Subject();\r\n\r\n  API_URL = environment.base_url;\r\n  readonly url = 'correspondent/correspondents_categories/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n\r\n  }\r\n\r\n  get(query?: { name: string, value: any }[]): Observable<CorrespondentsCategory[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: CorrespondentsCategory[] }>(this.API_URL + this.url +\r\n      qString).pipe(map(response => {\r\n      let categories = response.data;\r\n      categories.forEach(category => {\r\n        if (!category.parent) {\r\n          category.lft = category.tree_id;\r\n        }\r\n      });\r\n      categories = categories.sort((a, b) => a.lft - b.lft);\r\n      return categories;\r\n    }));\r\n  }\r\n\r\n  getAll(page: number | null = 1): Observable<CorrespondentsCategory[]> {\r\n    return this.httpClient.get<{ data: { count: number, results: CorrespondentsCategory[] } }>(this.API_URL + this.url + '?page=' + page).pipe(map(response => {\r\n      return response.data.results;\r\n    }));\r\n  }\r\n\r\n  create(category: CorrespondentsCategory) {\r\n    return this.httpClient.post(this.API_URL + this.url, category);\r\n  }\r\n\r\n  update(category: CorrespondentsCategory) {\r\n    return this.httpClient.put(this.API_URL + this.url + category.id + '/', category);\r\n  }\r\n\r\n  delete(category: CorrespondentsCategory) {\r\n    return this.httpClient.delete(this.API_URL + this.url + category.id + '/');\r\n  }\r\n\r\n  move(id, move) {\r\n    return this.httpClient.post(this.API_URL + this.url + id + '/move/', move).pipe(map(response => {\r\n      return response;\r\n    }));\r\n  }\r\n\r\n  createEditCategory(type: ModalActionType, correspondentType: CorrespondentTypes, category?: CorrespondentsCategory): Observable<CorrespondentsCategory> {\r\n    return this.dialog\r\n      .open<CreateEditCorrespondnetCategoryComponent>(CreateEditCorrespondnetCategoryComponent, {\r\n        width: '42rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-picker',\r\n        data: {type, category, correspondentType},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}