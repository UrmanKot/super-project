{"version":3,"file":"src_app_administration_administration_module_ts.js","mappings":"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","sources":["./src/app/administration/administration.module.ts","./src/app/administration/administration.routing.ts","./src/app/administration/components/administration-layout/administration-layout.component.ts","./src/app/administration/components/administration-layout/administration-layout.component.html","./src/app/administration/components/administration-roles/administration-roles.component.ts","./src/app/administration/components/administration-roles/administration-roles.component.html","./src/app/administration/components/administration-user-list/administration-user-list.component.ts","./src/app/administration/components/administration-user-list/administration-user-list.component.html","./src/app/administration/modals/create-edit-role/create-edit-role.component.ts","./src/app/administration/modals/create-edit-role/create-edit-role.component.html","./src/app/administration/modals/create-edit-user/create-edit-user.component.ts","./src/app/administration/modals/create-edit-user/create-edit-user.component.html","./src/app/administration/modals/edit-role-permissions/edit-role-permissions.component.ts","./src/app/administration/modals/edit-role-permissions/edit-role-permissions.component.html","./src/app/administration/modals/edit-user-roles/edit-user-roles.component.ts","./src/app/administration/modals/edit-user-roles/edit-user-roles.component.html","./src/app/administration/services/group-sub-module-permission.service.ts","./src/app/administration/services/permissions.service.ts","./src/app/administration/services/role.service.ts","./src/app/administration/services/sub-module-permission.service.ts","./src/app/administration/services/user.service.ts","./src/app/business-trips/services/business-trips-permission.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdministrationRouting } from './administration.routing';\r\nimport { AdministrationUserListComponent } from './components/administration-user-list/administration-user-list.component';\r\nimport { AdministrationLayoutComponent } from './components/administration-layout/administration-layout.component';\r\nimport {LayoutModule} from \"../layout/layout.module\";\r\nimport { AdministrationRolesComponent } from './components/administration-roles/administration-roles.component';\r\nimport {ButtonModule} from \"primeng/button\";\r\nimport {SharedModule} from \"@shared/shared.module\";\r\nimport { CreateEditUserComponent } from './modals/create-edit-user/create-edit-user.component';\r\nimport { EditUserRolesComponent } from './modals/edit-user-roles/edit-user-roles.component';\r\nimport {BusinessTripsModule} from \"../business-trips/business-trips.module\";\r\nimport {CrmModule} from \"../crm/crm.module\";\r\nimport {TreeSelectModule} from \"primeng/treeselect\";\r\nimport { CreateEditRoleComponent } from './modals/create-edit-role/create-edit-role.component';\r\nimport { EditRolePermissionsComponent } from './modals/edit-role-permissions/edit-role-permissions.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdministrationUserListComponent,\r\n    AdministrationLayoutComponent,\r\n    AdministrationRolesComponent,\r\n    CreateEditUserComponent,\r\n    EditUserRolesComponent,\r\n    CreateEditRoleComponent,\r\n    EditRolePermissionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdministrationRouting,\r\n    LayoutModule,\r\n    ButtonModule,\r\n    SharedModule,\r\n    BusinessTripsModule,\r\n    CrmModule,\r\n    TreeSelectModule\r\n  ]\r\n})\r\nexport class AdministrationModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {\r\n  AdministrationUserListComponent\r\n} from \"./components/administration-user-list/administration-user-list.component\";\r\nimport {AdministrationLayoutComponent} from \"./components/administration-layout/administration-layout.component\";\r\nimport {AdministrationRolesComponent} from \"./components/administration-roles/administration-roles.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdministrationLayoutComponent, children: [\r\n      {path: '', redirectTo: 'user-list', pathMatch: 'full'},\r\n      {path: 'user-list', component: AdministrationUserListComponent},\r\n      {path: 'roles', component: AdministrationRolesComponent}\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdministrationRouting {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {NavigationLink} from \"../../../layout/navigation-route\";\r\nimport {ProductStructureCategoryService} from \"../../../product-structure/services/product-structure-category.service\";\r\n\r\n@Component({\r\n  selector: 'pek-administration-layout',\r\n  templateUrl: './administration-layout.component.html',\r\n  styleUrls: ['./administration-layout.component.scss']\r\n})\r\nexport class AdministrationLayoutComponent implements OnInit {\r\n  routes: NavigationLink[] = [\r\n    {label: 'User List', commands: ['user-list']},\r\n    {label: 'Roles', commands: ['roles']},\r\n    {label: 'Sales Chain', isClicked: true},\r\n  ];\r\n\r\n  constructor(\r\n    private productStructureCategoryService: ProductStructureCategoryService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onEditSalesChains() {\r\n    this.productStructureCategoryService.editSalesChains()\r\n  }\r\n\r\n  edit(event: NavigationLink) {\r\n    this.onEditSalesChains();\r\n  }\r\n}\r\n","<pek-header\r\n  [module]=\"'Administration'\"\r\n  [routes]=\"routes\"\r\n  (clickRoute)=\"edit($event)\"\r\n></pek-header>\r\n<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject, iif, Observable, startWith, switchMap} from \"rxjs\";\r\nimport {filter, map, tap} from \"rxjs/operators\";\r\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {Role} from \"../../models/role\";\r\nimport {RoleService} from \"../../services/role.service\";\r\nimport {MenuItem} from \"primeng/api\";\r\nimport {ModalService} from \"@shared/services/modal.service\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-administration-roles',\r\n  templateUrl: './administration-roles.component.html',\r\n  styleUrls: ['./administration-roles.component.scss']\r\n})\r\nexport class AdministrationRolesComponent implements OnInit {\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Role',\r\n    items: [\r\n      {\r\n        label: 'Edit Role',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.editRole()\r\n      },\r\n      {\r\n        label: 'Edit Permissions',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.editPermissions()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.removeRole()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  isLoading = true;\r\n  currentPage = 1;\r\n\r\n  selectedRole: Role = null;\r\n\r\n  count = 0;\r\n\r\n  isShowAll = false;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  query: QuerySearch[] = [];\r\n\r\n  roles$: Observable<Role[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() =>\r\n      iif(() =>\r\n          !this.isShowAll,\r\n        this.roleService.getForPagination(this.query).pipe(\r\n          tap(response => this.count = response.count),\r\n          map(response => response.results),\r\n          tap(() => this.isLoading = false),\r\n          startWith([]),\r\n          untilDestroyed(this)\r\n        ),\r\n        this.roleService.getRoles(this.query).pipe(\r\n          tap(roles => this.count = roles.length),\r\n          tap(() => this.isLoading = false),\r\n          startWith([]),\r\n          untilDestroyed(this)\r\n        ),\r\n      ),\r\n    ),\r\n    untilDestroyed(this)\r\n  )\r\n\r\n\r\n  constructor(\r\n    private readonly roleService: RoleService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedRole = null;\r\n\r\n    this.query = [];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query.push({name: 'page', value: this.currentPage})\r\n      this.query.push({name: 'paginated', value: true});\r\n    }\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.isShowAll = value;\r\n\r\n    if (!this.isShowAll) {\r\n      this.currentPage = 1;\r\n    }\r\n\r\n    this.search$.next();\r\n  }\r\n\r\n  paginate(event: any) {\r\n    this.currentPage = event.page + 1;\r\n    this.search$.next();\r\n  }\r\n\r\n  createRole() {\r\n    this.roleService.createEditRoleModal('create').pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  editRole() {\r\n    this.roleService.createEditRoleModal('edit', this.selectedRole).pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  editPermissions() {\r\n    this.roleService.editRolePermissions(this.selectedRole).pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  private removeRole() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(Boolean),\r\n    ).subscribe(() => {\r\n      this.roleService.deleteRole(this.selectedRole).pipe(\r\n        tap(() => this.search$.next())\r\n      ).subscribe();\r\n    })\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'administration'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Roles</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"Create Role\"\r\n        (click)=\"createRole()\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <p-table\r\n      #dt\r\n      selectionMode=\"single\"\r\n      [rows]=\"10\"\r\n      [scrollable]=\"true\"\r\n      [(selection)]=\"selectedRole\"\r\n      scrollHeight=\"calc(100vh - 27rem)\"\r\n      [value]=\"roles$ | async\"\r\n    >\r\n      <ng-template pTemplate=\"caption\">\r\n        <div class=\"d-flex\">\r\n          <p class=\"subtitle\" *ngIf=\"!selectedRole\">Choose the Role to edit</p>\r\n          <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedRole\"></p-menubar>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n          <th style=\"width: 95%\">Name</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-role let-i=\"rowIndex\">\r\n        <tr [pSelectableRow]=\"role\">\r\n          <td style=\"width: 5%\" class=\"text-center\">{{(currentPage - 1) * 10 + i + 1}}</td>\r\n          <td style=\"width: 95%\">{{role.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <div\r\n      *ngIf=\"!isShowAll\"\r\n      class=\"paginator-wrapper\"\r\n      [class.paginator-wrapper_hide]=\"count === 0\"\r\n    >\r\n      <p-paginator\r\n        #paginator\r\n        [rows]=\"10\"\r\n        [totalRecords]=\"count\"\r\n        (onPageChange)=\"paginate($event)\"\r\n      >\r\n      </p-paginator>\r\n      <p-button\r\n        (click)=\"onShowAll(true)\"\r\n        class=\"paginator-all\"\r\n        type=\"button\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        All\r\n      </p-button>\r\n    </div>\r\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"onShowAll(false)\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {BehaviorSubject, iif, Observable, switchMap} from \"rxjs\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {AdapterService} from \"@shared/services/adapter.service\";\r\nimport {User} from \"../../models/user\";\r\nimport {debounceTime, filter, map, tap} from \"rxjs/operators\";\r\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {Paginator} from \"primeng/paginator\";\r\nimport {MenuItem} from \"primeng/api\";\r\nimport {ModalService} from \"@shared/services/modal.service\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-administration-user-list',\r\n  templateUrl: './administration-user-list.component.html',\r\n  styleUrls: ['./administration-user-list.component.scss']\r\n})\r\nexport class AdministrationUserListComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    username: [''],\r\n    email: [''],\r\n    first_name: [''],\r\n    last_name: [''],\r\n  });\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected User',\r\n    items: [\r\n      {\r\n        label: 'Edit User',\r\n        icon: 'pi pi-user-edit',\r\n        command: () => this.editUser()\r\n      },\r\n      {\r\n        label: 'Edit Permissions',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.editUserPermissions()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.removeUser()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  currentPage = 1;\r\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n  isLoading = true;\r\n  count = 0;\r\n\r\n  isStartFirstPage = false;\r\n  isShowAll = false;\r\n\r\n  selectedUser: User = null;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  query: QuerySearch[] = [];\r\n\r\n  users$: Observable<User[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() =>\r\n      iif(() =>\r\n          !this.isShowAll,\r\n        this.userService.getForPagination(this.query).pipe(\r\n          tap(response => this.count = response.count),\r\n          map(response => response.results),\r\n        ),\r\n        this.userService.get(this.query).pipe(\r\n          tap(users => this.count = users.length),\r\n        ),\r\n        // this.userService.get(this.query).pipe(\r\n        //   tap(users => this.ordersCount = users.length),\r\n        // )\r\n      ),\r\n    ),\r\n    tap(() => this.paginateToFistPage()),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly userService: UserService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm.valueChanges.pipe(\r\n      debounceTime(150),\r\n      untilDestroyed(this)\r\n    ).subscribe(() => this.search$.next())\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedUser = null;\r\n\r\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.currentPage = 1;\r\n      this.queryKey = newQueryKey;\r\n      this.isStartFirstPage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'page', value: this.currentPage},\r\n    ];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query.push({name: 'paginated', value: true});\r\n    }\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value) {\r\n        this.query.push({\r\n          name: key,\r\n          value: this.searchForm.controls[key].value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  paginate(event: any) {\r\n    if (!this.isStartFirstPage) {\r\n      this.currentPage = event.page + 1;\r\n      this.search$.next();\r\n    }\r\n  }\r\n\r\n  paginateToFistPage() {\r\n    if (this.isStartFirstPage) {\r\n      this.paginator?.changePage(0);\r\n    }\r\n\r\n    this.isStartFirstPage = false;\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.isShowAll = value;\r\n\r\n    if (!this.isShowAll) {\r\n      this.currentPage = 1;\r\n    }\r\n\r\n    this.search$.next();\r\n  }\r\n\r\n  createUser() {\r\n    this.userService.createEditUserModal('create').pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  editUser() {\r\n    this.userService.createEditUserModal('edit', this.selectedUser).pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  editUserPermissions() {\r\n    this.userService.editUserRoles(this.selectedUser).pipe(\r\n      filter(Boolean),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  private removeUser() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(Boolean),\r\n    ).subscribe(() => {\r\n      this.userService.deleteUser(this.selectedUser).pipe(\r\n        tap(() => this.search$.next())\r\n      ).subscribe();\r\n    })\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'administration'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Users List</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-user-plus\"\r\n        label=\"Create User\"\r\n        (click)=\"createUser()\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form class=\"form mb-3\" [formGroup]=\"searchForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input\r\n              id=\"username\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"username\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">E-mail</label>\r\n            <input\r\n              id=\"email\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"email\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"first_name\">First Name</label>\r\n            <input\r\n              id=\"first_name\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"first_name\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"last_name\">Last Name</label>\r\n            <input\r\n              id=\"last_name\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"last_name\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"d-flex mt-1\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedUser\">Choose the Role to edit</p>\r\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedUser\"></p-menubar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"table-pagination-preloader\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        [rows]=\"10\"\r\n        [scrollable]=\"true\"\r\n        [(selection)]=\"selectedUser\"\r\n        scrollHeight=\"calc(100vh - 27rem)\"\r\n        [value]=\"users$ | async\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 15%\">Username</th>\r\n            <th style=\"width: 20%\">Email</th>\r\n            <th style=\"width: 20%\">First Name</th>\r\n            <th style=\"width: 20%\">Last Name</th>\r\n            <th style=\"width: 20%\">Roles</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-user let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"user\">\r\n            <td style=\"width: 5%\" class=\"text-center\">{{(currentPage - 1) * 10 + i + 1}}</td>\r\n            <td style=\"width: 15%\">{{user.username}}</td>\r\n            <td style=\"width: 20%\">{{user.email}}</td>\r\n            <td style=\"width: 20%\">{{user.first_name}}</td>\r\n            <td style=\"width: 20%\">{{user.last_name}}</td>\r\n            <td style=\"width: 20%\">\r\n              <span *ngFor=\"let group of user.groups; let idx = index\">\r\n                {{group.name}}<span *ngIf=\"idx !== user.groups.length - 1\">,</span>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n      </div>\r\n      <div\r\n        *ngIf=\"!isShowAll\"\r\n        class=\"paginator-wrapper\"\r\n        [class.paginator-wrapper_hide]=\"count === 0\"\r\n      >\r\n        <p-paginator\r\n          #paginator\r\n          [rows]=\"10\"\r\n          [totalRecords]=\"count\"\r\n          (onPageChange)=\"paginate($event)\"\r\n        >\r\n        </p-paginator>\r\n        <p-button\r\n          (click)=\"onShowAll(true)\"\r\n          class=\"paginator-all\"\r\n          type=\"button\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          All\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"onShowAll(false)\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {Role} from \"../../models/role\";\r\nimport {RoleService} from \"../../services/role.service\";\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-role',\r\n  templateUrl: './create-edit-role.component.html',\r\n  styleUrls: ['./create-edit-role.component.scss']\r\n})\r\nexport class CreateEditRoleComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    name: [null, Validators.required],\r\n  });\r\n\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly roleService: RoleService,\r\n    private dialogRef: MatDialogRef<CreateEditRoleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, role: Role }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.addControl('id' as any, new FormControl(this.data.role.id));\r\n      this.form.patchValue(<any>this.data.role)\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createRole();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editRole();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createRole() {\r\n    const send = <any>this.form.value;\r\n    this.roleService.createRole(send).subscribe({\r\n      next: user => this.dialogRef.close(true),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editRole() {\r\n    const send = <any>this.form.value;\r\n\r\n    this.roleService.editRole(send).subscribe({\r\n      next: user => this.dialogRef.close(true),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Role\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name*</label>\r\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {User} from \"../../models/user\";\r\nimport {UserService} from \"../../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-user',\r\n  templateUrl: './create-edit-user.component.html',\r\n  styleUrls: ['./create-edit-user.component.scss']\r\n})\r\nexport class CreateEditUserComponent implements OnInit {\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    username: ['', Validators.required],\r\n    email: [''],\r\n    first_name: [''],\r\n    last_name: ['',],\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly userService: UserService,\r\n    private dialogRef: MatDialogRef<CreateEditUserComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, user: User }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.addControl('password' as any, this.fb.control(''))\r\n      this.form.addControl('id' as any, new FormControl(this.data.user.id));\r\n      this.form.patchValue(<any>this.data.user);\r\n      this.form.get('username').disable();\r\n    } else {\r\n      this.form.addControl('password' as any, this.fb.control(null, Validators.required))\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createUser();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editUser();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createUser() {\r\n    const send = <any>this.form.value;\r\n    this.userService.createUser(send).subscribe({\r\n      next: user => this.dialogRef.close(true),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editUser() {\r\n    const send = <any>this.form.value;\r\n\r\n    if (!send.password) {\r\n      delete send.password\r\n    }\r\n\r\n    if (!send.first_name && !this.data.user.first_name) {\r\n      delete send.first_name\r\n    }\r\n\r\n    if (!send.email && !this.data.user.email) {\r\n      delete send.email\r\n    }\r\n\r\n    if (!send.last_name && !this.data.user.last_name) {\r\n      delete send.last_name\r\n    }\r\n\r\n    this.userService.editUser(send).subscribe({\r\n      next: user => this.dialogRef.close(true),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} User\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Username*</label>\r\n      <input type=\"text\" id=\"username\" pInputText formControlName=\"username\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password<span *ngIf=\"data.type === 'create'\">*</span></label>\r\n      <input type=\"text\" id=\"password\" pInputText formControlName=\"password\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">E-mail</label>\r\n      <input type=\"text\" id=\"email\" pInputText formControlName=\"email\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"first_name\">First Name</label>\r\n      <input type=\"text\" id=\"first_name\" pInputText formControlName=\"first_name\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"last_name\">Last Name</label>\r\n      <input type=\"text\" id=\"last_name\" pInputText formControlName=\"last_name\">\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {RoleService} from \"../../services/role.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {Role} from \"../../models/role\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {ModulePermission, Permission, Permissions} from \"../../models/permission\";\r\nimport {SubModulePermission} from \"../../models/sub-module-permission\";\r\nimport {GroupSubModulePermission} from \"../../models/group-sub-module-permission\";\r\nimport {PermissionsService} from \"../../services/permissions.service\";\r\nimport {GroupSubModulePermissionService} from \"../../services/group-sub-module-permission.service\";\r\nimport {SubModulePermissionService} from \"../../services/sub-module-permission.service\";\r\nimport {forkJoin} from \"rxjs\";\r\n\r\nconst QC_MODULE_PERMISSION_ID = 5;\r\n\r\n@Component({\r\n  selector: 'pek-edit-role-permissions',\r\n  templateUrl: './edit-role-permissions.component.html',\r\n  styleUrls: ['./edit-role-permissions.component.scss']\r\n})\r\nexport class EditRolePermissionsComponent implements OnInit {\r\n\r\n  subModules: SubModulePermission[] = [];\r\n\r\n  permissions: Permission[];\r\n  rolePermissions: Permission[];\r\n  role: Role;\r\n  selectedPermissions: any[] = [];\r\n\r\n  countPermissions = 0;\r\n  searchForm: FormGroup = this.fb.group({\r\n    offset: [0],\r\n    limit: [1000]\r\n  });\r\n\r\n  modulesPermission: ModulePermission[];\r\n  selectedModulesPermission: ModulePermission[] = [];\r\n\r\n  isLoadingModulesPermissions = true;\r\n  isLoadingPermissions = false;\r\n\r\n  isSelectModulesMode = true;\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'limit', value: this.searchForm.get('limit').value},\r\n    {name: 'offset', value: this.searchForm.get('offset').value}\r\n  ];\r\n  selectedModules: number[] = [];\r\n  isQCModulePermissionSelected = false;\r\n  groupSubModule: GroupSubModulePermission;\r\n\r\n  isSaving = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private permissionsService: PermissionsService,\r\n    private rolesService: RoleService,\r\n    private dialogRef: MatDialogRef<EditRolePermissionsComponent>,\r\n    private groupSubModuleService: GroupSubModulePermissionService,\r\n    private subModulePermissionService: SubModulePermissionService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, role: Role }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.role = this.data.role;\r\n    this.getModules();\r\n    this.getSubModuleInfo();\r\n  }\r\n\r\n  getModules() {\r\n    const query: QuerySearch[] = [{name: 'role_id', value: this.role.id}];\r\n    this.permissionsService.getModulePermissions(query).subscribe(modulePermission => {\r\n      this.modulesPermission = modulePermission;\r\n      this.selectedModulesPermission = modulePermission.filter(m => m?.is_module_permissions_selected_in_role);\r\n      this.isQCModulePermissionSelected = this.selectedModulesPermission.findIndex(module => module.id === QC_MODULE_PERMISSION_ID) > -1;\r\n      this.isLoadingModulesPermissions = false;\r\n    });\r\n  }\r\n\r\n  getGroupSubModuleInfo() {\r\n    this.groupSubModuleService.get([{name: 'role', value: this.role.id}]).subscribe(groupSubModules => {\r\n      if (groupSubModules.length > 0) {\r\n        this.groupSubModule = groupSubModules[0];\r\n        groupSubModules.forEach(module => {\r\n          this.selectedModules.push(...module.module_permission);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubModuleInfo() {\r\n    this.subModulePermissionService.get().subscribe(subModules => {\r\n      this.subModules = subModules;\r\n      this.getGroupSubModuleInfo();\r\n    });\r\n  }\r\n\r\n  goToSelectionPermissions() {\r\n    this.isSelectModulesMode = false;\r\n    this.getPermissions();\r\n  }\r\n\r\n  getPermissions() {\r\n    this.isLoadingPermissions = true;\r\n    let modulesIds = '';\r\n\r\n    this.selectedModulesPermission.forEach(permission => modulesIds += permission.id + ',');\r\n    modulesIds = modulesIds.slice(0, -1);\r\n    this.isQCModulePermissionSelected = this.selectedModulesPermission.findIndex(module => module.id === QC_MODULE_PERMISSION_ID) > -1;\r\n    forkJoin({\r\n      modulesPermissions: this.permissionsService.getPermissionsForModules(modulesIds, this.query),\r\n      rolePermissions: this.rolesService.getRolePermissions(this.role)\r\n    }).subscribe(({modulesPermissions, rolePermissions}) => {\r\n      this.permissions = modulesPermissions.data;\r\n      this.rolePermissions = rolePermissions.permissions;\r\n      this.selectedPermissions = rolePermissions.permissions;\r\n      this.isLoadingPermissions = false;\r\n    });\r\n  }\r\n\r\n  getModulesPermissions() {\r\n    this.isLoadingPermissions = true;\r\n    let modulesIds = '';\r\n\r\n    this.selectedModulesPermission.forEach(permission => modulesIds += permission.id + ',');\r\n    modulesIds = modulesIds.slice(0, -1);\r\n\r\n    this.permissionsService.getPermissionsForModules(modulesIds, this.query).subscribe(permissions => {\r\n      this.permissions = permissions.data;\r\n      this.countPermissions = permissions.total;\r\n      this.isLoadingPermissions = false;\r\n    });\r\n  }\r\n\r\n  getRolePermissions() {\r\n    this.rolesService.getRolePermissions(this.role).subscribe(res => {\r\n      this.selectedPermissions = res.permissions;\r\n    });\r\n  }\r\n\r\n  saveRolePermission() {\r\n    const rolePermissions: Permission[] = JSON.parse(JSON.stringify(this.rolePermissions));\r\n    this.selectedPermissions.forEach(selectedPermission => {\r\n      const index = rolePermissions.findIndex(p => p.id === selectedPermission.id);\r\n      if (index !== -1) rolePermissions.splice(index, 1);\r\n      else rolePermissions.push(selectedPermission);\r\n    });\r\n\r\n    const addedPermissions = {\r\n      permissions_ids: '',\r\n      modules_ids: ''\r\n    };\r\n\r\n    const removedPermissions = {\r\n      permissions_ids: '',\r\n      modules_ids: '',\r\n    };\r\n\r\n    rolePermissions.forEach(permission => {\r\n      if (this.rolePermissions.find(p => p.id === permission.id)) removedPermissions.permissions_ids += permission.id + ',';\r\n      else addedPermissions.permissions_ids += permission.id + ',';\r\n    });\r\n\r\n    addedPermissions.permissions_ids = addedPermissions.permissions_ids.slice(0, -1);\r\n    addedPermissions.modules_ids = this.selectedModulesPermission.map(m => m.id).join(',');\r\n    removedPermissions.permissions_ids = removedPermissions.permissions_ids.slice(0, -1);\r\n    removedPermissions.modules_ids = this.selectedModulesPermission.map(m => m.id).join(',');\r\n\r\n    const findPermissions = [];\r\n\r\n    this.permissions.forEach(p => {\r\n      if (this.selectedPermissions.find(sp => sp.id === p.id)) {\r\n        findPermissions.push(p);\r\n      }\r\n    });\r\n\r\n    const send = {\r\n      modules_ids: this.selectedModulesPermission.map(m => m.id)\r\n    };\r\n\r\n    if (findPermissions.length === 0) {\r\n      this.rolesService.removeModuleFromRole(this.role.id, send).subscribe();\r\n    }\r\n\r\n    if (addedPermissions.permissions_ids) this.addPermissions(addedPermissions);\r\n    if (removedPermissions.permissions_ids) this.removePermissions(removedPermissions);\r\n\r\n    if (this.isQCModulePermissionSelected) {\r\n      this.updateRoleSubModulePermission();\r\n    }\r\n  }\r\n\r\n  addPermissions(addedPermissions: {\r\n    permissions_ids: string,\r\n    modules_ids: string\r\n  }): void {\r\n    this.isSaving = true;\r\n    this.rolesService.setRolePermissions(this.role, addedPermissions).subscribe(() => {\r\n      this.dialogRef.close(true);\r\n      this.isSaving = false;\r\n    });\r\n  }\r\n\r\n  removePermissions(removedPermissions: {\r\n    permissions_ids: string,\r\n    modules_ids: string\r\n  }): void {\r\n    this.isSaving = true;\r\n    this.rolesService.removeRolePermissions(this.role, removedPermissions).subscribe(() => {\r\n      this.dialogRef.close(true);\r\n      this.isSaving = false\r\n    });\r\n  }\r\n\r\n  searchPermissions() {\r\n    this.query = [\r\n      {name: 'limit', value: this.searchForm.get('limit').value},\r\n      {name: 'offset', value: this.searchForm.get('offset').value}\r\n    ];\r\n    this.permissions = [];\r\n    this.getModulesPermissions();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    this.searchForm.get('limit').patchValue(evt.page * 10);\r\n    this.searchPermissions();\r\n  }\r\n\r\n  updateRoleSubModulePermission() {\r\n    const sendData: GroupSubModulePermission = {\r\n      id: null,\r\n      role: this.role.id,\r\n      module_permission: this.selectedModules\r\n    };\r\n    this.isSaving = true;\r\n    if (this.groupSubModule) {\r\n      sendData.id = this.groupSubModule.id;\r\n      this.groupSubModuleService.updateGroupSubModule(sendData).subscribe(() => {\r\n        this.isSaving = false;\r\n        this.dialogRef.close(true);\r\n      });\r\n    } else {\r\n      this.groupSubModuleService.createGroupSubRole(sendData).subscribe(() => {\r\n        this.dialogRef.close(true);\r\n        this.isSaving = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span *ngIf=\"isSelectModulesMode\">Select the modules to be accessed</span>\r\n    <span *ngIf=\"!isSelectModulesMode\">Edit Permissions of the Role \"{{role.name}}\"</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <div *ngIf=\"isSelectModulesMode\">\r\n    <p-table [value]=\"modulesPermission\" [(selection)]=\"selectedModulesPermission\"\r\n             dataKey=\"id\" responsiveLayout=\"scroll\" scrollHeight=\"calc(400px)\" [scrollable]=\"true\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 6%\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th style=\"width: 44%\">Name</th>\r\n          <th style=\"width: 50%\">Description</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-module let-i=\"rowIndex\">\r\n        <tr>\r\n          <td style=\"width: 6%\">\r\n            <p-tableCheckbox [value]=\"module\"></p-tableCheckbox>\r\n          </td>\r\n          <td style=\"width: 44%\">{{module.name}}</td>\r\n          <td style=\"width: 50%\">{{module.description}}</td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\" let-columns>\r\n        <tr>\r\n          <td style=\"width: 100%;\" class=\"text-center p-3\" [attr.colspan]=\"3\">\r\n            <i *ngIf=\"isLoadingModulesPermissions\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoadingModulesPermissions\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n  <div *ngIf=\"!isSelectModulesMode\">\r\n    <ng-template [ngIf]=\"isQCModulePermissionSelected\">\r\n      <div class=\"sub-modules-view\">\r\n        <div *ngFor=\"let module of subModules\" class=\"field-checkbox sub-modules\">\r\n          <p-checkbox name=\"subModules\" [value]=\"module.id\" [(ngModel)]=\"selectedModules\"></p-checkbox>\r\n          <label [pTooltip]=\"module.description\">{{module.name}}</label>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <p-table [value]=\"permissions\" [(selection)]=\"selectedPermissions\" dataKey=\"id\" responsiveLayout=\"scroll\"\r\n             scrollHeight=\"calc(400px)\" [scrollable]=\"true\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 6%\">\r\n            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n          </th>\r\n          <th style=\"width: 94%\">Name</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-permission let-i=\"rowIndex\">\r\n        <tr>\r\n          <td style=\"width: 6%\">\r\n            <p-tableCheckbox [value]=\"permission\"></p-tableCheckbox>\r\n          </td>\r\n          <td style=\"width: 94%\">{{permission.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n            <i *ngIf=\"isLoadingPermissions\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoadingPermissions\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n\r\n  <button\r\n    pButton\r\n    *ngIf=\"isSelectModulesMode\"\r\n    (click)=\"goToSelectionPermissions()\"\r\n    [disabled]=\"selectedModulesPermission.length === 0\"\r\n    label=\"Further\"\r\n    [loading]=\"isLoadingPermissions\"\r\n  ></button>\r\n\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    *ngIf=\"!isSelectModulesMode\"\r\n    (click)=\"saveRolePermission()\"\r\n    label=\"Save\"\r\n    [loading]=\"isSaving\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {User} from \"../../models/user\";\r\nimport {Role} from \"../../models/role\";\r\nimport {RoleService} from \"../../services/role.service\";\r\nimport {BehaviorSubject, Observable, of, startWith, switchMap} from \"rxjs\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {finalize, map, tap} from \"rxjs/operators\";\r\nimport {UntilDestroy, untilDestroyed} from \"@ngneat/until-destroy\";\r\nimport {CompanyCategory} from \"../../../crm/models/company-category\";\r\nimport {EventTypesService} from \"../../../crm/services/event-types.service\";\r\nimport {EventType} from \"../../../crm/models/event-type\";\r\nimport {CompanyCategoryService} from \"../../../crm/services/company-category.service\";\r\nimport {BusinessTripsPermissionService} from \"../../../business-trips/services/business-trips-permission.service\";\r\nimport {CrmEmployeeService} from \"../../../crm/services/crm-employee.service\";\r\nimport {CRMEmployee} from \"../../../crm/models/crm-employee\";\r\nimport {CategoriesService} from \"../../../product-structure/services/categories.service\";\r\nimport {CorrespondentTypes} from \"../../../correspondent/enum/correspondent-types.enum\";\r\nimport {TreeService} from \"@shared/services/tree.service\";\r\nimport {CorrespondentsCategoriesService} from \"../../../correspondent/services/correspondents-category.service\";\r\nimport {AdapterService} from \"@shared/services/adapter.service\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-edit-user-roles',\r\n  templateUrl: './edit-user-roles.component.html',\r\n  styleUrls: ['./edit-user-roles.component.scss']\r\n})\r\nexport class EditUserRolesComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n  isLoading = false;\r\n\r\n  roles: Role[];\r\n  selectedRoles: any[] = [];\r\n\r\n  form = this.fb.group({\r\n    categories: [[]],\r\n    eventTypes: [[]],\r\n    externalEventTypes: [[]],\r\n    incomingCorrespondentCategoryPermissions: [[]],\r\n    outgoingCorrespondentCategoryPermissions: [[]],\r\n  });\r\n\r\n  categories: CompanyCategory[];\r\n\r\n  currentPage = 1;\r\n\r\n  count = 0;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  query: QuerySearch[] = [];\r\n\r\n  eventTypes: EventType[];\r\n  externalEventTypes: EventType[];\r\n\r\n  businessTripEmployeesIds: number[];\r\n\r\n  isLoadingEventTypes = true;\r\n  isLoadingExternalEventTypes = true;\r\n  isLoadingCategories = true;\r\n  isLoadingPermissions = true;\r\n  isLoadingEmployees = true;\r\n\r\n  isLoadingIncomingCategories = true;\r\n  isLoadingOutgoingCategories = true;\r\n\r\n  incomingCategoriesTree = [];\r\n  outgoingCategoriesTree = [];\r\n\r\n  incomingIds = [];\r\n  outgoingIds = [];\r\n\r\n  roles$: Observable<Role[]> = this.search$.pipe(\r\n    tap(() => this.isLoading = true),\r\n    switchMap(() => this.roleService.getForPagination([{name: 'page', value: this.currentPage}]).pipe(\r\n        tap(response => this.count = response.count),\r\n        map(response => response.results),\r\n        tap(() => this.isLoading = false),\r\n        startWith([]),\r\n        untilDestroyed(this)\r\n      ),\r\n    ),\r\n    untilDestroyed(this)\r\n  )\r\n\r\n  employees: CRMEmployee[] = [];\r\n\r\n  canVerifyTripExpenses = false;\r\n  canAcceptChangesOnImport = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly userService: UserService,\r\n    private readonly roleService: RoleService,\r\n    private readonly eventTypesService: EventTypesService,\r\n    private readonly treeService: TreeService,\r\n    private readonly companyCategoryService: CompanyCategoryService,\r\n    private readonly categoryService: CategoriesService,\r\n    private readonly businessTripPermissionService: BusinessTripsPermissionService,\r\n    private readonly crmEmployeeService: CrmEmployeeService,\r\n    private readonly correspondentsCategoriesService: CorrespondentsCategoriesService,\r\n    private readonly adapterService: AdapterService,\r\n    private dialogRef: MatDialogRef<EditUserRolesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: User }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.canVerifyTripExpenses = this.data.user.can_verify_expenses;\r\n    this.canAcceptChangesOnImport = this.data.user.can_accept_changes_on_import;\r\n    this.data.user.groups.forEach(group => this.selectedRoles.push({id: group.id}));\r\n    this.form.get('categories').patchValue(this.data.user.company_categories.map(c => c.id));\r\n    this.getEventTypes();\r\n    this.getExternalEventTypes();\r\n    this.getCategories();\r\n    this.getPermissions();\r\n    this.getEmployees();\r\n    this.getIncomingCategories();\r\n    this.getOutgoingCategories();\r\n    this.prepareCorrespondentCategories();\r\n  }\r\n\r\n  onSave() {\r\n    const send = {\r\n      group_ids: []\r\n    };\r\n    send.group_ids = this.selectedRoles.map(role => role.id);\r\n    // send.group_ids = send.group_ids.slice(0, -1);\r\n\r\n    this.isSaving = true;\r\n    this.userService.addRoleToUser(this.data.user.id, send).pipe(\r\n      switchMap(() => this.saveCategoriesPermissions()),\r\n      switchMap(() => this.updateBusinessTripPermissions()),\r\n      switchMap(() => this.updateBusinessTripVerifyPermissions()),\r\n      switchMap(() => this.updateCanAcceptChangesOnImportPermissions()),\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => {\r\n      this.dialogRef.close(true);\r\n    });\r\n  }\r\n\r\n  updateBusinessTripVerifyPermissions(): Observable<any> {\r\n    const data = {can_verify: this.canVerifyTripExpenses};\r\n    if (this.data.user.can_verify_expenses !== this.canVerifyTripExpenses) {\r\n      return this.businessTripPermissionService.update_verify_permission(this.data.user.id, data);\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n  updateCanAcceptChangesOnImportPermissions(): Observable<any> {\r\n    const data = {can_accept: this.canAcceptChangesOnImport};\r\n    if (this.data.user.can_accept_changes_on_import !== this.canAcceptChangesOnImport) {\r\n      return this.userService.update_can_verify_import(this.data.user.id, data);\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n  saveCategoriesPermissions(): Observable<any> {\r\n    const innerEventTypes = this.form.get('eventTypes').value;\r\n    const externalEventTypes = this.form.get('externalEventTypes').value;\r\n    const allowedAccessEventTypes = [...innerEventTypes, ...externalEventTypes];\r\n\r\n    const incomingCorrespondentPermissions = this.form.get('incomingCorrespondentCategoryPermissions').value;\r\n    const outgoingCorrespondentPermissions = this.form.get('outgoingCorrespondentCategoryPermissions').value;\r\n    const allCorrespondentCategoriesPermissions = [...incomingCorrespondentPermissions, ...outgoingCorrespondentPermissions];\r\n    const send: Partial<any> = {\r\n      id: this.data.user.id,\r\n      companycategory_set: this.form.get('categories').value,\r\n      eventtype_set: allowedAccessEventTypes,\r\n      correspondentcategory_set: allCorrespondentCategoriesPermissions.map(c => c.data.id),\r\n    };\r\n\r\n    return this.userService.editUserPermissions(send);\r\n  }\r\n\r\n  updateBusinessTripPermissions(): Observable<any> {\r\n    const data = {employees_ids: this.businessTripEmployeesIds ? this.businessTripEmployeesIds : []};\r\n    return this.businessTripPermissionService.update(this.data.user.id, data);\r\n  }\r\n\r\n  getIncomingCategories() {\r\n    this.correspondentsCategoriesService.get([{name: 'type', value: CorrespondentTypes.INCOMING}]).pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(categories => {\r\n      const fill = (nodes: any[]) => {\r\n        nodes.forEach(n => {\r\n          n.label = n.data.name;\r\n\r\n          if (n.children?.length) {\r\n            fill(n.children)\r\n          }\r\n        })\r\n      }\r\n\r\n      this.incomingCategoriesTree = this.adapterService.treeAdapter(categories, false, false, true);\r\n\r\n      fill(this.incomingCategoriesTree);\r\n\r\n      this.choiceIncomingCategories(this.incomingIds)\r\n\r\n      this.isLoadingIncomingCategories = false;\r\n    })\r\n  }\r\n\r\n  getOutgoingCategories() {\r\n    this.correspondentsCategoriesService.get([{name: 'type', value: CorrespondentTypes.OUTGOING}]).pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(categories => {\r\n      const fill = (nodes: any[]) => {\r\n        nodes.forEach(n => {\r\n          n.label = n.data.name;\r\n\r\n          if (n.children?.length) {\r\n            fill(n.children)\r\n          }\r\n        })\r\n      }\r\n\r\n      this.outgoingCategoriesTree = this.adapterService.treeAdapter(categories, false, false, true);\r\n\r\n      fill(this.outgoingCategoriesTree);\r\n\r\n      this.choiceOutgoingCategories(this.outgoingIds)\r\n\r\n      this.isLoadingOutgoingCategories = false;\r\n    })\r\n  }\r\n\r\n  choiceIncomingCategories(ids) {\r\n    const categoryNodes = [];\r\n\r\n    ids.forEach(id => {\r\n      this.incomingCategoriesTree.forEach(item => {\r\n        searchTree(item, id);\r\n      });\r\n    });\r\n\r\n    function searchTree(node, matchingTitle) {\r\n      if (node.data.id === matchingTitle) {\r\n        categoryNodes.push(node);\r\n        return node;\r\n      } else if (node.children) {\r\n        let result = null;\r\n\r\n        node.children.forEach(item => {\r\n          result = searchTree(item, matchingTitle);\r\n        });\r\n      }\r\n      return null;\r\n    }\r\n\r\n    this.incomingCategoriesTree = this.incomingCategoriesTree.map(c => c);\r\n    this.form.get('incomingCorrespondentCategoryPermissions').patchValue(categoryNodes)\r\n  }\r\n\r\n  choiceOutgoingCategories(ids) {\r\n    const categoryNodes = [];\r\n\r\n    ids.forEach(id => {\r\n      this.outgoingCategoriesTree.forEach(item => {\r\n        searchTree(item, id);\r\n      });\r\n    });\r\n\r\n    function searchTree(node, matchingTitle) {\r\n      if (node.data.id === matchingTitle) {\r\n        categoryNodes.push(node);\r\n        return node;\r\n      } else if (node.children) {\r\n        let result = null;\r\n\r\n        node.children.forEach(item => {\r\n          result = searchTree(item, matchingTitle);\r\n        });\r\n      }\r\n      return null;\r\n    }\r\n\r\n    this.outgoingCategoriesTree = this.outgoingCategoriesTree.map(c => c);\r\n    this.form.get('outgoingCorrespondentCategoryPermissions').patchValue(categoryNodes)\r\n  }\r\n\r\n  prepareCorrespondentCategories() {\r\n    const outgoingCategories = this.data.user.correspondent_category_permissions\r\n      .filter(cat => cat.type === CorrespondentTypes.OUTGOING).map(cat => cat.id);\r\n    const incomingCategories = this.data.user.correspondent_category_permissions\r\n      .filter(cat => cat.type === CorrespondentTypes.INCOMING).map(cat => cat.id);\r\n    this.incomingIds = incomingCategories;\r\n    this.outgoingIds = outgoingCategories;\r\n  }\r\n\r\n  getPermissions(): void {\r\n    this.businessTripPermissionService.get([{name: 'user_id', value: this.data.user.id}]).pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(res => {\r\n      this.businessTripEmployeesIds = res.map(permission => permission.employee);\r\n      this.isLoadingPermissions = false;\r\n    });\r\n  }\r\n\r\n  getEmployees() {\r\n    this.crmEmployeeService.get().pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(employees => {\r\n      this.employees = employees;\r\n      this.isLoadingEmployees = false;\r\n    })\r\n  }\r\n\r\n  getCategories() {\r\n    this.companyCategoryService.get().pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(categories => {\r\n      this.categories = categories;\r\n      this.isLoadingCategories = false;\r\n    });\r\n  }\r\n\r\n  getEventTypes() {\r\n    this.eventTypesService.getNoneCache([{name: 'is_inner', value: true}]).pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(eventTypes => {\r\n      this.eventTypes = eventTypes;\r\n      const innerIds = this.data.user.event_types.filter(type => eventTypes.findIndex(evType => evType.id === type.id) >= 0);\r\n      this.form.get('eventTypes').patchValue(innerIds.map(c => c.id));\r\n      this.isLoadingEventTypes = false;\r\n    });\r\n  }\r\n\r\n  getExternalEventTypes() {\r\n    this.eventTypesService.getNoneCache([{name: 'is_inner', value: false}]).pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(eventTypes => {\r\n      this.externalEventTypes = eventTypes;\r\n      const externalIds = this.data.user.event_types.filter(type => eventTypes.findIndex(evType => evType.id === type.id) >= 0);\r\n      this.form.get('externalEventTypes').patchValue(externalIds.map(c => c.id));\r\n      this.isLoadingExternalEventTypes = false;\r\n    });\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    this.currentPage = evt.page + 1;\r\n    this.search$.next();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Edit Roles\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <p-table [value]=\"roles$ | async\" [(selection)]=\"selectedRoles\" dataKey=\"id\" responsiveLayout=\"scroll\">\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th style=\"width: 3rem\">\r\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n        </th>\r\n        <th style=\"width: 100%\">Name</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-role let-i=\"rowIndex\">\r\n      <tr>\r\n        <td>\r\n          <p-tableCheckbox [value]=\"role\"></p-tableCheckbox>\r\n        </td>\r\n        <td style=\"width: 100%\">{{role.name}}</td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\" let-columns>\r\n      <tr>\r\n        <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n          <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n          <span *ngIf=\"!isLoading\">No Records Found</span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n\r\n  <p-paginator\r\n    #paginator\r\n    *ngIf=\"count\"\r\n    [rows]=\"10\"\r\n    [totalRecords]=\"count\"\r\n    (onPageChange)=\"paginate($event)\">\r\n  </p-paginator>\r\n\r\n\r\n  <form [formGroup]=\"form\">\r\n    <h3 class=\"mt-4 mb-2\">Company Categories & Event Types Permissions</h3>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label>Company Categories</label>\r\n          <p-multiSelect\r\n            *ngIf=\"!isLoadingCategories; else spinner\"\r\n            optionLabel=\"name\"\r\n            optionValue=\"id\"\r\n            formControlName=\"categories\"\r\n            appendTo=\"body\"\r\n            [options]=\"categories\"\r\n          ></p-multiSelect>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label>Event Types</label>\r\n          <p-multiSelect\r\n            *ngIf=\"!isLoadingEventTypes; else spinner\"\r\n            appendTo=\"body\"\r\n            optionLabel=\"name\"\r\n            optionValue=\"id\"\r\n            formControlName=\"eventTypes\"\r\n            [options]=\"eventTypes\"\r\n          ></p-multiSelect>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label>External Event Types</label>\r\n          <p-multiSelect\r\n            *ngIf=\"!isLoadingExternalEventTypes; else spinner\"\r\n            appendTo=\"body\"\r\n            optionLabel=\"name\"\r\n            optionValue=\"id\"\r\n            formControlName=\"externalEventTypes\"\r\n            [options]=\"externalEventTypes\"\r\n          ></p-multiSelect>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <h3 class=\"mt-4 mb-2\">Business Trips Employee Permissions</h3>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"form-group\">\r\n        <label>Employee Business Trips</label>\r\n\r\n        <p-multiSelect\r\n          *ngIf=\"!isLoadingEmployees && !isLoadingPermissions; else spinner\"\r\n          optionValue=\"id\"\r\n          optionLabel=\"first_name\"\r\n          [options]=\"employees\"\r\n          [(ngModel)]=\"businessTripEmployeesIds\"\r\n          appendTo=\"body\"\r\n        >\r\n          <ng-template let-contact pTemplate=\"item\">\r\n            <div class=\"contact-item\">\r\n              <div>{{contact.first_name}} {{contact.last_name}}</div>\r\n            </div>\r\n          </ng-template>\r\n        </p-multiSelect>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"other\">Allow Verify Expenses</label>\r\n        <p-checkbox\r\n          id=\"other\"\r\n          [(ngModel)]=\"canVerifyTripExpenses\"\r\n          [binary]=\"true\"\r\n          [ngModelOptions]=\"{standalone: true}\"\r\n        ></p-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h3 class=\"mt-4 mb-2\">Correspondent Incoming Categories</h3>\r\n\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label>Correspondent Incoming Categories</label>\r\n\r\n          <p-treeSelect\r\n            *ngIf=\"!isLoadingIncomingCategories; else spinner\"\r\n            appendTo=\"body\"\r\n            label=\"name\"\r\n            formControlName=\"incomingCorrespondentCategoryPermissions\"\r\n            [options]=\"incomingCategoriesTree\"\r\n            selectionMode=\"checkbox\"\r\n            placeholder=\"Select Categories\"\r\n          ></p-treeSelect>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label>Correspondent Outgoing Categories</label>\r\n\r\n          <p-treeSelect\r\n            *ngIf=\"!isLoadingOutgoingCategories; else spinner\"\r\n            appendTo=\"body\"\r\n            label=\"name\"\r\n            formControlName=\"outgoingCorrespondentCategoryPermissions\"\r\n            [options]=\"outgoingCategoriesTree\"\r\n            selectionMode=\"checkbox\"\r\n            placeholder=\"Select Categories\"\r\n          ></p-treeSelect>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"col-12\">\r\n      <div class=\"form-group\">\r\n        <label for=\"other\">Can Accept Changes On Import</label>\r\n        <p-checkbox\r\n          id=\"canAcceptChanges\"\r\n          [(ngModel)]=\"canAcceptChangesOnImport\"\r\n          [binary]=\"true\"\r\n          [ngModelOptions]=\"{standalone: true}\"\r\n        ></p-checkbox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Save\"\r\n    [loading]=\"isSaving\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n<!--appendTo=\"body\"-->\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {environment} from \"@env/environment\";\r\nimport {GroupSubModulePermission} from \"../models/group-sub-module-permission\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupSubModulePermissionService {\r\n  API_URL = environment.base_url + environment.users_url;\r\n  readonly url = 'group_sub_module_permissions/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  get(query?: QuerySearch[]): Observable<GroupSubModulePermission[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: GroupSubModulePermission[] }>(this.API_URL + this.url + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  updateGroupSubModule(role: GroupSubModulePermission): Observable<GroupSubModulePermission> {\r\n    return this.httpClient.patch<{data: GroupSubModulePermission}>(this.API_URL + this.url + role.id + '/', role).pipe(map(response => response.data));\r\n  }\r\n\r\n  createGroupSubRole(role: GroupSubModulePermission): Observable<GroupSubModulePermission> {\r\n    return this.httpClient.post<{data: GroupSubModulePermission}>(this.API_URL + this.url, role).pipe(map(response => response.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {ModulePermission} from \"../models/permission\";\r\nimport {Permission, Permissions} from \"../models/permission\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PermissionsService {\r\n\r\n  API_URL = environment.base_url + environment.users_url;\r\n  readonly url = 'permissions/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  // getForPagination(query: QuerySearch[] = []): Observable<Permissions> {\r\n  //   let queryString = '';\r\n  //   if (query) {\r\n  //     query.forEach((element, index) => {\r\n  //       if (index > 0) {\r\n  //         queryString += '&' + element.name + '=' + element.value;\r\n  //       } else {\r\n  //         queryString += '?' + element.name + '=' + element.value;\r\n  //       }\r\n  //\r\n  //     });\r\n  //   }\r\n  //\r\n  //   return this.httpClient.get<{data: Permissions}>(this.API_URL + this.url + queryString).pipe(map(response => {\r\n  //     return response.data;\r\n  //   }));\r\n  // }\r\n\r\n  getModulePermissions(query: QuerySearch[] = []): Observable<ModulePermission[]> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{data: ModulePermission[]}>(this.API_URL + 'module_permissions/' + queryString)\r\n      .pipe(map(response => response.data));\r\n  }\r\n\r\n  getPermissionsForModules( modulesIds, query: QuerySearch[] = []): Observable<Permissions> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{data: Permissions}>(this.API_URL + 'get_permissions_for_module/' + modulesIds + '/' + queryString)\r\n      .pipe(map(response => response.data));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {Role, RolePermissions, Roles} from \"../models/role\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {User} from \"../models/user\";\r\nimport {CreateEditUserComponent} from \"../modals/create-edit-user/create-edit-user.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {CreateEditRoleComponent} from \"../modals/create-edit-role/create-edit-role.component\";\r\nimport {EditRolePermissionsComponent} from \"../modals/edit-role-permissions/edit-role-permissions.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  API_URL = environment.base_url + environment.users_url;\r\n  readonly url = 'roles/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) { }\r\n\r\n  getForPagination(query: QuerySearch[] = []): Observable<Roles> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{data: Roles}>(this.API_URL + this.url + queryString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getRoles(query: QuerySearch[] = []): Observable<Role[]> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{data: Role[]}>(this.API_URL + this.url + queryString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getRolePermissions(role: Role): Observable<RolePermissions> {\r\n    return this.httpClient.get<{data: RolePermissions}>(this.API_URL + 'get_role_permissions/' + role.id + '/').pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  setRolePermissions(role: Role, permissions: any) {\r\n    return this.httpClient.post<{data: any}>(this.API_URL + 'role_set_permissions/' + role.id + '/', permissions);\r\n  }\r\n\r\n  removeRolePermissions(role: Role, permissions: any) {\r\n    return this.httpClient.post<{data: any}>(this.API_URL + 'role_remove_permissions/' + role.id + '/', permissions);\r\n  }\r\n\r\n  removeModuleFromRole(roleId: number, data) {\r\n    return this.httpClient.post(this.API_URL + `remove_module_from_role/${roleId}/`, data);\r\n  }\r\n\r\n  createRole(role: Role): Observable<Role> {\r\n    return this.httpClient.post<{data: Role}>(this.API_URL + this.url, role).pipe(map(response => response.data));\r\n  }\r\n\r\n  editRole(role: Role): Observable<Role> {\r\n    return this.httpClient.patch<{data: Role}>(this.API_URL + this.url + role.id + '/', role).pipe(map(response => response.data));\r\n  }\r\n\r\n  deleteRole(role: Role) {\r\n    return this.httpClient.delete(this.API_URL + this.url + role.id + '/');\r\n  }\r\n\r\n  createEditRoleModal(type: ModalActionType, role?: Role): Observable<Role> {\r\n    return this.dialog\r\n      .open<CreateEditRoleComponent>(CreateEditRoleComponent, {\r\n        width: '30rem',\r\n        height: 'auto',\r\n        data: {type, role},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editRolePermissions(role?: Role): Observable<Role> {\r\n    return this.dialog\r\n      .open<EditRolePermissionsComponent>(EditRolePermissionsComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {role},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from \"@env/environment\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {SubModulePermission} from \"../models/sub-module-permission\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubModulePermissionService {\r\n  API_URL = environment.base_url + environment.users_url;\r\n  readonly url = 'sub_module_permissions/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  get(query?: QuerySearch[]): Observable<SubModulePermission[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: SubModulePermission[] }>(this.API_URL + this.url + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {User, Users} from \"../models/user\";\r\nimport {Role} from \"../models/role\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {Currency} from \"@shared/models/currency\";\r\nimport {CreateEditCurrencyComponent} from \"../../reports/modals/create-edit-currency/create-edit-currency.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {CreateEditUserComponent} from \"../modals/create-edit-user/create-edit-user.component\";\r\nimport {EditUserRolesComponent} from \"../modals/edit-user-roles/edit-user-roles.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  API_URL = environment.base_url + environment.users_url;\r\n  readonly url = 'users/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) { }\r\n\r\n  getForPagination(query: QuerySearch[] = []): Observable<Users> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{data: Users}>(this.API_URL + 'users_with_groups/' + queryString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  get(query: QuerySearch[] = []): Observable<User[]> {\r\n    let queryString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{data: User[]}>(this.API_URL + 'users_with_groups/' + queryString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  createUser(user: Partial<User>): Observable<User> {\r\n    return this.httpClient.post<{data: User}>(this.API_URL + 'user_registration/', user).pipe(map(response => response.data));\r\n  }\r\n\r\n  editUser(user: Partial<User>): Observable<User> {\r\n    return this.httpClient.patch<{data: User}>(this.API_URL + 'user_update/' + user.id + '/', user).pipe(map(response => response.data));\r\n  }\r\n\r\n  editUserPermissions(user: Partial<User>): Observable<User> {\r\n    return this.httpClient.patch<{data: User}>(this.API_URL + 'users/' + user.id + '/', user).pipe(map(response => response.data));\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    return this.httpClient.delete(this.API_URL + this.url + user.id + '/');\r\n  }\r\n\r\n  addRoleToUser(userId, send: any): Observable<Role> {\r\n    return this.httpClient.post<{data: Role}>(this.API_URL + 'add_role_to_user/' + userId + '/', send).pipe(map(response => response.data));\r\n  }\r\n\r\n  update_can_verify_import(id, entity) {\r\n    return this.httpClient.patch(this.API_URL + 'can_accept_changes_on_import/' + id + '/', entity);\r\n  }\r\n\r\n  createEditUserModal(type: ModalActionType, user?: User): Observable<User> {\r\n    return this.dialog\r\n      .open<CreateEditUserComponent>(CreateEditUserComponent, {\r\n        width: '30rem',\r\n        height: 'auto',\r\n        data: {type, user},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editUserRoles(user?: User): Observable<User>  {\r\n    return this.dialog\r\n      .open<EditUserRolesComponent>(EditUserRolesComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {user},\r\n        autoFocus: false,\r\n        // panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {BusinessTripPermission} from \"./business-trip-permission\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessTripsPermissionService {\r\n  API_URL = environment.base_url + environment.business_trips_url;\r\n  readonly url = 'business-trips-permissions/';\r\n\r\n  constructor(private httpClient: HttpClient, public dialog: MatDialog) {}\r\n\r\n  get(query?: QuerySearch[]): Observable<BusinessTripPermission[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient\r\n      .get<{ data: BusinessTripPermission[] }>(this.API_URL + this.url + qString)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(id, entity) {\r\n    return this.httpClient.patch(this.API_URL + 'update_business_trip_employee_permissions/' + id + '/', entity);\r\n  }\r\n\r\n  update_verify_permission(id, entity) {\r\n    return this.httpClient.patch(this.API_URL + 'update_business_trip_verification_permissions/' + id + '/', entity);\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","iif","startWith","switchMap","filter","map","tap","UntilDestroy","untilDestroyed","i0","ctx_r5","AdministrationRolesComponent","constructor","roleService","modalService","label","items","icon","command","editRole","editPermissions","removeRole","search$","pipe","prepareForSearch","isShowAll","getForPagination","query","response","count","results","isLoading","getRoles","roles","length","ngOnInit","selectedRole","push","name","value","currentPage","onShowAll","next","paginate","event","page","createRole","createEditRoleModal","Boolean","subscribe","editRolePermissions","confirm","deleteRole","selectors","decls","vars","consts","template","ctx","debounceTime","ctx_r6","AdministrationUserListComponent","fb","adapterService","userService","group","username","email","first_name","last_name","editUser","editUserPermissions","removeUser","generateQueryKey","searchForm","get","users","paginateToFistPage","valueChanges","selectedUser","newQueryKey","queryKey","isStartFirstPage","key","controls","paginator","changePage","createUser","createEditUserModal","editUserRoles","deleteUser","viewQuery","MAT_DIALOG_DATA","of","finalize","CorrespondentTypes","ctx_r3","ctx_r7","EditUserRolesComponent","eventTypesService","treeService","companyCategoryService","categoryService","businessTripPermissionService","crmEmployeeService","correspondentsCategoriesService","dialogRef","data","categories","eventTypes","externalEventTypes","incomingCorrespondentCategoryPermissions","outgoingCorrespondentCategoryPermissions","canVerifyTripExpenses","user","can_verify_expenses","canAcceptChangesOnImport","can_accept_changes_on_import","groups","forEach","selectedRoles","id","form","patchValue","company_categories","c","getEventTypes","getExternalEventTypes","getCategories","getPermissions","getEmployees","getIncomingCategories","getOutgoingCategories","prepareCorrespondentCategories","onSave","send","group_ids","role","isSaving","addRoleToUser","saveCategoriesPermissions","updateBusinessTripPermissions","updateBusinessTripVerifyPermissions","updateCanAcceptChangesOnImportPermissions","close","can_verify","update_verify_permission","can_accept","update_can_verify_import","innerEventTypes","allowedAccessEventTypes","incomingCorrespondentPermissions","outgoingCorrespondentPermissions","allCorrespondentCategoriesPermissions","companycategory_set","eventtype_set","correspondentcategory_set","employees_ids","businessTripEmployeesIds","update","INCOMING","fill","nodes","n","children","incomingCategoriesTree","treeAdapter","choiceIncomingCategories","incomingIds","isLoadingIncomingCategories","OUTGOING","outgoingCategoriesTree","choiceOutgoingCategories","outgoingIds","isLoadingOutgoingCategories","ids","categoryNodes","item","searchTree","node","matchingTitle","result","outgoingCategories","correspondent_category_permissions","cat","type","incomingCategories","res","permission","employee","isLoadingPermissions","employees","isLoadingEmployees","isLoadingCategories","getNoneCache","innerIds","event_types","findIndex","evType","isLoadingEventTypes","externalIds","isLoadingExternalEventTypes","evt","_r10"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}