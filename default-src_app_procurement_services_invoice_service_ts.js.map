{"version":3,"file":"default-src_app_procurement_services_invoice_service_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAC6C;AAIK;AACf;;;AAK5B,MAAM,qBAAqB;IAKhC,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJhC,YAAO,GAAG,kEAAoB,GAAG,yEAA2B,CAAC;QACpD,QAAG,GAAG,mBAAmB,CAAC;IAMnC,CAAC;IAED,GAAG,CAAC,KAAqB;QACvB,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBAC/B,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;qBAAM;oBACL,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;YACH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,WAAW,CAAC,CAAC,IAAI,CACzG,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAW;QACvB,OAAO,4CAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kEAAoB,GAAG,uEAAyB,GAAG,+BAA+B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAChK,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAC1B,CAAC,CAAC,CAAC;IACN,CAAC;;0FAjCU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;;;ACRyB;AAGV;AAUqD;;;;AAKjF,MAAM,cAAc;IAKzB,YACU,UAAsB,EACb,MAAiB;QAD1B,eAAU,GAAV,UAAU,CAAY;QACb,WAAM,GAAN,MAAM,CAAW;QALpC,YAAO,GAAG,kEAAoB,GAAG,yEAA2B,CAAC;QACpD,QAAG,GAAG,WAAW,CAAC;IAM3B,CAAC;IAED,GAAG,CAAC,KAAqB;QACvB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBAC/B,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;qBAAM;oBACL,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;YACH,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,WAAW,CAAC,CAAC,IAAI,CAClG,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,sBAAsB,CAAC,CAAC,IAAI,CAChH,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,KAAuB,EAAE,EAAU,EAAE,IAAI,GAAG,SAAS;QAC9E,OAAO,IAAI,CAAC,MAAM;aACf,IAAI,CAA+B,mIAA4B,EAAE;YAChE,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAC;YACvB,UAAU,EAAE,wBAAwB;YACpC,SAAS,EAAE,KAAK;YAChB,sBAAsB,EAAE,OAAO;SAChC,CAAC;aACD,WAAW,EAAE,CAAC;IACnB,CAAC;;4EA5CU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;ACfyB;AAGK;AACf;;;AAK5B,MAAM,mBAAmB;IAK9B,YACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJhC,YAAO,GAAG,kEAAoB,GAAG,yEAA2B,CAAC;QACpD,QAAG,GAAG,iBAAiB,CAAC;IAKjC,CAAC;IAED,GAAG,CAAC,KAAqB;QACvB,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBAC/B,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;qBAAM;oBACL,WAAW,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;iBACzD;YACH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA2B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,WAAW,CAAC,CAAC,IAAI,CACvG,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,IAAW;QACvB,OAAO,4CAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kEAAoB,GAAG,uEAAyB,GAAG,6BAA6B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAC9J,mDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAC1B,CAAC,CAAC,CAAC;IACN,CAAC;;sFAhCU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACRmC;AACgB;AAKzC;;;;;;;;AAQvB,MAAM,4BAA4B;IAQvC,YACmB,qBAA4C,EAC5C,mBAAwC,EACxC,EAAe,EACf,SAAqD,EACtC,IAAuF;QAJtG,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAA4C;QACtC,SAAI,GAAJ,IAAI,CAAmF;QAXzH,aAAQ,GAAG,KAAK,CAAC;QAEjB,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,OAAO,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;SACrC,CAAC,CAAC;IAQC,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAChC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtC,OAAO;gBACL,IAAI,EAAE;oBACJ,gBAAgB,EAAE,IAAI,CAAC,EAAE;oBACzB,QAAQ,EAAE,IAAI,CAAC,eAAe;oBAC9B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;iBACxC;aACF;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAC/C,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CACtC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACtC,OAAO;gBACL,IAAI,EAAE;oBACJ,kBAAkB,EAAE,IAAI,CAAC,EAAE;oBAC3B,QAAQ,EAAE,IAAI,CAAC,eAAe;oBAC9B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;iBACxC;aACF;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CACjD,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CACtC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAM,EAAE,CAAC,CAAC;IAC/C,CAAC;;wGAnEU,4BAA4B,moBAa7B,qEAAe;0HAbd,4BAA4B;QCfzC,yEAAgD;QAIxC,sFACF;QAAA,4DAAK;QAKX,qFAAoB;QAGP,mEAAQ;QAAA,4DAAQ;QACvB,+FAEC;QADC,6LAAiB,2BAAuB,IAAC;QAC1C,4DAA2B;QAKlC,yFAAoD;QAClD,wEAMU;QACV,6EAQC;QADC,qJAAS,cAAU,IAAC;QACrB,4DAAS;;QA1BJ,0DAAkB;QAAlB,+EAAkB;QAetB,0DAA0B;QAA1B,mFAA0B;QAQ1B,0DAAoB;QAApB,iFAAoB","sources":["./src/app/procurement/services/invoice-product.service.ts","./src/app/procurement/services/invoice.service.ts","./src/app/procurement/services/order-product.service.ts","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.ts","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.html"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {InvoiceProduct} from '../models/invoice-product';\nimport {concat, forkJoin, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceProductService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'invoice_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n\n  }\n\n  get(query?: QuerySearch[]): Observable<InvoiceProduct[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  acceptSeveral(send: any[]): Observable<any> {\n    return concat(...send.map(product => this.httpClient.post(environment.base_url + environment.warehouse_url + 'invoice_product_to_warehouse/', [product.data]).pipe(\n      map(response => response)\n    )));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Invoice} from '../models/invoice';\nimport {Observable} from 'rxjs';\nimport {InvoiceProduct} from '../models/invoice-product';\nimport {\n  CreatePhysicalInventoryComponent\n} from '../../warehouse/modals/create-physical-inventory/create-physical-inventory.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  QcAcceptToWarehouseComponent\n} from '../../warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'invoices/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Invoice[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Invoice[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getProductsToAccept(id: number): Observable<InvoiceProduct[]> {\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + id + '/products_to_accept/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  openAcceptToWarehouseModal(items: InvoiceProduct[], id: number, type = 'invoice'): Observable<any> {\n    return this.dialog\n      .open<QcAcceptToWarehouseComponent>(QcAcceptToWarehouseComponent, {\n        width: '40rem',\n        height: 'auto',\n        data: {items, id, type},\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../models/order-product';\nimport {concat, forkJoin, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderProductService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'order_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<OrderProduct[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  acceptSeveral(send: any[]): Observable<any> {\n    return concat(...send.map(product => this.httpClient.post(environment.base_url + environment.warehouse_url + 'order_product_to_warehouse/', [product.data]).pipe(\n      map(response => response)\n    )));\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {WarehouseProduct} from '../../models/warehouse-product';\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\nimport {finalize} from 'rxjs';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\n\n@Component({\n  selector: 'pek-qc-accept-to-warehouse',\n  templateUrl: './qc-accept-to-warehouse.component.html',\n  styleUrls: ['./qc-accept-to-warehouse.component.scss']\n})\nexport class QcAcceptToWarehouseComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    locator: [null, Validators.required]\n  });\n\n  constructor(\n    private readonly invoiceProductService: InvoiceProductService,\n    private readonly orderProductService: OrderProductService,\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<QcAcceptToWarehouseComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {items: InvoiceProduct[] | OrderProduct[], id: number, type: 'invoice' | 'order'},\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onAccept() {\n    if (this.data.type === 'invoice') {\n      this.acceptInvoiceProducts();\n    }\n\n    if (this.data.type === 'order') {\n      this.acceptOrderProducts();\n    }\n  }\n\n  acceptOrderProducts() {\n    this.isSaving = true;\n\n    const send = this.data.items.map(item => {\n      return {\n        data: {\n          order_product_id: item.id,\n          quantity: item.passed_quantity,\n          locator: this.form.get('locator').value\n        }\n      }\n    })\n\n    this.orderProductService.acceptSeveral(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n\n  acceptInvoiceProducts() {\n    this.isSaving = true;\n\n    const send = this.data.items.map(item => {\n      return {\n        data: {\n          invoice_product_id: item.id,\n          quantity: item.passed_quantity,\n          locator: this.form.get('locator').value\n        }\n      }\n    })\n\n    this.invoiceProductService.acceptSeveral(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n\n  onSelectLocator(id: number) {\n    this.form.get('locator').patchValue(<any>id);\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Accept Items to Warehouse\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Locator*</label>\n      <pek-group-locator-picker\n        (selectLocator)=\"onSelectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Accept\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onAccept()\"\n  ></button>\n</mat-dialog-actions>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}