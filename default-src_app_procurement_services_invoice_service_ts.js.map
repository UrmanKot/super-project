{"version":3,"file":"default-src_app_procurement_services_invoice_service_ts.js","mappings":"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","sources":["./src/app/procurement/services/invoice-product.service.ts","./src/app/procurement/services/invoice.service.ts","./src/app/procurement/services/order-product.service.ts","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.ts","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.html","./src/app/warehouse/services/qc-list-modal.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {InvoiceProduct} from '../models/invoice-product';\r\nimport {concat, forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceProductService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'invoice_products/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<InvoiceProduct[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  acceptSeveral(send: any[]): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.warehouse_url + 'invoice_product_to_warehouse/', send).pipe(\r\n      map(response => response)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Invoice} from '../models/invoice';\nimport {Observable} from 'rxjs';\nimport {InvoiceProduct} from '../models/invoice-product';\nimport {\n  CreatePhysicalInventoryComponent\n} from '../../warehouse/modals/create-physical-inventory/create-physical-inventory.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  QcAcceptToWarehouseComponent\n} from '../../warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'invoices/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Invoice[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Invoice[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getProductsToAccept(id: number): Observable<InvoiceProduct[]> {\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + id + '/products_to_accept/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  openAcceptToWarehouseModal(items: InvoiceProduct[], id: number, type = 'invoice'): Observable<any> {\n    return this.dialog\n      .open<QcAcceptToWarehouseComponent>(QcAcceptToWarehouseComponent, {\n        width: '40rem',\n        height: 'auto',\n        data: {items, id, type},\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {OrderProduct} from '../models/order-product';\r\nimport {concat, forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderProductService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'order_products/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<OrderProduct[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  acceptSeveral(send: any[]): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.warehouse_url + 'order_product_to_warehouse/', send).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {WarehouseProduct} from '../../models/warehouse-product';\r\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {finalize} from 'rxjs';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {Locator} from '../../models/locator';\r\nimport {QcListModalService} from '../../services/qc-list-modal.service';\r\n\r\n@Component({\r\n  selector: 'pek-qc-accept-to-warehouse',\r\n  templateUrl: './qc-accept-to-warehouse.component.html',\r\n  styleUrls: ['./qc-accept-to-warehouse.component.scss']\r\n})\r\nexport class QcAcceptToWarehouseComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    locator: [null, Validators.required]\r\n  });\r\n  items: InvoiceProduct[] | OrderProduct[];\r\n  existingLocators: Locator[] = [];\r\n\r\n  constructor(\r\n    private readonly invoiceProductService: InvoiceProductService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<QcAcceptToWarehouseComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: {items: InvoiceProduct[] | OrderProduct[], id: number, type: 'invoice' | 'order'},\r\n    private qcListModalService: QcListModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = this.data.items;\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n  }\r\n\r\n  onAccept() {\r\n    if (this.data.type === 'invoice') {\r\n      this.acceptInvoiceProducts();\r\n    }\r\n\r\n    if (this.data.type === 'order') {\r\n      this.acceptOrderProducts();\r\n    }\r\n  }\r\n\r\n  acceptOrderProducts() {\r\n    this.isSaving = true;\r\n\r\n    const send = this.items.map(item => {\r\n      return {\r\n          order_product_id: item.id,\r\n          quantity: item.passed_quantity,\r\n          locator: this.form.get('locator').value\r\n      }\r\n    });\r\n\r\n    this.orderProductService.acceptSeveral(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close(true));\r\n  }\r\n\r\n  acceptInvoiceProducts() {\r\n    this.isSaving = true;\r\n\r\n    const send = this.items.map(item => {\r\n      return {\r\n          invoice_product_id: item.id,\r\n          quantity: item.passed_quantity,\r\n          locator: this.form.get('locator').value\r\n      }\r\n    });\r\n\r\n    this.invoiceProductService.acceptSeveral(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close(true));\r\n  }\r\n\r\n  getExistingLocatorsAndWarehouses(items: InvoiceProduct[] | OrderProduct[]): void {\r\n    this.existingLocators = null;\r\n    this.existingLocators = [];\r\n    items.forEach(item => {\r\n      item.exists_on_locators.forEach(locator => {\r\n        const foundLocator = this.existingLocators.find(locatorIn => locatorIn.id == locator.id);\r\n        if (!foundLocator) {\r\n          this.existingLocators.push(locator);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSelectLocator(locator: Locator) {\r\n    // find other locators on this warehouse\r\n    let unsupportedItemsForLocator: InvoiceProduct[] | OrderProduct[] = [];\r\n    this.items.forEach(item => {\r\n\r\n      const foundItem = item.exists_on_locators.find(inLocator => inLocator.warehouse.id === locator.warehouse.id && inLocator.id !== locator.id );\r\n      if (foundItem) {\r\n        unsupportedItemsForLocator.push(item);\r\n      }\r\n    });\r\n\r\n    if (unsupportedItemsForLocator.length > 0) {\r\n      this.qcListModalService.updateOrderInvoiceList(unsupportedItemsForLocator);\r\n    }\r\n    unsupportedItemsForLocator.forEach(item => {\r\n      const foundIndex = this.items.findIndex(product => product.id === item.id);\r\n      if (foundIndex > -1) {\r\n        this.items.splice(foundIndex, 1);\r\n      }\r\n    });\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n    this.form.get('locator').patchValue(<any>locator.id);\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        Accept Items to Warehouse\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Locator*</label>\r\n      <pek-group-locator-picker\r\n        [uniqueLocators]=\"existingLocators\"\r\n        (selectLocatorFull)=\"onSelectLocator($event)\"\r\n      ></pek-group-locator-picker>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Accept\"\r\n    class=\"p-button-success\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onAccept()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import { Injectable } from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {InvoiceProduct} from '../../procurement/models/invoice-product';\r\nimport {OrderProduct} from '../../procurement/models/order-product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QcListModalService {\r\n  notCompatibleItems$ = new Subject<InvoiceProduct[] | OrderProduct[]>();\r\n\r\n  constructor() { }\r\n\r\n  updateOrderInvoiceList(items: InvoiceProduct[] | OrderProduct[]): void {\r\n    this.notCompatibleItems$.next(items);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}