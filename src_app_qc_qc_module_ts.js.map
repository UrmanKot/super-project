{"version":3,"file":"src_app_qc_qc_module_ts.js","mappings":"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","sources":["./src/app/procurement/models/invoice-product.ts","./src/app/qc/components/protocols/protocols.component.ts","./src/app/qc/components/protocols/protocols.component.html","./src/app/qc/components/qc-invoice/qc-invoice.component.ts","./src/app/qc/components/qc-invoice/qc-invoice.component.html","./src/app/qc/components/qc-layout/qc-layout.component.ts","./src/app/qc/components/qc-layout/qc-layout.component.html","./src/app/qc/components/qc-list/qc-list.component.ts","./src/app/qc/components/qc-list/qc-list.component.html","./src/app/qc/components/qc-order/qc-order.component.ts","./src/app/qc/components/qc-order/qc-order.component.html","./src/app/qc/modals/create-edit-protocol/create-edit-protocol.component.ts","./src/app/qc/modals/create-edit-protocol/create-edit-protocol.component.html","./src/app/qc/modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component.ts","./src/app/qc/modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component.html","./src/app/qc/modals/quality-control-modal/quality-control-modal.component.ts","./src/app/qc/modals/quality-control-modal/quality-control-modal.component.html","./src/app/qc/modals/quality-control-technical-equipment/quality-control-technical-equipment.component.ts","./src/app/qc/modals/quality-control-technical-equipment/quality-control-technical-equipment.component.html","./src/app/qc/qc.module.ts","./src/app/qc/qc.routing.ts","./src/app/qc/services/protocol.service.ts","./src/app/qc/services/qc.service.ts"],"sourcesContent":["import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Invoice} from './invoice';\r\nimport {Locator} from '../../warehouse/models/locator';\r\n\r\nexport class InvoiceProduct {\r\n  readonly id: number;\r\n  price: string;\r\n  quantity: number;\r\n  passed_quantity: number;\r\n  not_passed_quantity: number;\r\n  accepted_quantity?: number;\r\n  invoice: number | Invoice;\r\n  description: string;\r\n  quality_control: string;\r\n  unit_price?: string;\r\n  ddv?: number;\r\n  discount?: string;\r\n  supplier_unit_price?: string;\r\n  isSelected?: boolean;\r\n  checkedForGeneration?: boolean;\r\n  nomenclature?: Nomenclature;\r\n  products: InvoiceProduct[];\r\n  serial_numbers: any;\r\n  exists_on_locators: Locator[];\r\n}\r\n\r\nexport enum EInvoiceProductQualityControl {\r\n  NOT_PASSED = 0,\r\n  PASSED = 1,\r\n  PARTLY_PASSED = 2,\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {Table} from 'primeng/table';\nimport {QcProtocol} from '../../models/protocol';\nimport {QuerySearch} from '@shared/models/other';\nimport {ProtocolService} from '../../services/protocol.service';\nimport {BehaviorSubject, iif, Observable, switchMap} from 'rxjs';\nimport {filter, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {MenuItem} from 'primeng/api';\nimport {ModalService} from '@shared/services/modal.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-protocols',\n  templateUrl: './protocols.component.html',\n  styleUrls: ['./protocols.component.scss']\n})\nexport class ProtocolsComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('dt') dt: Table;\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Protocol',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.editProtocol()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.removeProtocol()\n      }\n    ]\n  }];\n\n  isLoading = true;\n  isShowAll = false;\n\n  protocolsCount = 0;\n  isStartFirstPage = false;\n\n  selectedProtocol: QcProtocol;\n\n  currentPage = 1;\n\n  query: QuerySearch[] = [\n    {name: 'paginated', value: true},\n    {name: 'page', value: this.currentPage},\n  ];\n\n  protocols$: Observable<QcProtocol[]> = this.search$.pipe(\n    tap(() => this.isLoading = true),\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n          !this.isShowAll,\n        this.protocolService.getForPagination(this.query).pipe(\n          tap(response => this.protocolsCount = response.count),\n          map(response => response.results),\n        ),\n        this.protocolService.get(this.query).pipe(\n          tap(products => this.protocolsCount = products.length),\n          map(protocols => protocols)\n        )\n      ),\n    ),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this),\n  );\n\n  constructor(\n    private readonly protocolService: ProtocolService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n\n    if (!this.isShowAll) {\n      this.currentPage = 1;\n    }\n\n    this.search$.next();\n  }\n\n  private prepareForSearch() {\n    this.selectedProtocol = null;\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true});\n    }\n  }\n\n  removeProtocol() {\n    this.modalService.confirm('danger').subscribe(res => {\n      if (res) {\n        this.protocolService.deleteProtocol(this.selectedProtocol.id).subscribe(() => this.search$.next());\n        this.selectedProtocol = null;\n      }\n    });\n  }\n\n  onCreateProtocol() {\n    this.protocolService.createEditProtocolModal('create').pipe(\n      filter(value => Boolean(value)),\n      tap(() => this.search$.next())\n    ).subscribe()\n  }\n\n  editProtocol() {\n    this.protocolService.createEditProtocolModal('edit', this.selectedProtocol).pipe(\n      filter(value => Boolean(value)),\n      tap(() => this.search$.next())\n    ).subscribe()\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Protocols</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Protocol\" (click)=\"onCreateProtocol()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form>\n      <div class=\"d-flex\">\n        <p class=\"subtitle\" *ngIf=\"!selectedProtocol\">Choose the Protocol to edit</p>\n        <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedProtocol\"></p-menubar>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        [value]=\"protocols$ | async\"\n        [rows]=\"10\"\n        [scrollable]=\"true\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedProtocol\"\n        scrollHeight=\"calc(100vh - 19rem)\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 50%\">Comment</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-protocol let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"protocol\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{protocol.name}}</td>\n            <td style=\"width: 50%\">{{protocol.comment}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n    </div>\n    <div\n      class=\"paginator-wrapper\"\n      *ngIf=\"!isShowAll\"\n      [class.paginator-wrapper_hide]=\"protocolsCount === 0\"\n    >\n      <p-paginator\n        #paginator\n        [rows]=\"10\"\n        [totalRecords]=\"protocolsCount\"\n        (onPageChange)=\"paginate($event)\"\n      >\n      </p-paginator>\n      <p-button\n        (click)=\"onShowAll(true)\"\n        class=\"paginator-all\"\n        type=\"button\"\n        styleClass=\"p-button-text\"\n      >\n        All\n      </p-button>\n    </div>\n\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {QcService} from '../../services/qc.service';\r\nimport {AlbumService} from '@shared/services/album.service';\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-qc-invoice',\r\n  templateUrl: './qc-invoice.component.html',\r\n  styleUrls: ['./qc-invoice.component.scss']\r\n})\r\nexport class QcInvoiceComponent implements OnInit {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  isLoading = true;\r\n  isLoadingProducts = false;\r\n  isLoadingTechnicalEquipment = true;\r\n  isGenerating = false;\r\n  isCancellation = false;\r\n  isCompletingProducts = false;\r\n  isCompleting = false;\r\n\r\n  invoice: Invoice;\r\n  invoiceId: number;\r\n\r\n  invoiceProducts: InvoiceProduct[] = [];\r\n  selectedInvoiceProducts: InvoiceProduct[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedTechnicalEquipment: OrderTechnicalEquipment;\r\n\r\n  invoiceCanBeCompleted = false;\r\n\r\n  constructor(\r\n    private readonly invoiceService: InvoiceService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly invoiceProductService: InvoiceProductService,\r\n    private readonly qrCodeService: QrCodeService,\r\n    private readonly qcService: QcService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly modalService: ModalService,\r\n    public readonly albumService: AlbumService,\r\n    private readonly router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.invoiceId = +id),\r\n      tap(() => this.getInvoice()),\r\n      tap(() => this.getInvoiceProducts()),\r\n    ).subscribe();\r\n  }\r\n\r\n  getInvoice() {\r\n    this.invoiceService.getById(this.invoiceId).pipe(\r\n      tap(invoice => this.invoice = invoice),\r\n      tap(() => this.getTechnicalEquipmentToQc()),\r\n      tap(() => this.isLoading = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getInvoiceProducts() {\r\n    this.invoiceProducts = [];\r\n    this.selectedInvoiceProducts = [];\r\n    this.isLoadingProducts = true;\r\n\r\n    this.invoiceProductService.getInvoiceProducts(this.invoiceId).pipe(\r\n      tap(products => this.invoiceProducts = products),\r\n      tap(products => this.invoiceCanBeCompleted = Boolean(products.find(p => p.quality_control))),\r\n      tap(() => this.isLoadingProducts = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getTechnicalEquipmentToQc() {\r\n    this.isLoadingTechnicalEquipment = true;\r\n    this.technicalEquipments = [];\r\n\r\n    if (this.invoice.order) {\r\n      this.orderProductService.getTechnicalEquipmentToQC(this.invoice.order.id).pipe(\r\n        tap(equipment => this.technicalEquipments = equipment),\r\n        tap(() => this.isLoadingTechnicalEquipment = false)\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedInvoiceProducts.forEach(p => {\r\n      send.by_nomenclatures_list.push({\r\n        nomenclature_id: p.nomenclature.id,\r\n        serial_number_ids:\r\n          p.nomenclature.bulk_or_serial === '1' ?\r\n            p.serial_numbers.map(s => +s.id) : [],\r\n        order_product_ids: [p.id],\r\n        invoice_product_ids: [],\r\n      });\r\n    });\r\n\r\n    this.qrCodeService.generateQrCodes(send, this.invoice.order.id, this.invoice.self_serial_number).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  onCancellation() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm),\r\n    ).subscribe(() => {\r\n      this.isCancellation = true;\r\n      this.invoiceService.cancellation(this.invoiceId).subscribe(() => {\r\n        this.isCancellation = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onComplete() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = {id: this.invoice.id, qc_completed: true};\r\n      this.isCompleting = true;\r\n      this.invoiceService.updatePartly(send).subscribe(() => {\r\n        this.isCompleting = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onCompleteItems() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = [];\r\n      const sendProducts = this.selectedInvoiceProducts.filter(p => !p.nomenclature.qc_protocol && p.nomenclature.bulk_or_serial === '0');\r\n\r\n      sendProducts.forEach(product => {\r\n        send.push({\r\n          id: product.id,\r\n          not_passed_quantity: 0,\r\n          passed_quantity: product.quantity,\r\n          quality_control: 1\r\n        });\r\n      });\r\n\r\n      this.isCompletingProducts = true;\r\n\r\n      this.invoiceProductService.severalUpdatePartly(send).pipe(\r\n        tap(() => this.getInvoiceProducts()),\r\n        tap(() => this.isCompletingProducts = false)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedInvoiceProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  onQualityControl() {\r\n    if (this.selectedInvoiceProducts[0].nomenclature.qc_protocol && this.selectedInvoiceProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedInvoiceProducts[0].passed_quantity) currentCount += this.selectedInvoiceProducts[0].passed_quantity;\r\n      if (this.selectedInvoiceProducts[0].not_passed_quantity) currentCount += this.selectedInvoiceProducts[0].not_passed_quantity;\r\n\r\n      // this.modalService.protocolControlProduct(this.selectedInvoiceProducts[0], currentCount, this.selectedInvoiceProducts[0].quantity, 'invoice').subscribe(res => {\r\n      //   if (res) {\r\n      //     this.selectedInvoiceProducts = [];\r\n      //     this.getInvoiceProducts();\r\n      //   }\r\n      // });\r\n    } else if (!this.selectedInvoiceProducts[0].nomenclature.qc_protocol && this.selectedInvoiceProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedInvoiceProducts[0].passed_quantity) currentCount += this.selectedInvoiceProducts[0].passed_quantity;\r\n      if (this.selectedInvoiceProducts[0].not_passed_quantity) currentCount += this.selectedInvoiceProducts[0].not_passed_quantity;\r\n\r\n      // this.modalService.serialControlProduct(this.selectedInvoiceProducts[0], currentCount, this.selectedInvoiceProducts[0].quantity, 'invoice').subscribe(res => {\r\n      //   if (res) {\r\n      //     this.selectedInvoiceProducts = [];\r\n      //     this.getInvoiceProducts();\r\n      //   }\r\n      // });\r\n    } else {\r\n      this.qcService.controlProduct(this.selectedInvoiceProducts[0]).subscribe(res => {\r\n        if (res) {\r\n          this.selectedInvoiceProducts = null;\r\n          this.getInvoiceProducts();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onPrintAlbum() {\r\n    this.albumService.getNomenclaturesImages((this.selectedInvoiceProducts.map(p => p?.nomenclature)));\r\n  }\r\n\r\n  goToOrder() {\r\n    let link: string;\r\n    const order = this.invoice.order;\r\n\r\n    switch (order.accounting_type) {\r\n      case 1:\r\n        link = '/procurement/chains/order/' + order.id;\r\n        break;\r\n      case 2:\r\n        link = '/outsourcing/chains/order/' + order.id;\r\n        break;\r\n      case 3:\r\n        link = `${this.link}production/orders/order/` + order.id;\r\n        break;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  onQualityControlTechnicalEquipment() {\r\n    this.qcService.controlTechnicalEquipment(this.selectedTechnicalEquipment, true).subscribe(res => {\r\n      if (res) {\r\n        this.getTechnicalEquipmentToQc();\r\n        this.selectedTechnicalEquipment = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        Order ID <ng-container *ngIf=\"isLoading; else orderLink\">...</ng-container>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-print\"\r\n        label=\"Print Album\"\r\n        [loading]=\"albumService.loading$ | async\"\r\n        (click)=\"onPrintAlbum()\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-qrcode\"\r\n        label=\"Generate QR Codes\"\r\n        [loading]=\"isGenerating\"\r\n        (click)=\"onGenerateQrCodes()\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon mr-2\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete Products\"\r\n        [loading]=\"isCompletingProducts\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n        (click)=\"onCompleteItems()\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-danger mr-2\"\r\n        icon=\"pi pi-times\"\r\n        [loading]=\"isCancellation\"\r\n        label=\"Cancellation\"\r\n        (click)=\"onCancellation()\"\r\n        [disabled]=\"isLoading\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-success\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        [loading]=\"isCompleting\"\r\n        (click)=\"onComplete()\"\r\n        [disabled]=\"!invoiceCanBeCompleted\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        scrollHeight=\"calc(100vh - 19rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingProducts\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"invoiceProducts\"\r\n        [(selection)]=\"selectedInvoiceProducts\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 17%\">Name</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedInvoiceProducts.length === 0\">Choose the Product to edit</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon ml-auto mr-2\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              (click)=\"onShowImages()\"\r\n              [disabled]=\"isLoadingProducts || selectedInvoiceProducts.length === 0 || selectedInvoiceProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingProducts || selectedInvoiceProducts.length === 0 || selectedInvoiceProducts.length > 1\"\r\n              (click)=\"onQualityControl()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 17%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              {{product.current_technology?.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n\r\n  <h2 class=\"mt-4 mb-4\">Technical Equipment</h2>\r\n\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #st\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 19rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingTechnicalEquipment && technicalEquipments.length > 0\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"technicalEquipments\"\r\n        [(selection)]=\"selectedTechnicalEquipment\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 8%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 32%\">Name</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnicalEquipment\">Choose the Technical Equipment to Quality Control</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"ml-auto p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingTechnicalEquipment || !selectedTechnicalEquipment\"\r\n              (click)=\"onQualityControlTechnicalEquipment()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 8%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 32%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingTechnicalEquipment\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTechnicalEquipment\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"st.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!st.paginator && !isLoadingTechnicalEquipment && technicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"st.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #orderLink>\r\n  <a class=\"order-link\" (click)=\"goToOrder()\">{{invoice?.order?.id}}</a>\r\n</ng-template>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {NavigationLink} from '../../../layout/navigation-route';\r\n\r\n@Component({\r\n  selector: 'pek-qc-layout',\r\n  templateUrl: './qc-layout.component.html',\r\n  styleUrls: ['./qc-layout.component.scss']\r\n})\r\nexport class QcLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Invoices', commands: ['list']},\r\n  ];\r\n\r\n  settingRoutes: NavigationLink[] = [\r\n    {label: 'Protocols', commands: ['protocols']},\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<pek-header\r\n  [module]=\"'Quality Control'\"\r\n  [routes]=\"routes\"\r\n  [settingsRoutes]=\"settingRoutes\"\r\n></pek-header>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {tap} from 'rxjs/operators';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {forkJoin} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-qc-list',\r\n  templateUrl: './qc-list.component.html',\r\n  styleUrls: ['./qc-list.component.scss']\r\n})\r\nexport class QcListComponent implements OnInit {\r\n  invoices: Invoice[];\r\n  orders: Order[];\r\n\r\n  selectedInvoiceNode: TreeNode<Invoice>;\r\n  selectedOrderNode: TreeNode<Order>;\r\n  selectedPurchasedInvoiceNode: TreeNode<Invoice>;\r\n\r\n  invoiceManufacturedTree: TreeNode<Invoice>[];\r\n  invoicePurchasedTree: TreeNode<Invoice>[];\r\n  ownProductionCategorizedList: TreeNode[];\r\n\r\n  invoiceTree: TreeNode<Invoice>[];\r\n\r\n  isLoadingInvoices = true;\r\n  isLoadingOrders = true;\r\n\r\n  categories: TreeNode<Category>[];\r\n\r\n\r\n  expanseMap = {};\r\n\r\n  constructor(\r\n    private invoiceService: InvoiceService,\r\n    private orderService: OrderService,\r\n    private productStructureCategoryService: ProductStructureCategoryService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin({\r\n      categories: this.productStructureCategoryService.get(),\r\n      invoices: this.invoiceService.get([\r\n        {name: 'needs_qc', value: true},\r\n        {name: 'by_qc_module_permission', value: true}\r\n      ]),\r\n      orders: this.orderService.get([\r\n        {name: 'needs_qc', value: true},\r\n        {name: 'by_qc_module_permission', value: true}\r\n      ])\r\n    }).subscribe(({categories, invoices, orders}) => {\r\n      if (this.categories) {\r\n        this.mapExpansion();\r\n      }\r\n\r\n      this.createTree(categories);\r\n\r\n      this.invoices = invoices;\r\n      this.makeUniqueProductionPlansInvoice();\r\n      this.resetProductPaymentTree();\r\n\r\n      this.orders = orders;\r\n      this.makeUniqueProductionPlans();\r\n      this.fillOwnProductionWithData();\r\n\r\n      this.isLoadingInvoices = false;\r\n    });\r\n  }\r\n\r\n  mapExpansion() {\r\n    this.categories.forEach(element => {\r\n      this.createExpanseMap(element);\r\n    });\r\n  }\r\n\r\n  createExpanseMap(node: TreeNode<Category>) {\r\n    if (node.expanded) {\r\n      this.expanseMap[node.data.id] = node.expanded;\r\n    } else {\r\n      this.expanseMap[node.data.id] = false;\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(element => {\r\n        this.createExpanseMap(element);\r\n      });\r\n    }\r\n  }\r\n\r\n  getInvoices() {\r\n    this.invoiceService.get([\r\n      {name: 'needs_qc', value: true},\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ]).pipe(\r\n      tap(invoices => this.invoices = invoices),\r\n      tap(() => this.makeUniqueProductionPlansInvoice()),\r\n      tap(() => this.resetProductPaymentTree()),\r\n      tap(() => this.isLoadingInvoices = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getServices(): void {\r\n    this.orderService.get([\r\n      {name: 'needs_qc', value: true},\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ]).pipe(\r\n      tap(orders => this.orders = orders),\r\n      tap(() => this.makeUniqueProductionPlans()),\r\n      tap(() => this.fillOwnProductionWithData()),\r\n    ).subscribe();\r\n  }\r\n\r\n  resetProductPaymentTree(): void {\r\n    const categories: { name: string, description: string, id: number, level?: number }[] = [];\r\n    this.invoices.forEach(invoice => {\r\n      const purchaseCategory = invoice.purchase_category;\r\n\r\n      if (purchaseCategory) {\r\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\r\n        if (isAdded < 0) {\r\n          categories.push({\r\n            name: purchaseCategory.name,\r\n            id: purchaseCategory.id,\r\n            description: purchaseCategory.description,\r\n          });\r\n        }\r\n      } else {\r\n        if (invoice.order?.accounting_type === 1) {\r\n          const isAdded = categories.findIndex(el => el.id === -2);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Production Lists Procurement', id: -2, description: '', level: 0});\r\n          }\r\n        }\r\n        if (invoice.order?.accounting_type === 2) {\r\n          const isAdded = categories.findIndex(el => el.id === -1);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Outsourcing', id: -1, description: '', level: 0});\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    categories.sort((a, b) => a.id - b.id);\r\n    this.invoiceTree = [];\r\n    categories.forEach(cat => {\r\n      this.invoiceTree.push({\r\n        data: <any>cat,\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    this.createPaymentTree();\r\n  }\r\n\r\n  createPaymentTree() {\r\n    this.invoiceTree = this.invoiceTree.map(node => {\r\n      return {\r\n        ...node,\r\n        children: []\r\n      };\r\n    });\r\n\r\n    this.invoiceTree.forEach(node => {\r\n      // Preparing Purchased Invoices\r\n      this.invoices.filter(invoice => invoice.purchase_category).forEach(invoice => {\r\n\r\n        const purchaseCategory = invoice.purchase_category;\r\n        if (purchaseCategory) {\r\n          if (purchaseCategory.id === node.data.id) {\r\n            node.children.push({\r\n              data: invoice,\r\n              expanded: false,\r\n              children: []\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      // Preparing Manufacturing Procurement\r\n      if (node.data.id === -2) {\r\n        const manProc = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 1);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(manProc, node);\r\n      }\r\n\r\n      // Preparing Outsourcing\r\n      if (node.data.id === -1) {\r\n        const outsourcing = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 2);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(outsourcing, node);\r\n      }\r\n    });\r\n\r\n    this.separatePurchasedAndManufactured();\r\n  }\r\n\r\n  prepareInnerTreeCategories(invoices, nodeInner: TreeNode): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n    invoices.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        } else {\r\n          const indexNoNomenclature = categoriesTemp.findIndex(cat => cat.id === -2);\r\n          if (indexNoNomenclature < 0) {\r\n            categoriesTemp.push({\r\n              id: -2,\r\n              level: 1,\r\n              name: 'No root nomenclature',\r\n              parentId: null\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = nodeInner.children.findIndex(node => node.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          nodeInner.children.push({\r\n            data: {\r\n              id: -1,\r\n              level: 0,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          nodeInner.children[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    const temp = cloneDeep(nodeInner.children);\r\n    temp.forEach(node => {\r\n      this.appendCategories(node, categoriesTemp);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.fillWithTheData(node, invoices);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.removeUpdateEmptyCategories(node);\r\n    });\r\n\r\n    nodeInner.children = temp;\r\n  }\r\n\r\n  separatePurchasedAndManufactured(): void {\r\n    this.invoicePurchasedTree = this.invoiceTree.filter(invoice => invoice.data.id >= 0);\r\n    this.invoiceManufacturedTree = this.invoiceTree.filter(invoice => invoice.data.id < 0);\r\n  }\r\n\r\n  makeUniqueProductionPlans(): void {\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans = [];\r\n      order.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex =\r\n            order.unique_root_production_plans\r\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            order.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  makeUniqueProductionPlansInvoice(): void {\r\n    this.invoices.forEach(invoice => {\r\n      invoice.unique_root_production_plans = [];\r\n      invoice.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex =\r\n            invoice.unique_root_production_plans\r\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            invoice.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  createTree(data) {\r\n    const dd = [];\r\n    data.forEach(element => {\r\n      const ins = {data: element, expanded: false};\r\n      if (this.expanseMap) {\r\n        ins.expanded = this.expanseMap[element.id];\r\n      }\r\n      dd.push(ins);\r\n    });\r\n    const root = [];\r\n    const idMapping = dd.reduce((acc, el, i) => {\r\n      acc[el.data.id] = i;\r\n      return acc;\r\n    }, {});\r\n    dd.forEach(el => {\r\n      if (el.data.parent === null) {\r\n        root.push(el);\r\n        return;\r\n      }\r\n      const parentEl = dd[idMapping[el.data.parent]];\r\n      parentEl.children = [...(parentEl.children || []), el];\r\n      if (parentEl.children.length === 0) {\r\n        delete parentEl.children;\r\n      }\r\n\r\n    });\r\n    this.categories = root;\r\n    this.ownProductionCategorizedList = cloneDeep(this.categories);\r\n  }\r\n\r\n  private fillOwnProductionWithData() {\r\n    this.fillCategorizedTree();\r\n  }\r\n\r\n  fillCategorizedTree(): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = this.ownProductionCategorizedList.findIndex(nodeInner => nodeInner.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          this.ownProductionCategorizedList.push({\r\n            data: {\r\n              id: -1,\r\n              level: 0,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          this.ownProductionCategorizedList[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.ownProductionCategorizedList) {\r\n      const temp = cloneDeep(this.ownProductionCategorizedList);\r\n      temp.forEach(node => {\r\n        this.appendCategories(node, categoriesTemp);\r\n      });\r\n\r\n      temp.forEach(node => {\r\n        this.fillWithTheData(node, this.orders);\r\n      });\r\n\r\n      temp.forEach(node => {\r\n        this.removeUpdateEmptyCategories(node);\r\n      });\r\n\r\n      this.ownProductionCategorizedList = temp;\r\n      this.isLoadingOrders = false;\r\n    }\r\n  }\r\n\r\n  appendCategories(node: TreeNode, categoriesTemp: { id: number, level: number, parentId: number, name: string }[]): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    categoriesTemp.forEach(cat => {\r\n      if (cat.parentId === node.data.id) {\r\n        node.children.push({\r\n          data: {\r\n            id: cat.id,\r\n            name: cat.name,\r\n            level: cat.level,\r\n            parentId: cat.parentId,\r\n            isCategory: true,\r\n            categories: 0\r\n          },\r\n          expanded: false,\r\n          children: []\r\n        });\r\n      }\r\n    });\r\n\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.appendCategories(childNode, categoriesTemp);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillWithTheData(node: TreeNode, orders): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    if (node.data.isCategory) {\r\n      orders.forEach(order => {\r\n        order.unique_root_production_plans.forEach(plan => {\r\n          if (plan.root_nomenclature) {\r\n            const catId = plan.root_nomenclature.id;\r\n            if (node.data.id === catId) {\r\n              const existingCatChildIndex = node.children.findIndex(cat => cat.data.id === plan.list_product.nomenclature.id);\r\n\r\n              if (existingCatChildIndex < 0) {\r\n                node.children.push({\r\n                  data: {\r\n                    id: plan.list_product.nomenclature.id,\r\n                    name: plan.list_product.nomenclature.name,\r\n                    level: 3,\r\n                    categories: 0,\r\n                  },\r\n                  expanded: false,\r\n                  children: [{\r\n                    data: {order, plan, level: 4},\r\n                    expanded: false,\r\n                    children: []\r\n                  }]\r\n                });\r\n              } else {\r\n                node.children[existingCatChildIndex].children.push({\r\n                  data: {order, plan, level: 4},\r\n                  expanded: false,\r\n                  children: []\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.fillWithTheData(childNode, orders);\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUpdateEmptyCategories(node: TreeNode): void {\r\n    if (!node.data.isCategory && !node.data.order) {\r\n      let hideFromTable = true;\r\n      const hasContent = node.children.filter(child => child.data.order).length > 0;\r\n      if (hasContent) {\r\n        hideFromTable = false;\r\n      }\r\n\r\n      node.children.forEach(childNode => {\r\n        checkForContent(childNode);\r\n      });\r\n\r\n      function checkForContent(childNode) {\r\n        if (hideFromTable) {\r\n          const hasContentInner = childNode.children.filter(child => child.data.order).length > 0;\r\n          if (hasContentInner) {\r\n            hideFromTable = false;\r\n          }\r\n        }\r\n        childNode.children.forEach(childNode2 => {\r\n          checkForContent(childNode2);\r\n        });\r\n      }\r\n\r\n      node.data.hideFromTable = hideFromTable;\r\n    }\r\n\r\n    node.data.categories = node.children.length;\r\n    if (node.children) {\r\n      node.children.forEach((childNode, indexChild) => {\r\n        this.removeUpdateEmptyCategories(childNode);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapseAllInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoiceManufacturedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoiceManufacturedTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapsePurchasedInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoicePurchasedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoicePurchasedTree = temp;\r\n  }\r\n\r\n  expandCollapseAllOrders(isToExpand = true): void {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Invoices</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__tabs\">\r\n    <p-tabView class=\"custom-tabs\">\r\n      <p-tabPanel\r\n        [header]=\"'Production Lists Procurement and Outsourcing Invoices'\"\r\n        [selected]=\"true\"\r\n      >\r\n        <div class=\"page__table\">\r\n          <p-treeTable\r\n            #dt\r\n            selectionMode=\"single\"\r\n            [value]=\"invoiceManufacturedTree\"\r\n            [(selection)]=\"selectedInvoiceNode\"\r\n            scrollHeight=\"calc(100vh - 22rem)\"\r\n            [scrollable]=\"true\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\r\n                <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\r\n                <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex\">\r\n                <p\r\n                  class=\"subtitle\"\r\n                  *ngIf=\"!selectedInvoiceNode\">\r\n                  Choose the Production Lists Procurement or Outsourcing Invoice to view Items\r\n                </p>\r\n                <a\r\n                  [class.disabled]=\"!selectedInvoiceNode\"\r\n                  [routerLink]=\"['../', 'invoice', selectedInvoiceNode?.data.order ?\r\n      selectedInvoiceNode?.data.order.id :\r\n      selectedInvoiceNode?.data.id]\"\r\n                  target=\"_blank\"\r\n                  class=\"ml-auto mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-bars\"\r\n                  label=\"Items\"\r\n                >\r\n                </a>\r\n                <button\r\n                  [disabled]=\"isLoadingInvoices\"\r\n                  class=\"mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Expand All\"\r\n                  icon=\"pi pi-angle-down\"\r\n                  (click)=\"expandCollapseAllInvoices()\"\r\n                ></button>\r\n                <button\r\n                  [disabled]=\"isLoadingInvoices\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Collapse All\"\r\n                  icon=\"pi pi-angle-up\"\r\n                  (click)=\"expandCollapseAllInvoices(false)\"\r\n                ></button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template\r\n              pTemplate=\"body\"\r\n              let-invoiceNode\r\n              let-invoice=\"rowData\"\r\n              let-i=\"rowIndex\"\r\n            >\r\n              <tr\r\n                [ttRow]=\"invoiceNode\"\r\n                [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                [ttSelectableRow]=\"invoiceNode\"\r\n                  *ngIf=\"!invoice.hideFromTable\"\r\n              >\r\n                <td  style=\"width: 20%\" [class.text-center]=\"invoice.order\">\r\n                  <div class=\"table-toggle\">\r\n                    <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                    <ng-container *ngIf=\"!invoice.order\">\r\n                      <span [class.category-name]=\"invoice.level === 0 && invoice.hideFromTable !== false\">\r\n                        {{invoice.name}}\r\n                        <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                        <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\r\n                      </span>\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                      {{(invoice.order?.order?.qc_started_date ? invoice.order?.order?.qc_started_date :\r\n                      invoice.order.system_creation_date) |date:'dd/MM/yyyy HH:mm'}}\r\n                      </span>\r\n                  </div>\r\n                </td>\r\n                <td  style=\"width: 15%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </ng-container>\r\n                  <span\r\n                    *ngIf=\"invoice.level === 4\"\r\n                    [class.text-warning]=\"invoice.order.unique_root_production_plans.length > 1\"\r\n                  >\r\n                   {{invoice.order.self_serial_number}} {{invoice.order.self_proforma_serial_number}}\r\n                  </span>\r\n                </td>\r\n                <td  style=\"width: 10%\" class=\"text-center\">\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                    {{invoice.order?.order?.id}}\r\n                  </span>\r\n                </td>\r\n                <td  style=\"width: 20%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.supplier?.name}}\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                    {{invoice.order.supplier?.name}}\r\n                  </span>\r\n                </td>\r\n                <td  style=\"width: 15%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                    {{invoice.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                   </span>\r\n                </td>\r\n                <td style=\"width: 20%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\r\n                      {{root_list.list_product.nomenclature.name}}\r\n                    </div>\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                    {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                    <span>({{invoice.plan.required_quantity}})</span>\r\n              </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-treeTable>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'Own Production'\"\r\n      >\r\n        <div class=\"page__table\">\r\n          <p-treeTable\r\n            #dt\r\n            selectionMode=\"single\"\r\n            [value]=\"ownProductionCategorizedList\"\r\n            [(selection)]=\"selectedOrderNode\"\r\n            [scrollable]=\"true\"\r\n            scrollHeight=\"calc(100vh - 22rem)\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\r\n                <th style=\"width: 15%;\" class=\"text-center\">Order ID</th>\r\n                <th style=\"width: 45%;\" class=\"text-center\">Items Reception Date</th>\r\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex\">\r\n                <p\r\n                  class=\"subtitle\"\r\n                  *ngIf=\"!selectedOrderNode\">\r\n                  Choose Own Production Item to view Items\r\n                </p>\r\n                <a\r\n                  [class.disabled]=\"!selectedOrderNode\"\r\n                  [routerLink]=\"['../', 'order', selectedOrderNode?.data.order.id]\"\r\n                  class=\"ml-auto mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-bars\"\r\n                  label=\"Items\"\r\n                  target=\"_blank\"\r\n                >\r\n                </a>\r\n                <button\r\n                  [disabled]=\"isLoadingOrders\"\r\n                  (click)=\"expandCollapseAllOrders()\"\r\n                  class=\"mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Expand All\"\r\n                  icon=\"pi pi-angle-down\"\r\n                ></button>\r\n                <button\r\n                  [disabled]=\"isLoadingOrders\"\r\n                  (click)=\"expandCollapseAllOrders(false)\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Collapse All\"\r\n                  icon=\"pi pi-angle-up\"\r\n                ></button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template\r\n              pTemplate=\"body\"\r\n              let-rowNode\r\n              let-rowData=\"rowData\"\r\n            >\r\n              <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\" [ttSelectableRowDisabled]=\"rowData.level < 4\" *ngIf=\"!rowData.hideFromTable\">\r\n                <td style=\"width: 20%;\">\r\n                  <div  class=\"table-toggle\">\r\n                    <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                    <span [class.category-name]=\"rowData.level === 0\">\r\n                        {{rowData.name}}\r\n                      <i *ngIf=\"rowData.level < 4\" style=\"font-style: normal\">({{rowData.categories}})</i>\r\n                </span>\r\n                    <span *ngIf=\"rowData.order\">\r\n                  {{(rowData.order.qc_started_date? rowData.order.qc_started_date : rowData.order.created) | date: 'dd/MM/yyyy HH:mm'}}\r\n              </span>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 15%;\" class=\"text-center\">\r\n              <span *ngIf=\"rowData.order\" [class.text-warning]=\"rowData.order.unique_root_production_plans.length > 1\">\r\n                {{rowData.order.id}}\r\n              </span>\r\n                </td>\r\n                <td style=\"width: 45%;\" class=\"text-center\">\r\n            <span *ngIf=\"rowData.order\">\r\n              {{rowData.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n            </span>\r\n                </td>\r\n                <td style=\"width: 20%;\" class=\"text-center\">\r\n              <span *ngIf=\"rowData.order && rowData.plan\"  >\r\n                {{rowData.plan.list_product.nomenclature.code}}~{{rowData.plan.list_product.nomenclature.name}}\r\n              </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                  <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-treeTable>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'General Procurement Invoices'\"\r\n      >\r\n        <div class=\"page__table\">\r\n          <p-treeTable\r\n            #dt\r\n            selectionMode=\"single\"\r\n            [value]=\"invoicePurchasedTree\"\r\n            [(selection)]=\"selectedPurchasedInvoiceNode\"\r\n            scrollHeight=\"calc(100vh - 22rem)\"\r\n            [scrollable]=\"true\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\r\n                <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\r\n                <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex\">\r\n                <p\r\n                  class=\"subtitle\"\r\n                  *ngIf=\"!selectedPurchasedInvoiceNode\">\r\n                  Choose the General Procurement Invoice to view Items\r\n                </p>\r\n                <a\r\n                  [class.disabled]=\"!selectedPurchasedInvoiceNode\"\r\n                  [routerLink]=\"['../', 'invoice', selectedPurchasedInvoiceNode?.data.invoice ?\r\n      selectedPurchasedInvoiceNode?.data.invoice.id :\r\n      selectedPurchasedInvoiceNode?.data.id]\"\r\n                  class=\"ml-auto mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-bars\"\r\n                  label=\"Items\"\r\n                  target=\"_blank\"\r\n                >\r\n                </a>\r\n                <button\r\n                  [disabled]=\"isLoadingInvoices\"\r\n                  class=\"mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Expand All\"\r\n                  icon=\"pi pi-angle-down\"\r\n                  (click)=\"expandCollapsePurchasedInvoices()\"\r\n                ></button>\r\n                <button\r\n                  [disabled]=\"isLoadingInvoices\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  label=\"Collapse All\"\r\n                  icon=\"pi pi-angle-up\"\r\n                  (click)=\"expandCollapsePurchasedInvoices(false)\"\r\n                ></button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-invoiceNode let-invoice=\"rowData\" let-i=\"rowIndex\">\r\n              <tr [ttRow]=\"invoiceNode\"\r\n                  [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                  [ttSelectableRow]=\"invoiceNode\">\r\n                <td  style=\"width: 20%\"\r\n                     [class.text-center]=\"invoice.order\">\r\n                  <div  class=\"table-toggle\">\r\n                    <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                    <ng-container *ngIf=\"!invoice.order\">\r\n                  <span [class.category-name]=\"!invoice.level && invoice.level !== 1\">{{invoice.name}}\r\n                    <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                    <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\r\n                  </span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                <span>\r\n                  {{(invoice.order.qc_started_date ? invoice.order.qc_started_date : invoice.system_creation_date)|date:'dd/MM/yyyy HH:mm'}}\r\n                </span>\r\n                    </ng-container>\r\n                  </div>\r\n                </td>\r\n                <td  style=\"width: 15%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4\" [class.text-warning]=\"invoice.invoice.unique_root_production_plans.length > 1\">\r\n                {{invoice.invoice.self_serial_number}} {{invoice.invoice.self_proforma_serial_number}}\r\n              </span>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.order.id}}\r\n                  </ng-container>\r\n                </td>\r\n                <td  style=\"width: 20%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.supplier?.name}}\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                {{invoice.invoice.supplier?.name}}\r\n              </span>\r\n                </td>\r\n                <td  style=\"width: 15%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                {{invoice.invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n              </span>\r\n                </td>\r\n                <td style=\"width: 20%\">\r\n                  <ng-container *ngIf=\"invoice.order\">\r\n                    <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\r\n                      {{root_list.list_product.nomenclature.name}}\r\n                    </div>\r\n                  </ng-container>\r\n                  <span *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                    <span>({{invoice.plan.required_quantity}})</span>\r\n              </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-treeTable>\r\n        </div>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {AlbumService} from '@shared/services/album.service';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {QcService} from '../../services/qc.service';\r\n\r\n@Component({\r\n  selector: 'pek-qc-order',\r\n  templateUrl: './qc-order.component.html',\r\n  styleUrls: ['./qc-order.component.scss']\r\n})\r\nexport class QcOrderComponent implements OnInit {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  order: Order;\r\n  orderId: number;\r\n  isLoadingTechnicalEquipment = true;\r\n  isLoading = true;\r\n  isLoadingProducts = true;\r\n\r\n  isGenerating = false;\r\n  isReworking = false;\r\n  isCompletingProducts = false;\r\n  isCompleting = false;\r\n  isReworkingProduct = false;\r\n\r\n  selectedOrderProducts: OrderProduct[] = [];\r\n  orderProducts: OrderProduct[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedTechnicalEquipment: OrderTechnicalEquipment;\r\n\r\n  orderCanBeCompleted = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private orderService: OrderService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly modalService: ModalService,\r\n    public readonly albumService: AlbumService,\r\n    private readonly qrCodeService: QrCodeService,\r\n    private readonly qcService: QcService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.orderId = +id),\r\n      tap(() => this.getOrder()),\r\n      tap(() => this.getOrderProducts()),\r\n    ).subscribe();\r\n  }\r\n\r\n  getOrder() {\r\n    this.orderService.getById(this.orderId).pipe(\r\n      tap(order => this.order = order),\r\n      tap(() => this.getTechnicalEquipmentToQc()),\r\n      tap(() => this.isLoading = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getTechnicalEquipmentToQc() {\r\n    this.technicalEquipments = [];\r\n    this.isLoadingTechnicalEquipment = true;\r\n\r\n    this.orderProductService.getTechnicalEquipmentToQC(this.orderId).pipe(\r\n      tap(equipment => this.technicalEquipments = equipment),\r\n      tap(() => this.isLoadingTechnicalEquipment = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getOrderProducts() {\r\n    this.orderProducts = [];\r\n    this.selectedOrderProducts = [];\r\n    this.isLoadingProducts = true;\r\n\r\n    this.orderProductService.getQc(this.orderId).pipe(\r\n      tap(products => this.orderProducts = products),\r\n      tap(products => this.orderCanBeCompleted = Boolean(products.find(p => p.quality_control))),\r\n      tap(() => this.isLoadingProducts = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  onPrintAlbum() {\r\n    this.albumService.getNomenclaturesImages((this.selectedOrderProducts.map(p => p?.nomenclature)));\r\n  }\r\n\r\n  goToOrder() {\r\n    let link: string;\r\n    const order = this.order;\r\n\r\n    switch (order.accounting_type) {\r\n      case 1:\r\n        link = '/procurement/chains/order/' + order.id;\r\n        break;\r\n      case 2:\r\n        link = '/outsourcing/chains/order/' + order.id;\r\n        break;\r\n      case 3:\r\n        link = `${this.link}production/orders/order/` + order.id;\r\n        break;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n\r\n  onCompleteItems() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = [];\r\n      const sendProducts = this.selectedOrderProducts.filter(p => !p.nomenclature.qc_protocol && p.nomenclature.bulk_or_serial === '0');\r\n\r\n      sendProducts.forEach(product => {\r\n        send.push({\r\n          id: product.id,\r\n          not_passed_quantity: 0,\r\n          passed_quantity: product.quantity,\r\n          quality_control: 1\r\n        });\r\n      });\r\n\r\n      this.isCompletingProducts = true;\r\n\r\n      this.orderProductService.severalUpdatePartly(send).pipe(\r\n        tap(() => this.getOrderProducts()),\r\n        tap(() => this.isCompletingProducts = false)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  onComplete() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = {id: this.order.id, qc_completed: true};\r\n      this.isCompleting = true;\r\n      this.orderService.updatePartly(send).subscribe(() => {\r\n        this.isCompleting = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedOrderProducts.forEach(p => {\r\n      send.by_nomenclatures_list.push({\r\n        nomenclature_id: p.nomenclature.id,\r\n        serial_number_ids:\r\n          p.nomenclature.bulk_or_serial === '1' ?\r\n            p.serial_numbers.map(s => +s.id) : [],\r\n        order_product_ids: [p.id],\r\n        invoice_product_ids: [],\r\n      });\r\n    });\r\n\r\n    this.qrCodeService.generateQrCodes(send, this.order.id).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedOrderProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  onQualityControl() {\r\n    if (this.selectedOrderProducts[0].nomenclature.qc_protocol && this.selectedOrderProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedOrderProducts[0].passed_quantity) currentCount += this.selectedOrderProducts[0].passed_quantity;\r\n      if (this.selectedOrderProducts[0].not_passed_quantity) currentCount += this.selectedOrderProducts[0].not_passed_quantity;\r\n\r\n      // this.modalService.protocolControlProduct(this.selectedOrderProducts[0], currentCount, this.selectedOrderProducts[0].quantity, 'order').subscribe(res => {\r\n      //   if (res) {\r\n      //     this.getOrderProducts();\r\n      //     this.selectedOrderProducts = [];\r\n      //   }\r\n      // });\r\n    } else if (!this.selectedOrderProducts[0].nomenclature.qc_protocol && this.selectedOrderProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedOrderProducts[0].passed_quantity) currentCount += this.selectedOrderProducts[0].passed_quantity;\r\n      if (this.selectedOrderProducts[0].not_passed_quantity) currentCount += this.selectedOrderProducts[0].not_passed_quantity;\r\n\r\n      // this.modalService.serialControlProduct(this.selectedOrderProducts[0], currentCount, this.selectedOrderProducts[0].quantity, 'order').subscribe(res => {\r\n      //   if (res) {\r\n      //     this.getOrderProducts();\r\n      //     this.selectedOrderProducts = [];\r\n      //   }\r\n      // });\r\n    } else {\r\n      this.qcService.controlProduct(this.selectedOrderProducts[0], true).subscribe((res) => {\r\n        if (res) {\r\n          this.getOrderProducts();\r\n          this.selectedOrderProducts = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRework() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isReworking = true;\r\n      const ids = this.orderProducts.map(p => p.id);\r\n      this.orderProductService.reworkOrder(ids).subscribe(() => {\r\n        this.isReworking = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onReworkProduct() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isReworkingProduct = true;\r\n      this.orderProductService.reworkOrderProduct(this.selectedOrderProducts[0].id).subscribe(() => {\r\n        const index = this.orderProducts.findIndex(o => o.id === this.selectedOrderProducts[0].id);\r\n        this.orderProducts.splice(index, 1);\r\n        if (this.orderProducts.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n          return;\r\n        }\r\n        this.selectedOrderProducts = [];\r\n        this.isReworkingProduct = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  onQualityControlTechnicalEquipment() {\r\n    this.qcService.controlTechnicalEquipment(this.selectedTechnicalEquipment, true).subscribe(res => {\r\n      if (res) {\r\n        this.getTechnicalEquipmentToQc();\r\n        this.selectedTechnicalEquipment = null;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        Order ID <ng-container *ngIf=\"isLoading; else orderLink\">...</ng-container>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-print\"\r\n        label=\"Print Album\"\r\n        [loading]=\"albumService.loading$ | async\"\r\n        (click)=\"onPrintAlbum()\"\r\n        [disabled]=\"selectedOrderProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-qrcode\"\r\n        label=\"Generate QR Codes\"\r\n        [loading]=\"isGenerating\"\r\n        (click)=\"onGenerateQrCodes()\"\r\n        [disabled]=\"selectedOrderProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon mr-2\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete Products\"\r\n        [loading]=\"isCompletingProducts\"\r\n        [disabled]=\"selectedOrderProducts.length === 0\"\r\n        (click)=\"onCompleteItems()\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-danger mr-2\"\r\n        icon=\"pi pi-refresh\"\r\n        [loading]=\"isReworking\"\r\n        label=\"Rework All\"\r\n        (click)=\"onRework()\"\r\n        [disabled]=\"isLoading\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-success\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        [loading]=\"isCompleting\"\r\n        (click)=\"onComplete()\"\r\n        [disabled]=\"!orderCanBeCompleted\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        scrollHeight=\"calc(100vh - 17rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingProducts\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"orderProducts\"\r\n        [(selection)]=\"selectedOrderProducts\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 17%\">Name</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedOrderProducts.length === 0\">Choose the Product to edit</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon p-button-danger ml-auto mr-2\"\r\n              icon=\"pi pi-refresh\"\r\n              [loading]=\"isReworkingProduct\"\r\n              label=\"Rework Item\"\r\n              (click)=\"onReworkProduct()\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon mr-2\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              (click)=\"onShowImages()\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n              (click)=\"onQualityControl()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 17%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              {{product.current_technology?.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n\r\n  <h2 class=\"mt-4 mb-4\">Technical Equipment</h2>\r\n\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #st\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 17rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingTechnicalEquipment && technicalEquipments.length > 0\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"technicalEquipments\"\r\n        [(selection)]=\"selectedTechnicalEquipment\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 8%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 32%\">Name</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnicalEquipment\">Choose the Technical Equipment to Quality Control</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"ml-auto p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingTechnicalEquipment || !selectedTechnicalEquipment\"\r\n              (click)=\"onQualityControlTechnicalEquipment()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 8%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 32%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingTechnicalEquipment\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTechnicalEquipment\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"st.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!st.paginator && !isLoadingTechnicalEquipment && technicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"st.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #orderLink>\r\n  <a class=\"order-link\" (click)=\"goToOrder()\">{{order.id}}</a>\r\n</ng-template>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {WarehouseService} from '../../../warehouse/services/warehouse.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\nimport {QcProtocol} from '../../models/protocol';\nimport {ProtocolService} from '../../services/protocol.service';\nimport {filter, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-create-edit-protocol',\n  templateUrl: './create-edit-protocol.component.html',\n  styleUrls: ['./create-edit-protocol.component.scss']\n})\nexport class CreateEditProtocolComponent implements OnInit {\n  isSaving = false;\n  isLoadingParagraphs = false;\n\n  defaultParagraphsIds = new Set<number>();\n  removeFilesSet: Set<number> = new Set<number>();\n\n  files = [];\n  defaultFiles = [];\n\n  form: FormGroup = this.fb.group({\n    id: [null],\n    name: [null, Validators.required],\n    comment: ['', Validators.required],\n    paragraphs: this.fb.array([]),\n    nomenclatures: [[]]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly protocolService: ProtocolService,\n    private dialogRef: MatDialogRef<CreateEditProtocolComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, protocol: QcProtocol, isShowMode: boolean }\n  ) { }\n\n  get paragraphs() {\n    return this.form.get('paragraphs') as FormArray;\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.patchValue(this.data.protocol);\n      this.getParagraphs();\n      this.getFiles();\n    } else {\n      this.addParagraph();\n    }\n  }\n\n  getParagraphs() {\n    this.isLoadingParagraphs = true;\n    this.protocolService.getParagraphs([{name: 'protocol_ids', value: this.form.get('id').value}]).subscribe(paragraphs => {\n      paragraphs.forEach(paragraph => {\n        this.defaultParagraphsIds.add(paragraph.id);\n\n        (this.form.get('paragraphs') as FormArray).push(this.fb.group({\n          id: [paragraph.id],\n          name: [paragraph.name, Validators.required],\n          comment: [paragraph.comment]\n        }));\n      });\n\n      this.isLoadingParagraphs = false;\n    });\n  }\n\n  addParagraph() {\n    (this.form.get('paragraphs') as FormArray).push(this.fb.group({\n      id: [null],\n      name: [null, Validators.required],\n      comment: ['']\n    }));\n  }\n\n  getFiles() {\n    if (this.data.type === 'edit') {\n      this.protocolService.getFiles([{name: 'qc_protocol_id', value: this.form.get('id').value}]).subscribe(files => {\n        this.files = files.map(file => {\n          return {\n            ...file,\n            name: this.getFileName(file.file),\n          };\n        });\n\n        this.defaultFiles = [...this.files]\n      });\n    }\n  }\n\n  getFileName(fileName: string) {\n    if (fileName) {\n      const name = fileName.split('/');\n      return name[name.length - 1];\n    }\n  }\n\n  removeNomenclature(id: number) {\n    const index = this.form.get('nomenclatures').value.findIndex(n => n.id === id);\n    this.form.get('nomenclatures').value.splice(index, 1);\n  }\n\n  getType(type) {\n    switch (type) {\n      case '0':\n        return 'Purchased';\n      case '1':\n        return 'Assembly';\n      case '2':\n        return 'Manufactured';\n    }\n  }\n\n  onSave() {\n    if (this.data.type === 'create') {\n      this.createProtocol();\n    } else {\n      this.editProtocol()\n    }\n  }\n\n  addNomenclature() {\n    this.protocolService.addNomenclatureDialog().pipe(\n      filter(value => Boolean(value))\n    ).subscribe(nomenclature => {\n      this.form.get('nomenclatures').value.push({\n        id: nomenclature.id,\n        name: nomenclature.name,\n        code: nomenclature.code,\n        type: nomenclature.type\n      });\n    })\n  }\n\n  createProtocol() {\n    if (this.form.valid) {\n      this.isSaving = true;\n      const sendData = JSON.parse(JSON.stringify(this.form.value));\n      delete sendData.nomenclatures;\n      delete sendData.id;\n      this.protocolService.create(sendData).subscribe(protocol => {\n\n        const send = this.paragraphs.controls.map(control => {\n          delete control.value.id;\n          control.value.protocol_id = protocol.id;\n          return control.value;\n        });\n\n        this.protocolService.addParagraphs(send).subscribe();\n        this.saveFiles(protocol.id.toString());\n\n        if (this.form.get('nomenclatures').value.length > 0) {\n          const nomenclatures = {\n            nomenclature_ids: this.form.get('nomenclatures').value.map(el => el.id)\n          };\n          this.protocolService.addNomenclature(nomenclatures, protocol.id).pipe(\n            tap(() => this.isSaving = false)\n          ).subscribe(() => this.dialogRef.close(true));\n        } else {\n          this.isSaving = false;\n          this.dialogRef.close(true);\n        }\n      });\n    }\n  }\n\n  saveFiles(protocolId: string) {\n    this.files.forEach((file, idx) => {\n      if (!file?.id) {\n        const formData = new FormData();\n        formData.append('file', file, file.name);\n        formData.append('qc_protocol', protocolId);\n\n        this.protocolService.saveFile(formData).subscribe();\n      }\n    });\n  }\n\n  onSelectFiles(files: File[]) {\n    this.files = files;\n  }\n\n  private editProtocol() {\n    if (this.form.value) {\n      this.isSaving = true;\n\n        const sendData = JSON.parse(JSON.stringify(this.form.value));\n        delete sendData.nomenclatures;\n\n        this.protocolService.update(sendData).subscribe();\n\n        const addedParagraphs = this.paragraphs.controls.filter(c => c.value.id === null).map(control => {\n          control.value.protocol_id = this.form.get('id').value;\n          return control.value;\n        });\n\n        this.protocolService.addParagraphs(addedParagraphs).subscribe();\n\n        const updatedParagraphsIds = this.paragraphs.controls.filter(c => this.defaultParagraphsIds.has(c.value.id)).map(c => c.value);\n\n        this.protocolService.updateParagraphs(updatedParagraphsIds).subscribe();\n\n        this.paragraphs.controls\n          .forEach(c => {\n            if (this.defaultParagraphsIds.has(c.value.id)) {\n              this.defaultParagraphsIds.delete(c.value.id);\n            }\n          });\n\n        this.saveFiles(this.form.get('id').value);\n        this.deleteFiles();\n\n        const removedParagraphsIds = Array.from(this.defaultParagraphsIds);\n        this.protocolService.deleteParagraphs(removedParagraphsIds).subscribe();\n\n        if (this.form.get('nomenclatures').value.length >= 0) {\n          const send = {\n            nomenclature_ids: this.form.get('nomenclatures').value.length ? this.form.get('nomenclatures').value.map(el => el.id) : ''\n          };\n          this.protocolService.addNomenclature(send, this.form.get('id').value).subscribe(() => {\n            this.isSaving = false;\n            this.dialogRef.close(true);\n          });\n        } else {\n          this.isSaving = false;\n          this.dialogRef.close(true);\n        }\n    }\n  }\n\n  deleteFiles() {\n    this.defaultFiles.filter(file => file?.id && !this.files.find(f => f.id === file.id)).map(f => f.id).forEach(id => {\n      this.protocolService.deleteFile(id).subscribe();\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    <span *ngIf=\"!data.isShowMode\">{{data.type === 'edit' ? 'Edit' : 'Create'}} Protocol</span>\n    <span *ngIf=\"data.isShowMode\">Protocol &laquo;{{data.protocol.name}}&raquo;</span>\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"name\"> Name* </label>\n            <input pInputText formControlName=\"name\" class=\"form-control\" type=\"text\" id=\"name\">\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"comment\"> Comment* </label>\n            <input pInputText formControlName=\"comment\" class=\"form-control\" type=\"text\" id=\"comment\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"paragraphs__header mt-3 mb-1\">\n        <h4>Protocol Paragraph</h4>\n      </div>\n\n      <div [ngSwitch]=\"isLoadingParagraphs\">\n        <ng-container *ngSwitchCase=\"true\">\n          <div class=\"d-flex justify-content-center\">\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"false\">\n          <div formArrayName=\"paragraphs\" *ngIf=\"paragraphs.length > 0; else empty\">\n            <div class=\"row\"\n                 *ngFor=\"let paragraph of paragraphs.controls; let idx = index\"\n                 [formGroupName]=\"idx\"\n            >\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label [for]=\"'p-name-' + idx\"> Name* </label>\n                  <input formControlName=\"name\" class=\"form-control\" type=\"text\" [id]=\"'p-name-' + idx\" pInputText>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label [for]=\"'p-comment-' + idx\"> Comment </label>\n                  <input formControlName=\"comment\" class=\"form-control\" type=\"text\" [id]=\"'p-comment-' + idx\" pInputText>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ng-template #empty>\n            <div class=\"empty-text\">\n              There are no paragraphs of the protocol\n            </div>\n          </ng-template>\n        </ng-container>\n      </div>\n\n      <div class=\"paragraphs__header mt-4 mb-3\">\n        <h4>Nomenclatures</h4>\n        <a class=\"btn-add\" (click)=\"addNomenclature()\" *ngIf=\"!data.isShowMode\">\n          <i class=\"pi pi-plus\"></i>\n          Add Nomenclature\n        </a>\n      </div>\n\n      <div *ngIf=\"form.get('nomenclatures').value.length > 0\">\n        <p-table #dt [value]=\"form.get('nomenclatures').value\" [paginator]=\"true\" [rows]=\"10\" selectionMode=\"single\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\n              <th style=\"width: 33%\">Name</th>\n              <th style=\"width: 30%\">Code</th>\n              <th style=\"width: 20%\" class=\"text-center\">Type</th>\n              <th style=\"width: 10%\" class=\"text-right\"></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n            <tr>\n              <td style=\"width: 7%\" class=\"text-center\">{{i + 1}}</td>\n              <td style=\"width: 33%\">{{nomenclature.name}}</td>\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\n              <td style=\"width: 20%\" class=\"text-center\">{{getType(nomenclature.type)}}</td>\n              <td style=\"width: 10%\" class=\"text-right\">\n                <button class=\"btn-remove\" (click)=\"removeNomenclature(nomenclature.id)\">\n                  <i class=\"pi pi-times\"></i>\n                </button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n\n    <div class=\"paragraphs__header mt-4 mb-3\">\n      <h4>Protocol Files</h4>\n    </div>\n\n    <div class=\"protocols-files\">\n      <pek-upload-file\n        [uploadFiles]=\"files\"\n        [multiple]=\"true\"\n        (selectFile)=\"onSelectFiles($event)\"\n      ></pek-upload-file>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\nimport {Nomenclature} from '@shared/models/nomenclature';\nimport {QuerySearch} from '@shared/models/other';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {Paginator} from 'primeng/paginator';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-nomenclature-protocol-picker',\n  templateUrl: './nomenclature-protocol-picker.component.html',\n  styleUrls: ['./nomenclature-protocol-picker.component.scss']\n})\nexport class NomenclatureProtocolPickerComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  nomenclatureFilterTypes = [\n    {name: 'Manufactured', value: '2'},\n    {name: 'Assembly', value: '1'},\n    {name: 'Purchased', value: '0'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    categories: [''],\n    root_categories: [''],\n    type: [null],\n  });\n\n  isLoading = true;\n\n  currentPage = 1;\n  isStartFirstPage = false;\n\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n\n  selectedProduct: Nomenclature;\n\n  productsCount = 0;\n\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  products$: Observable<Nomenclature[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.nomenclatureService.getForPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private dialogRef: MatDialogRef<NomenclatureProtocolPickerComponent>,\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly adapterService: AdapterService,\n    @Inject(MAT_DIALOG_DATA) public data: {}\n  ) { }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'paginated', value: true},\n      {name: 'page', value: this.currentPage},\n    ];\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value) {\n        this.query.push({\n          name: key,\n          value: this.searchForm.controls[key].value\n        });\n      }\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  onSelectProduct() {\n    this.dialogRef.close(this.selectedProduct)\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onSelectCategories(ids: string) {\n    this.searchForm.get('categories').patchValue(ids)\n    this.search$.next()\n  }\n\n  onSelectRootCategories(ids: string) {\n    this.searchForm.get('root_categories').patchValue(ids)\n    this.search$.next()\n  }\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">Choice Nomenclature</h2>\n</div>\n\n<form [formGroup]=\"searchForm\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          pInputText\n          formControlName=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"name\"\n          (ngModelChange)=\"name$.next()\"\n        />\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label for=\"code\">Code</label>\n        <input\n          pInputText\n          formControlName=\"code\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"code\"\n          (ngModelChange)=\"code$.next()\"\n        />\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label>Type</label>\n        <p-dropdown\n          formControlName=\"type\"\n          [options]=\"nomenclatureFilterTypes\"\n          placeholder=\"Type\"\n          optionLabel=\"name\"\n          optionValue=\"value\"\n          [showClear]=\"true\"\n          (ngModelChange)=\"search$.next()\"\n        >\n        </p-dropdown>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label>Categories</label>\n        <pek-multi-categories-picker (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-categories-picker>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label>Root Categories</label>\n        <pek-multi-product-structure-categories-picker (choiceCategories)=\"onSelectRootCategories($event)\"></pek-multi-product-structure-categories-picker>\n      </div>\n    </div>\n  </div>\n</form>\n\n<div class=\"table-pagination-preloader\">\n  <mat-dialog-content>\n    <p-table\n      [scrollable]=\"true\"\n      #dt\n      selectionMode=\"single\"\n      dataKey=\"id\"\n      rowExpandMode=\"single\"\n      [rows]=\"10\"\n      [value]=\"products$ | async\"\n      [(selection)]=\"selectedProduct\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th style=\"width: 5%\" class=\"text-center\">#</th>\n          <th style=\"width: 20%\">Name</th>\n          <th style=\"width: 30%\">Code</th>\n          <th style=\"width: 10%\"  class=\"text-center\">Uom</th>\n          <th style=\"width: 20%\"  class=\"text-center\">Technology</th>\n          <th style=\"width: 15%\" class=\"text-center\">Category</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n        <tr\n          [pSelectableRow]=\"product\"\n        >\n          <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n          <td style=\"width: 20%\" class=\"word-break\">\n            {{ product.code }}\n          </td>\n          <td style=\"width: 30%\">\n                  <span\n                    *ngIf=\"product.approved === '0' && product.type === '0'\"\n                    class=\"badge badge_warning\"\n                    style=\"margin-right: 0.25rem\"\n                  >\n                    NEW\n                  </span>\n            {{ product.name }}\n          </td>\n          <td class=\"word-break text-center\" style=\"width: 10%\" >{{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\n          <td class=\"text-center\" style=\"width: 20%\">\n            <div *ngFor=\"let technology of product.technologies\">\n              {{technology.name}}\n            </div>\n          </td>\n        <td class=\"text-center\" style=\"width: 15%\">\n          {{product.category?.name}}\n        </td>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n    </div>\n  </mat-dialog-content>\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <div\n    class=\"paginator-wrapper\"\n    [class.paginator-wrapper_hide]=\"productsCount === 0\"\n  >\n    <p-paginator\n      #paginator\n      [rows]=\"10\"\n      [totalRecords]=\"productsCount\"\n      (onPageChange)=\"paginate($event)\"\n    >\n    </p-paginator>\n  </div>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Choice\"\n    [disabled]=\"!selectedProduct\"\n    (click)=\"onSelectProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {EInvoiceProductQualityControl} from '../../../procurement/models/invoice-product';\r\n\r\n@Component({\r\n  selector: 'pek-quality-control-modal',\r\n  templateUrl: './quality-control-modal.component.html',\r\n  styleUrls: ['./quality-control-modal.component.scss']\r\n})\r\nexport class QualityControlModalComponent implements OnInit {\r\n  form: FormGroup;\r\n  quantity: number;\r\n  isPending = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<QualityControlModalComponent>,\r\n    private fb: FormBuilder,\r\n    private invoiceProductService: InvoiceProductService,\r\n    private orderProductService: OrderProductService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: any, entity: any, isOwnProduction: boolean }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.data.entity.id],\r\n      passed_quantity: [this.data.entity.passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\r\n      not_passed_quantity: [this.data.entity.not_passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\r\n    });\r\n\r\n    this.quantity = this.data.entity.quantity;\r\n  }\r\n\r\n  onComplete() {\r\n    if (this.form.valid) {\r\n      if (this.form.value.passed_quantity + this.form.value.not_passed_quantity === this.data.entity.quantity) {\r\n        if (this.form.value.passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PASSED));\r\n        } else if (this.form.value.not_passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.NOT_PASSED));\r\n        } else if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PARTLY_PASSED));\r\n        }\r\n      }\r\n\r\n      this.isPending = true;\r\n\r\n      if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\r\n        if (this.data.isOwnProduction) {\r\n          this.orderProductService.updatePartly(this.form.value).subscribe(() => {\r\n            this.isPending = false;\r\n            this.dialogRef.close(true);\r\n          });\r\n        } else {\r\n          this.invoiceProductService.updatePartly(this.form.value).subscribe(() => {\r\n            this.isPending = false;\r\n            this.dialogRef.close(true);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  isDisableCompleteButton() {\r\n    return +this.form.get('passed_quantity').value + +this.form.get('not_passed_quantity').value !== +this.quantity;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Quality Control (Name: {{data.entity.nomenclature.name}}, Quantity: {{data.entity.quantity}})\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"passed\"> Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.quantity}}\"\r\n        type=\"number\"\r\n        id=\"passed\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"np\"> Not Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"not_passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.quantity}}\"\r\n        type=\"number\"\r\n        id=\"np\"\r\n      >\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-success\" [disabled]=\"form.invalid || isDisableCompleteButton()\" (click)=\"onComplete()\" [loading]=\"isPending\"></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {EInvoiceProductQualityControl} from '../../../procurement/models/invoice-product';\nimport {OrderTechnicalEquipmentsService} from '../../../warehouse/services/order-technical-equipments.service';\n\n@Component({\n  selector: 'pek-quality-control-technical-equipment',\n  templateUrl: './quality-control-technical-equipment.component.html',\n  styleUrls: ['./quality-control-technical-equipment.component.scss']\n})\nexport class QualityControlTechnicalEquipmentComponent implements OnInit {\n  form: FormGroup;\n  quantity: number;\n  isPending = false;\n\n  constructor(\n    private dialogRef: MatDialogRef<QualityControlTechnicalEquipmentComponent>,\n    private fb: FormBuilder,\n    private invoiceProductService: InvoiceProductService,\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\n    private orderProductService: OrderProductService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: any, entity: any, isOwnProduction: boolean }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      id: [this.data.entity.id],\n      passed_quantity: [this.data.entity.passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\n      not_passed_quantity: [this.data.entity.not_passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\n    });\n    this.quantity = this.data.entity.quantity;\n  }\n\n  isDisableCompleteButton() {\n    return +this.form.get('passed_quantity').value + +this.form.get('not_passed_quantity').value !== +this.quantity;\n  }\n\n  onComplete() {\n    if (this.form.valid) {\n      this.isPending = true;\n      if (this.form.value.passed_quantity + this.form.value.not_passed_quantity === this.data.entity.quantity) {\n        if (this.form.value.passed_quantity === this.data.entity.quantity) {\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PASSED));\n        } else if (this.form.value.not_passed_quantity === this.data.entity.quantity) {\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.NOT_PASSED));\n        } else if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PARTLY_PASSED));\n        }\n      }\n      if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\n        if (this.data.isOwnProduction) {\n          this.orderTechnicalEquipmentsService.updatePartly(this.form.value).subscribe(() => {\n            this.isPending = false;\n            this.dialogRef.close(true);\n          });\n        }\n      }\n    }\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Quality Control (Name: {{data.entity.nomenclature.name}}, Quantity: {{data.entity.quantity}})\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"passed\"> Passed* </label>\n      <input\n        pInputText\n        formControlName=\"passed_quantity\"\n        class=\"form-control\"\n        min=\"0\"\n        max=\"{{data.entity.quantity}}\"\n        type=\"number\"\n        id=\"passed\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"np\"> Not Passed* </label>\n      <input\n        pInputText\n        formControlName=\"not_passed_quantity\"\n        class=\"form-control\"\n        min=\"0\"\n        max=\"{{data.entity.quantity}}\"\n        type=\"number\"\n        id=\"np\"\n      >\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-success\" [disabled]=\"form.invalid || isDisableCompleteButton()\" (click)=\"onComplete()\" [loading]=\"isPending\"></button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QcRouting } from './qc.routing';\r\nimport { QcListComponent } from './components/qc-list/qc-list.component';\r\nimport { QcLayoutComponent } from './components/qc-layout/qc-layout.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport { QcInvoiceComponent } from './components/qc-invoice/qc-invoice.component';\r\nimport { QcOrderComponent } from './components/qc-order/qc-order.component';\r\nimport { QualityControlModalComponent } from './modals/quality-control-modal/quality-control-modal.component';\r\nimport { ProtocolsComponent } from './components/protocols/protocols.component';\r\nimport { CreateEditProtocolComponent } from './modals/create-edit-protocol/create-edit-protocol.component';\nimport { NomenclatureProtocolPickerComponent } from './modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component';\nimport { QualityControlTechnicalEquipmentComponent } from './modals/quality-control-technical-equipment/quality-control-technical-equipment.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QcListComponent,\r\n    QcLayoutComponent,\r\n    QcInvoiceComponent,\r\n    QcOrderComponent,\r\n    QualityControlModalComponent,\r\n    ProtocolsComponent,\r\n    CreateEditProtocolComponent,\r\n    NomenclatureProtocolPickerComponent,\r\n    QualityControlTechnicalEquipmentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    QcRouting,\r\n    SharedModule,\r\n    LayoutModule\r\n  ]\r\n})\r\nexport class QcModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {QcLayoutComponent} from './components/qc-layout/qc-layout.component';\r\nimport {QcListComponent} from './components/qc-list/qc-list.component';\r\nimport {QcOrderComponent} from './components/qc-order/qc-order.component';\r\nimport {QcInvoiceComponent} from './components/qc-invoice/qc-invoice.component';\r\nimport {ProtocolsComponent} from './components/protocols/protocols.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QcLayoutComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'list', pathMatch: 'full'},\r\n      {path: 'list', title: 'Quality Control', component: QcListComponent},\r\n      {path: 'invoice/:id', title: 'Invoice Quality Control', component: QcInvoiceComponent},\r\n      {path: 'order/:id', title: 'Order Quality Control', component: QcOrderComponent},\r\n      {path: 'protocols', title: 'Protocols', component: ProtocolsComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QcRouting { }\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {forkJoin, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {ProductQcProtocol, QcProtocol, QcProtocols, QrProtocolParagraph} from '../models/protocol';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../warehouse/models/warehouse';\nimport {\n  CreateEditWarehouseComponent\n} from '../../warehouse/modals/create-edit-warehouse/create-edit-warehouse.component';\nimport {CreateEditProtocolComponent} from '../modals/create-edit-protocol/create-edit-protocol.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Nomenclature} from '@shared/models/nomenclature';\nimport {\n  NomenclatureProtocolPickerComponent\n} from '../modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProtocolService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  getForPagination(query?: QuerySearch[]): Observable<QcProtocols> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: QcProtocols }>(this.API_URL + 'qc_protocols/' + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  get(query?: QuerySearch[]): Observable<QcProtocol[]> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: QcProtocol[] }>(this.API_URL + 'qc_protocols/' + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  getOne(id): Observable<QcProtocol> {\n    return this.httpClient.get<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${id}/`).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  create(send): Observable<QcProtocol> {\n    return this.httpClient.post<{ data: QcProtocol }>(this.API_URL + 'qc_protocols/', send).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  update(send): Observable<QcProtocol> {\n    return this.httpClient.patch<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${send.id}/`, send).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  addParagraphs(paragraphs): Observable<QrProtocolParagraph[]> {\n    return forkJoin(...paragraphs.map(paragraph => this.httpClient.post<{ data: QrProtocolParagraph }>(this.API_URL + 'qc_protocol_paragraphs/', paragraph)));\n  }\n\n  updateParagraphs(paragraphs): Observable<QrProtocolParagraph[]> {\n    return forkJoin(...paragraphs.map(paragraph => this.httpClient.patch<{ data: QrProtocolParagraph }>(this.API_URL + `qc_protocol_paragraphs/${paragraph.id}/`, paragraph)));\n  }\n\n  deleteParagraphs(ids): Observable<QrProtocolParagraph[]> {\n    return forkJoin(...ids.map(id => this.httpClient.delete<{ data: QrProtocolParagraph }>(this.API_URL + `qc_protocol_paragraphs/${id}/`)));\n  }\n\n  getParagraphs(query?: QuerySearch[]): Observable<QrProtocolParagraph[]> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: QrProtocolParagraph[] }>(this.API_URL + 'qc_protocol_paragraphs/' + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  getWarehouseProducts(id: number): Observable<any> {\n    return this.httpClient.get<{ data: any }>(this.API_URL + `warehouse_products_qc_protocols/${id}/`).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  addNomenclature(send, id): Observable<any>  {\n    return this.httpClient.post<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${id}/add_protocol_to_nomenclature/`, send).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  productsToQc(send): Observable<any>  {\n    return this.httpClient.post<{ data: any }>(environment.base_url + 'procurement/warehouse_products_qc_protocols/', send).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  deleteProtocol(id): Observable<any>  {\n    return this.httpClient.delete(this.API_URL + 'qc_protocols/' + `${id}/`);\n  }\n\n  saveFile(file): Observable<any>  {\n    return this.httpClient.post<{ data: any }>(this.API_URL + 'qc_protocols_files/', file).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  deleteFile(id): Observable<any> {\n    return this.httpClient.delete(this.API_URL + `qc_protocols_files/${id}/`);\n  }\n\n  getFiles(query?: QuerySearch[]) {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: any }>(this.API_URL + `qc_protocols_files/` + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  downloadFile(id): Observable<any> {\n    return this.httpClient.get(this.API_URL + 'qc_protocols_files/' + id + '/download/', {responseType: 'blob'});\n  }\n\n  qcSerial(send): Observable<any> {\n    return this.httpClient.post(this.API_URL + 'create_update_product_by_serial/', send);\n  }\n\n  qcSerialUpdate(send): Observable<any> {\n    return this.httpClient.patch(this.API_URL + 'create_update_product_by_serial/', send);\n  }\n\n  getProductsQcProtocols(query?: QuerySearch[]): Observable<ProductQcProtocol[]> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: ProductQcProtocol[] }>(this.API_URL + 'warehouse_products_qc_protocols/' + qString).pipe(\n      map(response =>\n        response.data)\n    );\n  }\n\n  updateProductProtocol(send: any, id: number) {\n    return this.httpClient.patch<{ data: any[] }>(this.API_URL + `warehouse_products_qc_protocols/${id}/`, send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditProtocolModal(type: ModalActionType, protocol?: QcProtocol): Observable<QcProtocol> {\n    return this.dialog\n      .open<CreateEditProtocolComponent>(CreateEditProtocolComponent, {\n        width: '60rem',\n        height: 'auto',\n        data: {type, protocol},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  addNomenclatureDialog(): Observable<Nomenclature> {\n    return this.dialog\n      .open<NomenclatureProtocolPickerComponent>(NomenclatureProtocolPickerComponent, {\n        width: '70rem',\n        height: 'auto',\n        data: {},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {QualityControlModalComponent} from '../modals/quality-control-modal/quality-control-modal.component';\r\nimport {\r\n  QualityControlTechnicalEquipmentComponent\r\n} from '../modals/quality-control-technical-equipment/quality-control-technical-equipment.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QcService {\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  controlProduct(entity: any, isOwnProduction = false) {\r\n    return this.dialog\r\n      .open<QualityControlModalComponent>(QualityControlModalComponent, {\r\n        width: '50rem',\r\n        data: {type: 'edit', entity, isOwnProduction},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  controlTechnicalEquipment(entity: any, isOwnProduction = false) {\r\n    return this.dialog\r\n      .open<QualityControlTechnicalEquipmentComponent>(QualityControlTechnicalEquipmentComponent, {\r\n        width: '50rem',\r\n        data: {type: 'edit', entity, isOwnProduction},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","iif","switchMap","filter","map","tap","UntilDestroy","untilDestroyed","i0","ctx_r6","ProtocolsComponent","constructor","protocolService","modalService","label","items","icon","command","editProtocol","removeProtocol","name","value","currentPage","search$","pipe","isLoading","prepareForSearch","isShowAll","getForPagination","query","response","protocolsCount","count","results","get","products","length","protocols","ngOnInit","paginate","event","isStartFirstPage","page","next","onShowAll","selectedProtocol","push","confirm","subscribe","res","deleteProtocol","id","onCreateProtocol","createEditProtocolModal","Boolean","selectors","viewQuery","ctx","environment","QcInvoiceComponent","invoiceService","orderProductService","invoiceProductService","qrCodeService","qcService","route","albumService","router","link_url","paramMap","params","invoiceId","getInvoice","getInvoiceProducts","getById","invoice","getTechnicalEquipmentToQc","invoiceProducts","selectedInvoiceProducts","isLoadingProducts","invoiceCanBeCompleted","find","p","quality_control","isLoadingTechnicalEquipment","technicalEquipments","order","getTechnicalEquipmentToQC","equipment","onGenerateQrCodes","isGenerating","send","by_nomenclatures_list","forEach","nomenclature_id","nomenclature","serial_number_ids","bulk_or_serial","serial_numbers","s","order_product_ids","invoice_product_ids","generateQrCodes","self_serial_number","onCancellation","isCancellation","cancellation","navigate","relativeTo","onComplete","qc_completed","isCompleting","updatePartly","onCompleteItems","sendProducts","qc_protocol","product","not_passed_quantity","passed_quantity","quantity","isCompletingProducts","severalUpdatePartly","onShowImages","showImageGallery","onQualityControl","currentCount","controlProduct","onPrintAlbum","getNomenclaturesImages","goToOrder","link","accounting_type","window","open","onQualityControlTechnicalEquipment","controlTechnicalEquipment","selectedTechnicalEquipment","decls","vars","consts","template","_r15","ctx_r3","QcOrderComponent","orderService","orderId","getOrder","getOrderProducts","orderProducts","selectedOrderProducts","getQc","orderCanBeCompleted","onRework","isReworking","ids","reworkOrder","onReworkProduct","isReworkingProduct","reworkOrderProduct","index","findIndex","o","splice","MAT_DIALOG_DATA","Subject","debounceTime","distinctUntilChanged","NomenclatureProtocolPickerComponent","dialogRef","fb","nomenclatureService","adapterService","data","group","code","categories","root_categories","type","generateQueryKey","searchForm","productsCount","paginateToFistPage","name$","code$","selectedProduct","newQueryKey","queryKey","key","controls","paginator","changePage","onSelectProduct","close","onSelectCategories","patchValue","onSelectRootCategories"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}