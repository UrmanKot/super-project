{"version":3,"file":"src_app_qc_qc_module_ts.js","mappings":"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","sources":["./src/app/qc/components/protocols/protocols.component.ts","./src/app/qc/components/protocols/protocols.component.html","./src/app/qc/components/qc-delivery-chain-print-page/qc-delivery-chain-print-page.component.ts","./src/app/qc/components/qc-delivery-chain-print-page/qc-delivery-chain-print-page.component.html","./src/app/qc/components/qc-delivery-chain/qc-delivery-chain.component.ts","./src/app/qc/components/qc-delivery-chain/qc-delivery-chain.component.html","./src/app/qc/components/qc-delivery-list/qc-delivery-list.component.ts","./src/app/qc/components/qc-delivery-list/qc-delivery-list.component.html","./src/app/qc/components/qc-delivery-print-page/qc-delivery-print-page.component.ts","./src/app/qc/components/qc-delivery-print-page/qc-delivery-print-page.component.html","./src/app/qc/components/qc-delivery/qc-delivery.component.ts","./src/app/qc/components/qc-delivery/qc-delivery.component.html","./src/app/qc/components/qc-invoice/qc-invoice.component.ts","./src/app/qc/components/qc-invoice/qc-invoice.component.html","./src/app/qc/components/qc-layout/qc-layout.component.ts","./src/app/qc/components/qc-layout/qc-layout.component.html","./src/app/qc/components/qc-list/qc-list.component.ts","./src/app/qc/components/qc-list/qc-list.component.html","./src/app/qc/components/qc-order/qc-order.component.ts","./src/app/qc/components/qc-order/qc-order.component.html","./src/app/qc/modals/create-edit-protocol/create-edit-protocol.component.ts","./src/app/qc/modals/create-edit-protocol/create-edit-protocol.component.html","./src/app/qc/modals/found-product-in-qc/found-product-in-qc.component.ts","./src/app/qc/modals/found-product-in-qc/found-product-in-qc.component.html","./src/app/qc/modals/move-qc-with-protocol/move-qc-with-protocol.component.ts","./src/app/qc/modals/move-qc-with-protocol/move-qc-with-protocol.component.html","./src/app/qc/modals/move-qc-with-serial/move-qc-with-serial.component.ts","./src/app/qc/modals/move-qc-with-serial/move-qc-with-serial.component.html","./src/app/qc/modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component.ts","./src/app/qc/modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component.html","./src/app/qc/modals/quality-control-modal/quality-control-modal.component.ts","./src/app/qc/modals/quality-control-modal/quality-control-modal.component.html","./src/app/qc/modals/quality-control-technical-equipment/quality-control-technical-equipment.component.ts","./src/app/qc/modals/quality-control-technical-equipment/quality-control-technical-equipment.component.html","./src/app/qc/qc.module.ts","./src/app/qc/qc.routing.ts","./src/app/qc/services/protocol.service.ts","./src/app/qc/services/qc.service.ts"],"sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {Table} from 'primeng/table';\r\nimport {QcProtocol} from '../../models/protocol';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ProtocolService} from '../../services/protocol.service';\r\nimport {BehaviorSubject, iif, Observable, switchMap} from 'rxjs';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ModalService} from '@shared/services/modal.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-protocols',\r\n  templateUrl: './protocols.component.html',\r\n  styleUrls: ['./protocols.component.scss']\r\n})\r\nexport class ProtocolsComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('dt') dt: Table;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Protocol',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.editProtocol()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.removeProtocol()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  isLoading = true;\r\n  isShowAll = false;\r\n\r\n  protocolsCount = 0;\r\n  isStartFirstPage = false;\r\n\r\n  selectedProtocol: QcProtocol;\r\n\r\n  currentPage = 1;\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'paginated', value: true},\r\n    {name: 'page', value: this.currentPage},\r\n  ];\r\n\r\n  protocols$: Observable<QcProtocol[]> = this.search$.pipe(\r\n    tap(() => this.isLoading = true),\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() =>\r\n      iif(() =>\r\n          !this.isShowAll,\r\n        this.protocolService.getForPagination(this.query).pipe(\r\n          tap(response => this.protocolsCount = response.count),\r\n          map(response => response.results),\r\n        ),\r\n        this.protocolService.get(this.query).pipe(\r\n          tap(products => this.protocolsCount = products.length),\r\n          map(protocols => protocols)\r\n        )\r\n      ),\r\n    ),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this),\r\n  );\r\n\r\n  constructor(\r\n    private readonly protocolService: ProtocolService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  paginate(event: any) {\r\n    if (!this.isStartFirstPage) {\r\n      this.currentPage = event.page + 1;\r\n      this.search$.next();\r\n    }\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.isShowAll = value;\r\n\r\n    if (!this.isShowAll) {\r\n      this.currentPage = 1;\r\n    }\r\n\r\n    this.search$.next();\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.selectedProtocol = null;\r\n\r\n    this.query = [\r\n      {name: 'page', value: this.currentPage},\r\n    ];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query.push({name: 'paginated', value: true});\r\n    }\r\n  }\r\n\r\n  removeProtocol() {\r\n    this.modalService.confirm('danger').subscribe(res => {\r\n      if (res) {\r\n        this.protocolService.deleteProtocol(this.selectedProtocol.id).subscribe(() => this.search$.next());\r\n        this.selectedProtocol = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateProtocol() {\r\n    this.protocolService.createEditProtocolModal('create').pipe(\r\n      filter(value => Boolean(value)),\r\n      tap(() => this.search$.next())\r\n    ).subscribe()\r\n  }\r\n\r\n  editProtocol() {\r\n    this.protocolService.createEditProtocolModal('edit', this.selectedProtocol).pipe(\r\n      filter(value => Boolean(value)),\r\n      tap(() => this.search$.next())\r\n    ).subscribe()\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Protocols</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Protocol\" (click)=\"onCreateProtocol()\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form>\r\n      <div class=\"d-flex\">\r\n        <p class=\"subtitle\" *ngIf=\"!selectedProtocol\">Choose the Protocol to edit</p>\r\n        <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedProtocol\"></p-menubar>\r\n      </div>\r\n    </form>\r\n    <div class=\"table-pagination-preloader\">\r\n      <p-table\r\n        #dt\r\n        [value]=\"protocols$ | async\"\r\n        [rows]=\"10\"\r\n        [scrollable]=\"true\"\r\n        selectionMode=\"single\"\r\n        [(selection)]=\"selectedProtocol\"\r\n        scrollHeight=\"calc(100vh - 19rem)\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\r\n            <th style=\"width: 45%\">Name</th>\r\n            <th style=\"width: 50%\">Comment</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-protocol let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"protocol\">\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 45%\">{{protocol.name}}</td>\r\n            <td style=\"width: 50%\">{{protocol.comment}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"paginator-wrapper\"\r\n      *ngIf=\"!isShowAll\"\r\n      [class.paginator-wrapper_hide]=\"protocolsCount === 0\"\r\n    >\r\n      <p-paginator\r\n        #paginator\r\n        [rows]=\"10\"\r\n        [totalRecords]=\"protocolsCount\"\r\n        (onPageChange)=\"paginate($event)\"\r\n      >\r\n      </p-paginator>\r\n      <p-button\r\n        (click)=\"onShowAll(true)\"\r\n        class=\"paginator-all\"\r\n        type=\"button\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        All\r\n      </p-button>\r\n    </div>\r\n\r\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"onShowAll(false)\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {GroupedRequest} from '../../../warehouse/models/grouped-request';\r\nimport {OrderProductGroupedForPrint} from '../../../procurement/models/order-product';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {Locator} from '../../../warehouse/models/locator';\r\nimport {DeliveryChain} from \"../../../delivery-chains/models/delivery-chain\";\r\n\r\n@Component({\r\n  selector: 'pek-qc-delivery-chain-print-page',\r\n  templateUrl: './qc-delivery-chain-print-page.component.html',\r\n  styleUrls: ['./qc-delivery-chain-print-page.component.scss']\r\n})\r\nexport class QcDeliveryChainPrintPageComponent implements OnInit {\r\n  @Input() products: any[] = [];\r\n  @Input() orderedProducts: OrderProductGroupedForPrint[];\r\n  @Input() chain: DeliveryChain;\r\n  @Input() chainId: number;\r\n  @Input() customer: any;\r\n  @Input() currentReqDate: Date = null;\r\n  @Input() locators: Locator[] = [];\r\n\r\n  currentDate = new Date();\r\n\r\n  constructor(\r\n    public readonly auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  protected readonly Nomenclature = Nomenclature;\r\n\r\n  getNomenclature(nomenclature: Nomenclature | number): Nomenclature {\r\n    return nomenclature as Nomenclature;\r\n  }\r\n\r\n  translateLocator(id: number) {\r\n    if (!this.locators) {\r\n      return id;\r\n    }\r\n    const locator = this.locators.find(loc => loc.id === id);\r\n    return `${locator.name} R:${locator.row} C:${locator.column} S:${locator.shelf} P:${locator.place}`;\r\n  }\r\n}\r\n","<div class=\"qc-delivery-chain-print-page\">\r\n  <div class=\"qc-delivery-chain-print-page__header\">\r\n    <div>\r\n      <h2>Delivery Chain ID</h2>\r\n      <p>{{chain.id}}</p>\r\n    </div>\r\n    <div>\r\n      <h2></h2>\r\n      <p></p>\r\n    </div>\r\n    <div>\r\n      <h2>Delivery Chain Creation Date</h2>\r\n      <p>{{chain?.created_at | date: 'dd.MM.y' }}</p>\r\n    </div>\r\n        \r\n  </div>\r\n\r\n  <div *ngIf=\"customer\">\r\n    <div class=\"qc-delivery-chain-print-page__table\">\r\n      <div>\r\n        <h2 style=\"white-space: nowrap\">Customer</h2>\r\n        <div class=\"qc-delivery-chain-print-page__box\">\r\n        <div class=\"qc-delivery-chain-print-page__col_double\">\r\n          <h4>Company Name: {{ chain?.customer?.name }}</h4>\r\n          <h4>Address: {{ chain?.customer?.address }}</h4>\r\n          <h4>Email: {{ chain?.customer?.email }}</h4>\r\n          <h4>Phone Number: {{ chain?.customer?.phone_number }}</h4>\r\n          <h4>Website: {{ chain?.customer?.website }}</h4>\r\n          <h4>Tax Number: {{ chain?.customer?.tax_number }}</h4>\r\n          <h4>Register Number: {{ chain?.customer?.registration_number }}</h4>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col_double\">\r\n          <h4>Nomenclature: {{ chain?.customer?.supplier_nomenclature }}</h4>\r\n          <h4>Description: {{ chain?.customer?.comment }}</h4>\r\n          <h4>\r\n            Country:\r\n            <span *ngIf=\"chain?.customer?.country\">{{chain?.customer?.country?.name}}</span>\r\n          </h4>\r\n          <h4>\r\n            Region:\r\n            <span *ngIf=\"chain?.customer?.region\">{{chain.customer?.region?.name}}</span>\r\n          </h4>\r\n          <h4>\r\n            Status:\r\n            <span>{{chain?.status.name | uppercase}} - {{chain?.estimate_date | date:'dd.MM.yyyy'}} </span>\r\n          </h4>\r\n          <h4>\r\n            Comment: {{chain?.comment}}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"qc-delivery-chain-print-page__table\">\r\n    <div\r\n      *ngFor=\"let product of products\"\r\n      class=\"qc-delivery-chain-print-page__row\"\r\n    >\r\n      <div class=\"qc-delivery-chain-print-page__box\">\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Serial number</h3>\r\n          <p>{{product.warehouse_product.serial_number?.type_with_number}}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Code</h3>\r\n          <p>{{product.warehouse_product.nomenclature.code}}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Name</h3>\r\n          <p>{{product.warehouse_product.nomenclature.name}}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Quantity</h3>\r\n          <p>{{product.quantity}}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Locator</h3>\r\n          <p>{{ translateLocator(product.warehouse_product.locator) }}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-chain-print-page__col\">\r\n          <h3>Status</h3>\r\n          <p>{{product.qc_delivery_status?.name}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"qc-delivery-chain-print-page__col\">\r\n        <h3>Quantity</h3>\r\n        <p>_________</p>\r\n      </div>\r\n      <div class=\"qc-delivery-chain-print-page__col\">\r\n        <h3>Packing</h3>\r\n        <p>_________</p>\r\n      </div>\r\n    </div>\r\n\r\n  <div class=\"qc-delivery-chain-print-page__bottom\">\r\n    <div class=\"qc-delivery-chain-print-page__column\">\r\n      <div class=\"qc-delivery-chain-print-page__left\">\r\n        <div>\r\n          <h3>Sent</h3>\r\n          <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"qc-delivery-chain-print-page__right\">\r\n        <div>\r\n          <h3>Retrieved</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n","import {Component, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {SalesChainService} from '../../../sales/services/sales-chain-service';\r\nimport {DeliveryChainService} from '../../../warehouse/services/delivery-chain.service';\r\nimport {Table} from 'primeng/table';\r\nimport {environment} from '@env/environment';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {GroupedRequest} from '../../../warehouse/models/grouped-request';\r\nimport {SalesReservation} from '../../../sales/models/sales-chain';\r\nimport {LocatorService} from '../../../warehouse/services/locator.service';\r\nimport {Locator} from '../../../warehouse/models/locator';\r\nimport {DeliveryChain} from \"../../../delivery-chains/models/delivery-chain\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-qc-delivery-chain',\r\n  templateUrl: './qc-delivery-chain.component.html',\r\n  styleUrls: ['./qc-delivery-chain.component.scss']\r\n})\r\nexport class QcDeliveryChainComponent implements OnInit, OnDestroy {\r\n  @ViewChild('dt') dateTable: Table;\r\n  link = environment.link_url + 'dash/';\r\n\r\n  isShowPrint = false;\r\n\r\n  destroy$ = new Subject();\r\n\r\n  qc_delivery_status: any;\r\n\r\n  QC_STAGES = {\r\n    \"qty_control\": 1,\r\n    \"packing_control\": 2,\r\n    \"done\": 3\r\n  };\r\n\r\n  currentReqDate: Date = null;\r\n  selectedProducts: SalesReservation | SalesReservation[] | any = null;\r\n\r\n  isLoading = true;\r\n  chain: DeliveryChain;\r\n  products: SalesReservation[] = [];\r\n  locators: Locator[] = [];\r\n  listProducts: SalesReservation[] = [];\r\n  chainId: number = parseInt(this.route.snapshot.paramMap.get('id'));\r\n  firstPage = 0;\r\n\r\n  constructor(\r\n    private deliveryService: DeliveryChainService,\r\n    private salesChainService: SalesChainService,\r\n    public readonly auth: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private readonly modalService: ModalService,\r\n    private readonly locatorService: LocatorService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDeliveryChain();\r\n    this.getItems();\r\n    this.getLocators();\r\n  }\r\n\r\n  getDeliveryChain() {\r\n    this.deliveryService.getChainById(this.chainId).subscribe(chain => {\r\n      this.chain = chain;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getLocators() {\r\n    this.locatorService.get().subscribe(locators => {\r\n      this.locators = locators;\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.selectedProducts = [];\r\n    this.deliveryService.getDeliveryItems(this.chainId).subscribe(products => {\r\n      this.products = products;\r\n    });\r\n  }\r\n\r\n  complete() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isLoading = false;\r\n        this.deliveryService.completeDeliveryQc(+this.chainId).pipe(untilDestroyed(this)).subscribe(() => this.router.navigate(['../../'], {relativeTo: this.route}));\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateItems(product: SalesReservation, qc_stage: number, confirmation_flag: boolean) {\r\n    let listId = []\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      listId.push(product.id);\r\n      const requestData = {\r\n        \"reservation_ids\": listId,\r\n        \"chain_qc_delivery_status_id\": this.chain.qc_delivery_status.id,\r\n        \"confirmation_flag\": confirmation_flag,\r\n        \"qc_stage\": qc_stage\r\n      }\r\n      this.salesChainService.updateItem(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n        this.getDeliveryChain();\r\n        this.getItems();\r\n      });\r\n    })\r\n  }\r\n\r\n  onResetConfirmation() {\r\n    let listId = []\r\n    this.selectedProducts.forEach(product => {\r\n      listId.push(product.id);\r\n    });\r\n    const requestData = {\r\n      \"reservation_ids\": listId,\r\n    }\r\n    this.salesChainService.resetConfirmation(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n      this.getDeliveryChain();\r\n      this.getItems();\r\n    });\r\n  }\r\n\r\n  onCompleteMaterialQcList(qc_stage: number) {\r\n    let listId = []\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.selectedProducts.forEach(product => {\r\n        listId.push(product.id);\r\n      });\r\n      const requestData = {\r\n        \"reservation_ids\": listId,\r\n        \"qc_stage\": qc_stage,\r\n      }\r\n      this.salesChainService.updateItem(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n        this.getDeliveryChain();\r\n        this.getItems();\r\n      });\r\n    })\r\n  }\r\n\r\n  onGoToChainLink() {\r\n    window.open(`/delivery-chains/chains/${this.chainId}`);\r\n  }\r\n\r\n  printPage() {\r\n    this.isShowPrint = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  @HostListener(\"window:afterprint\", [])\r\n  onWindowAfterPrint() {\r\n    this.isShowPrint = false;\r\n  }\r\n\r\n  @HostListener('afterprint') printClosed() {\r\n    this.isShowPrint = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  translateLocator(id: number) {\r\n    if (!this.locators) {\r\n      return id;\r\n    }\r\n    const locator = this.locators.find(loc => loc.id === id);\r\n    return `${locator.name} R:${locator.row} C:${locator.column} S:${locator.shelf} P:${locator.place}`;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n    <div class=\"page__header\">\r\n      <div class=\"page__title\">\r\n        <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n        <h1>\r\n          Products for Delivery Chain \r\n          <a\r\n          *ngIf=\"!isLoading\"\r\n          (click)=\"onGoToChainLink()\"\r\n        >\r\n            #{{chain?.serial_number}}\r\n            </a>\r\n        </h1>\r\n      </div>\r\n      <div class=\"page__tools\">\r\n        <button\r\n          [loading]=\"isLoading\"\r\n          pButton\r\n          class=\"p-button-success mr-2\"\r\n          type=\"button\"\r\n          label=\"Print\"\r\n          (click)=\"printPage()\"\r\n        >\r\n        </button>\r\n        <button\r\n          pButton\r\n          type=\"button\"\r\n          class=\"p-button-icon mr-2\"\r\n          icon=\"pi pi-check\"\r\n          label=\"Complete\"\r\n          (click)=\"complete()\"\r\n          [disabled]=\"!chain?.qc_delivery_status?.is_qc_completed\"\r\n        ></button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <div class=\"page__table\">\r\n        <p-table selectionMode=\"single\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"table-tools\">\r\n              <h2 class=\"subtitle\">Customer</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-5\">\r\n                <h4>Company Name: {{ chain?.customer?.name }}</h4>\r\n                <h4>Address: {{ chain?.customer?.address }}</h4>\r\n                <h4>Email: {{ chain?.customer?.email }}</h4>\r\n                <h4>Phone Number: {{ chain?.customer?.phone_number }}</h4>\r\n                <h4>Website: {{ chain?.customer?.website }}</h4>\r\n                <h4>Tax Number: {{ chain?.customer?.tax_number }}</h4>\r\n                <h4>Register Number: {{ chain?.customer?.registration_number }}</h4>\r\n              </div>\r\n              <div class=\"col-md-7\">\r\n                <h4>Nomenclature: {{ chain?.customer?.supplier_nomenclature }}</h4>\r\n                <h4>Description: {{ chain?.customer?.comment }}</h4>\r\n                <h4>\r\n                  Country:\r\n                  <span *ngIf=\"chain?.customer?.country\">{{chain?.customer?.country?.name}}</span>\r\n                </h4>\r\n                <h4>\r\n                  Region:\r\n                  <span *ngIf=\"chain?.customer?.region\">{{chain.customer?.region?.name}}</span>\r\n                </h4>\r\n                <h4>\r\n                  Status:\r\n                  <span>{{chain?.status.name | uppercase}} - {{chain?.estimate_date | date:'dd.MM.yyyy'}} </span>\r\n                </h4>\r\n                <h4>\r\n                  Comment: {{chain?.comment}}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <ng-container>\r\n        <div class=\"page__table\">\r\n          <p-table\r\n            #dt\r\n            [paginator]=\"products.length > 0\"\r\n            scrollHeight=\"calc(100vh - 18.8rem)\"\r\n            [scrollable]=\"!dt.paginator\"\r\n            class=\"adaptive-table print-table\"\r\n            [rows]=\"10\"\r\n            [value]=\"products\"\r\n            [(first)]=\"firstPage\"\r\n            [globalFilterFields]=\"['name']\"\r\n            dataKey=\"id\"\r\n            [(selection)]=\"selectedProducts\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex table-caption\">\r\n                <p class=\"subtitle\" *ngIf=\"!selectedProducts\">Choose the Product to edit</p>\r\n  \r\n                <button\r\n                class=\"ml-auto mr-2 p-button-success\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-check\"\r\n                label=\"QTY Confirm\"\r\n                [disabled]=\"selectedProducts?.length === 0 || chain.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onCompleteMaterialQcList(QC_STAGES['qty_control'])\"\r\n              >\r\n              </button>\r\n  \r\n              <button\r\n                class=\"mr-2 p-button-success\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-check\"\r\n                label=\"Packing Confirm\"\r\n                [disabled]=\"selectedProducts?.length === 0 || chain.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onCompleteMaterialQcList(QC_STAGES['packing_control'])\"\r\n              >\r\n              </button>\r\n  \r\n              <button\r\n                class=\"mr-2 p-button-danger\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-spinner\"\r\n                label=\"Reset Confirmation\"\r\n                [disabled]=\"selectedProducts?.length === 0 || chain.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onResetConfirmation()\"\r\n              >\r\n              </button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"colgroup\">\r\n              <colgroup>\r\n                <col class=\"index-header\">\r\n              </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 3%\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th>\r\n                <th class=\"text-center\" style=\"width: 5%;\">\r\n                  <div class=\"row-toggler\">\r\n                    #\r\n                  </div>\r\n                </th>\r\n                <th class=\"text-center\" style=\"width: 5%;\">ID</th>\r\n                <th style=\"width: 15%;\">Code</th>\r\n                <th style=\"width: 15%;\">Name</th>\r\n                <th style=\"width: 10%;\" class=\"text-center\">Serial Number</th>\r\n                <th class=\"text-center\" style=\"width: 14%;\">Quantity</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Locator</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Status</th>\r\n                <th class=\"text-center\" style=\"width: 4%;\">Quantity Confirmation</th>\r\n                <th class=\"text-center\" style=\"width: 4%;\">Packing Confirmation</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n              <tr class=\"pagebreak\" [pSelectableRow]=\"product\">\r\n                <td style=\"width: 3%\">\r\n                  <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n                </td>\r\n                <td style=\"width: 5%;\" class=\"text-center\">\r\n                  <div class=\"row-toggler\">\r\n                    <h3 class=\"td-title\">#</h3>\r\n                    {{i + 1}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 5%;\" class=\"text-center ids-container hovered-info\">\r\n                  <h3 class=\"td-title\">ID</h3>\r\n                  {{product.id}}\r\n\r\n                  <pek-hover-detailed-info-component\r\n                    [moveLeft]=\"0\"\r\n                    *ngIf=\"product.ids?.length > 0\">\r\n                  <span\r\n                    [class.is-fixed]=\"products.length <= 10\"\r\n                    [class.is-absolute]=\"products.length > 10\"\r\n                    [class.is-last]=\"products.length - 10 <= i\"\r\n                    class=\"ids\">\r\n                    <div>\r\n                      {{product.id}}\r\n                    </div>\r\n                    <div *ngFor=\"let id of product.ids\">\r\n                      {{id}}\r\n                    </div>\r\n                  </span>\r\n                  </pek-hover-detailed-info-component>\r\n\r\n                </td>\r\n                <td style=\"width: 15%;\">\r\n                  <h3 class=\"td-title\">Code</h3>\r\n                  <span>\r\n                    {{product.warehouse_product.nomenclature.code}}\r\n                  </span>\r\n                </td>\r\n                <td style=\"width: 15%;\" class=\"serial-numbers-container\">\r\n                  <h3 class=\"td-title\">Name</h3>\r\n                  <span>\r\n                    {{product.warehouse_product.nomenclature.name}}\r\n                  </span>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Serial number</h3>\r\n                  <span>\r\n                    {{product.warehouse_product.serial_number?.type_with_number}}\r\n                  </span>\r\n                </td>\r\n                <td style=\"width: 14%;\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Required Quantity</h3>\r\n                  {{product.quantity}}\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Locator</h3>\r\n                  <span>{{ translateLocator(product.warehouse_product.locator) }}</span>\r\n                </td>\r\n                <ng-container>\r\n                <td style=\"width: 10%;\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Status</h3>\r\n                  {{product.qc_delivery_status?.name}}\r\n                </td>\r\n\r\n                <td style=\"width: 4%;\"\r\n                [class.disabled]=\"chain?.qc_delivery_status?.qc_stage != 1\">\r\n                  <div class=\"table-buttons\">\r\n                    <ng-container *ngIf=\"!product.qc_delivery_status.is_qc_completed || product.qc_delivery_status.qc_stage != 1 || product.qc_delivery_status.id === 3\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-success ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-check\"\r\n                      [disabled]=\"product.qc_delivery_status.qc_stage !=1 || product.qc_delivery_status.is_qc_completed\"\r\n                      (click)=\"onUpdateItems(product, 1, true)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"(!product.qc_delivery_status.is_qc_completed && product.qc_delivery_status.qc_stage === 1) || product.qc_delivery_status.id === 2\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-danger ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-times\"\r\n                      [disabled]=\"product.qc_delivery_status.qc_stage !=1 || product.qc_delivery_status.is_qc_completed\"\r\n                      (click)=\"onUpdateItems(product, 1, false)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 4%;\"\r\n                [class.disabled]=\"product.qc_delivery_status.qc_stage != 2 && product.qc_delivery_status.id != 3\">\r\n                  <div class=\"table-buttons\">\r\n                    <ng-container *ngIf=\"!product.qc_delivery_status.is_qc_completed || product.qc_delivery_status.qc_stage != 2 || product.qc_delivery_status.id === 6\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-success ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-check\"\r\n                      [disabled]=\"(product.qc_delivery_status.qc_stage !=2 || product.qc_delivery_status.is_qc_completed) && product.qc_delivery_status.id != 3\"\r\n                      (click)=\"onUpdateItems(product, 2, true)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"(!product.qc_delivery_status.is_qc_completed && product.qc_delivery_status.qc_stage === 2) || product.qc_delivery_status.qc_stage === 1 || product.qc_delivery_status.id === 5\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-danger ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-times\"\r\n                      [disabled]=\"(product.qc_delivery_status.qc_stage !=2 || product.qc_delivery_status.is_qc_completed) && product.qc_delivery_status.id != 3\"\r\n                      (click)=\"onUpdateItems(product, 2, false)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                  </div>\r\n                </td>\r\n                </ng-container>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr class=\"tr-spinner\">\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                  <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"dt.paginator=false\"\r\n                styleClass=\"p-button-text\"\r\n              >All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n        <div *ngIf=\"!dt.paginator && !isLoading && products.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=true\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"print-page\" *ngIf=\"isShowPrint\">\r\n    <div>\r\n      <pek-qc-delivery-chain-print-page\r\n        [chain]=\"chain\"\r\n        [products]=\"products\"\r\n        [currentReqDate]=\"currentReqDate\"\r\n        [customer]=\"chain?.customer\"\r\n        [locators]=\"locators\"\r\n      ></pek-qc-delivery-chain-print-page>\r\n    </div>\r\n  </div>\r\n","import {Component, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {DeliveryChainService} from '@shared/services/delivery.service';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {QcDeliveryStatus} from '../../../procurement/models/qc-delivery-status';\r\nimport {QcDeliveryStatusService} from '../../../procurement/services/qc-delivery-status.service';\r\nimport {BehaviorSubject, Subject, takeUntil} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {environment} from '@env/environment';\r\nimport {DeliveryChain} from \"../../../delivery-chains/models/delivery-chain\";\r\n\r\ntype ViewType = 'list' | 'hierarchy'\r\n\r\n@Component({\r\n  selector: 'pek-qc-delivery-list',\r\n  templateUrl: './qc-delivery-list.component.html',\r\n  styleUrls: ['./qc-delivery-list.component.scss']\r\n})\r\nexport class QcDeliveryListComponent implements OnInit {\r\n  @Output() selectedQcDeliveryStatuses: EventEmitter<number[]> = new EventEmitter<number[]>();\r\n  orders: Order[];\r\n  deliveryChains: DeliveryChain[] = [];\r\n  qcDeliveryStatus: QcDeliveryStatus[];\r\n  link = environment.link_url + 'dash/';\r\n\r\n  statusesIds: any;\r\n\r\n  selectedOrderNode: TreeNode<Order>;\r\n\r\n  invoicesOrderType: ViewType = 'list';\r\n\r\n  isLoadingOrders = true;\r\n  isLoadingChains = true;\r\n  isLoadingStatuses = true;\r\n\r\n  showClosedOrders = false;\r\n  showClosedChains = false;\r\n\r\n  ordersList: Order[] = [];\r\n  deliveryChainsList: DeliveryChain[] = [];\r\n\r\n  selectedOrderItem: Order;\r\n  selectedDeliveryChain: DeliveryChain;\r\n\r\n  expanseMap = {};\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  private destroyOrders$ = new Subject();\r\n  private destroyChains$ = new Subject();\r\n  private destroyQcDeliveryStatuses$ = new Subject();\r\n\r\n  ordersQuery: QuerySearch[] = [\r\n    {name: 'needs_delivery_qc', value: true},\r\n    {name: 'by_qc_module_permission', value: true}\r\n  ];\r\n\r\n  chainsQuery: QuerySearch[] = [\r\n    {name: 'needs_delivery_qc', value: true},\r\n    {name: 'by_qc_module_permission', value: true}\r\n  ];\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    supplier: [null],\r\n    qc_closed_date_after: [null],\r\n    qc_closed_date_before: [null],\r\n    qc_delivery_started_date_after: [null],\r\n    qc_delivery_started_date_before: [null],\r\n    qc_delivery_closed_date_after: [null],\r\n    qc_delivery_closed_date_before: [null],\r\n    accounting_type: [null],\r\n    material_or_service: [null],\r\n    purchase_categories: [null],\r\n    qc_delivery_status: [null],\r\n    qc_delivery_status__in: [null],\r\n  });\r\n  isLoading: boolean;\r\n\r\n  constructor(\r\n    private deliveryService: DeliveryChainService,\r\n    private orderService: OrderService,\r\n    private productStructureCategoryService: ProductStructureCategoryService,\r\n    private adapterService: AdapterService,\r\n    private qcDeliveryStatusService: QcDeliveryStatusService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getQcDeliveryStatuses();\r\n    this.getDeliveryChains();\r\n    this.getServices();\r\n\r\n  }\r\n\r\n  searchItems() {\r\n    this.searchChains();\r\n    this.searchServices();\r\n  }\r\n\r\n  searchChains() {\r\n    this.isLoadingOrders = true;\r\n    this.destroyOrders$.next(true);\r\n    this.orders = [];\r\n    this.selectedOrderItem = null;\r\n    this.chainsQuery = [\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ];\r\n\r\n    if (!this.searchForm.get('qc_delivery_closed_date_after').value\r\n        && !this.searchForm.get('qc_delivery_closed_date_before').value) {\r\n      this.chainsQuery.push({\r\n        name: 'needs_delivery_qc', value: true\r\n      })\r\n      this.showClosedChains = false;\r\n    } else {\r\n      this.showClosedChains = true;\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_started_date_after').value) {\r\n      this.chainsQuery.push({\r\n        name: 'qc_delivery_started_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_started_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_started_date_before').value) {\r\n      this.chainsQuery.push({\r\n        name: 'qc_delivery_started_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_started_date_before').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_closed_date_after').value) {\r\n      this.chainsQuery.push({\r\n        name: 'qc_delivery_closed_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_closed_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_closed_date_before').value) {\r\n      this.chainsQuery.push({\r\n        name: 'qc_delivery_closed_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_closed_date_before').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_status__in').value) {\r\n      this.chainsQuery.push({\r\n        name: 'qc_delivery_status__in',\r\n        value: this.searchForm.get('qc_delivery_status__in').value\r\n      });\r\n    }\r\n    this.getDeliveryChains();\r\n  }\r\n\r\n  searchServices() {\r\n    this.isLoadingOrders = true;\r\n    this.destroyOrders$.next(true);\r\n    this.orders = [];\r\n    this.selectedOrderItem = null;\r\n    this.ordersQuery = [\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ];\r\n\r\n    if (!this.searchForm.get('qc_delivery_closed_date_after').value\r\n        && !this.searchForm.get('qc_delivery_closed_date_before').value) {\r\n      this.ordersQuery.push({\r\n        name: 'needs_delivery_qc', value: true\r\n      })\r\n      this.showClosedOrders = false;\r\n    } else {\r\n      this.showClosedOrders = true;\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_started_date_after').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_delivery_started_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_started_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_started_date_before').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_delivery_started_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_started_date_before').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_closed_date_after').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_delivery_closed_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_closed_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_closed_date_before').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_delivery_closed_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_delivery_closed_date_before').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_delivery_status__in').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_delivery_status__in',\r\n        value: this.searchForm.get('qc_delivery_status__in').value\r\n      });\r\n    }\r\n\r\n    this.getServices();\r\n  }\r\n\r\n  onChoiceQcDeliveryStatuses(statuses: number[]) {\r\n    this.searchForm.get('qc_delivery_status__in').patchValue(statuses?.join(',') || null);\r\n    this.searchItems();\r\n  }\r\n\r\n  getQcDeliveryStatuses() {\r\n    this.qcDeliveryStatusService.get().pipe(\r\n      takeUntil(this.destroyQcDeliveryStatuses$)\r\n    ).subscribe(qcDeliveryStatus => {\r\n      this.qcDeliveryStatus = qcDeliveryStatus;\r\n      this.isLoadingStatuses = false;\r\n    });\r\n  }\r\n\r\n  getDeliveryChains(): void {\r\n    this.deliveryService.get(this.chainsQuery).pipe(\r\n      takeUntil(this.destroyChains$)\r\n    ).subscribe(chains => {\r\n      // this.count = orders.length;\r\n      this.deliveryChains = chains;\r\n\r\n      // this.prepareOrderItems();\r\n\r\n      // if (this.isStartOnePage) {\r\n      //   this.paginator?.changePage(0);\r\n      // }\r\n\r\n      // this.isStartOnePage = false;\r\n      this.resetChainsList(),\r\n\r\n      this.isLoadingChains = false;\r\n    });\r\n  }\r\n\r\n  getServices(): void {\r\n    this.orderService.get(this.ordersQuery).pipe(\r\n      takeUntil(this.destroyOrders$)\r\n    ).subscribe(orders => {\r\n      this.orders = orders;\r\n      this.makeUniqueProductionPlans(),\r\n      // this.fillOwnProductionWithData(),\r\n      this.resetOrdersList(),\r\n      this.isLoadingOrders = false\r\n\r\n      this.orders.forEach(order => {\r\n        order.ordered_products_unique_technologies = [];\r\n        order.order_products.forEach(product => {\r\n          if (product.current_technology) {\r\n            const canAddTechnology = order.ordered_products_unique_technologies\r\n              .findIndex(el => el === product.current_technology.name) < 0;\r\n            if (canAddTechnology) {\r\n              order.ordered_products_unique_technologies.push(product.current_technology.name);\r\n            }\r\n          }\r\n        });\r\n      })\r\n\r\n    });\r\n  }\r\n\r\n  resetOrdersList(): void {\r\n    this.ordersList = this.orders;\r\n  }\r\n\r\n  resetChainsList(): void {\r\n    this.deliveryChainsList = this.deliveryChains;\r\n  }\r\n\r\n  makeUniqueProductionPlans(): void {\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans = [];\r\n      order.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex =\r\n            order.unique_root_production_plans\r\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            order.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSelectOrderType(view: ViewType) {\r\n    this.invoicesOrderType = view;\r\n  }\r\n\r\n  onGoToDeliveryChainLink(deliveryChainId: number) {\r\n    window.open(`/delivery-chains/chains/${deliveryChainId}`);\r\n  }\r\n\r\n  onGoToSalesChainLink(salesChainId: number) {\r\n    window.open(`/sales/sales-procurement-chains/chain-page/${salesChainId}`);\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Delivery</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__tabs\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form mb-3\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Started Date From</label>\r\n            <p-calendar\r\n              formControlName=\"qc_delivery_started_date_after\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Started Date To</label>\r\n            <p-calendar\r\n              formControlName=\"qc_delivery_started_date_before\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Status</label>\r\n            \r\n            <pek-qc-delivery-statuses-picker\r\n              (selectStatuses)=\"onChoiceQcDeliveryStatuses($event)\"\r\n            ></pek-qc-delivery-statuses-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Closed Date From</label>\r\n            <p-calendar\r\n              formControlName=\"qc_delivery_closed_date_after\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Closed Date To</label>\r\n            <p-calendar\r\n              formControlName=\"qc_delivery_closed_date_before\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <p-tabView class=\"custom-tabs\">      \r\n      <p-tabPanel header=\"Delivery to customers\">            \r\n        <ng-container *ngIf=\"invoicesOrderType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #ot\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"deliveryChainsList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedDeliveryChain\"\r\n              [value]=\"deliveryChainsList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderItem\">\r\n                    Сhoose the Outsoursing Materials Delivery to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedDeliveryChain\"\r\n                    [routerLink]=\"['chain', selectedDeliveryChain?.id]\"\r\n                    target=\"_blank\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">\r\n                    QC Started Date\r\n                  </th>\r\n                  <th style=\"width: 25%\" class=\"text-center\" *ngIf=\"showClosedChains\">\r\n                    QC Closed Date\r\n                  </th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Delivery Chain ID</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Sales Chain ID</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">Customer</th>\r\n                  <th style=\"width: 10%;\" class=\"text-center\">Status</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"order\">\r\n                  <td class=\"text-center\">{{i + 1}}</td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{order.qc_delivery_started_date | date: 'dd/MM/yyyy HH:mm'}}\r\n                  </td>\r\n                  <td style=\"width: 20%;\" class=\"text-center\" *ngIf=\"showClosedChains\">\r\n                    <span>\r\n                      {{order?.qc_delivery_closed_date | date:'dd/MM/yyyy HH:mm'}}\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <a (click)=\"onGoToDeliveryChainLink(order.id)\" target=\"_blank\">\r\n                    {{order.id}}\r\n                    </a>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <a (click)=\"onGoToSalesChainLink(order.sales_chain_id)\" target=\"_blank\">\r\n                    {{order.sales_chain_id}}\r\n                    </a>\r\n                  </td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{order.customer?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\">\r\n                    {{order.qc_delivery_status?.name}}\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingChains\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingChains\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"ot.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!ot.paginator && !isLoadingChains && ordersList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"ot.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesOrderType === 'hierarchy'\">            \r\n          In development\r\n        </ng-container>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'Outsoursing Materials Delivery'\"\r\n        [selected]=\"true\"\r\n      >\r\n\r\n        <ng-container *ngIf=\"invoicesOrderType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #ot\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"ordersList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedOrderItem\"\r\n              [value]=\"ordersList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderItem\">\r\n                    Сhoose the Outsoursing Materials Delivery to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedOrderItem\"\r\n                    [routerLink]=\"['../', 'delivery', selectedOrderItem?.id]\"\r\n                    target=\"_blank\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">\r\n                    QC Started Date\r\n                  </th>\r\n                  <th style=\"width: 25%\" class=\"text-center\" *ngIf=\"showClosedOrders\">\r\n                    QC Closed Date\r\n                  </th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <!-- <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th> -->\r\n                  <th style=\"width: 20%;\">Root List</th>\r\n                  <th style=\"width: 20%;\" class=\"text-center\">Technologies</th>\r\n                  <th style=\"width: 10%;\" class=\"text-center\">Status</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"order\">\r\n                  <td class=\"text-center\">{{i + 1}}</td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{order.qc_material_started_date | date: 'dd/MM/yyyy HH:mm'}}\r\n                  </td>\r\n                  <td style=\"width: 20%;\" class=\"text-center\" *ngIf=\"showClosedOrders\">\r\n                    <span>\r\n                      {{order?.qc_material_closed_date | date:'dd/MM/yyyy HH:mm'}}\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{order.id}}\r\n                  </td>\r\n\r\n                  <td style=\"width: 20%;\">\r\n                    <div *ngFor=\"let root_plan of order.unique_root_production_plans\">\r\n                      {{root_plan.list_product.nomenclature.code}}~{{root_plan.list_product.nomenclature.name}}\r\n                    </div>\r\n                  </td>\r\n                  <td style=\"width: 20%;\">\r\n                    <span *ngFor=\"let tech of order.ordered_products_unique_technologies; let last=last\">\r\n                      {{tech}}<span *ngIf=\"!last\">,</span>\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\">\r\n                    {{order.qc_delivery_status?.name}}\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"ot.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!ot.paginator && !isLoadingOrders && ordersList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"ot.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesOrderType === 'hierarchy'\">            \r\n          In development\r\n        </ng-container>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {GroupedRequest} from '../../../warehouse/models/grouped-request';\r\nimport {OrderProductGroupedForPrint} from '../../../procurement/models/order-product';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {Locator} from '../../../warehouse/models/locator';\r\n\r\n@Component({\r\n  selector: 'pek-qc-delivery-print-page',\r\n  templateUrl: './qc-delivery-print-page.component.html',\r\n  styleUrls: ['./qc-delivery-print-page.component.scss']\r\n})\r\nexport class QcDeliveryPrintPageComponent implements OnInit {\r\n  @Input() requests: GroupedRequest[] = [];\r\n  @Input() orderedProducts: OrderProductGroupedForPrint[];\r\n  @Input() rootList: any;\r\n  @Input() orderId: number;\r\n  @Input() technologies: string[];\r\n  @Input() outsourcer: any;\r\n  @Input() currentReqDate: Date = null;\r\n  @Input() technicalEquipments: OrderTechnicalEquipment[] = [];\r\n\r\n  currentDate = new Date();\r\n\r\n  constructor(\r\n    public readonly auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('technicalEquipments', this.technicalEquipments);\r\n  }\r\n\r\n  getType(type: ENomenclatureType) {\r\n    switch (type) {\r\n      case ENomenclatureType.ASSEMBLY:\r\n        return 'Assembly'\r\n      case ENomenclatureType.PURCHASED:\r\n        return 'Outsourcing'\r\n      case ENomenclatureType.MANUFACTURED:\r\n        return 'Own Production'\r\n    }\r\n  }\r\n\r\n  protected readonly Nomenclature = Nomenclature;\r\n\r\n  getNomenclature(nomenclature: Nomenclature | number): Nomenclature {\r\n    return nomenclature as Nomenclature;\r\n  }\r\n\r\n  getLocator(locator: string | Locator) {\r\n    return locator as Locator;\r\n  }\r\n}\r\n","<div class=\"qc-delivery-print-page\" *ngIf=\"!orderedProducts\">\r\n  <div class=\"qc-delivery-print-page__header\">\r\n    <div>\r\n      <h2>Code</h2>\r\n      <p>{{rootList?.nomenclature.code}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Name</h2>\r\n      <p>{{rootList?.nomenclature?.name}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Order ID</h2>\r\n      <p>{{orderId}}</p>\r\n    </div>\r\n    <div>\r\n      <h2></h2>\r\n      <p></p>\r\n    </div>\r\n    <div>\r\n      <h2>Production List Creation Date</h2>\r\n      <p>{{rootList?.list?.created | date: 'dd.MM.y' }}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Request Creation Date</h2>\r\n      <p>\r\n        <ng-container *ngIf=\"currentReqDate\">\r\n          {{currentReqDate | date: 'dd.MM.y' }}\r\n        </ng-container>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"col-2\">\r\n      <h2>Technologies</h2>\r\n      <p>\r\n        <span *ngFor=\"let tech of technologies; let last=last\">\r\n          {{tech}} {{last ? '' : ','}}\r\n        </span>\r\n      </p>\r\n    </div>\r\n    \r\n  </div>\r\n\r\n  <div *ngIf=\"outsourcer\">\r\n    <div class=\"qc-delivery-print-page__table\">\r\n      <div>\r\n        <h2 style=\"white-space: nowrap\">Outsourcer</h2>\r\n        <h4><span>Name:</span> {{outsourcer.name}}</h4>\r\n        <h4>\r\n          <span>Category:</span>\r\n          <ng-container *ngFor=\"let item of outsourcer.categories; let idx = index\">\r\n            <!--              {{categories[item]}}-->\r\n            <span *ngIf=\"idx !== outsourcer.categories.length - 1\">,</span>\r\n          </ng-container>\r\n        </h4>\r\n        <h4><span>Address:</span> {{outsourcer.address}}</h4>\r\n        <h4><span>Tax Number:</span> {{outsourcer.tax_number}}</h4>\r\n        <h4><span>Register Number:</span> {{outsourcer.registration_number}}</h4>\r\n        <h4><span>Nomenclature:</span> {{outsourcer.supplier_nomenclature}}</h4>\r\n        <h4><span>Description:</span></h4>\r\n        <p>{{outsourcer.comment}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"qc-delivery-print-page__table\">\r\n    <div\r\n      *ngFor=\"let request of requests\"\r\n      class=\"qc-delivery-print-page__row\"\r\n    >\r\n      <div class=\"qc-delivery-print-page__box\">\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>ID</h3>\r\n          <p>{{request.id}} <span *ngIf=\"request.ids?.length > 0\">L({{request.ids?.length + 1}})</span></p>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Code</h3>\r\n          <div *ngIf=\"request.material_nomenclature\">\r\n            {{request.material_nomenclature.code}}\r\n          </div>\r\n          <div *ngIf=\"request.order_product_nomenclature\">\r\n            {{request.order_product_nomenclature.code}}\r\n          </div>\r\n          <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n            {{request.list_product.nomenclature.code}}\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Name</h3>\r\n          <div *ngIf=\"request.material_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.material_nomenclature.name}}\r\n          </div>\r\n          <div *ngIf=\"request.order_product_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.order_product_nomenclature.name}}\r\n          </div>\r\n          <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.list_product.nomenclature.name}}\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col_half\">\r\n          <h3>Technology</h3>\r\n          <span *ngIf=\"request.technology\">{{request.technology}}</span>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col_half\">\r\n          <h3>UOM</h3>\r\n          <div\r\n            *ngIf=\"request.material_nomenclature\">\r\n            {{request.material_nomenclature?.category?.unit_of_measure?.symbol ? request.material_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n          </div>\r\n          <div\r\n            *ngIf=\"request.order_product_nomenclature\">\r\n            {{request.order_product_nomenclature?.category?.unit_of_measure?.symbol ? request.order_product_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n          </div>\r\n          <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n            {{request.list_product.nomenclature?.category?.unit_of_measure?.symbol ? request.list_product.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Required Quantity</h3>\r\n          {{request.total_required_quantity}}\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Locator</h3>\r\n          <div *ngIf=\"request.locators\">\r\n            <div *ngFor=\"let locator of request.unique_locators; let last=last\">\r\n              {{locator.name}}<span *ngIf=\"!last\">,</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Type</h3>\r\n          <p>{{getType(request.list_product?.nomenclature?.type)}}</p>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Status</h3>\r\n          <p>{{request.qc_delivery_status?.name}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"qc-delivery-print-page__col\">\r\n        <h3>Quantity</h3>\r\n        <p>_________</p>\r\n      </div>\r\n      <div class=\"qc-delivery-print-page__col\">\r\n        <h3>Packing</h3>\r\n        <p>_________</p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  <div *ngIf=\"technicalEquipments.length > 0\">\r\n    <div class=\"qc-delivery-print-page__header\">\r\n      <div>\r\n        <h2 style=\"white-space: nowrap\">Technical Equipments</h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div  *ngIf=\"technicalEquipments.length > 0\" class=\"qc-delivery-print-page__table\">\r\n    <div\r\n      *ngFor=\"let technicalEquipment of technicalEquipments\"\r\n      class=\"qc-delivery-print-page__row\"\r\n    >\r\n      <div class=\"qc-delivery-print-page__box\">\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Code</h3>\r\n          <div>\r\n            {{getNomenclature(technicalEquipment.nomenclature).code}}</div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Name</h3>\r\n          {{getNomenclature(technicalEquipment.nomenclature).name}}\r\n        </div>\r\n\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Locators</h3>\r\n          <div *ngIf=\"technicalEquipment.locators.length > 0\">\r\n            <div *ngFor=\"let locator of technicalEquipment.locators; let last=last\">\r\n              {{getLocator(locator).name}}<span *ngIf=\"!last\">, </span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"technicalEquipment.locators.length < 1\">\r\n                <span *ngFor=\"let locator of technicalEquipment.available_locators; let last=last\">\r\n                  {{getLocator(locator).name}}<span *ngIf=\"!last\">, </span>\r\n                </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Required Quantity</h3>\r\n          {{technicalEquipment.max_initial_quantity}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"qc-delivery-print-page__bottom\">\r\n    <div class=\"qc-delivery-print-page__column\">\r\n      <div class=\"qc-delivery-print-page__left\">\r\n        <div>\r\n          <h3>Sent</h3>\r\n          <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"qc-delivery-print-page__right\">\r\n        <div>\r\n          <h3>Retrieved</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<!--  Grouped By OrderProduct -->\r\n<div class=\"qc-delivery-print-page\" *ngIf=\"orderedProducts\">\r\n  <div class=\"qc-delivery-print-page__header\">\r\n    <div>\r\n      <h2>Code</h2>\r\n      <p>{{rootList?.nomenclature?.code}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Name</h2>\r\n      <p>{{rootList?.nomenclature?.name}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Order ID</h2>\r\n      <p>{{orderId}}</p>\r\n    </div>\r\n    <div>\r\n      <h2></h2>\r\n      <p></p>\r\n    </div>\r\n    <div>\r\n      <h2>Production List Creation Date</h2>\r\n      <p>{{rootList?.list?.created | date: 'dd.MM.y' }}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Request Creation Date</h2>\r\n      <p>\r\n        <ng-container *ngIf=\"currentReqDate\">\r\n          {{currentReqDate | date: 'dd.MM.y' }}\r\n        </ng-container>\r\n      </p>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <h2>Technologies</h2>\r\n      <p>\r\n        <span *ngFor=\"let tech of technologies; let last=last\">\r\n          {{tech}} {{last ? '' : ','}}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"outsourcer\">\r\n    <div class=\"qc-delivery-print-page__table\">\r\n      <div>\r\n        <h2 style=\"white-space: nowrap\">Outsourcer</h2>\r\n        <h4><span>Name:</span> {{outsourcer.name}}</h4>\r\n        <h4>\r\n          <span>Category:</span>\r\n          <ng-container *ngFor=\"let item of outsourcer.categories; let idx = index\">\r\n            <!--              {{categories[item]}}-->\r\n            <span *ngIf=\"idx !== outsourcer.categories.length - 1\">,</span>\r\n          </ng-container>\r\n        </h4>\r\n        <h4><span>Address:</span> {{outsourcer.address}}</h4>\r\n        <h4><span>Tax Number:</span> {{outsourcer.tax_number}}</h4>\r\n        <h4><span>Register Number:</span> {{outsourcer.registration_number}}</h4>\r\n        <h4><span>Nomenclature:</span> {{outsourcer.supplier_nomenclature}}</h4>\r\n        <h4><span>Description:</span></h4>\r\n        <p>{{outsourcer.comment}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngFor=\"let orderProduct of orderedProducts; let lastGroup=last\" class=\"order-product-page\"\r\n       [class.not-last-group]=\"!lastGroup\">\r\n    <h3>{{orderProduct.nomenclature.code}} {{orderProduct.nomenclature.name}} {{orderProduct.current_technology?.name}}\r\n      Quantity:  {{orderProduct.quantity}}</h3>\r\n    <div class=\"qc-delivery-print-page__table\">\r\n      <div\r\n        *ngFor=\"let request of orderProduct.children; let index=index\"\r\n        class=\"qc-delivery-print-page__row\">\r\n        <div class=\"qc-delivery-print-page__box\">\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>ID</h3>\r\n            <p>{{request.id}} <span *ngIf=\"request.ids?.length > 0\">L({{request.ids?.length + 1}})</span></p>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Code</h3>\r\n            <div *ngIf=\"request.material_nomenclature\">\r\n              {{request.material_nomenclature.code}}\r\n            </div>\r\n            <div *ngIf=\"request.order_product_nomenclature\">\r\n              {{request.order_product_nomenclature.code}}\r\n            </div>\r\n            <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n              {{request.list_product.nomenclature.code}}\r\n            </div>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Name</h3>\r\n            <div *ngIf=\"request.material_nomenclature\">\r\n              <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n              {{request.material_nomenclature.name}}\r\n            </div>\r\n            <div *ngIf=\"request.order_product_nomenclature\">\r\n              <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n              {{request.order_product_nomenclature.name}}\r\n            </div>\r\n            <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n              <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n              {{request.list_product.nomenclature.name}}\r\n            </div>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col_half\">\r\n            <h3>Technology</h3>\r\n            <span *ngIf=\"request.technology\">{{request.technology}}</span>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col_half\">\r\n            <h3>UOM</h3>\r\n            <div\r\n              *ngIf=\"request.material_nomenclature\">\r\n              {{request.material_nomenclature?.category?.unit_of_measure?.symbol ? request.material_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </div>\r\n            <div\r\n              *ngIf=\"request.order_product_nomenclature\">\r\n              {{request.order_product_nomenclature?.category?.unit_of_measure?.symbol ? request.order_product_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </div>\r\n            <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n              {{request.list_product.nomenclature?.category?.unit_of_measure?.symbol ? request.list_product.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </div>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Required Quantity</h3>\r\n            {{request.total_required_quantity}}\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Locator</h3>\r\n            <div *ngIf=\"request.locators\">\r\n              <div *ngFor=\"let locator of request.unique_locators; let last=last\">\r\n                {{locator.name}}<span *ngIf=\"!last\">,</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Type</h3>\r\n            <p>{{getType(request.list_product?.nomenclature?.type)}}</p>\r\n          </div>\r\n          <div class=\"qc-delivery-print-page__col\">\r\n            <h3>Status</h3>\r\n            <p>{{request.qc_delivery_status?.name}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Quantity</h3>\r\n          <p>_________</p>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Packing</h3>\r\n          <p>_________</p>\r\n        </div>\r\n    </div>\r\n  </div>  \r\n\r\n  <div *ngIf=\"technicalEquipments.length > 0\">\r\n    <div class=\"qc-delivery-print-page__header\">\r\n      <div>\r\n        <h2 style=\"white-space: nowrap\">Technical Equipments</h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div  *ngIf=\"technicalEquipments.length > 0\" class=\"qc-delivery-print-page__table\">\r\n    <div\r\n      *ngFor=\"let technicalEquipment of technicalEquipments\"\r\n      class=\"qc-delivery-print-page__row\"\r\n    >\r\n      <div class=\"qc-delivery-print-page__box\">\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Code</h3>\r\n          <div>\r\n            {{getNomenclature(technicalEquipment.nomenclature).code}}</div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Name</h3>\r\n          {{getNomenclature(technicalEquipment.nomenclature).name}}\r\n        </div>\r\n\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Locators</h3>\r\n          <div *ngIf=\"technicalEquipment.locators.length > 0\">\r\n            <div *ngFor=\"let locator of technicalEquipment.locators; let last=last\">\r\n              {{getLocator(locator).name}}<span *ngIf=\"!last\">, </span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"technicalEquipment.locators.length < 1\">\r\n                <span *ngFor=\"let locator of technicalEquipment.available_locators; let last=last\">\r\n                  {{getLocator(locator).name}}<span *ngIf=\"!last\">, </span>\r\n                </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"qc-delivery-print-page__col\">\r\n          <h3>Required Quantity</h3>\r\n          {{technicalEquipment.max_initial_quantity}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"qc-delivery-print-page__bottom\">\r\n    <div class=\"qc-delivery-print-page__column\">\r\n      <div class=\"qc-delivery-print-page__left\">\r\n        <div>\r\n          <h3>Sent</h3>\r\n          <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"qc-delivery-print-page__right\">\r\n        <div>\r\n          <h3>Retrieved</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, HostListener, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {RequestService} from '../../../warehouse/services/request.service';\r\nimport {Table} from 'primeng/table';\r\nimport {MenuItem, TreeNode} from 'primeng/api';\r\nimport {List} from '../../../warehouse/models/list';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {Task} from '@shared/models/task';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {environment} from '@env/environment';\r\nimport {forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {OrderTechnicalEquipmentsService} from '../../../warehouse/services/order-technical-equipments.service';\r\nimport {filter, map, take, tap} from 'rxjs/operators';\r\nimport {Nomenclature, Nomenclatures} from '@shared/models/nomenclature';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {ScanResult} from '../../../qr-code/models/scan-result';\r\nimport {GroupedRequest} from '../../../warehouse/models/grouped-request';\r\nimport {AlbumService} from '@shared/services/album.service';\r\nimport {\r\n  OrderProduct,\r\n  OrderProductGroupedForPrint\r\n} from '../../../procurement/models/order-product';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\nclass ProductRequestListOrder extends Order {\r\n  ordered_items_technologies?: string[];\r\n  qc_delivery_status?: any;\r\n}\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-qc-delivery',\r\n  templateUrl: './qc-delivery.component.html',\r\n  styleUrls: ['./qc-delivery.component.scss']\r\n})\r\nexport class QcDeliveryComponent implements OnInit, OnDestroy {\r\n  @ViewChild('dt') dateTable: Table;\r\n  formGroupedOrderedProducts: Subject<void> = new Subject<void>();\r\n\r\n  isShowPrint = false;\r\n  isShowPrintGrouped = false;\r\n\r\n  destroy$ = new Subject();\r\n  lastScannedId: number;\r\n\r\n  isAlbumPrint = false;\r\n\r\n  qc_delivery_status: any;\r\n\r\n  QC_STAGES = {\r\n    \"qty_control\": 1,\r\n    \"packing_control\": 2,\r\n    \"done\": 3\r\n  };\r\n\r\n\r\n  printMenuItems: MenuItem[] = [{\r\n    label: 'Print Options',\r\n    items: [\r\n      {\r\n        label: 'Print (default)',\r\n        icon: 'pi pi-print',\r\n        command: () => this.printPage()\r\n      },\r\n      {\r\n        label: 'Print Grouped by Order Product',\r\n        icon: 'pi pi-print',\r\n        command: () => this.printPageGrouped()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  rootList: any = null;\r\n  currentDate: Date = new Date();\r\n  selectedRequest: GroupedRequest | GroupedRequest[] | any = null;\r\n  currentReqDate: Date = null;\r\n\r\n  isLoading = true;\r\n  requests: GroupedRequest[] = [];\r\n  listRequests: GroupedRequest[] = [];\r\n  hierarchyRequests: GroupedRequest[] = [];\r\n  order: ProductRequestListOrder;\r\n  orderId = this.route.snapshot.paramMap.get('id');\r\n  isCompletingMaterials = false;\r\n\r\n  requestTree: TreeNode[] = [];\r\n  selectedRequestNode: TreeNode;\r\n\r\n  detailedRequestTree: TreeNode[] = [];\r\n  selectedDetailedRequestNode: TreeNode;\r\n  orderedProductsForPrint: OrderProductGroupedForPrint[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  isLoadingTree = true;\r\n  elementsRowsIds: any[] = [];\r\n  isScanned = false;\r\n  scanningEnd: boolean;\r\n  currentDisplayRowId: null;\r\n  foundRowsIds: any[] = [];\r\n  firstPage = 0;\r\n\r\n  constructor(\r\n    private requestsService: RequestService,\r\n    public readonly auth: AuthService,\r\n    private ordersService: OrderService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private readonly modalService: ModalService,\r\n    private readonly tasksService: TaskService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n    public readonly albumService: AlbumService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrderInfo(+this.orderId);\r\n    this.getRequests();\r\n    this.getOrderTechnicalEquipments();\r\n    this.formGroupedOrderedProducts.pipe(untilDestroyed(this)).subscribe(() => {\r\n      if (this.hierarchyRequests.length > 0 && this.orderedProductsForPrint.length > 0) {\r\n        this.orderedProductsForPrint.forEach(el => {\r\n          el.children = this.hierarchyRequests.filter(child => child.for_order_product.id === el.id || child.for_order_ids.findIndex(child_ids => child_ids === el.id) >= 0);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    const query = [{name: 'order', value: +this.orderId}, {name: 'in_use', value: false}];\r\n    this.orderTechnicalEquipmentsService.get(query).pipe(take(1), untilDestroyed(this)).subscribe(technicalEquipments => {\r\n      this.technicalEquipments = technicalEquipments;\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.modalService.confirm('danger', 'Confirm').subscribe(res => {\r\n      if (res) {\r\n        this.requestsService.cancel(+this.orderId).pipe(untilDestroyed(this)).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderInfo(orderId: number): void {\r\n    this.ordersService.getMinimalById(orderId).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).pipe(untilDestroyed(this)).subscribe(order => {\r\n      this.order = order;\r\n      this.order.ordered_items_technologies = [];\r\n      this.order.order_products.forEach(product => {\r\n        if (product.current_technology) {\r\n          const canAddTechnology = this.order.ordered_items_technologies\r\n            .findIndex(el => el === product.current_technology.name) < 0;\r\n          if (canAddTechnology) {\r\n            this.order.ordered_items_technologies.push(product.current_technology.name);\r\n          }\r\n        }\r\n\r\n        const productInList = this.orderedProductsForPrint.find(el => el.nomenclature.id === product.nomenclature.id &&\r\n          el.current_technology?.id === product.current_technology?.id);\r\n        if (productInList) {\r\n          productInList.quantity += product.quantity;\r\n        } else {\r\n          this.orderedProductsForPrint.push(product);\r\n        }\r\n      });\r\n      this.formGroupedOrderedProducts.next();\r\n    });\r\n  }\r\n\r\n  getRequests() {\r\n    this.isLoading = true;\r\n    this.requests = [];\r\n    this.selectedRequest = [];\r\n\r\n    this.requestsService.getDeliveryByOrder(+this.orderId).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(requests => {\r\n      this.isLoading = false;\r\n      this.requests = requests;\r\n      this.listRequests = JSON.parse(JSON.stringify(this.requests));\r\n      this.hierarchyRequests = JSON.parse(JSON.stringify(this.requests));\r\n      this.listRequests.sort((a, b) => this.getCodeAndNameId(a).id - this.getCodeAndNameId(b).id).forEach(request => {\r\n        request.requests = this.listRequests\r\n          .filter(req => !req.material_nomenclature)\r\n          .filter(req => !req.reserved_serial_products || req.reserved_serial_products.length === 0)\r\n          .filter(req => {\r\n            return this.getSameRequests(req, request) && req.id !== request.id;\r\n          });\r\n\r\n        request.ids = request.requests.map(req => req.id);\r\n\r\n        request.all_reserved_serial_products = [];\r\n        request.unique_locators = [...request.locators];\r\n        if (request.is_reserved && request.requests\r\n          .every(req => req.is_reserved)) {\r\n          request.available_quantity_sum = request.requests.map(req => req.required_quantity)\r\n            .reduce((sum, quantity) => sum + quantity, request.required_quantity);\r\n        } else {\r\n          if (request.ids.length === 0) {\r\n            if (!request.is_reserved) {\r\n              request.available_quantity_sum = request.warehouse_quantity;\r\n            } else {\r\n              request.available_quantity_sum = request.required_quantity;\r\n            }\r\n          } else {\r\n            if (!request.is_reserved) {\r\n              request.available_quantity_sum = request.warehouse_quantity;\r\n            } else {\r\n              request.available_quantity_sum = request.requests\r\n                .find(req => !req.is_reserved).warehouse_quantity;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (request.reserved_serial_products) {\r\n          request.all_reserved_serial_products.push(...request.reserved_serial_products.map(serial_number => serial_number.serial_number));\r\n        }\r\n        request.requests.forEach(req => {\r\n          if (req.reserved_serial_products?.length > 0) {\r\n            request.all_reserved_serial_products.push(...req.reserved_serial_products.map(serial_number => serial_number.serial_number));\r\n          }\r\n          request.unique_locators.push(...req.locators);\r\n        });\r\n        request.total_required_quantity = request.requests.reduce(\r\n          (accumulator, currentValue) => accumulator + currentValue.required_quantity, request.required_quantity\r\n        );\r\n        request.unique_locators = request.unique_locators.filter((locator, index, self) => self.findIndex(innerLocator => innerLocator.id === locator.id) === index);\r\n\r\n        request.ids.forEach(id => {\r\n          const index = this.listRequests.findIndex(req => req.id === id);\r\n          this.listRequests.splice(index, 1);\r\n        });\r\n      });\r\n\r\n      this.hierarchyRequests.sort((a, b) => this.getCodeAndNameId(a).id - this.getCodeAndNameId(b).id).forEach(hierRequest => {\r\n        hierRequest.requests = this.hierarchyRequests\r\n          .filter(req => !req.material_nomenclature)\r\n          .filter(req => req.for_order_product?.nomenclature.id === hierRequest.for_order_product?.nomenclature.id)\r\n          .filter(req => !req.reserved_serial_products || req.reserved_serial_products.length === 0)\r\n          .filter(req => {\r\n            return this.getSameRequests(req, hierRequest) && req.id !== hierRequest.id &&\r\n              (req.for_order_product?.nomenclature.id === hierRequest.for_order_product?.nomenclature.id ||\r\n                req.list_product?.nomenclature.id === hierRequest.list_product?.nomenclature.id);\r\n          });\r\n\r\n        hierRequest.ids = hierRequest.requests.map(req => req.id);\r\n        hierRequest.for_order_ids = [];\r\n        if (hierRequest.for_order_product.length > 0) {\r\n          hierRequest.for_order_ids.push(hierRequest.for_order_product.id);\r\n        }\r\n        hierRequest.for_order_ids.push(...hierRequest.requests.filter(req => req.for_order_product).map(req => req.for_order_product?.id));\r\n        if (hierRequest.is_reserved && hierRequest.requests\r\n          .every(req => req.is_reserved)) {\r\n          hierRequest.available_quantity_sum = hierRequest.requests.map(req => req.required_quantity)\r\n            .reduce((sum, quantity) => sum + quantity, hierRequest.required_quantity);\r\n        } else {\r\n          if (hierRequest.ids.length === 0) {\r\n            if (!hierRequest.is_reserved) {\r\n              hierRequest.available_quantity_sum = hierRequest.warehouse_quantity;\r\n            } else {\r\n              hierRequest.available_quantity_sum = hierRequest.required_quantity;\r\n            }\r\n          } else {\r\n            if (!hierRequest.is_reserved) {\r\n              hierRequest.available_quantity_sum = hierRequest.warehouse_quantity;\r\n            } else {\r\n              hierRequest.available_quantity_sum = hierRequest.requests\r\n                .find(req => !req.is_reserved).warehouse_quantity;\r\n            }\r\n          }\r\n        }\r\n\r\n        hierRequest.unique_locators = [...hierRequest.locators];\r\n        hierRequest.requests.forEach(req => {\r\n          hierRequest.unique_locators.push(...req.locators);\r\n        });\r\n\r\n        hierRequest.unique_locators = hierRequest.unique_locators.filter((locator, index, self) =>\r\n          self.findIndex(innerLocator => innerLocator.id === locator.id) === index);\r\n\r\n        hierRequest.total_required_quantity = hierRequest.requests.reduce(\r\n          (accumulator, currentValue) => accumulator + currentValue.required_quantity, hierRequest.required_quantity\r\n        );\r\n\r\n        hierRequest.ids.forEach(id => {\r\n          const index = this.hierarchyRequests.findIndex(req => req.id === id);\r\n          this.hierarchyRequests.splice(index, 1);\r\n        });\r\n      });\r\n      this.formGroupedOrderedProducts.next();\r\n\r\n      const material = this.listRequests.filter(el => el.material_nomenclature).sort((a, b) => {\r\n        return b.id - a.id;\r\n      });\r\n      const non_material = this.listRequests.filter(el => !el.material_nomenclature).sort((a, b) => {\r\n        return b.id - a.id;\r\n      });\r\n      this.listRequests = [...material, ...non_material];\r\n    });\r\n  }\r\n\r\n  getSameRequests(req: GroupedRequest, request: GroupedRequest): boolean {\r\n    let codeName = this.getCodeAndNameId(req);\r\n\r\n    let codeNameSecond = this.getCodeAndNameId(request);\r\n    return (codeName.code === codeNameSecond.code\r\n      && codeName.name === codeNameSecond.name\r\n      && (!req.reserved_serial_products || req.reserved_serial_products?.length === 0 || !req.material_nomenclature));\r\n  }\r\n\r\n  getCodeAndNameId(request: GroupedRequest): { name: string, code: string, id: number } {\r\n    let codeSecond = '';\r\n    let nameSecond = '';\r\n    let id;\r\n    if (request.order_product_nomenclature) {\r\n      codeSecond = request.order_product_nomenclature.code;\r\n      nameSecond = request.order_product_nomenclature.name;\r\n      id = request.order_product_nomenclature.id;\r\n    } else if (!request.material_nomenclature && !request.order_product_nomenclature) {\r\n      codeSecond = request.list_product.nomenclature.code;\r\n      nameSecond = request.list_product.nomenclature.name;\r\n      id = request.list_product.nomenclature.id;\r\n    }\r\n    return {code: codeSecond, name: nameSecond, id: id};\r\n  }\r\n\r\n\r\n\r\n  complete() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isLoading = false;\r\n        this.requestsService.completeMaterialQc(+this.orderId).pipe(untilDestroyed(this)).subscribe(() => this.router.navigate(['../'], {relativeTo: this.route}));\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateItems(request: GroupedRequest, qc_stage: number, confirmation_flag: boolean) {\r\n    let listId = []\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      listId.push(request.id, ...request.ids);\r\n      const requestData = {\r\n        \"production_request_ids\": listId,\r\n        \"order_qc_delivery_status_id\": this.order.qc_delivery_status.id,\r\n        \"confirmation_flag\": confirmation_flag,\r\n        \"qc_stage\": qc_stage\r\n      }\r\n      this.requestsService.updateMaterial(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n        this.getOrderInfo(+this.orderId);\r\n        this.getRequests();\r\n      });\r\n    })\r\n  }\r\n\r\n  onResetConfirmation() {\r\n    let listId = []\r\n    this.selectedRequest.forEach(request => {\r\n      listId.push(request.id, ...request.ids);\r\n    });\r\n    const requestData = {\r\n      \"production_request_ids\": listId,\r\n    }\r\n    this.requestsService.resetConfirmation(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n      this.getOrderInfo(+this.orderId);\r\n      this.getRequests();\r\n    });\r\n  }\r\n\r\n  onCompleteMaterialQcList(qc_stage: number) {\r\n    let listId = []\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.selectedRequest.forEach(request => {\r\n        listId.push(request.id, ...request.ids);\r\n      });\r\n      const requestData = {\r\n        \"production_request_ids\": listId,\r\n        \"qc_stage\": qc_stage,\r\n      }\r\n      this.requestsService.updateMaterial(requestData).pipe(untilDestroyed(this)).subscribe(() => {\r\n        this.getOrderInfo(+this.orderId);\r\n        this.getRequests();\r\n      });\r\n    })\r\n  }\r\n\r\n  onGoProd(id: number) {\r\n    window.open(`/manufactoring/plan/plan/` + id, '_blank');\r\n  }\r\n\r\n  goOrder(type, id) {\r\n    let link = '';\r\n\r\n    if (type == 1) {\r\n      link = `/procurement/chains/order/` + id;\r\n    }\r\n\r\n    if (type == 2) {\r\n      link = `/outsourcing/chains/order/` + id;\r\n    }\r\n\r\n    if (type == 3) {\r\n      link = `/manufacturing/orders/order/` + id;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  goToOrder() {\r\n    let link = '';\r\n\r\n    if (this.order.accounting_type == 1) {\r\n      link = `/procurement/chains/order/` + this.order.id;\r\n    }\r\n\r\n    if (this.order.accounting_type == 2) {\r\n      link = `/outsourcing/chains/order/` + this.order.id;\r\n    }\r\n\r\n    if (this.order.accounting_type == 3) {\r\n      link = `/manufacturing/orders/order/` + this.order.id;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  printPage() {\r\n    this.isShowPrint = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  printPageGrouped() {\r\n    this.isShowPrintGrouped = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  @HostListener(\"window:afterprint\", [])\r\n  onWindowAfterPrint() {\r\n    this.isShowPrintGrouped = false;\r\n    this.isShowPrint = false;\r\n  }\r\n\r\n  @HostListener('afterprint') printClosed() {\r\n    this.isShowPrintGrouped = false;\r\n    this.isShowPrint = false;\r\n  }\r\n\r\n  printAlbum() {\r\n    this.albumService.getNomenclaturesImages((<GroupedRequest[]>this.selectedRequest).map(r => {\r\n      if (r.material_nomenclature) {\r\n        return r.material_nomenclature;\r\n      } else if (r.order_product_nomenclature) {\r\n        return r.order_product_nomenclature;\r\n      } else if (!r.material_nomenclature && !r.order_product_nomenclature) {\r\n        return r.list_product?.nomenclature;\r\n      }\r\n    }));\r\n  }\r\n\r\n  togglePrintAlbumMode() {\r\n    this.selectedRequest = [];\r\n    this.isAlbumPrint = !this.isAlbumPrint;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.clearQrResults();\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id);\r\n      });\r\n    });\r\n    this.isScanned = true;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  clearQrResults() {\r\n    this.currentDisplayRowId = null;\r\n    this.foundRowsIds = [];\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n    this.scanForListProduct(data);\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n  }\r\n\r\n  scanForListProduct(data: ScanResult = null) {\r\n    this.lastScannedId = null;\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id);\r\n      });\r\n    });\r\n\r\n    this.requestsService.sendDataProductionRequests(this.orderId, data).pipe(untilDestroyed(this)).subscribe(res => {\r\n      this.testFoundIdsOnScan(res);\r\n    });\r\n  }\r\n\r\n  testFoundIdsOnScan(res) {\r\n    const ids = res.map(el => el.item_id_changed);\r\n\r\n    let elementIndex;\r\n    this.listRequests.forEach((request, index) => {\r\n      const isMainIdChecked = ids.findIndex(id => id === request.id) > -1;\r\n      if (isMainIdChecked) {\r\n        request.is_scanned = true;\r\n        elementIndex = index;\r\n        this.lastScannedId = request.id;\r\n      }\r\n      request.requests.forEach(req => {\r\n        if (ids.findIndex(id => id === req.id) > -1) {\r\n          req.is_scanned = true;\r\n          elementIndex = index;\r\n          this.lastScannedId = request.id;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (elementIndex) {\r\n      this.firstPage = Math.floor(elementIndex / 10) * 10;\r\n    }\r\n\r\n    this.requestTree.forEach(node => {\r\n      node.children.forEach(child => {\r\n        const request = child.data.request;\r\n        const isMainIdChecked = ids.findIndex(id => id === request.id) > -1;\r\n        if (isMainIdChecked) {\r\n          request.is_scanned = true;\r\n          this.lastScannedId = request.id;\r\n        }\r\n        request.requests?.forEach(req => {\r\n          if (ids.findIndex(id => id === req.id) > -1) {\r\n            req.is_scanned = true;\r\n            this.lastScannedId = request.id;\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  scrollToElement(rowId: string): void {\r\n    const element = document.getElementById(rowId);\r\n    element.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n  }\r\n\r\n  isFullyScanned(request: any) {\r\n    if (request.requests?.length === 0) {\r\n      return request.is_scanned;\r\n    }\r\n    const mainScanned = request.is_scanned;\r\n    const allInnerScanned = !(request.requests?.findIndex(req => !req.is_scanned) > -1);\r\n    return mainScanned && allInnerScanned;\r\n  }\r\n\r\n  isPartlyScanned(request: any) {\r\n    if (request?.requests?.length === 0) {\r\n      return false;\r\n    }\r\n    const mainScanned = request.is_scanned;\r\n    const innerNeedScan = request.requests?.findIndex(req => !req.is_scanned) > -1;\r\n    return !this.isFullyScanned(request) && (mainScanned || !innerNeedScan);\r\n  }\r\n}\r\n","<div class=\"page\">\r\n    <div class=\"page__header\">\r\n      <div class=\"page__title\">\r\n        <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n        <h1>\r\n            Order ID <ng-container *ngIf=\"isLoading; else orderLink\">...</ng-container>\r\n        </h1>\r\n      </div>\r\n      <div class=\"page__tools\">\r\n        <p-menubar\r\n          class=\"ml-auto mr-2\"\r\n          [model]=\"printMenuItems\">\r\n        </p-menubar>\r\n        <button\r\n          [loading]=\"albumService.loading$ | async\"\r\n          pButton\r\n          class=\"p-button-success mr-2\"\r\n          type=\"button\"\r\n          label=\"Print Album\"\r\n          (click)=\"printAlbum()\"\r\n          [disabled]=\"selectedRequest?.length === 0\"\r\n        >\r\n        </button>\r\n        <button\r\n          pButton\r\n          type=\"button\"\r\n          class=\"p-button-icon mr-2\"\r\n          icon=\"pi pi-check\"\r\n          label=\"Complete\"\r\n          (click)=\"complete()\"\r\n          [disabled]=\"!order?.qc_delivery_status?.is_qc_completed\"\r\n        ></button>\r\n\r\n        <a\r\n          pButton\r\n          class=\"ml-2\"\r\n          type=\"button\"\r\n          icon=\"pi pi-angle-double-right\"\r\n          [class.disabled]=\"!order\"\r\n          label=\"Go to Order\"\r\n          (click)=\"goToOrder()\"\r\n        >\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <div class=\"page__table\">\r\n        <p-table selectionMode=\"single\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"table-tools\">\r\n          <h2 class=\"subtitle\">Outsourcer</h2>\r\n            <h4><span>Name:</span> {{order?.supplier?.name}}</h4>\r\n            <h4>\r\n              <span>Category:</span>\r\n              <ng-container *ngFor=\"let item of order?.supplier?.categories; let idx = index\">\r\n                <span *ngIf=\"idx !== order?.supplier?.categories.length - 1\">,</span>\r\n              </ng-container>\r\n            </h4>\r\n            <h4><span>Address:</span> {{order?.supplier?.address}}</h4>\r\n            <h4><span>Tax Number:</span> {{order?.supplier?.tax_number}}</h4>\r\n            <h4><span>Register Number:</span> {{order?.supplier?.registration_number}}</h4>\r\n            <h4><span>Nomenclature:</span> {{order?.supplier?.supplier_nomenclature}}</h4>\r\n            <h4><span>Description:</span></h4>\r\n            <p>{{order?.supplier?.comment}}</p>\r\n            </div>\r\n            </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <ng-container>\r\n        <div class=\"page__table\">\r\n          <p-table\r\n            #dt\r\n            [paginator]=\"listRequests.length > 0\"\r\n            scrollHeight=\"calc(100vh - 18.8rem)\"\r\n            [scrollable]=\"!dt.paginator\"\r\n            class=\"adaptive-table print-table\"\r\n            [rows]=\"10\"\r\n            [value]=\"listRequests\"\r\n            [(first)]=\"firstPage\"\r\n            [globalFilterFields]=\"['name']\"\r\n            dataKey=\"id\"\r\n            [(selection)]=\"selectedRequest\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex table-caption\">\r\n                <p class=\"subtitle\" *ngIf=\"!selectedRequest\">Choose the Request to edit</p>\r\n\r\n                <button\r\n                class=\"ml-auto mr-2 p-button-success\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-check\"\r\n                label=\"QTY Confirm\"\r\n                [disabled]=\"selectedRequest?.length === 0 || order.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onCompleteMaterialQcList(QC_STAGES['qty_control'])\"\r\n              >\r\n              </button>\r\n\r\n              <button\r\n                class=\"mr-2 p-button-success\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-check\"\r\n                label=\"Packing Confirm\"\r\n                [disabled]=\"selectedRequest?.length === 0 || order.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onCompleteMaterialQcList(QC_STAGES['packing_control'])\"\r\n              >\r\n              </button>\r\n\r\n              <button\r\n                class=\"mr-2 p-button-danger\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-spinner\"\r\n                label=\"Reset Confirmation\"\r\n                [disabled]=\"selectedRequest?.length === 0 || order.qc_delivery_status.qc_stage==QC_STAGES['done']\"\r\n                (click)=\"onResetConfirmation()\"\r\n              >\r\n              </button>\r\n\r\n                <button\r\n                  class=\"mr-2 p-button-icon\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-camera\"\r\n                  label=\"Scan QR Codes\"\r\n                  (click)=\"onStartScanning()\"\r\n                >\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"colgroup\">\r\n              <colgroup>\r\n                <col class=\"index-header\">\r\n              </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 3%\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th>\r\n                <th class=\"text-center\" style=\"width: 5%;\">\r\n                  <div class=\"row-toggler\">\r\n                    #\r\n                  </div>\r\n                </th>\r\n                <th class=\"text-center\" style=\"width: 5%;\">ID</th>\r\n                <th style=\"width: 15%;\">Code</th>\r\n                <th style=\"width: 15%;\">Name</th>\r\n                <th style=\"width: 10%;\" class=\"text-center\">Serial Number</th>\r\n                <th style=\"width: 12%;\" class=\"text-center\">Technology</th>\r\n                <th class=\"text-center\" style=\"width: 14%;\">Required Quantity</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Locator</th>\r\n                <th class=\"text-center\" style=\"width: 4%;\">UOM</th>\r\n                <ng-container *ngIf=\"order?.accounting_type == 2\">\r\n                  <th class=\"text-center\" style=\"width: 10%;\">Status</th>\r\n                  <th class=\"text-center\" style=\"width: 4%;\">Quantity Confirmation</th>\r\n                  <th class=\"text-center\" style=\"width: 4%;\">Packing Confirmation</th>\r\n                </ng-container>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-request let-i=\"rowIndex\">\r\n              <tr class=\"pagebreak\" [pSelectableRow]=\"request\"\r\n                  [class.last-scanned]=\"request.id === lastScannedId\"\r\n                  [class.partly-scanned]=\"isPartlyScanned(request)\"\r\n                  [class.is-added-after-order-creation]=\"request.material_nomenclature\"\r\n                  [class.qr-code-scanned]=\"isFullyScanned(request)\">\r\n                <td style=\"width: 3%\">\r\n                    <p-tableCheckbox [value]=\"request\"></p-tableCheckbox>\r\n                </td>\r\n                <td style=\"width: 5%;\" class=\"text-center\">\r\n                  <div class=\"row-toggler\">\r\n                    <h3 class=\"td-title\">#</h3>\r\n                    {{i + 1}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 5%;\" class=\"text-center ids-container hovered-info\">\r\n                  <h3 class=\"td-title\">ID</h3>\r\n                  {{request.id}} <span *ngIf=\"request.ids?.length > 0\">L({{request.ids?.length + 1}})</span>\r\n\r\n                  <pek-hover-detailed-info-component\r\n                    [moveLeft]=\"0\"\r\n                    *ngIf=\"request.ids?.length > 0\">\r\n                  <span\r\n                    [class.is-fixed]=\"listRequests.length <= 10\"\r\n                    [class.is-absolute]=\"listRequests.length > 10\"\r\n                    [class.is-last]=\"listRequests.length - 10 <= i\"\r\n                    class=\"ids\">\r\n                    <div>\r\n                      {{request.id}}\r\n                    </div>\r\n                    <div *ngFor=\"let id of request.ids\">\r\n                      {{id}}\r\n                    </div>\r\n                  </span>\r\n                  </pek-hover-detailed-info-component>\r\n\r\n                </td>\r\n                <td style=\"width: 15%;\">\r\n                  <h3 class=\"td-title\">Code</h3>\r\n                  <div *ngIf=\"request.material_nomenclature\">\r\n                    {{request.material_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"request.order_product_nomenclature\">\r\n                    {{request.order_product_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n                    {{request.list_product.nomenclature.code}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 15%;\" class=\"serial-numbers-container\">\r\n                  <h3 class=\"td-title\">Name</h3>\r\n                  <div *ngIf=\"request.material_nomenclature\">\r\n                    <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{request.material_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"request.order_product_nomenclature\">\r\n                    <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{request.order_product_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n                    <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{request.list_product.nomenclature.name}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Serial number</h3>\r\n                  <span *ngIf=\"request.reserved_serial_products?.length === 1\">\r\n                  {{request.reserved_serial_products[0].serial_number.type_with_number}}\r\n                  </span>\r\n                </td>\r\n                <td style=\"width: 12%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Technology</h3>\r\n                  <span *ngIf=\"request.technology\">{{request.technology}}</span>\r\n                </td>\r\n                <td style=\"width: 14%;\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Required Quantity</h3>\r\n                  {{request.total_required_quantity}}\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Locator</h3>\r\n                  <div *ngIf=\"request.locators\">\r\n                    <div *ngFor=\"let locator of request.unique_locators; let last=last\">\r\n                      {{locator.name}} <span *ngIf=\"!last\">,</span>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 4%\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">UOM</h3>\r\n                  <div\r\n                    *ngIf=\"request.material_nomenclature\">\r\n                    {{request.material_nomenclature?.category?.unit_of_measure?.symbol ? request.material_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"request.order_product_nomenclature\">\r\n                    {{request.order_product_nomenclature?.category?.unit_of_measure?.symbol ? request.order_product_nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                  </div>\r\n                  <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n                    {{request.list_product.nomenclature?.category?.unit_of_measure?.symbol ? request.list_product.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                  </div>\r\n                </td>\r\n                <ng-container *ngIf=\"order?.accounting_type == 2\">\r\n                <td style=\"width: 10%;\" class=\"text-center\">\r\n                  <h3 class=\"td-title\">Status</h3>\r\n                  {{request.qc_delivery_status.name}}\r\n                </td>\r\n\r\n                <td style=\"width: 4%;\"\r\n                [class.disabled]=\"order.qc_delivery_status.qc_stage != 1\">\r\n                  <div class=\"table-buttons\">\r\n                    <ng-container *ngIf=\"!request.qc_delivery_status.is_qc_completed || request.qc_delivery_status.qc_stage != 1 || request.qc_delivery_status.id === 3\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-success ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-check\"\r\n                      [disabled]=\"request.qc_delivery_status.qc_stage !=1 || request.qc_delivery_status.is_qc_completed\"\r\n                      (click)=\"onUpdateItems(request, 1, true)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"(!request.qc_delivery_status.is_qc_completed && request.qc_delivery_status.qc_stage === 1) || request.qc_delivery_status.id === 2\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-danger ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-times\"\r\n                      [disabled]=\"request.qc_delivery_status.qc_stage !=1 || request.qc_delivery_status.is_qc_completed\"\r\n                      (click)=\"onUpdateItems(request, 1, false)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 4%;\"\r\n                [class.disabled]=\"request.qc_delivery_status.qc_stage != 2 && request.qc_delivery_status.id != 3\">\r\n                  <div class=\"table-buttons\">\r\n                    <ng-container *ngIf=\"!request.qc_delivery_status.is_qc_completed || request.qc_delivery_status.qc_stage != 2 || request.qc_delivery_status.id === 6\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-success ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-check\"\r\n                      [disabled]=\"(request.qc_delivery_status.qc_stage !=2 || request.qc_delivery_status.is_qc_completed) && request.qc_delivery_status.id != 3\"\r\n                      (click)=\"onUpdateItems(request, 2, true)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"(!request.qc_delivery_status.is_qc_completed && request.qc_delivery_status.qc_stage === 2) || request.qc_delivery_status.qc_stage === 1 || request.qc_delivery_status.id === 5\">\r\n                    <button\r\n                      pButton\r\n                      class=\"p-button-danger ml-2\"\r\n                      type=\"button\"\r\n                      icon=\"pi pi-times\"\r\n                      [disabled]=\"(request.qc_delivery_status.qc_stage !=2 || request.qc_delivery_status.is_qc_completed) && request.qc_delivery_status.id != 3\"\r\n                      (click)=\"onUpdateItems(request, 2, false)\"\r\n                    ></button>\r\n                    </ng-container>\r\n                  </div>\r\n                </td>\r\n                </ng-container>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr class=\"tr-spinner\">\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                  <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"dt.paginator=false\"\r\n                styleClass=\"p-button-text\"\r\n              >All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n        <div *ngIf=\"!dt.paginator && !isLoading && listRequests.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=true\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <div class=\"page__table\">\r\n        <p-table selectionMode=\"single\" [value]=\"technicalEquipments\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"table-tools\" *ngIf=\"technicalEquipments\">\r\n              <h2 class=\"subtitle\">Technical Equipments</h2>\r\n              <div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 35%\">Code</th>\r\n              <th style=\"width: 30%\">Name</th>\r\n              <th style=\"width: 30%\">Locator</th>\r\n              <th style=\"width: 30%\" class=\"text-center\">Quantity</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-technicalEquipment let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"technicalEquipment\" class=\"table-row\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td>{{technicalEquipment.nomenclature.code}}</td>\r\n              <td>{{technicalEquipment.nomenclature.name}}</td>\r\n              <td>\r\n                <div *ngIf=\"technicalEquipment.locators.length > 0\">\r\n                  <div *ngFor=\"let locator of technicalEquipment.locators; let last=last\">\r\n                    {{locator.name}}<span *ngIf=\"!last\">, </span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"technicalEquipment.locators.length < 1\">\r\n                  <span *ngFor=\"let locator of technicalEquipment.available_locators; let last=last\">\r\n                    {{locator.name}}<span *ngIf=\"!last\">, </span>\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td class=\"text-center\">{{technicalEquipment.max_initial_quantity}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td colspan=\"5\">\r\n                Choice ordered item\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\" let-columns>\r\n            <tr class=\"tr-spinner\">\r\n              <td class=\"text-center p-5\" [attr.colspan]=\"7\">\r\n                <i *ngIf=\"isLoading\" class=\"fas fa-circle-notch fa-spin fa-3x \"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"print-page\" *ngIf=\"isShowPrint\">\r\n    <div>\r\n      <pek-qc-delivery-print-page\r\n        [rootList]=\"rootList\"\r\n        [orderId]=\"+orderId\"\r\n        [requests]=\"listRequests\"\r\n        [currentReqDate]=\"currentReqDate\"\r\n        [technologies]=\"order?.ordered_items_technologies\"\r\n        [outsourcer]=\"order?.supplier\"\r\n        [technicalEquipments]=\"technicalEquipments\"\r\n      ></pek-qc-delivery-print-page>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"print-page\" *ngIf=\"isShowPrintGrouped\">\r\n    <div>\r\n      <pek-qc-delivery-print-page\r\n        [rootList]=\"rootList\"\r\n        [orderedProducts]=\"orderedProductsForPrint\"\r\n        [orderId]=\"+orderId\"\r\n        [requests]=\"listRequests\"\r\n        [currentReqDate]=\"currentReqDate\"\r\n        [technologies]=\"order?.ordered_items_technologies\"\r\n        [outsourcer]=\"order?.supplier\"\r\n        [technicalEquipments]=\"technicalEquipments\"\r\n      ></pek-qc-delivery-print-page>\r\n    </div>\r\n  </div>\r\n\r\n  <pek-qr-code-scanner\r\n    *ngIf=\"isScanned\"\r\n    (scanned)=\"onScanned($event)\"\r\n    (cancel)=\"onCancelScanned()\"\r\n  ></pek-qr-code-scanner>\r\n  <ng-template #orderLink>\r\n    <a class=\"order-link\" (click)=\"goToOrder()\">{{order?.id}}</a>\r\n  </ng-template>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {\r\n  EInvoiceProductQualityControl,\r\n  EInvoiceProductRMAStatus,\r\n  InvoiceProduct\r\n} from '../../../procurement/models/invoice-product';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {QcService} from '../../services/qc.service';\r\nimport {AlbumService} from '@shared/services/album.service';\r\nimport {environment} from '@env/environment';\r\nimport {deepCopy} from 'deep-copy-ts';\r\nimport {ScanResult} from '../../../qr-code/models/scan-result';\r\nimport {\r\n  logExperimentalWarnings\r\n} from '@angular-devkit/build-angular/src/builders/browser-esbuild/experimental-warnings';\r\n\r\n@Component({\r\n  selector: 'pek-qc-invoice',\r\n  templateUrl: './qc-invoice.component.html',\r\n  styleUrls: ['./qc-invoice.component.scss']\r\n})\r\nexport class QcInvoiceComponent implements OnInit {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  isLoading = true;\r\n  isLoadingProducts = false;\r\n  isLoadingTechnicalEquipment = true;\r\n  isGenerating = false;\r\n  isCancellation = false;\r\n  isCompletingProducts = false;\r\n  isCompleting = false;\r\n\r\n  invoice: Invoice;\r\n  invoiceId: number;\r\n\r\n  invoiceProducts: InvoiceProduct[] = [];\r\n  selectedInvoiceProducts: InvoiceProduct[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedTechnicalEquipment: OrderTechnicalEquipment;\r\n\r\n  invoiceCanBeCompleted = false;\r\n\r\n  isScanning = false;\r\n  scanningEnd: boolean;\r\n  foundSerialId: number;\r\n\r\n  constructor(\r\n    private readonly invoiceService: InvoiceService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly invoiceProductService: InvoiceProductService,\r\n    private readonly qrCodeService: QrCodeService,\r\n    private readonly qcService: QcService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly modalService: ModalService,\r\n    public readonly albumService: AlbumService,\r\n    private readonly router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.invoiceId = +id),\r\n      tap(() => this.getInvoice()),\r\n      tap(() => this.getInvoiceProducts()),\r\n    ).subscribe();\r\n  }\r\n\r\n  getInvoice() {\r\n    this.invoiceService.getById(this.invoiceId).pipe(\r\n      tap(invoice => this.invoice = invoice),\r\n      tap(() => this.getTechnicalEquipmentToQc()),\r\n      tap(() => this.isLoading = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  // Code reference\r\n  // getInvoiceProducts() {\r\n  //   this.invoiceProducts = [];\r\n  //   this.selectedInvoiceProducts = [];\r\n  //   this.isLoadingProducts = true;\r\n  //\r\n  //   this.invoiceProductService.getInvoiceProducts(this.invoiceId).pipe(\r\n  //     tap(products => {\r\n  //\r\n  //       const RMAProducts = [];\r\n  //       const RMAPassedProducts = [];\r\n  //       const NonRMAProducts = [];\r\n  //       const allocated_products = products.filter(product => product.allocated_quantity > 0);\r\n  //       products = products.filter(product => product.allocated_quantity === 0);\r\n\r\n  //       deepCopy(products).filter(product => product.rma_status).forEach(product => {\r\n  //         const technologyId = product.current_technology?.id;\r\n  //         const nomenclatureId = product.nomenclature.id;\r\n  //         const rmaStatus = product.rma_status;\r\n  //         const existing = RMAProducts.find(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.rma_status === rmaStatus &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         const allocated = allocated_products.filter(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         if (existing) {\r\n  //           if (rmaStatus) {\r\n  //             existing.totalQuantity = existing.totalQuantity += product.quantity - product.accepted_quantity;\r\n  //             existing.totalQuantityPassed = existing.totalQuantityPassed += product.passed_quantity > 0 ? product.passed_quantity - product.accepted_quantity : 0;\r\n  //             existing.totalSerialNumbers.push(...product.serial_numbers.filter(sn => !sn.is_passed).map(sn => {\r\n  //               return {\r\n  //                 ...sn,\r\n  //                 invoice_product_id: product.id\r\n  //               };\r\n  //             }));\r\n  //           }\r\n  //           existing.totalQuantityNotPassed += product.not_passed_quantity;\r\n  //           existing.invoiceProducts.push(product);\r\n  //         } else {\r\n  //           product.invoiceProducts = [deepCopy(product)];\r\n  //           if (rmaStatus) {\r\n  //             product.totalQuantity = product.quantity - product.accepted_quantity;\r\n  //             product.totalQuantityPassed = product.passed_quantity > 0 ? product.passed_quantity - product.accepted_quantity : 0;\r\n  //             product.totalSerialNumbers = [...product.serial_numbers.filter(sn => !sn.is_passed).map(sn => {\r\n  //               return {\r\n  //                 ...sn,\r\n  //                 invoice_product_id: product.id\r\n  //               };\r\n  //             })];\r\n  //           }\r\n  //           product.totalQuantityAllocated = allocated.reduce((sum, p) => sum + p.allocated_quantity, 0);\r\n  //           product.totalQuantityNotPassed = product.not_passed_quantity;\r\n  //           if (product.totalQuantity > 0) {\r\n  //             RMAProducts.push(product);\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //\r\n  //       deepCopy(products).filter(product => product.rma_status).forEach(product => {\r\n  //         product.isNonRma = true;\r\n  //         const technologyId = product.current_technology?.id;\r\n  //         const nomenclatureId = product.nomenclature.id;\r\n  //         const existingPassedProducts = NonRMAProducts.find(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           !product.rma_status &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         const allocated = allocated_products.filter(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         if (!existingPassedProducts) {\r\n  //           const existing = RMAPassedProducts.find(el =>\r\n  //             el.nomenclature.id === nomenclatureId &&\r\n  //             el.current_technology?.id === technologyId);\r\n  //           if (existing) {\r\n  //             existing.totalQuantity = existing.totalQuantity += product.accepted_quantity;\r\n  //             existing.totalQuantityPassed = existing.totalQuantityPassed += product.accepted_quantity;\r\n  //             existing.totalSerialNumbers.push(...product.serial_numbers.filter(sn => sn.is_passed).map(sn => {\r\n  //               return {\r\n  //                 ...sn,\r\n  //                 invoice_product_id: product.id\r\n  //               };\r\n  //             }));\r\n  //             existing.totalQuantityNotPassed = existing.totalQuantityNotPassed += 0;\r\n  //             existing.invoiceProducts.push(product);\r\n  //           } else {\r\n  //             product.invoiceProducts = [deepCopy(product)];\r\n  //             product.totalQuantity = product.accepted_quantity;\r\n  //             product.totalQuantityPassed = product.accepted_quantity;\r\n  //             product.totalQuantityAllocated = allocated.reduce((sum, p) => sum + p.allocated_quantity, 0);\r\n  //             product.totalSerialNumbers = [...product.serial_numbers.filter(sn => sn.is_passed).map(sn => {\r\n  //               return {\r\n  //                 ...sn,\r\n  //                 invoice_product_id: product.id\r\n  //               };\r\n  //             })];\r\n  //             product.totalQuantityNotPassed = 0;\r\n  //             RMAPassedProducts.push(product);\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //\r\n  //       deepCopy(products).filter(product => !product.rma_status).forEach(product => {\r\n  //         const technologyId = product.current_technology?.id;\r\n  //         const nomenclatureId = product.nomenclature.id;\r\n  //         const existing = NonRMAProducts.find(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         const allocated = allocated_products.filter(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //\r\n  //         if (existing) {\r\n  //           existing.totalQuantity = existing.totalQuantity += product.quantity;\r\n  //           existing.totalQuantityPassed = existing.totalQuantityPassed += product.passed_quantity;\r\n  //           existing.totalSerialNumbers.push(...product.serial_numbers.map(sn => {\r\n  //             return {\r\n  //               ...sn,\r\n  //               invoice_product_id: product.id\r\n  //             };\r\n  //           }));\r\n  //           existing.totalQuantityNotPassed = existing.totalQuantityNotPassed += product.not_passed_quantity;\r\n  //           existing.invoiceProducts.push(product);\r\n  //         } else {\r\n  //           product.invoiceProducts = [deepCopy(product)];\r\n  //           product.totalQuantity = product.quantity;\r\n  //           product.totalQuantityPassed = product.passed_quantity;\r\n  //           product.totalQuantityAllocated = allocated.reduce((sum, p) => sum + p.allocated_quantity, 0);\r\n  //           product.totalSerialNumbers = [...product.serial_numbers.map(sn => {\r\n  //             return {\r\n  //               ...sn,\r\n  //               invoice_product_id: product.id\r\n  //             };\r\n  //           })];\r\n  //           product.totalQuantityNotPassed = product.not_passed_quantity;\r\n  //           NonRMAProducts.push(product);\r\n  //         }\r\n  //       });\r\n  //       this.invoiceProducts = [...RMAProducts, ...RMAPassedProducts, ...NonRMAProducts];\r\n  //       this.invoiceProducts.filter(p => !p.rma_status).forEach(product => {\r\n  //         const technologyId = product.current_technology?.id;\r\n  //         const nomenclatureId = product.nomenclature.id;\r\n  //         const existing = this.invoiceProducts.filter(el =>\r\n  //           el.nomenclature.id === nomenclatureId &&\r\n  //           el.rma_status &&\r\n  //           el.current_technology?.id === technologyId);\r\n  //         existing.forEach(prod => {\r\n  //           prod.invoiceProducts.forEach(invProd => {\r\n  //             product.totalQuantity += invProd.accepted_quantity;\r\n  //             product.totalQuantityPassed += invProd.accepted_quantity;\r\n  //           });\r\n  //         });\r\n  //       });\r\n  //       this.invoiceProducts.forEach((product, index) => {\r\n  //         product.idx = `${product.id}${index}`;\r\n  //         if (product.isNonRma) {\r\n  //           product.quality_control = EInvoiceProductQualityControl.PASSED.toString();\r\n  //         } else {\r\n  //           product.quality_control = null;\r\n  //           if (product.totalQuantityNotPassed > 0 || product.totalQuantityPassed > 0) {\r\n  //             if (product.totalQuantityPassed === product.totalQuantity) {\r\n  //               product.quality_control = EInvoiceProductQualityControl.PASSED.toString();\r\n  //             } else if (product.totalQuantityNotPassed === product.totalQuantity) {\r\n  //               product.quality_control = EInvoiceProductQualityControl.NOT_PASSED.toString();\r\n  //             } else if (product.totalQuantityNotPassed + product.totalQuantityPassed === product.totalQuantity) {\r\n  //               product.quality_control = EInvoiceProductQualityControl.PARTLY_PASSED.toString();\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       this.invoiceProducts = [...this.invoiceProducts.filter(p => p.totalQuantity)];\r\n  //       this.invoiceProducts.sort((a, b) => b.rma_comment.localeCompare(a.rma_comment));\r\n  //     }),\r\n  //     tap(products => this.invoiceCanBeCompleted = Boolean(products.find(p => p.quality_control))),\r\n  //     tap(() => this.isLoadingProducts = false)\r\n  //   ).subscribe();\r\n  // }\r\n\r\n  getInvoiceProducts() {\r\n    this.invoiceProducts = [];\r\n    this.selectedInvoiceProducts = [];\r\n    this.isLoadingProducts = true;\r\n\r\n    this.invoiceProductService.getInvoiceProducts(this.invoiceId).pipe(\r\n      tap(products => {\r\n        const allocated_products = products.filter(product => product.allocated_quantity > 0);\r\n\r\n        const formedRMAInvoiceProducts  = this.prepareRMAInvoiceProducts(products, allocated_products);\r\n        const formedNonRMAInvoiceProducts  = this.prepareNonRMAInvoiceProducts(products, allocated_products);\r\n\r\n        this.invoiceProducts = [...formedRMAInvoiceProducts, ...formedNonRMAInvoiceProducts];\r\n        this.invoiceProducts.filter(p => !p.rma_status).forEach(product => {\r\n          const technologyId = product.current_technology?.id;\r\n          const nomenclatureId = product.nomenclature.id;\r\n          const existing = this.invoiceProducts.filter(el =>\r\n            el.nomenclature.id === nomenclatureId &&\r\n            el.rma_status &&\r\n            el.current_technology?.id === technologyId);\r\n          existing.forEach(prod => {\r\n            prod.invoiceProducts.forEach(invProd => {\r\n              product.totalQuantity += invProd.accepted_quantity;\r\n              product.totalQuantityPassed += invProd.accepted_quantity;\r\n            });\r\n          });\r\n        });\r\n\r\n        this.invoiceProducts.forEach((product, index) => {\r\n          product.idx = `${product.id}${index}`;\r\n          product.quality_control = null;\r\n          if (product.totalQuantityNotPassed > 0 || product.totalQuantityPassed > 0) {\r\n            if (product.totalQuantityPassed === product.totalQuantity) {\r\n              product.quality_control = EInvoiceProductQualityControl.PASSED.toString();\r\n            } else if (product.totalQuantityNotPassed === product.totalQuantity) {\r\n              product.quality_control = EInvoiceProductQualityControl.NOT_PASSED.toString();\r\n            } else if (product.totalQuantityNotPassed + product.totalQuantityPassed === product.totalQuantity) {\r\n              product.quality_control = EInvoiceProductQualityControl.PARTLY_PASSED.toString();\r\n            }\r\n          }\r\n        });\r\n        this.invoiceProducts = [...this.invoiceProducts.filter(p => p.totalQuantity)];\r\n        this.invoiceProducts.sort((a, b) => b.rma_comment.localeCompare(a.rma_comment));\r\n      }),\r\n      tap(products => this.invoiceCanBeCompleted = Boolean(products.find(p => p.quality_control))),\r\n      tap(() => this.isLoadingProducts = false)\r\n    ).subscribe();\r\n  }\r\n\r\n\r\n  private prepareRMAInvoiceProducts(products: InvoiceProduct[], allocated_products: InvoiceProduct[]) {\r\n    let formedRMAInvoiceProducts: any[] = [];\r\n    deepCopy(products).filter(product =>\r\n      product.rma_status === EInvoiceProductRMAStatus.RECEIVED).forEach(tempProduct => {\r\n      let product = tempProduct;\r\n      const technologyId = product.current_technology?.id;\r\n      const nomenclatureId = product.nomenclature.id;\r\n      const existingRMA = formedRMAInvoiceProducts.find(el =>\r\n        (el.nomenclature.id === nomenclatureId &&\r\n          el.current_technology?.id === technologyId));\r\n\r\n      const allocated = allocated_products.filter(el =>\r\n        el.nomenclature.id === nomenclatureId &&\r\n        el.current_technology?.id === technologyId);\r\n\r\n      if (existingRMA) {\r\n        existingRMA.invoiceProducts.push(deepCopy(product));\r\n        existingRMA.totalSerialNumbers.push(...product.serial_numbers.map(sn => {\r\n          return {\r\n            ...sn,\r\n            invoice_product_id: product.id\r\n          };\r\n        }));\r\n        existingRMA.totalQuantity += product.quantity;\r\n        existingRMA.totalQuantityPassed += product.passed_quantity;\r\n        existingRMA.totalQuantityNotPassed += product.not_passed_quantity;\r\n\r\n      } else {\r\n        product.invoiceProducts = [deepCopy(product)];\r\n        product.totalSerialNumbers = [...product.serial_numbers.map(sn => {\r\n          return {\r\n            ...sn,\r\n            invoice_product_id: product.id\r\n          };\r\n        })];\r\n        product.totalQuantity = product.quantity;\r\n        product.totalQuantityPassed = product.passed_quantity;\r\n        product.totalQuantityNotPassed = product.not_passed_quantity;\r\n        product.totalQuantityAllocated = allocated.reduce((sum, p) => sum + p.allocated_quantity, 0);\r\n\r\n        formedRMAInvoiceProducts.push(product);\r\n      }\r\n    });\r\n\r\n    return formedRMAInvoiceProducts;\r\n  }\r\n\r\n  private prepareNonRMAInvoiceProducts(products: InvoiceProduct[], allocated_products: InvoiceProduct[]) {\r\n    let formedRMAInvoiceProducts: any[] = [];\r\n    deepCopy(products).filter(product =>\r\n      (product.rma_status === \"\" && product.rma_comment === \"\") ||\r\n      product.rma_status === EInvoiceProductRMAStatus.PASSED).forEach(tempProduct => {\r\n      let product = tempProduct;\r\n      product.rma_status = '';\r\n      const technologyId = product.current_technology?.id;\r\n      const nomenclatureId = product.nomenclature.id;\r\n      const existingRMA = formedRMAInvoiceProducts.find(el =>\r\n        (el.nomenclature.id === nomenclatureId &&\r\n          el.current_technology?.id === technologyId));\r\n\r\n      const allocated = allocated_products.filter(el =>\r\n        el.nomenclature.id === nomenclatureId &&\r\n        el.current_technology?.id === technologyId);\r\n\r\n\r\n      if (existingRMA) {\r\n        existingRMA.invoiceProducts.push(deepCopy(product));\r\n        existingRMA.totalSerialNumbers.push(...product.serial_numbers.map(sn => {\r\n          return {\r\n            ...sn,\r\n            invoice_product_id: product.id\r\n          };\r\n        }));\r\n        existingRMA.totalQuantity += product.quantity;\r\n        existingRMA.totalQuantityPassed += product.passed_quantity;\r\n        existingRMA.totalQuantityNotPassed += product.not_passed_quantity;\r\n\r\n      } else {\r\n        product.invoiceProducts = [deepCopy(product)];\r\n        product.totalSerialNumbers = [...product.serial_numbers.map(sn => {\r\n          return {\r\n            ...sn,\r\n            invoice_product_id: product.id\r\n          };\r\n        })];\r\n        product.totalQuantity = product.quantity;\r\n        product.totalQuantityPassed = product.passed_quantity;\r\n        product.totalQuantityNotPassed = product.not_passed_quantity;\r\n        product.totalQuantityAllocated = allocated.reduce((sum, p) => sum + p.allocated_quantity, 0);\r\n\r\n        formedRMAInvoiceProducts.push(product);\r\n      }\r\n    });\r\n\r\n    return formedRMAInvoiceProducts;\r\n  }\r\n\r\n  getTechnicalEquipmentToQc() {\r\n    this.isLoadingTechnicalEquipment = true;\r\n    this.technicalEquipments = [];\r\n\r\n    if (this.invoice.order) {\r\n      this.orderProductService.getTechnicalEquipmentToQC(this.invoice.order.id).pipe(\r\n        tap(equipment => this.technicalEquipments = equipment),\r\n        tap(() => this.isLoadingTechnicalEquipment = false)\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedInvoiceProducts.forEach(invoiceProduct => {\r\n      invoiceProduct.invoiceProducts.forEach(p => {\r\n        if (p.nomenclature.bulk_or_serial === '1') {\r\n          send.by_nomenclatures_list.push({\r\n            nomenclature_id: p.nomenclature.id,\r\n            serial_number_ids:\r\n              p.nomenclature.bulk_or_serial === '1' ?\r\n                p.serial_numbers.map(s => +s.id) : [],\r\n            order_product_ids: [p.id],\r\n            invoice_product_ids: [],\r\n          });\r\n        } else {\r\n          const exists = send.by_nomenclatures_list.findIndex(el => el.nomenclature_id === p.nomenclature.id) >= 0;\r\n          if (!exists) {\r\n            send.by_nomenclatures_list.push({\r\n              nomenclature_id: p.nomenclature.id,\r\n              serial_number_ids: [],\r\n              order_product_ids: [p.id],\r\n              invoice_product_ids: [],\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n    });\r\n    this.qrCodeService.generateQrCodes(send, this.invoice.order.id, this.invoice.self_serial_number).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  onCancellation() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm),\r\n    ).subscribe(() => {\r\n      this.isCancellation = true;\r\n      this.invoiceService.cancellation(this.invoiceId).subscribe(() => {\r\n        this.isCancellation = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onComplete() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = {id: this.invoice.id, qc_completed: true};\r\n      this.isCompleting = true;\r\n      this.invoiceService.updatePartly(send).subscribe(() => {\r\n        this.isCompleting = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onCompleteItems() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = [];\r\n      const sendProducts = [];\r\n      this.selectedInvoiceProducts.forEach(product => {\r\n        const products = product.invoiceProducts.filter(p => !p.nomenclature.qc_protocol && p.nomenclature.bulk_or_serial === '0');\r\n        sendProducts.push(...products);\r\n      });\r\n\r\n      sendProducts.forEach(product => {\r\n        send.push({\r\n          id: product.id,\r\n          not_passed_quantity: 0,\r\n          passed_quantity: product.quantity,\r\n          quality_control: 1\r\n        });\r\n      });\r\n\r\n      this.isCompletingProducts = true;\r\n\r\n      this.invoiceProductService.severalUpdatePartly(send).pipe(\r\n        tap(() => this.getInvoiceProducts()),\r\n        tap(() => this.isCompletingProducts = false)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedInvoiceProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  onQualityControl() {\r\n    if (this.selectedInvoiceProducts[0].nomenclature.qc_protocol && this.selectedInvoiceProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedInvoiceProducts[0].passed_quantity) currentCount += this.selectedInvoiceProducts[0].totalQuantityPassed;\r\n      if (this.selectedInvoiceProducts[0].not_passed_quantity) currentCount += this.selectedInvoiceProducts[0].totalQuantityNotPassed;\r\n\r\n      this.qcService.withProtocolControlProduct(this.selectedInvoiceProducts[0], currentCount, this.selectedInvoiceProducts[0].totalQuantity, 'invoice', this.foundSerialId).subscribe(res => {\r\n        if (res) {\r\n          this.selectedInvoiceProducts = [];\r\n          this.getInvoiceProducts();\r\n        }\r\n      });\r\n    } else if (!this.selectedInvoiceProducts[0].nomenclature.qc_protocol && this.selectedInvoiceProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedInvoiceProducts[0].passed_quantity) currentCount += this.selectedInvoiceProducts[0].totalQuantityPassed;\r\n      if (this.selectedInvoiceProducts[0].not_passed_quantity) currentCount += this.selectedInvoiceProducts[0].totalQuantityNotPassed;\r\n\r\n      this.qcService.serializedControlProduct(this.selectedInvoiceProducts[0], currentCount, this.selectedInvoiceProducts[0].totalQuantity, 'invoice', this.foundSerialId).subscribe(res => {\r\n        if (res) {\r\n          this.selectedInvoiceProducts = [];\r\n          this.getInvoiceProducts();\r\n        }\r\n      });\r\n    } else {\r\n      this.qcService.controlProduct(this.selectedInvoiceProducts[0]).subscribe(res => {\r\n        if (res) {\r\n          this.selectedInvoiceProducts = null;\r\n          this.getInvoiceProducts();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onPrintAlbum() {\r\n    this.albumService.getNomenclaturesImages((this.selectedInvoiceProducts.map(p => p?.nomenclature)));\r\n  }\r\n\r\n  goToOrder() {\r\n    let link: string;\r\n    const order = this.invoice.order;\r\n\r\n    switch (order.accounting_type) {\r\n      case 1:\r\n        link = '/procurement/chains/order/' + order.id;\r\n        break;\r\n      case 2:\r\n        link = '/outsourcing/chains/order/' + order.id;\r\n        break;\r\n      case 3:\r\n        link = `/manufacturing/orders/order/` + order.id;\r\n        break;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  onQualityControlTechnicalEquipment() {\r\n    this.qcService.controlTechnicalEquipment(this.selectedTechnicalEquipment, true).subscribe(res => {\r\n      if (res) {\r\n        this.getTechnicalEquipmentToQc();\r\n        this.selectedTechnicalEquipment = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.isScanning = true;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.scanningEnd = true;\r\n    this.isScanning = false;\r\n    this.scanForListProduct(data);\r\n  }\r\n\r\n  scanForListProduct(data: ScanResult = null) {\r\n    this.invoiceService.scanInvoiceProductInQc(data, this.invoiceId).subscribe(res => {\r\n      const foundInvoiceProduct = this.invoiceProducts.find(orderProduct =>\r\n        orderProduct.invoiceProducts.findIndex(prod => prod.id === res.found_id) > -1);\r\n      if (foundInvoiceProduct) {\r\n        this.qcService.foundProductInList(foundInvoiceProduct.nomenclature).subscribe(res => {\r\n          if (res) {\r\n            if (data.serial_number) {\r\n              this.foundSerialId = data.serial_number;\r\n            }\r\n\r\n            this.selectedInvoiceProducts = [foundInvoiceProduct];\r\n            this.onQualityControl();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanning = false;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        Order ID <ng-container *ngIf=\"isLoading; else orderLink\">...</ng-container>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-print\"\r\n        label=\"Print Album\"\r\n        [loading]=\"albumService.loading$ | async\"\r\n        (click)=\"onPrintAlbum()\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-camera\"\r\n        label=\"Scan QR Codes\"\r\n        (click)=\"onStartScanning()\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-qrcode\"\r\n        label=\"Generate QR Codes\"\r\n        [loading]=\"isGenerating\"\r\n        (click)=\"onGenerateQrCodes()\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon mr-2\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete Products\"\r\n        [loading]=\"isCompletingProducts\"\r\n        [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n        (click)=\"onCompleteItems()\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-danger mr-2\"\r\n        icon=\"pi pi-times\"\r\n        [loading]=\"isCancellation\"\r\n        label=\"Cancellation\"\r\n        (click)=\"onCancellation()\"\r\n        [disabled]=\"isLoading\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-success\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        [loading]=\"isCompleting\"\r\n        (click)=\"onComplete()\"\r\n        [disabled]=\"!invoiceCanBeCompleted\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        scrollHeight=\"calc(100vh - 19rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingProducts\"\r\n        dataKey=\"idx\"\r\n        [rows]=\"10\"\r\n        [value]=\"invoiceProducts\"\r\n        [(selection)]=\"selectedInvoiceProducts\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 17%\">Name</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedInvoiceProducts.length === 0\">Choose the Product to edit</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon ml-auto mr-2\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              (click)=\"onShowImages()\"\r\n              [disabled]=\"isLoadingProducts || selectedInvoiceProducts.length === 0 || selectedInvoiceProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingProducts || selectedInvoiceProducts.length === 0 || selectedInvoiceProducts.length > 1 || selectedInvoiceProducts[0].isNonRma\"\r\n              (click)=\"onQualityControl()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\" [pSelectableRowDisabled]=\"product.isNonRma\">\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}} <b *ngIf=\"product.rma_status\">(RMA)</b>\r\n            </td>\r\n            <td style=\"width: 17%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              {{product.current_technology?.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantity}}\r\n              <b *ngIf=\"(product.isNonRma || !product.rma_comment) && product.totalQuantityAllocated > 0\"  pTooltip=\"Allocated products count\">\r\n                A ({{product.totalQuantityAllocated}})\r\n              </b>\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantityPassed}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantityNotPassed}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n\r\n  <h2 class=\"mt-4 mb-4\">Technical Equipment</h2>\r\n\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #st\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 19rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingTechnicalEquipment && technicalEquipments.length > 0\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"technicalEquipments\"\r\n        [(selection)]=\"selectedTechnicalEquipment\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 8%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 32%\">Name</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnicalEquipment\">Choose the Technical Equipment to Quality Control</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"ml-auto p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingTechnicalEquipment || !selectedTechnicalEquipment\"\r\n              (click)=\"onQualityControlTechnicalEquipment()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 8%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 32%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingTechnicalEquipment\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTechnicalEquipment\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"st.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!st.paginator && !isLoadingTechnicalEquipment && technicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"st.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #orderLink>\r\n  <a class=\"order-link\" (click)=\"goToOrder()\">{{invoice?.order?.id}}</a>\r\n</ng-template>\r\n\r\n\r\n<pek-qr-code-scanner\r\n  *ngIf=\"isScanning\"\r\n  (scanned)=\"onScanned($event)\"\r\n  (cancel)=\"onCancelScanned()\"\r\n></pek-qr-code-scanner>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {NavigationLink} from '../../../layout/navigation-route';\r\n\r\n@Component({\r\n  selector: 'pek-qc-layout',\r\n  templateUrl: './qc-layout.component.html',\r\n  styleUrls: ['./qc-layout.component.scss']\r\n})\r\nexport class QcLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Invoices', commands: ['list']},\r\n    {label: 'Delivery', commands: ['delivery']},\r\n  ];\r\n\r\n  settingRoutes: NavigationLink[] = [\r\n    {label: 'Protocols', commands: ['protocols']},\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<pek-header\r\n  [module]=\"'Quality Control'\"\r\n  [routes]=\"routes\"\r\n  [settingsRoutes]=\"settingRoutes\"\r\n></pek-header>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\n\r\ntype ViewType = 'list' | 'hierarchy'\r\n\r\n@Component({\r\n  selector: 'pek-qc-list',\r\n  templateUrl: './qc-list.component.html',\r\n  styleUrls: ['./qc-list.component.scss']\r\n})\r\nexport class QcListComponent implements OnInit {\r\n  invoices: Invoice[];\r\n  orders: Order[];\r\n\r\n  selectedInvoiceNode: TreeNode<Invoice>;\r\n  selectedOrderNode: TreeNode<Order>;\r\n  selectedPurchasedInvoiceNode: TreeNode<Invoice>;\r\n\r\n  invoicesViewType: ViewType = 'hierarchy';\r\n  invoicesOrderType: ViewType = 'hierarchy';\r\n  invoicesPurchasedType: ViewType = 'hierarchy';\r\n\r\n  invoiceManufacturedTree: TreeNode<Invoice>[];\r\n  invoicePurchasedTree: TreeNode<Invoice>[];\r\n  ownProductionCategorizedList: TreeNode[];\r\n\r\n  invoiceTree: TreeNode<Invoice>[];\r\n  orderTree: TreeNode<Invoice>[];\r\n\r\n  isLoadingInvoices = true;\r\n  isLoadingOrders = true;\r\n\r\n  showClosedInvoices = false;\r\n  showClosedOrders = false;\r\n\r\n  categories: TreeNode<Category>[];\r\n\r\n  invoicesList: Invoice[] = [];\r\n  ordersList: Order[] = [];\r\n  purchasedInvoicesList: Invoice[] = [];\r\n\r\n  selectedInvoice: Invoice;\r\n  selectedInvoiceItem: Invoice;\r\n  selectedInvoicePurchaseItem: Invoice;\r\n  selectedOrderItem: Order;\r\n\r\n  expanseMap = {};\r\n\r\n  private destroyInvoices$ = new Subject();\r\n  private destroyOrders$ = new Subject();\r\n\r\n  invoicesQuery: QuerySearch[] = [\r\n    {name: 'needs_qc', value: true},\r\n    {name: 'by_qc_module_permission', value: true}\r\n  ];\r\n\r\n  ordersQuery: QuerySearch[] = [\r\n    {name: 'needs_qc', value: true},\r\n    {name: 'by_qc_module_permission', value: true}\r\n  ];\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    supplier: [null],\r\n    qc_closed_date_after: [null],\r\n    qc_closed_date_before: [null],\r\n    accounting_type: [null],\r\n    material_or_service: [null],\r\n    purchase_categories: [null],\r\n    status: [null]\r\n  });\r\n\r\n  constructor(\r\n    private invoiceService: InvoiceService,\r\n    private orderService: OrderService,\r\n    private productStructureCategoryService: ProductStructureCategoryService,\r\n    private adapterService: AdapterService,\r\n    private fb: FormBuilder,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n    this.getInvoices();\r\n    this.getServices();\r\n  }\r\n\r\n  searchItems() {\r\n    this.searchInvoices();\r\n    this.searchServices();\r\n  }\r\n\r\n  searchInvoices() {\r\n    this.isLoadingInvoices = true;\r\n    this.destroyInvoices$.next(true);\r\n    this.invoiceManufacturedTree = [];\r\n    this.invoicePurchasedTree = [];\r\n    this.invoicesList = [];\r\n    this.purchasedInvoicesList = [];\r\n    this.invoices = [];\r\n    this.selectedInvoice = null;\r\n    this.invoicesQuery = [\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ];\r\n\r\n    if (!this.searchForm.get('qc_closed_date_after').value\r\n      && !this.searchForm.get('qc_closed_date_before').value) {\r\n      this.invoicesQuery.push({\r\n        name: 'needs_qc', value: true\r\n      });\r\n      this.showClosedInvoices = false;\r\n    } else {\r\n      this.showClosedInvoices = true;\r\n    }\r\n\r\n    if (this.searchForm.get('qc_closed_date_after').value) {\r\n      this.invoicesQuery.push({\r\n        name: 'qc_closed_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_closed_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_closed_date_before').value) {\r\n      this.invoicesQuery.push({\r\n        name: 'qc_closed_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_closed_date_before').value)\r\n      });\r\n    }\r\n    this.getInvoices();\r\n  }\r\n\r\n  searchServices() {\r\n    this.isLoadingOrders = true;\r\n    this.destroyOrders$.next(true);\r\n    this.orders = [];\r\n    this.ordersList = [];\r\n    this.ownProductionCategorizedList = [];\r\n    this.selectedOrderItem = null;\r\n    this.ordersQuery = [\r\n      {name: 'by_qc_module_permission', value: true}\r\n    ];\r\n\r\n    if (!this.searchForm.get('qc_closed_date_after').value\r\n      && !this.searchForm.get('qc_closed_date_before').value) {\r\n      this.ordersQuery.push({\r\n        name: 'needs_qc', value: true\r\n      });\r\n      this.showClosedOrders = false;\r\n    } else {\r\n      this.showClosedOrders = true;\r\n    }\r\n\r\n    if (this.searchForm.get('qc_closed_date_after').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_closed_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_closed_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('qc_closed_date_before').value) {\r\n      this.ordersQuery.push({\r\n        name: 'qc_closed_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('qc_closed_date_before').value)\r\n      });\r\n    }\r\n    this.getServices();\r\n  }\r\n\r\n  mapExpansion() {\r\n    this.categories.forEach(element => {\r\n      this.createExpanseMap(element);\r\n    });\r\n  }\r\n\r\n  createExpanseMap(node: TreeNode<Category>) {\r\n    if (node.expanded) {\r\n      this.expanseMap[node.data.id] = node.expanded;\r\n    } else {\r\n      this.expanseMap[node.data.id] = false;\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(element => {\r\n        this.createExpanseMap(element);\r\n      });\r\n    }\r\n  }\r\n\r\n  getCategories() {\r\n    this.productStructureCategoryService.get().pipe(\r\n      takeUntil(this.destroyInvoices$)\r\n    ).subscribe((categories) => {\r\n      if (this.categories) {\r\n        this.mapExpansion();\r\n      }\r\n      this.createTree(categories);\r\n    });\r\n  }\r\n\r\n  getInvoices() {\r\n    this.invoiceService.get(this.invoicesQuery).pipe(\r\n      takeUntil(this.destroyInvoices$)\r\n    ).subscribe(invoices => {\r\n      invoices.forEach(invoice => {\r\n        invoice.order = new Order(invoice.order);\r\n        invoice.order.generateUniqueToolRequests();\r\n      });\r\n\r\n      this.invoices = invoices;\r\n      this.makeUniqueProductionPlansInvoice();\r\n      this.resetProductPaymentTree();\r\n      this.resetInvoicesList();\r\n      this.isLoadingInvoices = false;\r\n    });\r\n  }\r\n\r\n  getServices(): void {\r\n    this.orderService.get(this.ordersQuery).pipe(\r\n      takeUntil(this.destroyOrders$)\r\n    ).subscribe(orders => {\r\n      this.orders = orders;\r\n      this.makeUniqueProductionPlans();\r\n      this.fillOwnProductionWithData();\r\n      this.resetOrdersList();\r\n      this.isLoadingOrders = false;\r\n    });\r\n  }\r\n\r\n  resetInvoicesList(): void {\r\n    this.purchasedInvoicesList = this.invoices.filter(i => i.purchase_category);\r\n    this.invoicesList = this.invoices.filter(i => !i.purchase_category);\r\n    this.invoicesList.sort((a, b) => b.rma_products_count - a.rma_products_count || new Date(b.qc_started_date).getTime() - new Date(a.qc_started_date).getTime());\r\n    this.purchasedInvoicesList.sort((a, b) => b.rma_products_count - a.rma_products_count || new Date(b.qc_started_date).getTime() - new Date(a.qc_started_date).getTime());\r\n  }\r\n\r\n  resetOrdersList(): void {\r\n    this.ordersList = this.orders;\r\n  }\r\n\r\n  resetProductPaymentTree(): void {\r\n    const categories: { name: string, description: string, id: number, level?: number }[] = [];\r\n    this.invoices.forEach(invoice => {\r\n      const purchaseCategory = invoice.purchase_category;\r\n\r\n      if (purchaseCategory) {\r\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\r\n        if (isAdded < 0) {\r\n          categories.push({\r\n            name: purchaseCategory.name,\r\n            id: purchaseCategory.id,\r\n            description: purchaseCategory.description,\r\n          });\r\n        }\r\n      } else {\r\n        if (invoice.order?.accounting_type === 1) {\r\n          const isAdded = categories.findIndex(el => el.id === -2);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Production Lists Procurement', id: -2, description: '', level: 0});\r\n          }\r\n        }\r\n        if (invoice.order?.accounting_type === 2) {\r\n          const isAdded = categories.findIndex(el => el.id === -1);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Outsourcing', id: -1, description: '', level: 0});\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    categories.sort((a, b) => a.id - b.id);\r\n    this.invoiceTree = [];\r\n    categories.forEach(cat => {\r\n      this.invoiceTree.push({\r\n        data: <any>cat,\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    this.createPaymentTree();\r\n  }\r\n\r\n  createPaymentTree() {\r\n    this.invoiceTree = this.invoiceTree.map(node => {\r\n      return {\r\n        ...node,\r\n        children: []\r\n      };\r\n    });\r\n\r\n    this.invoiceTree.forEach(node => {\r\n      // Preparing Purchased Invoices\r\n      this.invoices.filter(invoice => invoice.purchase_category).forEach(invoice => {\r\n\r\n        const purchaseCategory = invoice.purchase_category;\r\n        if (purchaseCategory) {\r\n          if (purchaseCategory.id === node.data.id) {\r\n            node.children.push({\r\n              data: invoice,\r\n              expanded: false,\r\n              children: []\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      // Preparing Manufacturing Procurement\r\n      if (node.data.id === -2) {\r\n        const manProc = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 1);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(manProc, node);\r\n      }\r\n\r\n      // Preparing Outsourcing\r\n      if (node.data.id === -1) {\r\n        const outsourcing = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 2);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(outsourcing, node);\r\n      }\r\n    });\r\n\r\n    this.separatePurchasedAndManufactured();\r\n  }\r\n\r\n  prepareInnerTreeCategories(invoices, nodeInner: TreeNode): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n    invoices.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        } else {\r\n          const indexNoNomenclature = categoriesTemp.findIndex(cat => cat.id === -2);\r\n          if (indexNoNomenclature < 0) {\r\n            categoriesTemp.push({\r\n              id: -2,\r\n              level: 1,\r\n              name: 'No root nomenclature',\r\n              parentId: null\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = nodeInner.children.findIndex(node => node.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          nodeInner.children.push({\r\n            data: {\r\n              id: -1,\r\n              level: 0,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          nodeInner.children[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    const temp = cloneDeep(nodeInner.children);\r\n    temp.forEach(node => {\r\n      this.appendCategories(node, categoriesTemp);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.fillWithTheData(node, invoices);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.removeUpdateEmptyCategories(node);\r\n    });\r\n\r\n    nodeInner.children = temp;\r\n  }\r\n\r\n  separatePurchasedAndManufactured(): void {\r\n    this.invoicePurchasedTree = this.invoiceTree.filter(invoice => invoice.data.id >= 0);\r\n    this.invoiceManufacturedTree = this.invoiceTree.filter(invoice => invoice.data.id < 0);\r\n    console.log(this.invoiceManufacturedTree);\r\n  }\r\n\r\n  makeUniqueProductionPlans(): void {\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans = [];\r\n      order.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex =\r\n            order.unique_root_production_plans\r\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            order.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  makeUniqueProductionPlansInvoice(): void {\r\n    this.invoices.forEach(invoice => {\r\n      invoice.unique_root_production_plans = [];\r\n      invoice.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex =\r\n            invoice.unique_root_production_plans\r\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            invoice.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  createTree(data) {\r\n    const dd = [];\r\n    data.forEach(element => {\r\n      const ins = {data: element, expanded: false};\r\n      if (this.expanseMap) {\r\n        ins.expanded = this.expanseMap[element.id];\r\n      }\r\n      dd.push(ins);\r\n    });\r\n    const root = [];\r\n    const idMapping = dd.reduce((acc, el, i) => {\r\n      acc[el.data.id] = i;\r\n      return acc;\r\n    }, {});\r\n    dd.forEach(el => {\r\n      if (el.data.parent === null) {\r\n        root.push(el);\r\n        return;\r\n      }\r\n      const parentEl = dd[idMapping[el.data.parent]];\r\n      parentEl.children = [...(parentEl.children || []), el];\r\n      if (parentEl.children.length === 0) {\r\n        delete parentEl.children;\r\n      }\r\n\r\n    });\r\n    this.categories = root;\r\n    this.ownProductionCategorizedList = cloneDeep(this.categories);\r\n  }\r\n\r\n  private fillOwnProductionWithData() {\r\n    this.fillCategorizedTree();\r\n  }\r\n\r\n  fillCategorizedTree(): void {\r\n    this.ownProductionCategorizedList = cloneDeep(this.categories);\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = this.ownProductionCategorizedList.findIndex(nodeInner => nodeInner.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          this.ownProductionCategorizedList.push({\r\n            data: {\r\n              id: -1,\r\n              level: 0,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          this.ownProductionCategorizedList[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.ownProductionCategorizedList) {\r\n      const temp = cloneDeep(this.ownProductionCategorizedList);\r\n      temp.forEach(node => {\r\n        this.appendCategories(node, categoriesTemp);\r\n      });\r\n\r\n      temp.forEach(node => {\r\n        this.fillWithTheData(node, this.orders);\r\n      });\r\n\r\n      temp.forEach(node => {\r\n        this.removeUpdateEmptyCategories(node);\r\n      });\r\n\r\n      this.ownProductionCategorizedList = temp;\r\n      this.isLoadingOrders = false;\r\n    }\r\n  }\r\n\r\n  appendCategories(node: TreeNode, categoriesTemp: {\r\n    id: number,\r\n    level: number,\r\n    parentId: number,\r\n    name: string\r\n  }[]): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    categoriesTemp.forEach(cat => {\r\n      if (cat.parentId === node.data.id) {\r\n        node.children.push({\r\n          data: {\r\n            id: cat.id,\r\n            name: cat.name,\r\n            level: cat.level,\r\n            parentId: cat.parentId,\r\n            isCategory: true,\r\n            categories: 0\r\n          },\r\n          expanded: false,\r\n          children: []\r\n        });\r\n      }\r\n    });\r\n\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.appendCategories(childNode, categoriesTemp);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillWithTheData(node: TreeNode, orders): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    if (node.data.isCategory) {\r\n      orders.forEach(order => {\r\n        order.unique_root_production_plans.forEach(plan => {\r\n          if (plan.root_nomenclature) {\r\n            const catId = plan.root_nomenclature.id;\r\n            if (node.data.id === catId) {\r\n              const existingCatChildIndex = node.children.findIndex(cat => cat.data.id === plan.list_product.nomenclature.id);\r\n\r\n              if (existingCatChildIndex < 0) {\r\n                node.children.push({\r\n                  data: {\r\n                    id: plan.list_product.nomenclature.id,\r\n                    name: plan.list_product.nomenclature.name,\r\n                    level: 3,\r\n                    categories: 0,\r\n                  },\r\n                  expanded: false,\r\n                  children: [{\r\n                    data: {order, plan, level: 4},\r\n                    expanded: false,\r\n                    children: []\r\n                  }]\r\n                });\r\n              } else {\r\n                node.children[existingCatChildIndex].children.push({\r\n                  data: {order, plan, level: 4},\r\n                  expanded: false,\r\n                  children: []\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.fillWithTheData(childNode, orders);\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUpdateEmptyCategories(node: TreeNode): void {\r\n    if (!node.data.isCategory && !node.data.order) {\r\n      let hideFromTable = true;\r\n      const hasContent = node.children.filter(child => child.data.order).length > 0;\r\n      if (hasContent) {\r\n        hideFromTable = false;\r\n      }\r\n\r\n      node.children.forEach(childNode => {\r\n        checkForContent(childNode);\r\n      });\r\n\r\n      function checkForContent(childNode) {\r\n        if (hideFromTable) {\r\n          const hasContentInner = childNode.children.filter(child => child.data.order).length > 0;\r\n          if (hasContentInner) {\r\n            hideFromTable = false;\r\n          }\r\n        }\r\n        childNode.children.forEach(childNode2 => {\r\n          checkForContent(childNode2);\r\n        });\r\n      }\r\n\r\n      node.data.hideFromTable = hideFromTable;\r\n    }\r\n\r\n    node.data.categories = node.children.length;\r\n    if (node.children) {\r\n      node.children.forEach((childNode, indexChild) => {\r\n        this.removeUpdateEmptyCategories(childNode);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapseAllInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoiceManufacturedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoiceManufacturedTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapsePurchasedInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoicePurchasedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoicePurchasedTree = temp;\r\n  }\r\n\r\n  expandCollapseAllOrders(isToExpand = true): void {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n\r\n  onSelectInvoiceType(view: ViewType) {\r\n    this.invoicesViewType = view;\r\n  }\r\n\r\n  onSelectOrderType(view: ViewType) {\r\n    this.invoicesOrderType = view;\r\n  }\r\n\r\n  onSelectPurchaseType(view: ViewType) {\r\n    this.invoicesPurchasedType = view;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Invoices</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__tabs\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form mb-3\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Closed Date From</label>\r\n            <p-calendar\r\n              formControlName=\"qc_closed_date_after\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>QC Closed Date To</label>\r\n            <p-calendar\r\n              formControlName=\"qc_closed_date_before\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              dataType=\"date\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"searchItems()\"\r\n              [showButtonBar]=\"true\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <p-tabView class=\"custom-tabs\">\r\n      <p-tabPanel\r\n        [header]=\"'Production Lists Procurement and Outsourcing Invoices'\"\r\n        [selected]=\"true\"\r\n      >\r\n        <ng-container *ngIf=\"invoicesViewType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #dt\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"invoicesList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedInvoiceItem\"\r\n              [value]=\"invoicesList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoiceItem\">\r\n                    Choose the Production Lists Procurement or Outsourcing Invoice to view Items\r\n                  </p>\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedInvoiceItem\"\r\n                    [routerLink]=\"['../', 'invoice', selectedInvoiceItem?.id]\"\r\n                    target=\"_blank\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesViewType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectInvoiceType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectInvoiceType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\">QC Started Date</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">QC Closed Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"invoice\">\r\n                  <td style=\"width: 5%\" class=\"text-center\">\r\n                    {{i + 1}}\r\n                  </td>\r\n                  <td style=\"width: 20%\" class=\"text-center\">\r\n                    {{(invoice.order?.qc_started_date ? invoice.order?.qc_started_date : invoice.system_creation_date) | date:'dd/MM/yyyy HH:mm'}}\r\n                    <b *ngIf=\"invoice.rma_products_count\">(RMA)</b>\r\n                  </td>\r\n                  <td style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    {{invoice.order?.qc_closed_date | date:'dd/MM/yyyy HH:mm'}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.supplier?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.order?.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <div class=\"word-break\"\r\n                         *ngFor=\"let request of invoice?.order?.uniqueToolRequests; let idx = index; let last=last\">\r\n                        {{request?.toolRequest?.tool_order?.area_locator?.name}}<span *ngIf=\"!last\">,</span>\r\n                    </div>\r\n                    <ng-container *ngIf=\"invoice.root_production_plans.length > 0\">\r\n                      {{invoice.root_production_plans[0].list_product.nomenclature.code}}\r\n                      ~{{invoice.root_production_plans[0].list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"dt.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!dt.paginator && !isLoadingInvoices && invoicesList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesViewType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              #dt\r\n              selectionMode=\"single\"\r\n              [value]=\"invoiceManufacturedTree\"\r\n              [(selection)]=\"selectedInvoiceNode\"\r\n              scrollHeight=\"calc(100vh - 22rem)\"\r\n              [scrollable]=\"true\"\r\n            >\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 20%; padding-left: 19px\">\r\n                    QC Started Date\r\n                  </th>\r\n                  <th style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    QC Closed Date\r\n                  </th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoiceNode\">\r\n                    Choose the Production Lists Procurement or Outsourcing Invoice to view Items\r\n                  </p>\r\n                  <a\r\n                    [class.disabled]=\"!selectedInvoiceNode\"\r\n                    [routerLink]=\"['../', 'invoice', selectedInvoiceNode?.data.order ?\r\n        selectedInvoiceNode?.data.order.id :\r\n        selectedInvoiceNode?.data.id]\"\r\n                    target=\"_blank\"\r\n                    class=\"ml-auto mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                  >\r\n                  </a>\r\n                  <button\r\n                    [disabled]=\"isLoadingInvoices\"\r\n                    class=\"mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Expand All\"\r\n                    icon=\"pi pi-angle-down\"\r\n                    (click)=\"expandCollapseAllInvoices()\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"isLoadingInvoices\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"Collapse All\"\r\n                    icon=\"pi pi-angle-up\"\r\n                    (click)=\"expandCollapseAllInvoices(false)\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectInvoiceType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesViewType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectInvoiceType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template\r\n                pTemplate=\"body\"\r\n                let-invoiceNode\r\n                let-invoice=\"rowData\"\r\n                let-i=\"rowIndex\"\r\n              >\r\n                <tr\r\n                  [ttRow]=\"invoiceNode\"\r\n                  [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                  [ttSelectableRow]=\"invoiceNode\"\r\n                    *ngIf=\"!invoice.hideFromTable\"\r\n                >\r\n                  <td  style=\"width: 20%\" [class.text-center]=\"invoice.order\">\r\n                    <div class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                      <ng-container *ngIf=\"!invoice.order\">\r\n                        <span [class.category-name]=\"invoice.level === 0 && invoice.hideFromTable !== false\">\r\n                          {{invoice.name}}\r\n                          <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                          <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\r\n                        </span>\r\n                      </ng-container>\r\n                      <span *ngIf=\"invoice.level === 4\">\r\n                        {{(invoice.order?.order?.qc_started_date ? invoice.order?.order?.qc_started_date :\r\n                        invoice.order.system_creation_date) |date:'dd/MM/yyyy HH:mm'}}\r\n                        <b *ngIf=\"invoice.order.rma_products_count\">(RMA)</b>\r\n                        </span>\r\n                    </div>\r\n                  </td>\r\n                  <td  style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.order?.order?.qc_closed_date |date:'dd/MM/yyyy HH:mm'}}\r\n                    </span>\r\n                  </td>\r\n                  <td  style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                    </ng-container>\r\n                    <span\r\n                      *ngIf=\"invoice.level === 4\"\r\n                      [class.text-warning]=\"invoice.order.unique_root_production_plans.length > 1\"\r\n                    >\r\n                    {{invoice.order.self_serial_number}} {{invoice.order.self_proforma_serial_number}}\r\n                    </span>\r\n                  </td>\r\n                  <td  style=\"width: 10%\" class=\"text-center\">\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.order?.order?.id}}\r\n                    </span>\r\n                  </td>\r\n                  <td  style=\"width: 20%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.supplier?.name}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.order.supplier?.name}}\r\n                    </span>\r\n                  </td>\r\n                  <td  style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 20%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      <div class=\"word-break\"\r\n                           *ngFor=\"let request of invoice?.order?.order?.uniqueToolRequests; let idx = index; let last=last\">\r\n                          {{request?.toolRequest?.tool_order?.area_locator?.name}}<span *ngIf=\"!last\">,</span>\r\n                      </div>\r\n                      <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\r\n                        {{root_list.list_product.nomenclature.name}}\r\n                      </div>\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                      {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                      <span>({{invoice.plan.required_quantity}})</span>\r\n                </span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'Own Production'\"\r\n      >\r\n\r\n        <ng-container *ngIf=\"invoicesOrderType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #ot\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"ordersList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedOrderItem\"\r\n              [value]=\"ordersList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderItem\">\r\n                    Сhoose the Own Production Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedOrderItem\"\r\n                    [routerLink]=\"['../', 'order', selectedOrderItem?.id]\"\r\n                    target=\"_blank\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">\r\n                    QC Started Date\r\n                  </th>\r\n                  <th style=\"width: 25%\" class=\"text-center\" *ngIf=\"showClosedOrders\">\r\n                    QC Closed Date\r\n                  </th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"order\">\r\n                  <td class=\"text-center\">{{i + 1}}</td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{(order?.qc_started_date ? order?.qc_started_date : order?.created) | date:'dd/MM/yyyy HH:mm'}}\r\n                    <b *ngIf=\"order.contains_rma_invoices\">(RMA)</b>\r\n                  </td>\r\n<!--                  <td style=\"width: 25%\" class=\"text-center\">-->\r\n<!--                    {{order?.qc_closed_date | date:'dd/MM/yyyy HH:mm'}}-->\r\n<!--                  </td>-->\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{order.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%;\" class=\"text-center\">\r\n                    {{order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n\r\n                  <td style=\"width: 20%;\">\r\n                    <div *ngFor=\"let root_plan of order.unique_root_production_plans\">\r\n                      {{root_plan.list_product.nomenclature.code}}~{{root_plan.list_product.nomenclature.name}}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"ot.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!ot.paginator && !isLoadingOrders && ordersList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"ot.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesOrderType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              #dt\r\n              selectionMode=\"single\"\r\n              [value]=\"ownProductionCategorizedList\"\r\n              [(selection)]=\"selectedOrderNode\"\r\n              [scrollable]=\"true\"\r\n              scrollHeight=\"calc(100vh - 22rem)\"\r\n            >\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\r\n                  <th style=\"width: 20%;\" class=\"text-center\" *ngIf=\"showClosedOrders\">QC Closed Date</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 45%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderNode\">\r\n                    Choose Own Production Item to view Items\r\n                  </p>\r\n                  <a\r\n                    [class.disabled]=\"!selectedOrderNode\"\r\n                    [routerLink]=\"['../', 'order', selectedOrderNode?.data.order.id]\"\r\n                    class=\"ml-auto mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    target=\"_blank\"\r\n                  >\r\n                  </a>\r\n                  <button\r\n                    [disabled]=\"isLoadingOrders\"\r\n                    (click)=\"expandCollapseAllOrders()\"\r\n                    class=\"mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Expand All\"\r\n                    icon=\"pi pi-angle-down\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"isLoadingOrders\"\r\n                    (click)=\"expandCollapseAllOrders(false)\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Collapse All\"\r\n                    class=\"mr-2\"\r\n                    icon=\"pi pi-angle-up\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template\r\n                pTemplate=\"body\"\r\n                let-rowNode\r\n                let-rowData=\"rowData\"\r\n              >\r\n                <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\" [ttSelectableRowDisabled]=\"rowData.level < 4\" *ngIf=\"!rowData.hideFromTable\">\r\n                  <td style=\"width: 20%;\">\r\n                    <div  class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                      <span [class.category-name]=\"rowData.level === 0\">\r\n                          {{rowData.name}}\r\n                        <i *ngIf=\"rowData.level < 4\" style=\"font-style: normal\">({{rowData.categories}})</i>\r\n                  </span>\r\n                      <span *ngIf=\"rowData.order\">\r\n                    {{(rowData.order.qc_started_date? rowData.order.qc_started_date : rowData.order.created) | date: 'dd/MM/yyyy HH:mm'}}\r\n                        <b *ngIf=\"rowData.order.contains_rma_invoices\">(RMA)</b>\r\n                </span>\r\n                    </div>\r\n                  </td>\r\n                  <td style=\"width: 20%;\" class=\"text-center\" *ngIf=\"showClosedOrders\">\r\n                    <span *ngIf=\"rowData.order\">\r\n                      {{rowData.order.qc_closed_date | date:'dd/MM/yyyy HH:mm'}}\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 15%;\" class=\"text-center\">\r\n                <span *ngIf=\"rowData.order\" [class.text-warning]=\"rowData.order.unique_root_production_plans.length > 1\">\r\n                  {{rowData.order.id}}\r\n                </span>\r\n                  </td>\r\n                  <td style=\"width: 45%;\" class=\"text-center\">\r\n              <span *ngIf=\"rowData.order\">\r\n                {{rowData.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n              </span>\r\n                  </td>\r\n                  <td style=\"width: 20%;\" class=\"text-center\">\r\n                <span *ngIf=\"rowData.order && rowData.plan\"  >\r\n                  {{rowData.plan.list_product.nomenclature.code}}~{{rowData.plan.list_product.nomenclature.name}}\r\n                </span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                    <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'General Procurement Invoices'\"\r\n      >\r\n        <ng-container *ngIf=\"invoicesPurchasedType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #pt\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"purchasedInvoicesList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedInvoicePurchaseItem\"\r\n              [value]=\"purchasedInvoicesList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoicePurchaseItem\">\r\n                    Choose the General Procurement Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedInvoicePurchaseItem\"\r\n                    [routerLink]=\"['../', 'invoice', selectedInvoicePurchaseItem?.id]\"\r\n                    target=\"_blank\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesPurchasedType=== 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectPurchaseType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectPurchaseType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\">QC Started Date</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">QC Closed Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"invoice\">\r\n                  <td style=\"width: 5%\" class=\"text-center\">\r\n                    {{i + 1}}\r\n                  </td>\r\n                  <td style=\"width: 20%\" class=\"text-center\">\r\n                    {{(invoice.order?.qc_started_date ? invoice.order?.qc_wh_started_date :\r\n                    invoice.system_creation_date) | date:'dd/MM/yyyy HH:mm'}}  <b *ngIf=\"invoice.rma_products_count\">(RMA)</b>\r\n                  </td>\r\n                  <td style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    {{invoice.order?.qc_closed_date | date:'dd/MM/yyyy HH:mm'}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.supplier?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.order?.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <ng-container *ngIf=\"invoice.root_production_plans.length > 0\">\r\n                      {{invoice.root_production_plans[0].list_product.nomenclature.code}}\r\n                      ~{{invoice.root_production_plans[0].list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"pt.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!pt.paginator && !isLoadingInvoices && purchasedInvoicesList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"pt.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesPurchasedType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              #dt\r\n              selectionMode=\"single\"\r\n              [value]=\"invoicePurchasedTree\"\r\n              [(selection)]=\"selectedPurchasedInvoiceNode\"\r\n              scrollHeight=\"calc(100vh - 22rem)\"\r\n              [scrollable]=\"true\"\r\n            >\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    QC Closed Date\r\n                  </th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedPurchasedInvoiceNode\">\r\n                    Choose the General Procurement Invoice to view Items\r\n                  </p>\r\n                  <a\r\n                    [class.disabled]=\"!selectedPurchasedInvoiceNode\"\r\n                    [routerLink]=\"['../', 'invoice', selectedPurchasedInvoiceNode?.data.invoice ?\r\n        selectedPurchasedInvoiceNode?.data.invoice.id :\r\n        selectedPurchasedInvoiceNode?.data.id]\"\r\n                    class=\"ml-auto mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    target=\"_blank\"\r\n                  >\r\n                  </a>\r\n                  <button\r\n                    [disabled]=\"isLoadingInvoices\"\r\n                    class=\"mr-2\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Expand All\"\r\n                    icon=\"pi pi-angle-down\"\r\n                    (click)=\"expandCollapsePurchasedInvoices()\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"isLoadingInvoices\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Collapse All\"\r\n                    class=\"mr-2\"\r\n                    icon=\"pi pi-angle-up\"\r\n                    (click)=\"expandCollapsePurchasedInvoices(false)\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectPurchaseType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesPurchasedType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectPurchaseType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoiceNode let-invoice=\"rowData\" let-i=\"rowIndex\">\r\n                <tr [ttRow]=\"invoiceNode\"\r\n                    [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                    [ttSelectableRow]=\"invoiceNode\">\r\n                  <td  style=\"width: 20%\"\r\n                      [class.text-center]=\"invoice.order\">\r\n                    <div  class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                      <ng-container *ngIf=\"!invoice.order\">\r\n                    <span [class.category-name]=\"!invoice.level && invoice.level !== 1\">{{invoice.name}}\r\n                      <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                      <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\r\n                    </span>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"invoice.order\">\r\n                  <span>\r\n                    {{(invoice.order.qc_started_date ? invoice.order.qc_started_date : invoice.system_creation_date)|date:'dd/MM/yyyy HH:mm'}}\r\n                    <b *ngIf=\"invoice.order.rma_products_count\">(RMA)</b>\r\n                  </span>\r\n                      </ng-container>\r\n                    </div>\r\n                  </td>\r\n                  <td  style=\"width: 20%\" class=\"text-center\" *ngIf=\"showClosedInvoices\">\r\n                    <span *ngIf=\"invoice.order\">\r\n                      {{invoice.order.qc_closed_date |date:'dd/MM/yyyy HH:mm'}}\r\n                    </span>\r\n                  </td>\r\n                  <td  style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\" [class.text-warning]=\"invoice.invoice.unique_root_production_plans.length > 1\">\r\n                  {{invoice.invoice.self_serial_number}} {{invoice.invoice.self_proforma_serial_number}}\r\n                </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.order.id}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td  style=\"width: 20%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.supplier?.name}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                  {{invoice.invoice.supplier?.name}}\r\n                </span>\r\n                  </td>\r\n                  <td  style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                  {{invoice.invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                </span>\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\r\n                        {{root_list.list_product.nomenclature.name}}\r\n                      </div>\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                  {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                      <span>({{invoice.plan.required_quantity}})</span>\r\n                </span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {AlbumService} from '@shared/services/album.service';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {QcService} from '../../services/qc.service';\r\nimport {deepCopy} from 'deep-copy-ts';\r\nimport {EInvoiceProductQualityControl} from '../../../procurement/models/invoice-product';\r\nimport {forkJoin} from 'rxjs';\r\nimport {ScanResult} from '../../../qr-code/models/scan-result';\r\nimport {untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\n\r\n@Component({\r\n  selector: 'pek-qc-order',\r\n  templateUrl: './qc-order.component.html',\r\n  styleUrls: ['./qc-order.component.scss']\r\n})\r\nexport class QcOrderComponent implements OnInit {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  order: Order;\r\n  orderId: number;\r\n  isLoadingTechnicalEquipment = true;\r\n  isLoading = true;\r\n  isLoadingProducts = true;\r\n\r\n  isGenerating = false;\r\n  isReworking = false;\r\n  isCompletingProducts = false;\r\n  isCompleting = false;\r\n  isReworkingProduct = false;\r\n\r\n  selectedOrderProducts: OrderProduct[] = [];\r\n  orderProducts: OrderProduct[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedTechnicalEquipment: OrderTechnicalEquipment;\r\n\r\n  orderCanBeCompleted = false;\r\n\r\n  isScanning = false;\r\n  scanningEnd: boolean;\r\n  foundSerialId: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private orderService: OrderService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly modalService: ModalService,\r\n    public readonly albumService: AlbumService,\r\n    private readonly qrCodeService: QrCodeService,\r\n    private readonly qcService: QcService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.orderId = +id),\r\n      tap(() => this.getOrder()),\r\n      tap(() => this.getOrderProducts()),\r\n    ).subscribe();\r\n  }\r\n\r\n  getOrder() {\r\n    this.orderService.getById(this.orderId).pipe(\r\n      tap(order => this.order = order),\r\n      tap(() => this.getTechnicalEquipmentToQc()),\r\n      tap(() => this.isLoading = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getTechnicalEquipmentToQc() {\r\n    this.technicalEquipments = [];\r\n    this.isLoadingTechnicalEquipment = true;\r\n\r\n    this.orderProductService.getTechnicalEquipmentToQC(this.orderId).pipe(\r\n      tap(equipment => this.technicalEquipments = equipment),\r\n      tap(() => this.isLoadingTechnicalEquipment = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  getOrderProducts() {\r\n    this.orderProducts = [];\r\n    this.selectedOrderProducts = [];\r\n    this.isLoadingProducts = true;\r\n\r\n    this.orderProductService.getQc(this.orderId).pipe(\r\n      tap(products => {\r\n        products.forEach(product => {\r\n          const technologyId = product.current_technology?.id;\r\n          const nomenclatureId = product.nomenclature.id;\r\n          const existing = this.orderProducts.find(el =>\r\n            el.nomenclature.id === nomenclatureId &&\r\n            el.current_technology?.id === technologyId);\r\n          if (existing) {\r\n            existing.totalQuantity = existing.totalQuantity += product.quantity;\r\n            existing.totalQuantityPassed = existing.totalQuantityPassed += product.passed_quantity;\r\n            existing.totalQuantityNotPassed = existing.totalQuantityNotPassed += product.not_passed_quantity;\r\n            existing.totalSerialNumbers.push(...product.serial_numbers);\r\n            existing.orderProducts.push(product);\r\n          } else {\r\n            product.orderProducts = [deepCopy(product)];\r\n            product.totalQuantity = product.quantity;\r\n            product.totalQuantityPassed = product.passed_quantity;\r\n            product.totalQuantityNotPassed = product.not_passed_quantity;\r\n            product.totalSerialNumbers = [...product.serial_numbers];\r\n            this.orderProducts.push(product);\r\n          }\r\n        });\r\n        this.orderProducts.forEach(product => {\r\n          if (product.totalQuantityPassed === product.totalQuantity) {\r\n            product.quality_control = EInvoiceProductQualityControl.PASSED;\r\n          } else if (product.totalQuantityNotPassed === product.totalQuantity) {\r\n            product.quality_control = EInvoiceProductQualityControl.NOT_PASSED;\r\n          } else if (product.totalQuantityNotPassed + product.totalQuantityPassed === product.totalQuantity) {\r\n            product.quality_control = EInvoiceProductQualityControl.PARTLY_PASSED;\r\n          }\r\n        });\r\n        this.orderProducts = [...this.orderProducts];\r\n      }),\r\n      tap(products => this.orderCanBeCompleted = Boolean(products.find(p => p.quality_control))),\r\n      tap(() => this.isLoadingProducts = false)\r\n    ).subscribe();\r\n  }\r\n\r\n  onPrintAlbum() {\r\n    const nomenclatures: Nomenclature[] = [];\r\n    if (this.selectedOrderProducts.length > 0) {\r\n      nomenclatures.push(...this.selectedOrderProducts.map(p => p?.nomenclature));\r\n    }\r\n    if (this.selectedTechnicalEquipment) {\r\n      nomenclatures.push(this.selectedTechnicalEquipment.nomenclature as Nomenclature);\r\n    }\r\n    this.albumService.getNomenclaturesImages(nomenclatures);\r\n  }\r\n\r\n  goToOrder() {\r\n    let link: string;\r\n    const order = this.order;\r\n\r\n    switch (order.accounting_type) {\r\n      case 1:\r\n        link = '/procurement/chains/order/' + order.id;\r\n        break;\r\n      case 2:\r\n        link = '/outsourcing/chains/order/' + order.id;\r\n        break;\r\n      case 3:\r\n        link = `/manufacturing/orders/order/` + order.id;\r\n        break;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n\r\n  onCompleteItems() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = [];\r\n      const sendProducts = [];\r\n      this.selectedOrderProducts.forEach(product => {\r\n        const products = product.orderProducts.filter(p => !p.nomenclature.qc_protocol && p.nomenclature.bulk_or_serial === '0');\r\n        sendProducts.push(...products);\r\n      });\r\n\r\n      sendProducts.forEach(product => {\r\n        send.push({\r\n          id: product.id,\r\n          not_passed_quantity: 0,\r\n          passed_quantity: product.quantity,\r\n          quality_control: 1\r\n        });\r\n      });\r\n\r\n      this.isCompletingProducts = true;\r\n      this.orderProductService.severalUpdatePartly(send).pipe(\r\n        tap(() => this.getOrderProducts()),\r\n        tap(() => this.isCompletingProducts = false)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  onComplete() {\r\n    this.modalService.confirm('success').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      const send = {id: this.order.id, qc_completed: true};\r\n      this.isCompleting = true;\r\n      this.orderService.updatePartly(send).subscribe(() => {\r\n        this.isCompleting = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedOrderProducts.forEach(product => {\r\n      product.orderProducts.forEach(p => {\r\n        if (p.nomenclature.bulk_or_serial === '1') {\r\n          send.by_nomenclatures_list.push({\r\n            nomenclature_id: p.nomenclature.id,\r\n            serial_number_ids:\r\n              p.nomenclature.bulk_or_serial === '1' ?\r\n                p.serial_numbers.map(s => +s.id) : [],\r\n            order_product_ids: [p.id],\r\n            invoice_product_ids: [],\r\n          });\r\n        } else {\r\n          const exists = send.by_nomenclatures_list.findIndex(el => el.nomenclature_id === p.nomenclature.id) >= 0;\r\n          if (!exists) {\r\n            send.by_nomenclatures_list.push({\r\n              nomenclature_id: p.nomenclature.id,\r\n              serial_number_ids: [],\r\n              order_product_ids: [p.id],\r\n              invoice_product_ids: [],\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    if (this.selectedTechnicalEquipment) {\r\n      const exists = send.by_nomenclatures_list.findIndex(el => el.nomenclature_id === (this.selectedTechnicalEquipment.nomenclature as Nomenclature).id) >= 0;\r\n      if (!exists) {\r\n        send.by_nomenclatures_list.push({\r\n          nomenclature_id: (this.selectedTechnicalEquipment.nomenclature as Nomenclature).id,\r\n          serial_number_ids: [],\r\n          order_product_ids: [],\r\n          invoice_product_ids: [],\r\n        });\r\n      }\r\n    }\r\n    this.qrCodeService.generateQrCodes(send, this.order.id).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedOrderProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  onQualityControl() {\r\n    if (this.selectedOrderProducts[0].nomenclature.qc_protocol && this.selectedOrderProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedOrderProducts[0].passed_quantity) currentCount += this.selectedOrderProducts[0].totalQuantityPassed;\r\n      if (this.selectedOrderProducts[0].not_passed_quantity) currentCount += this.selectedOrderProducts[0].totalQuantityNotPassed;\r\n\r\n      this.qcService.withProtocolControlProduct(this.selectedOrderProducts[0], currentCount, this.selectedOrderProducts[0].totalQuantity, 'order', this.foundSerialId).subscribe(res => {\r\n        if (res) {\r\n          this.selectedOrderProducts = [];\r\n          this.getOrderProducts();\r\n        }\r\n      });\r\n    } else if (!this.selectedOrderProducts[0].nomenclature.qc_protocol && this.selectedOrderProducts[0].nomenclature.bulk_or_serial === '1') {\r\n      let currentCount = 1;\r\n\r\n      if (this.selectedOrderProducts[0].passed_quantity) currentCount += this.selectedOrderProducts[0].totalQuantityPassed;\r\n      if (this.selectedOrderProducts[0].not_passed_quantity) currentCount += this.selectedOrderProducts[0].totalQuantityNotPassed;\r\n\r\n      this.qcService.serializedControlProduct(this.selectedOrderProducts[0], currentCount, this.selectedOrderProducts[0].totalQuantity, 'order', this.foundSerialId).subscribe(res => {\r\n        if (res) {\r\n          this.selectedOrderProducts = [];\r\n          this.getOrderProducts();\r\n        }\r\n      });\r\n    } else {\r\n      this.qcService.controlProduct(this.selectedOrderProducts[0], true).subscribe((res) => {\r\n        if (res) {\r\n          this.getOrderProducts();\r\n          this.selectedOrderProducts = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onRework() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isReworking = true;\r\n      const ids = [];\r\n      this.orderProducts.forEach(p => {\r\n        ids.push(...p.orderProducts.map(order => order.id));\r\n      });\r\n\r\n      this.orderProductService.reworkOrder(ids).subscribe(() => {\r\n        this.isReworking = false;\r\n        this.router.navigate(['../../'], {relativeTo: this.route});\r\n      });\r\n    });\r\n  }\r\n\r\n  onReworkProduct() {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isReworkingProduct = true;\r\n      const ids = [];\r\n      const productsIds = [];\r\n      const calls = [];\r\n      this.selectedOrderProducts.forEach(p => {\r\n        productsIds.push(p.id);\r\n        ids.push(...p.orderProducts.map(order => order.id));\r\n      });\r\n\r\n      ids.forEach(id => {\r\n        calls.push(this.orderProductService.reworkOrderProduct(id));\r\n      });\r\n\r\n      forkJoin([...calls]).subscribe(() => {\r\n        productsIds.forEach(id => {\r\n          const index = this.orderProducts.findIndex(o => o.id === id);\r\n          this.orderProducts.splice(index, 1);\r\n        });\r\n        if (this.orderProducts.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n          return;\r\n        }\r\n        this.selectedOrderProducts = [];\r\n        this.isReworkingProduct = false;\r\n      });\r\n\r\n      // this.orderProductService.reworkOrderProduct(this.selectedOrderProducts[0].id).subscribe(() => {\r\n      //   const index = this.orderProducts.findIndex(o => o.id === this.selectedOrderProducts[0].id);\r\n      //   this.orderProducts.splice(index, 1);\r\n      //   if (this.orderProducts.length === 0) {\r\n      //     this.router.navigate(['../../'], {relativeTo: this.route});\r\n      //     return;\r\n      //   }\r\n      //   this.selectedOrderProducts = [];\r\n      //   this.isReworkingProduct = false;\r\n      // });\r\n    });\r\n  }\r\n\r\n  onQualityControlTechnicalEquipment() {\r\n    this.qcService.controlTechnicalEquipment(this.selectedTechnicalEquipment, true).subscribe(res => {\r\n      if (res) {\r\n        this.getTechnicalEquipmentToQc();\r\n        this.selectedTechnicalEquipment = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.isScanning = true;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.scanningEnd = true;\r\n    this.isScanning = false;\r\n    this.scanForListProduct(data);\r\n  }\r\n\r\n  scanForListProduct(data: ScanResult = null) {\r\n    this.orderService.scanOrderProductInQc(data, this.orderId).subscribe(res => {\r\n      const foundOrderProduct = this.orderProducts.find(orderProduct => orderProduct.orderProducts.findIndex(prod => prod.id === res.found_id) > -1);\r\n      if (foundOrderProduct) {\r\n        this.qcService.foundProductInList(foundOrderProduct.nomenclature).subscribe(res => {\r\n          if (res) {\r\n            if (data.serial_number) {\r\n              this.foundSerialId = data.serial_number;\r\n            }\r\n            this.selectedOrderProducts = [foundOrderProduct];\r\n            this.onQualityControl();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanning = false;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        Order ID <ng-container *ngIf=\"isLoading; else orderLink\">...</ng-container>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-print\"\r\n        label=\"Print Album\"\r\n        [loading]=\"albumService.loading$ | async\"\r\n        (click)=\"onPrintAlbum()\"\r\n        [disabled]=\"selectedOrderProducts.length === 0 && !selectedTechnicalEquipment\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-camera\"\r\n        label=\"Scan QR Codes\"\r\n        (click)=\"onStartScanning()\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-qrcode\"\r\n        label=\"Generate QR Codes\"\r\n        [loading]=\"isGenerating\"\r\n        (click)=\"onGenerateQrCodes()\"\r\n        [disabled]=\"selectedOrderProducts.length === 0 && !selectedTechnicalEquipment\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon mr-2\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete Products\"\r\n        [loading]=\"isCompletingProducts\"\r\n        [disabled]=\"selectedOrderProducts.length === 0\"\r\n        (click)=\"onCompleteItems()\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-danger mr-2\"\r\n        icon=\"pi pi-refresh\"\r\n        [loading]=\"isReworking\"\r\n        label=\"Rework All\"\r\n        (click)=\"onRework()\"\r\n        [disabled]=\"isLoading\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"p-button-icon p-button-success\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        [loading]=\"isCompleting\"\r\n        (click)=\"onComplete()\"\r\n        [disabled]=\"!orderCanBeCompleted\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        scrollHeight=\"calc(100vh - 17rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingProducts\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"orderProducts\"\r\n        [(selection)]=\"selectedOrderProducts\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 17%\">Name</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedOrderProducts.length === 0\">Choose the Product to edit</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon p-button-danger ml-auto mr-2\"\r\n              icon=\"pi pi-refresh\"\r\n              [loading]=\"isReworkingProduct\"\r\n              label=\"Rework Item\"\r\n              (click)=\"onReworkProduct()\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon mr-2\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              (click)=\"onShowImages()\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingProducts || selectedOrderProducts.length === 0 || selectedOrderProducts.length > 1\"\r\n              (click)=\"onQualityControl()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 17%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              {{product.current_technology?.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantityPassed}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.totalQuantityNotPassed}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n\r\n  <h2 class=\"mt-4 mb-4\">Technical Equipment</h2>\r\n\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #st\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 17rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"!isLoadingTechnicalEquipment && technicalEquipments.length > 0\"\r\n        dataKey=\"id\"\r\n        [rows]=\"10\"\r\n        [value]=\"technicalEquipments\"\r\n        [(selection)]=\"selectedTechnicalEquipment\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 8%\">#</th>\r\n            <th style=\"width: 15%\">Code</th>\r\n            <th style=\"width: 32%\">Name</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Not Passed Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnicalEquipment\">Choose the Technical Equipment to Quality Control</p>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"ml-auto p-button-icon\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Quality Control\"\r\n              [disabled]=\"isLoadingTechnicalEquipment || !selectedTechnicalEquipment\"\r\n              (click)=\"onQualityControlTechnicalEquipment()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"product\">\r\n            <td style=\"width: 8%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 15%\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 32%\">\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{product.not_passed_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <span *ngIf=\"product.quality_control == 1\" class=\"badge badge_success\">PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 2\" class=\"badge badge_warning\">PARTLY PASSED</span>\r\n              <span *ngIf=\"product.quality_control == 0\" class=\"badge badge_danger\">NOT PASSED</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoadingTechnicalEquipment\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTechnicalEquipment\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"st.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!st.paginator && !isLoadingTechnicalEquipment && technicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"st.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #orderLink>\r\n  <a class=\"order-link\" (click)=\"goToOrder()\">{{order.id}}</a>\r\n</ng-template>\r\n\r\n\r\n<pek-qr-code-scanner\r\n  *ngIf=\"isScanning\"\r\n  (scanned)=\"onScanned($event)\"\r\n  (cancel)=\"onCancelScanned()\"\r\n></pek-qr-code-scanner>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {QcProtocol} from '../../models/protocol';\r\nimport {ProtocolService} from '../../services/protocol.service';\r\nimport {filter, tap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-protocol',\r\n  templateUrl: './create-edit-protocol.component.html',\r\n  styleUrls: ['./create-edit-protocol.component.scss']\r\n})\r\nexport class CreateEditProtocolComponent implements OnInit {\r\n  isSaving = false;\r\n  isLoadingParagraphs = false;\r\n\r\n  defaultParagraphsIds = new Set<number>();\r\n  removeFilesSet: Set<number> = new Set<number>();\r\n\r\n  files = [];\r\n  defaultFiles = [];\r\n\r\n  form: FormGroup = this.fb.group({\r\n    id: [null],\r\n    name: [null, Validators.required],\r\n    comment: ['', Validators.required],\r\n    paragraphs: this.fb.array([]),\r\n    nomenclatures: [[]]\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly protocolService: ProtocolService,\r\n    private dialogRef: MatDialogRef<CreateEditProtocolComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, protocol: QcProtocol, isShowMode: boolean }\r\n  ) { }\r\n\r\n  get paragraphs() {\r\n    return this.form.get('paragraphs') as FormArray;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.patchValue(this.data.protocol);\r\n      this.getParagraphs();\r\n      this.getFiles();\r\n    } else {\r\n      this.addParagraph();\r\n    }\r\n  }\r\n\r\n  getParagraphs() {\r\n    this.isLoadingParagraphs = true;\r\n    this.protocolService.getParagraphs([{name: 'protocol_ids', value: this.form.get('id').value}]).subscribe(paragraphs => {\r\n      paragraphs.forEach(paragraph => {\r\n        this.defaultParagraphsIds.add(paragraph.id);\r\n\r\n        (this.form.get('paragraphs') as FormArray).push(this.fb.group({\r\n          id: [paragraph.id],\r\n          name: [paragraph.name, Validators.required],\r\n          comment: [paragraph.comment]\r\n        }));\r\n      });\r\n\r\n      this.isLoadingParagraphs = false;\r\n    });\r\n  }\r\n\r\n  addParagraph() {\r\n    (this.form.get('paragraphs') as FormArray).push(this.fb.group({\r\n      id: [null],\r\n      name: [null, Validators.required],\r\n      comment: ['']\r\n    }));\r\n  }\r\n\r\n  getFiles() {\r\n    if (this.data.type === 'edit') {\r\n      this.protocolService.getFiles([{name: 'qc_protocol_id', value: this.form.get('id').value}]).subscribe(files => {\r\n        this.files = files.map(file => {\r\n          return {\r\n            ...file,\r\n            name: this.getFileName(file.file),\r\n          };\r\n        });\r\n\r\n        this.defaultFiles = [...this.files]\r\n      });\r\n    }\r\n  }\r\n\r\n  getFileName(fileName: string) {\r\n    if (fileName) {\r\n      const name = fileName.split('/');\r\n      return name[name.length - 1];\r\n    }\r\n  }\r\n\r\n  removeNomenclature(id: number) {\r\n    const index = this.form.get('nomenclatures').value.findIndex(n => n.id === id);\r\n    this.form.get('nomenclatures').value.splice(index, 1);\r\n  }\r\n\r\n  getType(type) {\r\n    switch (type) {\r\n      case '0':\r\n        return 'Purchased';\r\n      case '1':\r\n        return 'Assembly';\r\n      case '2':\r\n        return 'Manufactured';\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    if (this.data.type === 'create') {\r\n      this.createProtocol();\r\n    } else {\r\n      this.editProtocol()\r\n    }\r\n  }\r\n\r\n  addNomenclature() {\r\n    this.protocolService.addNomenclatureDialog().pipe(\r\n      filter(value => Boolean(value))\r\n    ).subscribe(nomenclature => {\r\n      this.form.get('nomenclatures').value.push({\r\n        id: nomenclature.id,\r\n        name: nomenclature.name,\r\n        code: nomenclature.code,\r\n        type: nomenclature.type\r\n      });\r\n    })\r\n  }\r\n\r\n  createProtocol() {\r\n    if (this.form.valid) {\r\n      this.isSaving = true;\r\n      const sendData = JSON.parse(JSON.stringify(this.form.value));\r\n      delete sendData.nomenclatures;\r\n      delete sendData.id;\r\n      this.protocolService.create(sendData).subscribe(protocol => {\r\n\r\n        const send = this.paragraphs.controls.map(control => {\r\n          delete control.value.id;\r\n          control.value.protocol_id = protocol.id;\r\n          return control.value;\r\n        });\r\n\r\n        this.protocolService.addParagraphs(send).subscribe();\r\n        this.saveFiles(protocol.id.toString());\r\n\r\n        if (this.form.get('nomenclatures').value.length > 0) {\r\n          const nomenclatures = {\r\n            nomenclature_ids: this.form.get('nomenclatures').value.map(el => el.id)\r\n          };\r\n          this.protocolService.addNomenclature(nomenclatures, protocol.id).pipe(\r\n            tap(() => this.isSaving = false)\r\n          ).subscribe(() => this.dialogRef.close(true));\r\n        } else {\r\n          this.isSaving = false;\r\n          this.dialogRef.close(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  saveFiles(protocolId: string) {\r\n    this.files.forEach((file, idx) => {\r\n      if (!file?.id) {\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n        formData.append('qc_protocol', protocolId);\r\n\r\n        this.protocolService.saveFile(formData).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSelectFiles(files: File[]) {\r\n    this.files = files;\r\n  }\r\n\r\n  private editProtocol() {\r\n    if (this.form.value) {\r\n      this.isSaving = true;\r\n\r\n        const sendData = JSON.parse(JSON.stringify(this.form.value));\r\n        delete sendData.nomenclatures;\r\n\r\n        this.protocolService.update(sendData).subscribe();\r\n\r\n        const addedParagraphs = this.paragraphs.controls.filter(c => c.value.id === null).map(control => {\r\n          control.value.protocol_id = this.form.get('id').value;\r\n          return control.value;\r\n        });\r\n\r\n        this.protocolService.addParagraphs(addedParagraphs).subscribe();\r\n\r\n        const updatedParagraphsIds = this.paragraphs.controls.filter(c => this.defaultParagraphsIds.has(c.value.id)).map(c => c.value);\r\n\r\n        this.protocolService.updateParagraphs(updatedParagraphsIds).subscribe();\r\n\r\n        this.paragraphs.controls\r\n          .forEach(c => {\r\n            if (this.defaultParagraphsIds.has(c.value.id)) {\r\n              this.defaultParagraphsIds.delete(c.value.id);\r\n            }\r\n          });\r\n\r\n        this.saveFiles(this.form.get('id').value);\r\n        this.deleteFiles();\r\n\r\n        const removedParagraphsIds = Array.from(this.defaultParagraphsIds);\r\n        this.protocolService.deleteParagraphs(removedParagraphsIds).subscribe();\r\n\r\n        if (this.form.get('nomenclatures').value.length >= 0) {\r\n          const send = {\r\n            nomenclature_ids: this.form.get('nomenclatures').value.length ? this.form.get('nomenclatures').value.map(el => el.id) : ''\r\n          };\r\n          this.protocolService.addNomenclature(send, this.form.get('id').value).subscribe(() => {\r\n            this.isSaving = false;\r\n            this.dialogRef.close(true);\r\n          });\r\n        } else {\r\n          this.isSaving = false;\r\n          this.dialogRef.close(true);\r\n        }\r\n    }\r\n  }\r\n\r\n  deleteFiles() {\r\n    this.defaultFiles.filter(file => file?.id && !this.files.find(f => f.id === file.id)).map(f => f.id).forEach(id => {\r\n      this.protocolService.deleteFile(id).subscribe();\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span *ngIf=\"!data.isShowMode\">{{data.type === 'edit' ? 'Edit' : 'Create'}} Protocol</span>\r\n    <span *ngIf=\"data.isShowMode\">Protocol &laquo;{{data.protocol.name}}&raquo;</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\"> Name* </label>\r\n            <input pInputText formControlName=\"name\" class=\"form-control\" type=\"text\" id=\"name\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"comment\"> Comment* </label>\r\n            <input pInputText formControlName=\"comment\" class=\"form-control\" type=\"text\" id=\"comment\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"paragraphs__header mt-3 mb-1\">\r\n        <h4>Protocol Paragraph</h4>\r\n      </div>\r\n\r\n      <div [ngSwitch]=\"isLoadingParagraphs\">\r\n        <ng-container *ngSwitchCase=\"true\">\r\n          <div class=\"d-flex justify-content-center\">\r\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"false\">\r\n          <div formArrayName=\"paragraphs\" *ngIf=\"paragraphs.length > 0; else empty\">\r\n            <div class=\"row\"\r\n                 *ngFor=\"let paragraph of paragraphs.controls; let idx = index\"\r\n                 [formGroupName]=\"idx\"\r\n            >\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label [for]=\"'p-name-' + idx\"> Name* </label>\r\n                  <input formControlName=\"name\" class=\"form-control\" type=\"text\" [id]=\"'p-name-' + idx\" pInputText>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label [for]=\"'p-comment-' + idx\"> Comment </label>\r\n                  <input formControlName=\"comment\" class=\"form-control\" type=\"text\" [id]=\"'p-comment-' + idx\" pInputText>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #empty>\r\n            <div class=\"empty-text\">\r\n              There are no paragraphs of the protocol\r\n            </div>\r\n          </ng-template>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"paragraphs__header mt-4 mb-3\">\r\n        <h4>Nomenclatures</h4>\r\n        <a class=\"btn-add\" (click)=\"addNomenclature()\" *ngIf=\"!data.isShowMode\">\r\n          <i class=\"pi pi-plus\"></i>\r\n          Add Nomenclature\r\n        </a>\r\n      </div>\r\n\r\n      <div *ngIf=\"form.get('nomenclatures').value.length > 0\">\r\n        <p-table #dt [value]=\"form.get('nomenclatures').value\" [paginator]=\"true\" [rows]=\"10\" selectionMode=\"single\">\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\r\n              <th style=\"width: 33%\">Name</th>\r\n              <th style=\"width: 30%\">Code</th>\r\n              <th style=\"width: 20%\" class=\"text-center\">Type</th>\r\n              <th style=\"width: 10%\" class=\"text-right\"></th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\r\n            <tr>\r\n              <td style=\"width: 7%\" class=\"text-center\">{{i + 1}}</td>\r\n              <td style=\"width: 33%\">{{nomenclature.name}}</td>\r\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\r\n              <td style=\"width: 20%\" class=\"text-center\">{{getType(nomenclature.type)}}</td>\r\n              <td style=\"width: 10%\" class=\"text-right\">\r\n                <button class=\"btn-remove\" (click)=\"removeNomenclature(nomenclature.id)\">\r\n                  <i class=\"pi pi-times\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"paragraphs__header mt-4 mb-3\">\r\n      <h4>Protocol Files</h4>\r\n    </div>\r\n\r\n    <div class=\"protocols-files\">\r\n      <pek-upload-file\r\n        [uploadFiles]=\"files\"\r\n        [multiple]=\"true\"\r\n        (selectFile)=\"onSelectFiles($event)\"\r\n      ></pek-upload-file>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\n\r\n@Component({\r\n  selector: 'pek-found-product-in-qc',\r\n  templateUrl: './found-product-in-qc.component.html',\r\n  styleUrls: ['./found-product-in-qc.component.scss']\r\n})\r\nexport class FoundProductInQcComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FoundProductInQcComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { nomenclature: Nomenclature }\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onAccept() {\r\n    this.dialogRef.close(true)\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span class=\"capitalize\">product found</span>\r\n\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n      <span>\r\n      {{data.nomenclature.code}}\r\n        {{data.nomenclature.name}}\r\n    </span>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Quality Control\"\r\n    (click)=\"onAccept()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {forkJoin} from 'rxjs';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ProtocolService} from '../../services/protocol.service';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\r\nimport {environment} from '@env/environment';\r\nimport {SerialNumber} from '../../../procurement/models/invoice';\r\nimport {QcProtocol, QrProtocolParagraph} from '../../models/protocol';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\n\r\n@Component({\r\n  selector: 'pek-move-qc-with-protocol',\r\n  templateUrl: './move-qc-with-protocol.component.html',\r\n  styleUrls: ['./move-qc-with-protocol.component.scss']\r\n})\r\nexport class MoveQcWithProtocolComponent implements OnInit {\r\n  isLoading = true;\r\n  protocol: QcProtocol;\r\n  isGeneratedNumber = false;\r\n  paragraphs: QrProtocolParagraph[] = [];\r\n  currentCount: number;\r\n  hasComplete = false;\r\n\r\n  isLoadingFiles = true;\r\n\r\n  files = [];\r\n\r\n  serialNumbers: SerialNumber[] = [];\r\n  defaultSerialNumbers: SerialNumber[] = [];\r\n\r\n  qrCode: any;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    serial_number: [null, Validators.required],\r\n    invoice_product: [null],\r\n    invoice_product_id: [null],\r\n    order_product: [null],\r\n    protocol: [null],\r\n    paragraphs: this.fb.array([]),\r\n    serial: [null],\r\n  });\r\n  link = environment.image_path;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<MoveQcWithProtocolComponent>,\r\n    private readonly qcProtocolService: ProtocolService,\r\n    private domSanitizer: DomSanitizer,\r\n    private qrCodeService: QrCodeService,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n    @Inject(MAT_DIALOG_DATA) public data: {\r\n      product: InvoiceProduct | OrderProduct,\r\n      currentCount: number,\r\n      count: number,\r\n      type: 'invoice' | 'order',\r\n      foundSerialId: number,\r\n    }\r\n  ) {\r\n  }\r\n\r\n  get answerParagraphs() {\r\n    return this.form.get('paragraphs') as FormArray;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.currentCount > this.data.count) {\r\n      this.data.currentCount = this.data.count;\r\n    }\r\n\r\n    this.serialNumbers = this.data.product.totalSerialNumbers;\r\n    this.serialNumbers.forEach(serial => {\r\n      serial.traversed = serial.is_passed !== null;\r\n    });\r\n\r\n    this.defaultSerialNumbers = JSON.parse(JSON.stringify(this.serialNumbers));\r\n    this.serialNumbers.sort((a, b) => a.id - b.id);\r\n    this.currentCount = JSON.parse(JSON.stringify(this.data.currentCount));\r\n\r\n    if (this.data.foundSerialId) {\r\n      const serialNumberIndex = this.serialNumbers.findIndex(serial => +serial.id === this.data.foundSerialId);\r\n      [this.serialNumbers[0], this.serialNumbers[serialNumberIndex]] = [this.serialNumbers[serialNumberIndex], this.serialNumbers[0]];\r\n    }\r\n\r\n    const serialObject = this.serialNumbers[this.data.currentCount - 1];\r\n    console.log('serialObject', serialObject);\r\n    if (serialObject && serialObject?.type_with_number) {\r\n      this.form.get('serial').patchValue(serialObject?.type_with_number);\r\n    } else {\r\n      this.form.get('serial').patchValue(serialObject?.id);\r\n    }\r\n\r\n    if (serialObject) {\r\n      this.form.get('serial_number').patchValue(serialObject.id);\r\n    }\r\n\r\n    if (serialObject.invoice_product_id) {\r\n      this.form.get('invoice_product_id').patchValue(serialObject.invoice_product_id);\r\n    }\r\n    this.getFiles();\r\n    this.getProtocol();\r\n  }\r\n\r\n  showButtonSave() {\r\n    return Boolean(this.serialNumbers[this.data.currentCount - 1].warehouseproductqcprotocol_set.length === 0);\r\n  }\r\n\r\n  generateSerialNumber() {\r\n    this.form.get('serial_number').patchValue('Serial Number');\r\n    this.isGeneratedNumber = true;\r\n  }\r\n\r\n  nextSerial() {\r\n    if (this.data.currentCount < this.data.count) {\r\n      this.data.currentCount += 1;\r\n      this.saveSerialInfo();\r\n    }\r\n  }\r\n\r\n  prevSerial() {\r\n    if (this.data.currentCount >= 1) {\r\n      this.data.currentCount -= 1;\r\n      this.saveSerialInfo();\r\n    }\r\n  }\r\n\r\n  saveSerialInfo() {\r\n    const serialObject = this.serialNumbers[this.data.currentCount - 1];\r\n\r\n    if (serialObject.invoice_product_id) {\r\n      this.form.get('invoice_product_id').patchValue(serialObject.invoice_product_id);\r\n    }\r\n\r\n    if (serialObject && serialObject?.type_with_number) {\r\n      this.form.get('serial').patchValue(serialObject?.type_with_number);\r\n    } else {\r\n      this.form.get('serial').patchValue(serialObject?.id);\r\n    }\r\n\r\n    if (serialObject) {\r\n      this.form.get('paragraphs').value[0].is_passed = serialObject.is_passed;\r\n      this.form.get('serial_number').patchValue(serialObject.id);\r\n    }\r\n\r\n    (this.form.get('paragraphs') as FormArray).controls[0].get('comment').patchValue(serialObject.warehouseproductqcprotocol_set.length > 0 ? serialObject.warehouseproductqcprotocol_set[0].paragraphs[0].comment : '');\r\n    (this.form.get('paragraphs') as FormArray).controls[0].get('is_passed').patchValue(serialObject.is_passed);\r\n\r\n    if ((this.form.get('paragraphs') as FormArray).controls[0].get('is_passed').value !== null) {\r\n      this.hasComplete = true;\r\n    }\r\n  }\r\n\r\n  getProtocol() {\r\n    forkJoin({\r\n      protocol: this.qcProtocolService.getOne(this.data.product.nomenclature.qc_protocol),\r\n      paragraphs: this.qcProtocolService.getParagraphs([{name: 'protocol_ids', value: this.data.product.nomenclature.qc_protocol}])\r\n    }).subscribe(({protocol, paragraphs}) => {\r\n      this.protocol = protocol;\r\n      this.paragraphs = paragraphs;\r\n      if (this.data.type === 'invoice') {\r\n        this.form.get('invoice_product').patchValue(this.data.product.id);\r\n      }\r\n\r\n      if (this.data.type === 'order') {\r\n        this.form.get('order_product').patchValue(this.data.product.id);\r\n      }\r\n\r\n      this.form.get('protocol').patchValue(this.data.product.nomenclature.qc_protocol);\r\n\r\n      this.updateParagraphs();\r\n\r\n      if ((this.form.get('paragraphs') as FormArray).controls[0].get('is_passed').value !== null) {\r\n        this.hasComplete = true;\r\n      }\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  updateParagraphs() {\r\n    const serialObject = this.serialNumbers[this.data.currentCount - 1];\r\n    this.paragraphs.forEach(paragraph => {\r\n      (this.form.get('paragraphs') as FormArray).push(this.fb.group({\r\n        qc_protocol_paragraph: [paragraph.id],\r\n        comment: [serialObject.warehouseproductqcprotocol_set.length > 0 ? serialObject.warehouseproductqcprotocol_set[0].paragraphs[0].comment : ''],\r\n        is_passed: [serialObject.is_passed]\r\n      }));\r\n    });\r\n  }\r\n\r\n  getParagraphName(id: number) {\r\n    let str = `${this.paragraphs.find(p => p.id === id).name}`;\r\n    if (this.paragraphs.find(p => p.id === id).comment) {\r\n      str += ` (${this.paragraphs.find(p => p.id === id).comment})`;\r\n    }\r\n    return str;\r\n  }\r\n\r\n  changePassedTrue(paragraph) {\r\n    const index = this.form.get('paragraphs').value.findIndex(p => p.qc_protocol_paragraph === paragraph.value.qc_protocol_paragraph);\r\n    if ((this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').value) {\r\n      (this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').patchValue(null);\r\n      this.hasComplete = false;\r\n    } else {\r\n      (this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').patchValue(true);\r\n      this.hasComplete = true;\r\n    }\r\n  }\r\n\r\n  changePassedFalse(paragraph) {\r\n    const index = this.form.get('paragraphs').value.findIndex(p => p.qc_protocol_paragraph === paragraph.value.qc_protocol_paragraph);\r\n    if ((this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').value === false) {\r\n      (this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').patchValue(null);\r\n      this.hasComplete = false;\r\n    } else {\r\n      (this.form.get('paragraphs') as FormArray).controls[index].get('is_passed').patchValue(false);\r\n      this.hasComplete = true;\r\n    }\r\n  }\r\n\r\n  generateQrCode() {\r\n    const send = {\r\n      by_nomenclatures_list: [{\r\n        // nomenclature_id: this.data.product.nomenclature.id,\r\n        // serial_number_ids: [parseInt(this.form.get('serial_number').value, 10)],\r\n        nomenclature_id: 13237,\r\n        serial_number_ids: [46],\r\n        order_product_ids: [],\r\n        invoice_product_ids: [],\r\n      }],\r\n    };\r\n\r\n    this.qrCodeService.generateQrCodes(send).subscribe(codes => {\r\n      this.qrCode = codes.with_serial[0].code[0];\r\n      // this.qrCode.serial_number = this.form.get('serial_number').value;\r\n      this.qrCode.qr_src = this.domSanitizer.bypassSecurityTrustUrl('data:image/svg+xml;base64,' + this.qrCode.qr_src);\r\n      // this.modalService.qrCodeModal(this.qrCode).subscribe();\r\n    });\r\n  }\r\n\r\n  complete() {\r\n    if (this.form.value) {\r\n      const send = {...this.form.value};\r\n\r\n      if (this.data.type === 'invoice') {\r\n        const invoice_product = (this.data.product as InvoiceProduct).invoiceProducts.find(prod => {\r\n          return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number) >= 0;\r\n        });\r\n        send.invoice_product = invoice_product.id;\r\n        delete send.order_product;\r\n      }\r\n\r\n      if (this.data.type === 'order') {\r\n        const invoice_product = (this.data.product as OrderProduct).orderProducts.find(prod => {\r\n          return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number) >= 0;\r\n        });\r\n        send.order_product = invoice_product.id;\r\n        delete send.invoice_product;\r\n      }\r\n\r\n      delete send.serial;\r\n      send.serial_number = this.form.get('serial_number').value;\r\n\r\n      // send.serial_number = 21;\r\n      this.qcProtocolService.productsToQc(send).subscribe(() => {\r\n        if (this.data.currentCount === this.data.count) {\r\n          this.dialogRef.close(true);\r\n        } else {\r\n          this.hasComplete = false;\r\n          this.data.currentCount++;\r\n          this.saveSerialInfo();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const send = {...this.form.value};\r\n    const id = this.serialNumbers[this.data.currentCount - 1].warehouseproductqcprotocol_set[0].id;\r\n\r\n    if (this.data.type === 'invoice') {\r\n      const invoice_product = (this.data.product as InvoiceProduct).invoiceProducts.find(prod => {\r\n        return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number) >= 0;\r\n      });\r\n      send.invoice_product = invoice_product.id;\r\n      delete send.order_product;\r\n    }\r\n\r\n    if (this.data.type === 'order') {\r\n      const invoice_product = (this.data.product as OrderProduct).orderProducts.find(prod => {\r\n        return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number) >= 0;\r\n      });\r\n      send.order_product = invoice_product.id;\r\n      delete send.invoice_product;\r\n    }\r\n\r\n    delete send.serial;\r\n\r\n    send.serial_number = +this.form.get('serial_number').value;\r\n    send.paragraphs[0].id = this.serialNumbers[this.data.currentCount - 1].warehouseproductqcprotocol_set[0].paragraphs[0].id\r\n\r\n    this.qcProtocolService.updateProductProtocol(send, id).subscribe(() => {\r\n      if (this.data.currentCount === this.data.count) {\r\n        this.dialogRef.close(true);\r\n      } else {\r\n        this.hasComplete = false;\r\n        this.data.currentCount++;\r\n        this.saveSerialInfo();\r\n      }\r\n    });\r\n  }\r\n\r\n  downloadFile(file: any) {\r\n    this.qcProtocolService.downloadFile(file.id).subscribe(response => {\r\n      const filename = this.getFileName(file.file);\r\n      this.adapterService.downloadFile(filename, response);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    if (this.currentCount === this.data.currentCount) {\r\n      this.dialogRef.close(false);\r\n    } else {\r\n      this.dialogRef.close(true);\r\n    }\r\n  }\r\n\r\n  getFileName(fileName: string) {\r\n    const name = fileName.split('/');\r\n    return name[name.length - 1];\r\n  }\r\n\r\n  getFiles() {\r\n    this.qcProtocolService.getFiles([{name: 'qc_protocol_id', value: this.data.product.nomenclature.qc_protocol}]).subscribe(files => {\r\n      this.files = files;\r\n      this.isLoadingFiles = false;\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header-container align-items-start d-flex justify-content-between\">\r\n  <h2 class=\"modal-heading\" mat-dialog-title>\r\n    Quality Control with Protocol &laquo;{{isLoading ? '...' : protocol.name}}&raquo;\r\n    (Name: {{data.product.nomenclature.name}}) ({{data.currentCount}}/{{data.count}})\r\n  </h2>\r\n  <div class=\"tools\">\r\n    <button pButton (click)=\"generateQrCode()\">Generate QR-code</button>\r\n    <button  pButton type=\"button\" class=\"p-button-icon ml-3\" size=\"s\" icon=\"pi pi-arrow-left\" (click)=\"prevSerial()\"\r\n             [disabled]=\"data.currentCount <= 1\">\r\n    </button>\r\n    <button  pButton type=\"button\" class=\"p-button-icon ml-3\" icon=\"pi pi-arrow-right\" (click)=\"nextSerial()\"\r\n             [disabled]=\"data.currentCount >= this.data.count\">\r\n    </button>\r\n  </div>\r\n</div>\r\n<mat-dialog-content>\r\n  <div *ngIf=\"!isLoading else loading\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"serial\"> Serial Number </label>\r\n        <div class=\"serial\">\r\n          <input pInputText formControlName=\"serial\" class=\"form-control disabled\" type=\"text\" id=\"serial\">\r\n        </div>\r\n      </div>\r\n\r\n      <div formArrayName=\"paragraphs\" *ngIf=\"answerParagraphs.length > 0; else empty\">\r\n        <label>Protocol Paragraph</label>\r\n        <div class=\"paragraphs__row\" *ngFor=\"let paragraph of answerParagraphs.controls; let idx = index\"\r\n             [formGroupName]=\"idx\">\r\n          <div class=\"paragraph-row\">\r\n            <label style=\"font-weight: 500; font-size: 16px\">\r\n              {{getParagraphName(paragraph.get('qc_protocol_paragraph').value)}}\r\n            </label>\r\n            <div class=\"row\">\r\n              <div class=\"col-9\">\r\n                <div class=\"form-group form-group_text\">\r\n                  <label [for]=\"'p-name-' + idx\">Comment</label>\r\n                  <input pInputText formControlName=\"comment\" class=\"form-control\" type=\"text\" [id]=\"'p-name-' + idx\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-1\">\r\n                <div class=\"form-group passing\">\r\n                  <label for=\"serial\">Passed</label>\r\n                  <div class=\"column-filter-box\">\r\n                    <button type=\"button\" [class.active]=\"paragraph.value.is_passed === true\"\r\n                            (click)=\"changePassedTrue(paragraph)\">\r\n                      <i class=\"pi pi-check\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-1\">\r\n                <div class=\"passing form-group\">\r\n                  <label for=\"serial\">To Isolator</label>\r\n                  <div class=\"column-filter-box\">\r\n                    <button type=\"button\" [class.active]=\"paragraph.value.is_passed === false\"\r\n                            (click)=\"changePassedFalse(paragraph)\">\r\n                      <i class=\"pi pi-times\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-template #empty>\r\n        <div class=\"empty-text\">\r\n          There are no paragraphs of the protocol\r\n        </div>\r\n      </ng-template>\r\n    </form>\r\n\r\n    <div class=\"upload-header\">\r\n      <h4>Protocol Files:</h4>\r\n    </div>\r\n    <div class=\"files-list\" *ngIf=\"files.length > 0; else emptyFiles\">\r\n      <a class=\"file\" *ngFor=\"let file of files; let idx = index\" [href]=\"link + file.file\">\r\n        {{idx + 1}}. {{getFileName(file?.file)}}\r\n      </a>\r\n    </div>\r\n\r\n    <ng-template #emptyFiles>\r\n      <div class=\"empty-text\">\r\n        There are no files of the protocol\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\" d-flex justify-content-between\">\r\n  <button pButton label=\"Cancel\" type=\"button\" class=\"p-button-danger\" (click)=\"close()\"></button>\r\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-secondary\" (click)=\"complete()\" [disabled]=\"!hasComplete\" *ngIf=\"showButtonSave()\"></button>\r\n  <button pButton type=\"button\" label=\"Save\" class=\"p-button-secondary\" (click)=\"save()\" [disabled]=\"!hasComplete\" *ngIf=\"!showButtonSave()\"></button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #createBtn>\r\n  <!--  <button type=\"button\" class=\"btn btn-primary\" (click)=\"create()\" [disabled]=\"form.invalid\"> Create</button>-->\r\n</ng-template>\r\n\r\n<ng-template #loading>\r\n  <div class=\"d-flex justify-content-center\">\r\n    <i class=\"fas fa-circle-notch fa-spin fa-3x \"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {SerialNumber} from '../../../procurement/models/invoice';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\nimport {ProtocolService} from '../../services/protocol.service';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\n\r\n@Component({\r\n  selector: 'pek-move-qc-with-serial',\r\n  templateUrl: './move-qc-with-serial.component.html',\r\n  styleUrls: ['./move-qc-with-serial.component.scss']\r\n})\r\nexport class MoveQcWithSerialComponent implements OnInit {\r\n  isPending: any;\r\n\r\n  currentCount: number;\r\n  qrCode: any;\r\n  serialNumbers: SerialNumber[] = [];\r\n  defaultSerialNumbers: SerialNumber[] = [];\r\n\r\n  form: FormGroup = this.fb.group({\r\n    serial_number_id: [null, Validators.required],\r\n    serial: [null, ],\r\n    invoice_product_id: [null],\r\n    order_product_id: [null],\r\n    is_passed: [null],\r\n    traversed: [null],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private qrCodeService: QrCodeService,\r\n    private dialogRef: MatDialogRef<MoveQcWithSerialComponent>,\r\n    private readonly qcProtocolService: ProtocolService,\r\n    @Inject(MAT_DIALOG_DATA) public data: {\r\n      product: InvoiceProduct | OrderProduct,\r\n      currentCount: number,\r\n      count: number,\r\n      foundSerialId: number,\r\n      type: 'invoice' | 'order'\r\n    }\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.currentCount > this.data.count) {\r\n      this.data.currentCount = this.data.count;\r\n    }\r\n\r\n    this.serialNumbers = this.data.product.totalSerialNumbers;\r\n    this.serialNumbers.forEach(serial => {\r\n      serial.traversed = serial.is_passed !== null;\r\n    });\r\n\r\n    this.defaultSerialNumbers = JSON.parse(JSON.stringify(this.serialNumbers));\r\n    this.serialNumbers.sort((a, b) => a.id - b.id);\r\n    this.currentCount = JSON.parse(JSON.stringify(this.data.currentCount));\r\n\r\n    if (this.data.foundSerialId) {\r\n      const serialNumberIndex = this.serialNumbers.findIndex(serial => +serial.id === this.data.foundSerialId);\r\n      [this.serialNumbers[0], this.serialNumbers[serialNumberIndex]] = [this.serialNumbers[serialNumberIndex], this.serialNumbers[0]];\r\n    }\r\n\r\n    const serialObject = this.serialNumbers[this.data.currentCount - 1];\r\n\r\n    if (serialObject && serialObject?.type_with_number) {\r\n      this.form.get('serial').patchValue(serialObject?.type_with_number);\r\n    } else {\r\n      this.form.get('serial').patchValue(serialObject?.id);\r\n    }\r\n\r\n    if (serialObject) {\r\n      this.form.get('is_passed').patchValue(serialObject.is_passed);\r\n      this.form.get('traversed').patchValue(serialObject.traversed);\r\n      this.form.get('serial_number_id').patchValue(serialObject.id);\r\n    }\r\n\r\n    if (this.data.type === 'order') {\r\n      this.form.get('order_product_id').patchValue(this.data.product.id);\r\n    }\r\n\r\n    if (this.data.type === 'invoice') {\r\n      this.form.get('invoice_product_id').patchValue(this.data.product.id);\r\n    }\r\n\r\n    if (serialObject.invoice_product_id) {\r\n      this.form.get('invoice_product_id').patchValue(serialObject.invoice_product_id);\r\n    }\r\n  }\r\n\r\n  saveSerialInfo() {\r\n    const serialObject = this.serialNumbers[this.data.currentCount - 1];\r\n    if (serialObject.invoice_product_id) {\r\n      this.form.get('invoice_product_id').patchValue(serialObject.invoice_product_id);\r\n    }\r\n\r\n    if (serialObject && serialObject?.type_with_number) {\r\n      this.form.get('serial').patchValue(serialObject?.type_with_number);\r\n    } else {\r\n      this.form.get('serial').patchValue(serialObject?.id);\r\n    }\r\n\r\n    if (serialObject) {\r\n      this.form.get('traversed').patchValue(serialObject.traversed);\r\n      this.form.get('serial_number_id').patchValue(serialObject.id);\r\n      this.form.get('is_passed').patchValue(serialObject.is_passed);\r\n    }\r\n  }\r\n\r\n  nextSerial() {\r\n    if (this.data.currentCount < this.data.count) {\r\n      this.data.currentCount += 1;\r\n      this.saveSerialInfo();\r\n    }\r\n  }\r\n\r\n  prevSerial() {\r\n    if (this.data.currentCount >= 1) {\r\n      this.data.currentCount -= 1;\r\n      this.saveSerialInfo();\r\n    }\r\n  }\r\n\r\n  generateQrCode() {\r\n    const send = {\r\n      by_nomenclatures_list: [{\r\n        // nomenclature_id: 13237,\r\n        nomenclature_id: this.data.product.nomenclature.id,\r\n        serial_number_ids: [parseInt(this.form.get('serial_number_id').value, 10)],\r\n        // serial_number_ids: [184],\r\n        order_product_ids: [],\r\n        invoice_product_ids: [],\r\n      }],\r\n    };\r\n\r\n    this.qrCodeService.generateQrCodes(send).subscribe(codes => {\r\n      this.qrCode = codes.with_serial[0].code[0];\r\n      // this.qrCode.serial_number = this.form.get('serial_number_id').value;\r\n      // this.qrCode.qr_src = this.domSanitizer.bypassSecurityTrustUrl('data:image/svg+xml;base64,' + this.qrCode.qr_src);\r\n      // this.modalService.qrCodeModal(this.qrCode).subscribe();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    if (JSON.stringify(this.defaultSerialNumbers) === JSON.stringify(this.serialNumbers)) {\r\n      this.dialogRef.close(false);\r\n    } else {\r\n      this.dialogRef.close(true);\r\n    }\r\n  }\r\n\r\n  changePassedTrue() {\r\n    if (this.form.get('is_passed').value === true) {\r\n      this.form.get('is_passed').patchValue(null);\r\n    } else {\r\n      this.form.get('is_passed').patchValue(true);\r\n    }\r\n  }\r\n\r\n  changePassedFalse() {\r\n    if (this.form.get('is_passed').value === false) {\r\n      this.form.get('is_passed').patchValue(null);\r\n    } else {\r\n      this.form.get('is_passed').patchValue(false);\r\n    }\r\n  }\r\n\r\n  beforeForSave() {\r\n    const index = this.serialNumbers.findIndex(s => s.id === this.form.get('serial_number_id').value);\r\n    this.serialNumbers[index].traversed = true;\r\n    this.serialNumbers[index].is_passed = this.form.get('is_passed').value;\r\n    this.nextSerial();\r\n  }\r\n\r\n  complete() {\r\n    const send = {...this.form.value};\r\n\r\n    delete send.serial;\r\n    delete send.traversed;\r\n\r\n    if (send.invoice_product_id) {\r\n      const invoice_product = (this.data.product as InvoiceProduct).invoiceProducts.find(prod => {\r\n        return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number_id) >= 0;\r\n      });\r\n      send.invoice_product_id = invoice_product.id;\r\n      delete send.order_product_id;\r\n    }\r\n\r\n    if (send.order_product_id) {\r\n      const invoice_product = (this.data.product as OrderProduct).orderProducts.find(prod => {\r\n        return prod.serial_numbers.findIndex(serial => serial.id === send.serial_number_id) >= 0;\r\n      });\r\n      send.order_product_id = invoice_product.id;\r\n      delete send.invoice_product_id;\r\n    }\r\n    if (this.form.get('traversed').value === false) {\r\n      this.qcProtocolService.qcSerial(send).subscribe(() => {\r\n        if (this.data.currentCount === this.data.count) {\r\n          this.dialogRef.close(true);\r\n        } else {\r\n          this.beforeForSave();\r\n        }\r\n      });\r\n    } else {\r\n      this.qcProtocolService.qcSerialUpdate(send).subscribe(() => {\r\n        if (this.data.currentCount === this.data.count) {\r\n          this.dialogRef.close(true);\r\n        } else {\r\n          this.beforeForSave();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Quality Control (Name: {{data.product.nomenclature.name}}) ({{data.currentCount}}/{{data.count}})\r\n  </h2>\r\n  <div class=\"tools\">\r\n    <button pButton type=\"button\" class=\"p-button-success\" (click)=\"generateQrCode()\">Generate QR-code</button>\r\n    <button pButton type=\"button\" class=\"p-button-icon step-btn ml-3\" size=\"s\" icon=\"pi pi-arrow-left\" (click)=\"prevSerial()\" [disabled]=\"data.currentCount <= 1\">\r\n    </button>\r\n    <button pButton type=\"button\" class=\"p-button-icon step-btn ml-3\" icon=\"pi pi-arrow-right\" (click)=\"nextSerial()\" [disabled]=\"data.currentCount >= this.data.count\">\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-9\">\r\n      <div class=\"form-group\">\r\n        <label for=\"serial\"> Serial Number </label>\r\n        <div class=\"serial\">\r\n          <input pInputText formControlName=\"serial\" class=\"form-control disabled\" type=\"text\" id=\"serial\">\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\">\r\n        <div class=\"form-group passing\">\r\n          <label for=\"serial\">Passed</label>\r\n          <div class=\"column-filter-box\">\r\n            <button type=\"button\" [class.active]=\"form.get('is_passed').value === true\"\r\n                    (click)=\"changePassedTrue()\">\r\n              <i class=\"pi pi-check\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\">\r\n        <div class=\"form-group passing\">\r\n          <label for=\"serial\">To Isolator</label>\r\n          <div class=\"column-filter-box\">\r\n            <button type=\"button\" [class.active]=\"form.get('is_passed').value === false\"\r\n                    (click)=\"changePassedFalse()\">\r\n              <i class=\"pi pi-times\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n<!--      <div class=\"d-flex align-items-center mb-3\">-->\r\n<!--        <div class=\"passing mr-3\">-->\r\n<!--          <label for=\"serial\">Passed</label>-->\r\n<!--          <div class=\"column-filter-box\">-->\r\n<!--            <button type=\"button\" [class.active]=\"form.get('is_passed').value === true\"-->\r\n<!--                    (click)=\"changePassedTrue()\">-->\r\n<!--              <i class=\"pi pi-check\"></i>-->\r\n<!--            </button>-->\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n<!--        <div class=\"passing\">-->\r\n<!--          <label for=\"serial\">To Isolator</label>-->\r\n<!--          <div class=\"column-filter-box\">-->\r\n<!--            <button type=\"button\" [class.active]=\"form.get('is_passed').value === false\"-->\r\n<!--                    (click)=\"changePassedFalse()\">-->\r\n<!--              <i class=\"pi pi-times\"></i>-->\r\n<!--            </button>-->\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-success\" (click)=\"complete()\" [disabled]=\"form.get('is_passed').value === null\" [loading]=\"isPending\"></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Paginator} from 'primeng/paginator';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-nomenclature-protocol-picker',\r\n  templateUrl: './nomenclature-protocol-picker.component.html',\r\n  styleUrls: ['./nomenclature-protocol-picker.component.scss']\r\n})\r\nexport class NomenclatureProtocolPickerComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n\r\n  nomenclatureFilterTypes = [\r\n    {name: 'Manufactured', value: '2'},\r\n    {name: 'Assembly', value: '1'},\r\n    {name: 'Purchased', value: '0'}\r\n  ];\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    name: [''],\r\n    code: [''],\r\n    categories: [''],\r\n    root_categories: [''],\r\n    type: [null],\r\n  });\r\n\r\n  isLoading = true;\r\n\r\n  currentPage = 1;\r\n  isStartFirstPage = false;\r\n\r\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n  query: QuerySearch[] = [];\r\n\r\n  selectedProduct: Nomenclature;\r\n\r\n  productsCount = 0;\r\n\r\n  name$: Subject<void> = new Subject<void>();\r\n  code$: Subject<void> = new Subject<void>();\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  products$: Observable<Nomenclature[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.nomenclatureService.getForPagination(this.query)),\r\n    tap(response => this.productsCount = response.count),\r\n    map(response => response.results),\r\n    tap(() => this.paginateToFistPage()),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<NomenclatureProtocolPickerComponent>,\r\n    private readonly fb: FormBuilder,\r\n    private readonly nomenclatureService: NomenclatureService,\r\n    private readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) public data: {}\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.name$.pipe(\r\n      debounceTime(150),\r\n      tap(() => this.search$.next()),\r\n      distinctUntilChanged(),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n\r\n    this.code$.pipe(\r\n      debounceTime(150),\r\n      tap(() => this.search$.next()),\r\n      distinctUntilChanged(),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedProduct = null;\r\n\r\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.currentPage = 1;\r\n      this.queryKey = newQueryKey;\r\n      this.isStartFirstPage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'paginated', value: true},\r\n      {name: 'page', value: this.currentPage},\r\n    ];\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value) {\r\n        this.query.push({\r\n          name: key,\r\n          value: this.searchForm.controls[key].value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  paginateToFistPage() {\r\n    if (this.isStartFirstPage) {\r\n      this.paginator?.changePage(0);\r\n    }\r\n\r\n    this.isStartFirstPage = false;\r\n  }\r\n\r\n  onSelectProduct() {\r\n    this.dialogRef.close(this.selectedProduct)\r\n  }\r\n\r\n  paginate(event: any) {\r\n    if (!this.isStartFirstPage) {\r\n      this.currentPage = event.page + 1;\r\n      this.search$.next();\r\n    }\r\n  }\r\n\r\n  onSelectCategories(ids: string) {\r\n    this.searchForm.get('categories').patchValue(ids)\r\n    this.search$.next()\r\n  }\r\n\r\n  onSelectRootCategories(ids: string) {\r\n    this.searchForm.get('root_categories').patchValue(ids)\r\n    this.search$.next()\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h2 class=\"modal-header__title\">Choice Nomenclature</h2>\r\n</div>\r\n\r\n<form [formGroup]=\"searchForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input\r\n          pInputText\r\n          formControlName=\"name\"\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          (ngModelChange)=\"name$.next()\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <div class=\"form-group\">\r\n        <label for=\"code\">Code</label>\r\n        <input\r\n          pInputText\r\n          formControlName=\"code\"\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n          id=\"code\"\r\n          (ngModelChange)=\"code$.next()\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <div class=\"form-group\">\r\n        <label>Type</label>\r\n        <p-dropdown\r\n          formControlName=\"type\"\r\n          [options]=\"nomenclatureFilterTypes\"\r\n          placeholder=\"Type\"\r\n          optionLabel=\"name\"\r\n          optionValue=\"value\"\r\n          [showClear]=\"true\"\r\n          (ngModelChange)=\"search$.next()\"\r\n        >\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <div class=\"form-group\">\r\n        <label>Categories</label>\r\n        <pek-multi-categories-picker (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-categories-picker>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n      <div class=\"form-group\">\r\n        <label>Root Categories</label>\r\n        <pek-multi-product-structure-categories-picker (choiceCategories)=\"onSelectRootCategories($event)\"></pek-multi-product-structure-categories-picker>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<div class=\"table-pagination-preloader\">\r\n  <mat-dialog-content>\r\n    <p-table\r\n      [scrollable]=\"true\"\r\n      #dt\r\n      selectionMode=\"single\"\r\n      dataKey=\"id\"\r\n      rowExpandMode=\"single\"\r\n      [rows]=\"10\"\r\n      [value]=\"products$ | async\"\r\n      [(selection)]=\"selectedProduct\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 5%\" class=\"text-center\">#</th>\r\n          <th style=\"width: 20%\">Name</th>\r\n          <th style=\"width: 30%\">Code</th>\r\n          <th style=\"width: 10%\"  class=\"text-center\">Uom</th>\r\n          <th style=\"width: 20%\"  class=\"text-center\">Technology</th>\r\n          <th style=\"width: 15%\" class=\"text-center\">Category</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n        <tr\r\n          [pSelectableRow]=\"product\"\r\n        >\r\n          <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\r\n          <td style=\"width: 20%\" class=\"word-break\">\r\n            {{ product.code }}\r\n          </td>\r\n          <td style=\"width: 30%\">\r\n                  <span\r\n                    *ngIf=\"product.approved === '0' && product.type === '0'\"\r\n                    class=\"badge badge_warning\"\r\n                    style=\"margin-right: 0.25rem\"\r\n                  >\r\n                    NEW\r\n                  </span>\r\n            {{ product.name }}\r\n          </td>\r\n          <td class=\"word-break text-center\" style=\"width: 10%\" >{{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\r\n          <td class=\"text-center\" style=\"width: 20%\">\r\n            <div *ngFor=\"let technology of product.technologies\">\r\n              {{technology.name}}\r\n            </div>\r\n          </td>\r\n        <td class=\"text-center\" style=\"width: 15%\">\r\n          {{product.category?.name}}\r\n        </td>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"12\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n    <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n    </div>\r\n  </mat-dialog-content>\r\n</div>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <div\r\n    class=\"paginator-wrapper\"\r\n    [class.paginator-wrapper_hide]=\"productsCount === 0\"\r\n  >\r\n    <p-paginator\r\n      #paginator\r\n      [rows]=\"10\"\r\n      [totalRecords]=\"productsCount\"\r\n      (onPageChange)=\"paginate($event)\"\r\n    >\r\n    </p-paginator>\r\n  </div>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Choice\"\r\n    [disabled]=\"!selectedProduct\"\r\n    (click)=\"onSelectProduct()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {EInvoiceProductQualityControl} from '../../../procurement/models/invoice-product';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\nimport {forkJoin, Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-quality-control-modal',\r\n  templateUrl: './quality-control-modal.component.html',\r\n  styleUrls: ['./quality-control-modal.component.scss']\r\n})\r\nexport class QualityControlModalComponent implements OnInit {\r\n  form: FormGroup;\r\n  quantity: number;\r\n  isPending = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<QualityControlModalComponent>,\r\n    private fb: FormBuilder,\r\n    private invoiceProductService: InvoiceProductService,\r\n    private orderProductService: OrderProductService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: any, entity: any, isOwnProduction: boolean }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.data.entity.id],\r\n      passed_quantity: [this.data.entity.totalQuantityPassed, [Validators.max(this.data.entity.totalQuantity), Validators.min(0), Validators.required]],\r\n      not_passed_quantity: [this.data.entity.totalQuantityNotPassed, [Validators.max(this.data.entity.totalQuantity), Validators.min(0), Validators.required]],\r\n    });\r\n    this.quantity = this.data.entity.totalQuantity;\r\n  }\r\n\r\n  onComplete() {\r\n    if (this.form.valid) {\r\n      if (this.data.isOwnProduction) {\r\n        let totalPassedQuantity = this.form.get('passed_quantity').value;\r\n        let totalNotPassedQuantity = this.form.get('not_passed_quantity').value;\r\n        const totalQuantity = this.quantity;\r\n        let products;\r\n        if (this.data.isOwnProduction) {\r\n          products = this.data.entity.orderProducts;\r\n        } else {\r\n          products = this.data.entity.invoiceProducts;\r\n        }\r\n        const dataToSendCalls: Observable<any>[] = [];\r\n        products.sort((a, b) => {\r\n          return a.id - b.id;\r\n        })\r\n          .forEach(prod => {\r\n            let passedQuantity = 0;\r\n            let notPassedQuantity = 0;\r\n            let canFillQuantity = prod.quantity;\r\n\r\n            // Update accepted quantities\r\n            if (totalPassedQuantity <= canFillQuantity) {\r\n              canFillQuantity -= totalPassedQuantity;\r\n              passedQuantity += totalPassedQuantity;\r\n              totalPassedQuantity = 0;\r\n            } else {\r\n              totalPassedQuantity -= canFillQuantity;\r\n              passedQuantity += canFillQuantity;\r\n              canFillQuantity = 0;\r\n            }\r\n\r\n            // Update NOT accepted quantities\r\n            if (totalNotPassedQuantity <= canFillQuantity) {\r\n              canFillQuantity -= totalNotPassedQuantity;\r\n              notPassedQuantity += totalNotPassedQuantity;\r\n              totalNotPassedQuantity = 0;\r\n            } else {\r\n              totalNotPassedQuantity -= canFillQuantity;\r\n              notPassedQuantity += canFillQuantity;\r\n              canFillQuantity = 0;\r\n            }\r\n\r\n            let updateProduct: { id: number, passed_quantity: number, not_passed_quantity: number, quality_control?: EInvoiceProductQualityControl } = {\r\n              id: prod.id,\r\n              passed_quantity: passedQuantity,\r\n              not_passed_quantity: notPassedQuantity,\r\n            };\r\n            console.log('updateProduct.passed_quantity', updateProduct.passed_quantity);\r\n            console.log('updateProduct.passed_quantity', prod.quantity);\r\n            if (updateProduct.passed_quantity === 0 && updateProduct.not_passed_quantity === 0) {\r\n              updateProduct.quality_control = null;\r\n            } else {\r\n              if (updateProduct.passed_quantity === prod.quantity) {\r\n                updateProduct.quality_control = EInvoiceProductQualityControl.PASSED;\r\n              } else if (updateProduct.not_passed_quantity === prod.quantity) {\r\n                updateProduct.quality_control = EInvoiceProductQualityControl.NOT_PASSED;\r\n              } else if (updateProduct.not_passed_quantity + updateProduct.passed_quantity === prod.quantity) {\r\n                updateProduct.quality_control = EInvoiceProductQualityControl.PARTLY_PASSED;\r\n              }\r\n            }\r\n\r\n            dataToSendCalls.push(this.orderProductService.updatePartly(updateProduct as OrderProduct));\r\n          });\r\n\r\n        this.isPending = true;\r\n        forkJoin([...dataToSendCalls]).subscribe(res => {\r\n          this.isPending = false;\r\n          this.dialogRef.close(true);\r\n        });\r\n      } else {\r\n        this.updateQualityControl();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateQualityControl() {\r\n    console.log(this.form.value);\r\n    if (this.form.valid) {\r\n      const currentQuantities = this.form.get('passed_quantity').value + this.form.get('not_passed_quantity').value;\r\n      const totalQuantityOriginal = this.data.entity.invoiceProducts.reduce((sum, p) => sum + p.quantity, 0);\r\n      const totalPassedQuantity = this.data.entity.invoiceProducts.reduce((sum, p) => sum + p.accepted_quantity, 0) + this.form.get('passed_quantity').value;\r\n      let passedQuantity = this.form.get('passed_quantity').value;\r\n      if (currentQuantities < totalQuantityOriginal) {\r\n        // Учесть RMA accepted_quantities\r\n        passedQuantity = totalPassedQuantity;\r\n      }\r\n\r\n      const dataToSend = {\r\n        invoice_products_ids: this.data.entity.invoiceProducts.map(prod => prod.id),\r\n        passed_quantity: passedQuantity,\r\n        not_passed_quantity: this.form.get('not_passed_quantity').value\r\n      }\r\n\r\n      this.isPending = true;\r\n\r\n      this.invoiceProductService.bulkUpdateQualityControl(dataToSend).subscribe(res => {\r\n        this.isPending = false;\r\n        this.dialogRef.close(true);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  isDisableCompleteButton() {\r\n    // Can allow if passed_quantity not_passed_quantity quantity is 0's or\r\n    // passed_quantity + not_passed_quantity equals quantity\r\n\r\n    const isNotFillingAll = +this.form.get('passed_quantity').value +\r\n      +this.form.get('not_passed_quantity').value !== +this.quantity;\r\n\r\n    const isSetToZeroes = +this.form.get('passed_quantity').value === 0 &&\r\n      +this.form.get('not_passed_quantity').value === 0;\r\n\r\n    return isNotFillingAll && !isSetToZeroes;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Quality Control (Name: {{data.entity.nomenclature.name}}, Quantity: {{data.entity.totalQuantity}})\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"passed\"> Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.totalQuantity}}\"\r\n        type=\"number\"\r\n        id=\"passed\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"np\"> Not Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"not_passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.totalQuantity}}\"\r\n        type=\"number\"\r\n        id=\"np\"\r\n      >\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-success\" [disabled]=\"form.invalid || isDisableCompleteButton()\" (click)=\"onComplete()\" [loading]=\"isPending\"></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {EInvoiceProductQualityControl} from '../../../procurement/models/invoice-product';\r\nimport {OrderTechnicalEquipmentsService} from '../../../warehouse/services/order-technical-equipments.service';\r\n\r\n@Component({\r\n  selector: 'pek-quality-control-technical-equipment',\r\n  templateUrl: './quality-control-technical-equipment.component.html',\r\n  styleUrls: ['./quality-control-technical-equipment.component.scss']\r\n})\r\nexport class QualityControlTechnicalEquipmentComponent implements OnInit {\r\n  form: FormGroup;\r\n  quantity: number;\r\n  isPending = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<QualityControlTechnicalEquipmentComponent>,\r\n    private fb: FormBuilder,\r\n    private invoiceProductService: InvoiceProductService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n    private orderProductService: OrderProductService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: any, entity: any, isOwnProduction: boolean }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      id: [this.data.entity.id],\r\n      passed_quantity: [this.data.entity.passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\r\n      not_passed_quantity: [this.data.entity.not_passed_quantity, [Validators.max(this.data.entity.quantity), Validators.min(0), Validators.required]],\r\n    });\r\n    this.quantity = this.data.entity.quantity;\r\n  }\r\n\r\n  isDisableCompleteButton() {\r\n    return +this.form.get('passed_quantity').value + +this.form.get('not_passed_quantity').value !== +this.quantity;\r\n  }\r\n\r\n  onComplete() {\r\n    if (this.form.valid) {\r\n      this.isPending = true;\r\n      if (this.form.value.passed_quantity + this.form.value.not_passed_quantity === this.data.entity.quantity) {\r\n        if (this.form.value.passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PASSED));\r\n        } else if (this.form.value.not_passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.NOT_PASSED));\r\n        } else if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\r\n          this.form.addControl('quality_control', new FormControl(EInvoiceProductQualityControl.PARTLY_PASSED));\r\n        }\r\n      }\r\n      if (this.form.value.not_passed_quantity + this.form.value.passed_quantity === this.data.entity.quantity) {\r\n        if (this.data.isOwnProduction) {\r\n          this.orderTechnicalEquipmentsService.updatePartly(this.form.value).subscribe(() => {\r\n            this.isPending = false;\r\n            this.dialogRef.close(true);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Quality Control (Name: {{data.entity.nomenclature.name}}, Quantity: {{data.entity.quantity}})\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"passed\"> Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.quantity}}\"\r\n        type=\"number\"\r\n        id=\"passed\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"np\"> Not Passed* </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"not_passed_quantity\"\r\n        class=\"form-control\"\r\n        min=\"0\"\r\n        max=\"{{data.entity.quantity}}\"\r\n        type=\"number\"\r\n        id=\"np\"\r\n      >\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button pButton type=\"button\" label=\"Complete\" class=\"p-button-success\" [disabled]=\"form.invalid || isDisableCompleteButton()\" (click)=\"onComplete()\" [loading]=\"isPending\"></button>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QcRouting } from './qc.routing';\r\nimport { QcListComponent } from './components/qc-list/qc-list.component';\r\nimport { QcDeliveryListComponent } from './components/qc-delivery-list/qc-delivery-list.component';\r\nimport { QcLayoutComponent } from './components/qc-layout/qc-layout.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport { QcInvoiceComponent } from './components/qc-invoice/qc-invoice.component';\r\nimport { QcOrderComponent } from './components/qc-order/qc-order.component';\r\nimport { QcDeliveryComponent } from './components/qc-delivery/qc-delivery.component';\r\nimport { QcDeliveryChainComponent } from './components/qc-delivery-chain/qc-delivery-chain.component';\r\nimport { QualityControlModalComponent } from './modals/quality-control-modal/quality-control-modal.component';\r\nimport { ProtocolsComponent } from './components/protocols/protocols.component';\r\nimport { CreateEditProtocolComponent } from './modals/create-edit-protocol/create-edit-protocol.component';\r\nimport { NomenclatureProtocolPickerComponent } from './modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component';\r\nimport { QualityControlTechnicalEquipmentComponent } from './modals/quality-control-technical-equipment/quality-control-technical-equipment.component';\r\nimport { MoveQcWithSerialComponent } from './modals/move-qc-with-serial/move-qc-with-serial.component';\r\nimport { MoveQcWithProtocolComponent } from './modals/move-qc-with-protocol/move-qc-with-protocol.component';\r\nimport {QrCodeModule} from '../qr-code/qr-code.module';\r\nimport { FoundProductInQcComponent } from './modals/found-product-in-qc/found-product-in-qc.component';\r\nimport { QcDeliveryPrintPageComponent } from './components/qc-delivery-print-page/qc-delivery-print-page.component';\r\nimport { QcDeliveryChainPrintPageComponent } from './components/qc-delivery-chain-print-page/qc-delivery-chain-print-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QcListComponent,\r\n    QcDeliveryListComponent,\r\n    QcLayoutComponent,\r\n    QcInvoiceComponent,\r\n    QcOrderComponent,\r\n    QcDeliveryComponent,\r\n    QcDeliveryChainComponent,\r\n    QualityControlModalComponent,\r\n    ProtocolsComponent,\r\n    CreateEditProtocolComponent,\r\n    NomenclatureProtocolPickerComponent,\r\n    QualityControlTechnicalEquipmentComponent,\r\n    MoveQcWithSerialComponent,\r\n    MoveQcWithProtocolComponent,\r\n    FoundProductInQcComponent,\r\n    QcDeliveryPrintPageComponent,\r\n    QcDeliveryChainPrintPageComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        QcRouting,\r\n        SharedModule,\r\n        LayoutModule,\r\n        QrCodeModule\r\n    ]\r\n})\r\nexport class QcModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {QcLayoutComponent} from './components/qc-layout/qc-layout.component';\r\nimport {QcListComponent} from './components/qc-list/qc-list.component';\r\nimport {QcDeliveryListComponent} from './components/qc-delivery-list/qc-delivery-list.component';\r\nimport {QcOrderComponent} from './components/qc-order/qc-order.component';\r\nimport {QcInvoiceComponent} from './components/qc-invoice/qc-invoice.component';\r\nimport {QcDeliveryComponent} from './components/qc-delivery/qc-delivery.component';\r\nimport {QcDeliveryChainComponent} from './components/qc-delivery-chain/qc-delivery-chain.component';\r\nimport {ProtocolsComponent} from './components/protocols/protocols.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QcLayoutComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'list', pathMatch: 'full'},\r\n      {path: 'list', title: 'Quality Control', component: QcListComponent},\r\n      {path: 'delivery', title: 'Quality Control', component: QcDeliveryListComponent},\r\n      {path: 'invoice/:id', title: 'Invoice Quality Control', component: QcInvoiceComponent},\r\n      {path: 'order/:id', title: 'Order Quality Control', component: QcOrderComponent},\r\n      {path: 'delivery/:id', title: 'Delivery to outsourcer Quality Control', component: QcDeliveryComponent},\r\n      {path: 'delivery/chain/:id', title: 'Delivery to customer Quality Control', component: QcDeliveryChainComponent},\r\n      {path: 'protocols', title: 'Protocols', component: ProtocolsComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QcRouting { }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ProductQcProtocol, QcProtocol, QcProtocols, QrProtocolParagraph} from '../models/protocol';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {Currency} from '../../warehouse/models/warehouse';\r\nimport {\r\n  CreateEditWarehouseComponent\r\n} from '../../warehouse/modals/create-edit-warehouse/create-edit-warehouse.component';\r\nimport {CreateEditProtocolComponent} from '../modals/create-edit-protocol/create-edit-protocol.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {\r\n  NomenclatureProtocolPickerComponent\r\n} from '../modals/nomenclature-protocol-picker/nomenclature-protocol-picker.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProtocolService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<QcProtocols> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: QcProtocols }>(this.API_URL + 'qc_protocols/' + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<QcProtocol[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: QcProtocol[] }>(this.API_URL + 'qc_protocols/' + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getOne(id): Observable<QcProtocol> {\r\n    return this.httpClient.get<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${id}/`).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  create(send): Observable<QcProtocol> {\r\n    return this.httpClient.post<{ data: QcProtocol }>(this.API_URL + 'qc_protocols/', send).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(send): Observable<QcProtocol> {\r\n    return this.httpClient.patch<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${send.id}/`, send).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  addParagraphs(paragraphs): Observable<QrProtocolParagraph[]> {\r\n    return forkJoin(...paragraphs.map(paragraph => this.httpClient.post<{ data: QrProtocolParagraph }>(this.API_URL + 'qc_protocol_paragraphs/', paragraph)));\r\n  }\r\n\r\n  updateParagraphs(paragraphs): Observable<QrProtocolParagraph[]> {\r\n    return forkJoin(...paragraphs.map(paragraph => this.httpClient.patch<{ data: QrProtocolParagraph }>(this.API_URL + `qc_protocol_paragraphs/${paragraph.id}/`, paragraph)));\r\n  }\r\n\r\n  deleteParagraphs(ids): Observable<QrProtocolParagraph[]> {\r\n    return forkJoin(...ids.map(id => this.httpClient.delete<{ data: QrProtocolParagraph }>(this.API_URL + `qc_protocol_paragraphs/${id}/`)));\r\n  }\r\n\r\n  getParagraphs(query?: QuerySearch[]): Observable<QrProtocolParagraph[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: QrProtocolParagraph[] }>(this.API_URL + 'qc_protocol_paragraphs/' + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getWarehouseProducts(id: number): Observable<any> {\r\n    return this.httpClient.get<{ data: any }>(this.API_URL + `warehouse_products_qc_protocols/${id}/`).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  addNomenclature(send, id): Observable<any>  {\r\n    return this.httpClient.post<{ data: QcProtocol }>(this.API_URL + `qc_protocols/${id}/add_protocol_to_nomenclature/`, send).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  productsToQc(send): Observable<any>  {\r\n    return this.httpClient.post<{ data: any }>(environment.base_url + 'procurement/warehouse_products_qc_protocols/', send).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  deleteProtocol(id): Observable<any>  {\r\n    return this.httpClient.delete(this.API_URL + 'qc_protocols/' + `${id}/`);\r\n  }\r\n\r\n  saveFile(file): Observable<any>  {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + 'qc_protocols_files/', file).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  deleteFile(id): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + `qc_protocols_files/${id}/`);\r\n  }\r\n\r\n  getFiles(query?: QuerySearch[]) {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: any }>(this.API_URL + `qc_protocols_files/` + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  downloadFile(id): Observable<any> {\r\n    return this.httpClient.get(this.API_URL + 'qc_protocols_files/' + id + '/download/', {responseType: 'blob'});\r\n  }\r\n\r\n  qcSerial(send): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'create_update_product_by_serial/', send);\r\n  }\r\n\r\n  qcSerialUpdate(send): Observable<any> {\r\n    return this.httpClient.patch(this.API_URL + 'create_update_product_by_serial/', send);\r\n  }\r\n\r\n  getProductsQcProtocols(query?: QuerySearch[]): Observable<ProductQcProtocol[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ProductQcProtocol[] }>(this.API_URL + 'warehouse_products_qc_protocols/' + qString).pipe(\r\n      map(response =>\r\n        response.data)\r\n    );\r\n  }\r\n\r\n  updateProductProtocol(send: any, id: number) {\r\n    return this.httpClient.patch<{ data: any[] }>(this.API_URL + `warehouse_products_qc_protocols/${id}/`, send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createEditProtocolModal(type: ModalActionType, protocol?: QcProtocol): Observable<QcProtocol> {\r\n    return this.dialog\r\n      .open<CreateEditProtocolComponent>(CreateEditProtocolComponent, {\r\n        width: '60rem',\r\n        height: 'auto',\r\n        data: {type, protocol},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  addNomenclatureDialog(): Observable<Nomenclature> {\r\n    return this.dialog\r\n      .open<NomenclatureProtocolPickerComponent>(NomenclatureProtocolPickerComponent, {\r\n        width: '70rem',\r\n        height: 'auto',\r\n        data: {},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {QualityControlModalComponent} from '../modals/quality-control-modal/quality-control-modal.component';\r\nimport {\r\n  QualityControlTechnicalEquipmentComponent\r\n} from '../modals/quality-control-technical-equipment/quality-control-technical-equipment.component';\r\nimport {MoveQcWithSerialComponent} from '../modals/move-qc-with-serial/move-qc-with-serial.component';\r\nimport {InvoiceProduct} from '../../procurement/models/invoice-product';\r\nimport {MoveQcWithProtocolComponent} from '../modals/move-qc-with-protocol/move-qc-with-protocol.component';\r\nimport {OrderProduct} from '../../procurement/models/order-product';\r\nimport {FoundProductInQcComponent} from '../modals/found-product-in-qc/found-product-in-qc.component';\r\nimport {Observable} from 'rxjs';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QcService {\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  controlProduct(entity: any, isOwnProduction = false) {\r\n    return this.dialog\r\n      .open<QualityControlModalComponent>(QualityControlModalComponent, {\r\n        width: '50rem',\r\n        data: {type: 'edit', entity, isOwnProduction},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  serializedControlProduct(product: InvoiceProduct | OrderProduct, currentCount: number, count: number, type: 'invoice' | 'order', foundSerialId: number = null) {\r\n    return this.dialog\r\n      .open<MoveQcWithSerialComponent>(MoveQcWithSerialComponent, {\r\n        width: '60rem',\r\n        data: {product, currentCount, count, type, foundSerialId},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  withProtocolControlProduct(product: InvoiceProduct | OrderProduct, currentCount: number, count: number, type: 'invoice' | 'order', foundSerialId: number = null) {\r\n    return this.dialog\r\n      .open<MoveQcWithProtocolComponent>(MoveQcWithProtocolComponent, {\r\n        width: '60rem',\r\n        data: {product, currentCount, count, type, foundSerialId},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  controlTechnicalEquipment(entity: any, isOwnProduction = false) {\r\n    return this.dialog\r\n      .open<QualityControlTechnicalEquipmentComponent>(QualityControlTechnicalEquipmentComponent, {\r\n        width: '50rem',\r\n        data: {type: 'edit', entity, isOwnProduction},\r\n        disableClose: true,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  foundProductInList(nomenclature: Nomenclature): Observable<boolean> {\r\n    return this.dialog\r\n      .open<FoundProductInQcComponent>(FoundProductInQcComponent, {\r\n        width: '50rem',\r\n        data: {nomenclature},\r\n        disableClose: false,\r\n        autoFocus: false\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n}\r\n"],"names":["BehaviorSubject","iif","switchMap","filter","map","tap","UntilDestroy","untilDestroyed","i0","ctx_r6","ProtocolsComponent","constructor","protocolService","modalService","label","items","icon","command","editProtocol","removeProtocol","name","value","currentPage","search$","pipe","isLoading","prepareForSearch","isShowAll","getForPagination","query","response","protocolsCount","count","results","get","products","length","protocols","ngOnInit","paginate","event","isStartFirstPage","page","next","onShowAll","selectedProtocol","push","confirm","subscribe","res","deleteProtocol","id","onCreateProtocol","createEditProtocolModal","Boolean","selectors","viewQuery","ctx","Order","Subject","takeUntil","take","DOCUMENT","ctx_r34","request_r31","ctx_r15","ctx_r16","ProductRequestListOrder","QcDeliveryComponent","requestsService","auth","ordersService","route","router","tasksService","orderTechnicalEquipmentsService","albumService","document","printPage","printPageGrouped","Date","snapshot","paramMap","getOrderInfo","orderId","getRequests","getOrderTechnicalEquipments","formGroupedOrderedProducts","hierarchyRequests","orderedProductsForPrint","forEach","el","children","child","for_order_product","for_order_ids","findIndex","child_ids","technicalEquipments","onCancel","cancel","getMinimalById","destroy$","order","ordered_items_technologies","order_products","product","current_technology","canAddTechnology","productInList","find","nomenclature","quantity","requests","selectedRequest","getDeliveryByOrder","listRequests","JSON","parse","stringify","sort","a","b","getCodeAndNameId","request","req","material_nomenclature","reserved_serial_products","getSameRequests","ids","all_reserved_serial_products","unique_locators","locators","is_reserved","every","available_quantity_sum","required_quantity","reduce","sum","warehouse_quantity","serial_number","total_required_quantity","accumulator","currentValue","locator","index","self","innerLocator","splice","hierRequest","list_product","material","non_material","codeName","codeNameSecond","code","codeSecond","nameSecond","order_product_nomenclature","complete","completeMaterialQc","navigate","relativeTo","onUpdateItems","qc_stage","confirmation_flag","listId","requestData","qc_delivery_status","updateMaterial","onResetConfirmation","resetConfirmation","onCompleteMaterialQcList","onGoProd","window","open","goOrder","type","link","goToOrder","accounting_type","isShowPrint","setTimeout","print","isShowPrintGrouped","onWindowAfterPrint","printClosed","printAlbum","getNomenclaturesImages","r","togglePrintAlbumMode","isAlbumPrint","ngOnDestroy","onStartScanning","clearQrResults","requestAnimationFrame","elementsRowsIds","elements","querySelectorAll","element","isScanned","scanningEnd","currentDisplayRowId","foundRowsIds","onScanned","data","scanForListProduct","onCancelScanned","lastScannedId","sendDataProductionRequests","testFoundIdsOnScan","item_id_changed","elementIndex","isMainIdChecked","is_scanned","firstPage","Math","floor","requestTree","node","scrollToElement","rowId","getElementById","scrollIntoView","behavior","block","isFullyScanned","mainScanned","allInnerScanned","isPartlyScanned","innerNeedScan","_r18","EInvoiceProductQualityControl","EInvoiceProductRMAStatus","environment","deepCopy","product_r22","QcInvoiceComponent","invoiceService","orderProductService","invoiceProductService","qrCodeService","qcService","link_url","params","invoiceId","getInvoice","getInvoiceProducts","getById","invoice","getTechnicalEquipmentToQc","invoiceProducts","selectedInvoiceProducts","isLoadingProducts","allocated_products","allocated_quantity","formedRMAInvoiceProducts","prepareRMAInvoiceProducts","formedNonRMAInvoiceProducts","prepareNonRMAInvoiceProducts","p","rma_status","technologyId","nomenclatureId","existing","prod","invProd","totalQuantity","accepted_quantity","totalQuantityPassed","idx","quality_control","totalQuantityNotPassed","PASSED","toString","NOT_PASSED","PARTLY_PASSED","rma_comment","localeCompare","invoiceCanBeCompleted","RECEIVED","tempProduct","existingRMA","allocated","totalSerialNumbers","serial_numbers","sn","invoice_product_id","passed_quantity","not_passed_quantity","totalQuantityAllocated","isLoadingTechnicalEquipment","getTechnicalEquipmentToQC","equipment","onGenerateQrCodes","isGenerating","send","by_nomenclatures_list","invoiceProduct","bulk_or_serial","nomenclature_id","serial_number_ids","s","order_product_ids","invoice_product_ids","exists","generateQrCodes","self_serial_number","onCancellation","isCancellation","cancellation","onComplete","qc_completed","isCompleting","updatePartly","onCompleteItems","sendProducts","qc_protocol","isCompletingProducts","severalUpdatePartly","onShowImages","showImageGallery","onQualityControl","currentCount","withProtocolControlProduct","foundSerialId","serializedControlProduct","controlProduct","onPrintAlbum","onQualityControlTechnicalEquipment","controlTechnicalEquipment","selectedTechnicalEquipment","isScanning","scanInvoiceProductInQc","foundInvoiceProduct","orderProduct","found_id","foundProductInList","decls","vars","consts","template","_r15","forkJoin","ctx_r3","QcOrderComponent","orderService","getOrder","getOrderProducts","orderProducts","selectedOrderProducts","getQc","orderCanBeCompleted","nomenclatures","onRework","isReworking","reworkOrder","onReworkProduct","isReworkingProduct","productsIds","calls","reworkOrderProduct","o","scanOrderProductInQc","foundOrderProduct","MAT_DIALOG_DATA","debounceTime","distinctUntilChanged","NomenclatureProtocolPickerComponent","dialogRef","fb","nomenclatureService","adapterService","group","categories","root_categories","generateQueryKey","searchForm","productsCount","paginateToFistPage","name$","code$","selectedProduct","newQueryKey","queryKey","key","controls","paginator","changePage","onSelectProduct","close","onSelectCategories","patchValue","onSelectRootCategories"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}