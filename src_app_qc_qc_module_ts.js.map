{"version":3,"file":"src_app_qc_qc_module_ts.js","mappings":"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","sources":["./src/app/qc/components/qc-invoice/qc-invoice.component.ts","./src/app/qc/components/qc-invoice/qc-invoice.component.html","./src/app/qc/components/qc-layout/qc-layout.component.ts","./src/app/qc/components/qc-layout/qc-layout.component.html","./src/app/qc/components/qc-list/qc-list.component.ts","./src/app/qc/components/qc-list/qc-list.component.html","./src/app/qc/components/qc-order/qc-order.component.ts","./src/app/qc/components/qc-order/qc-order.component.html","./src/app/qc/qc.module.ts","./src/app/qc/qc.routing.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-qc-invoice',\n  templateUrl: './qc-invoice.component.html',\n  styleUrls: ['./qc-invoice.component.scss']\n})\nexport class QcInvoiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>qc-invoice works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-qc-layout',\n  templateUrl: './qc-layout.component.html',\n  styleUrls: ['./qc-layout.component.scss']\n})\nexport class QcLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Invoices', commands: ['list']},\n    {label: 'Protocols', commands: ['protocols']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Quality Control'\"\n  [routes]=\"routes\"\n></pek-header>\n\n<router-outlet></router-outlet>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Invoice} from '../../../procurement/models/invoice';\nimport {TreeNode} from 'primeng/api';\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\nimport {Order} from '../../../procurement/models/order';\nimport {tap} from 'rxjs/operators';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\nimport {Category} from '../../../product-structure/models/category';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport {forkJoin} from 'rxjs';\n\n@Component({\n  selector: 'pek-qc-list',\n  templateUrl: './qc-list.component.html',\n  styleUrls: ['./qc-list.component.scss']\n})\nexport class QcListComponent implements OnInit {\n  invoices: Invoice[];\n  orders: Order[];\n\n  selectedInvoiceNode: TreeNode<Invoice>;\n  selectedOrderNode: TreeNode<Order>;\n  selectedPurchasedInvoiceNode: TreeNode<Invoice>;\n\n  invoiceManufacturedTree: TreeNode<Invoice>[];\n  invoicePurchasedTree: TreeNode<Invoice>[];\n  ownProductionCategorizedList: TreeNode[];\n\n  invoiceTree: TreeNode<Invoice>[];\n\n  isLoadingInvoices = true;\n  isLoadingOrders = true;\n\n  categories: TreeNode<Category>[];\n\n\n  expanseMap = {};\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private orderService: OrderService,\n    private productStructureCategoryService: ProductStructureCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    forkJoin({\n      categories: this.productStructureCategoryService.get(),\n      invoices: this.invoiceService.get([\n        {name: 'needs_qc', value: true},\n        {name: 'by_qc_module_permission', value: true}\n      ]),\n      orders: this.orderService.get([\n        {name: 'needs_qc', value: true},\n        {name: 'by_qc_module_permission', value: true}\n      ])\n    }).subscribe(({categories, invoices, orders}) => {\n      if (this.categories) {\n        this.mapExpansion();\n      }\n\n      this.createTree(categories);\n\n      this.invoices = invoices;\n      this.makeUniqueProductionPlansInvoice();\n      this.resetProductPaymentTree();\n\n      this.orders = orders;\n      this.makeUniqueProductionPlans();\n      this.fillOwnProductionWithData();\n\n      this.isLoadingInvoices = false;\n    });\n  }\n\n  mapExpansion() {\n    this.categories.forEach(element => {\n      this.createExpanseMap(element);\n    });\n  }\n\n  createExpanseMap(node: TreeNode<Category>) {\n    if (node.expanded) {\n      this.expanseMap[node.data.id] = node.expanded;\n    } else {\n      this.expanseMap[node.data.id] = false;\n    }\n    if (node.children) {\n      node.children.forEach(element => {\n        this.createExpanseMap(element);\n      });\n    }\n  }\n\n  getInvoices() {\n    this.invoiceService.get([\n      {name: 'needs_qc', value: true},\n      {name: 'by_qc_module_permission', value: true}\n    ]).pipe(\n      tap(invoices => this.invoices = invoices),\n      tap(() => this.makeUniqueProductionPlansInvoice()),\n      tap(() => this.resetProductPaymentTree()),\n      tap(() => this.isLoadingInvoices = false)\n    ).subscribe();\n  }\n\n  getServices(): void {\n    this.orderService.get([\n      {name: 'needs_qc', value: true},\n      {name: 'by_qc_module_permission', value: true}\n    ]).pipe(\n      tap(orders => this.orders = orders),\n      tap(() => this.makeUniqueProductionPlans()),\n      tap(() => this.fillOwnProductionWithData()),\n    ).subscribe();\n  }\n\n  resetProductPaymentTree(): void {\n    const categories: { name: string, description: string, id: number, level?: number }[] = [];\n    this.invoices.forEach(invoice => {\n      const purchaseCategory = invoice.purchase_category;\n\n      if (purchaseCategory) {\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\n        if (isAdded < 0) {\n          categories.push({\n            name: purchaseCategory.name,\n            id: purchaseCategory.id,\n            description: purchaseCategory.description,\n          });\n        }\n      } else {\n        if (invoice.order?.accounting_type === 1) {\n          const isAdded = categories.findIndex(el => el.id === -2);\n          if (isAdded < 0) {\n            categories.push({name: 'Production Lists Procurement', id: -2, description: '', level: 0});\n          }\n        }\n        if (invoice.order?.accounting_type === 2) {\n          const isAdded = categories.findIndex(el => el.id === -1);\n          if (isAdded < 0) {\n            categories.push({name: 'Outsourcing', id: -1, description: '', level: 0});\n          }\n        }\n      }\n    });\n\n    categories.sort((a, b) => a.id - b.id);\n    this.invoiceTree = [];\n    categories.forEach(cat => {\n      this.invoiceTree.push({\n        data: <any>cat,\n        expanded: false,\n        parent: null\n      });\n    });\n\n    this.createPaymentTree();\n  }\n\n  createPaymentTree() {\n    this.invoiceTree = this.invoiceTree.map(node => {\n      return {\n        ...node,\n        children: []\n      };\n    });\n\n    this.invoiceTree.forEach(node => {\n      // Preparing Purchased Invoices\n      this.invoices.filter(invoice => invoice.purchase_category).forEach(invoice => {\n\n        const purchaseCategory = invoice.purchase_category;\n        if (purchaseCategory) {\n          if (purchaseCategory.id === node.data.id) {\n            node.children.push({\n              data: invoice,\n              expanded: false,\n              children: []\n            });\n          }\n        }\n      });\n\n      // Preparing Manufacturing Procurement\n      if (node.data.id === -2) {\n        const manProc = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 1);\n        node.children = cloneDeep(this.categories);\n        this.prepareInnerTreeCategories(manProc, node);\n      }\n\n      // Preparing Outsourcing\n      if (node.data.id === -1) {\n        const outsourcing = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order?.accounting_type === 2);\n        node.children = cloneDeep(this.categories);\n        this.prepareInnerTreeCategories(outsourcing, node);\n      }\n    });\n\n    this.separatePurchasedAndManufactured();\n  }\n\n  prepareInnerTreeCategories(invoices, nodeInner: TreeNode): void {\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\n    invoices.forEach(order => {\n      order.unique_root_production_plans.forEach(plan => {\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\n          const rootCatId = plan.root_nomenclature.root_category.id;\n          const rootCatName = plan.root_nomenclature.root_category.name;\n          const rootLevel = 1;\n\n          const catId = plan.root_nomenclature.id;\n          const catName = plan.root_nomenclature.name;\n          const catLevel = 2;\n\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\n\n          if (rootExistsIndex < 0) {\n            categoriesTemp.push({\n              id: rootCatId,\n              level: rootLevel,\n              name: rootCatName,\n              parentId: null\n            });\n          }\n\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\n\n          if (catExistsIndex < 0) {\n            categoriesTemp.push({\n              id: catId,\n              level: catLevel,\n              name: catName,\n              parentId: rootCatId\n            });\n          }\n        } else {\n          const indexNoNomenclature = categoriesTemp.findIndex(cat => cat.id === -2);\n          if (indexNoNomenclature < 0) {\n            categoriesTemp.push({\n              id: -2,\n              level: 1,\n              name: 'No root nomenclature',\n              parentId: null\n            });\n          }\n        }\n      });\n\n      if (order.unique_root_production_plans.length < 1) {\n        const noCategoryIndex = nodeInner.children.findIndex(node => node.data.id === -1);\n\n        if (noCategoryIndex < 0) {\n          nodeInner.children.push({\n            data: {\n              id: -1,\n              level: 0,\n              name: 'No Root List',\n              parentId: null\n            },\n            expanded: false,\n            children: [\n              {\n                data: {order, plan: null, level: 4},\n                expanded: false,\n                children: []\n              }]\n          });\n        } else {\n          nodeInner.children[noCategoryIndex].children.push(\n            {\n              data: {order, plan: null, level: 4},\n              expanded: false,\n              children: []\n            }\n          );\n        }\n      }\n    });\n\n    const temp = cloneDeep(nodeInner.children);\n    temp.forEach(node => {\n      this.appendCategories(node, categoriesTemp);\n    });\n\n    temp.forEach(node => {\n      this.fillWithTheData(node, invoices);\n    });\n\n    temp.forEach(node => {\n      this.removeUpdateEmptyCategories(node);\n    });\n\n    nodeInner.children = temp;\n  }\n\n  separatePurchasedAndManufactured(): void {\n    this.invoicePurchasedTree = this.invoiceTree.filter(invoice => invoice.data.id >= 0);\n    this.invoiceManufacturedTree = this.invoiceTree.filter(invoice => invoice.data.id < 0);\n  }\n\n  makeUniqueProductionPlans(): void {\n    this.orders.forEach(order => {\n      order.unique_root_production_plans = [];\n      order.root_production_plans.forEach(plan => {\n        if (plan.root_nomenclature) {\n          const nomenclatureId = plan.root_nomenclature.id;\n          const existingIndex =\n            order.unique_root_production_plans\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\n\n          if (existingIndex < 0) {\n            order.unique_root_production_plans.push(plan);\n          }\n        }\n      });\n    });\n  }\n\n  makeUniqueProductionPlansInvoice(): void {\n    this.invoices.forEach(invoice => {\n      invoice.unique_root_production_plans = [];\n      invoice.root_production_plans.forEach(plan => {\n        if (plan.root_nomenclature) {\n          const nomenclatureId = plan.root_nomenclature.id;\n          const existingIndex =\n            invoice.unique_root_production_plans\n              .findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\n\n          if (existingIndex < 0) {\n            invoice.unique_root_production_plans.push(plan);\n          }\n        }\n      });\n    });\n  }\n\n  createTree(data) {\n    const dd = [];\n    data.forEach(element => {\n      const ins = {data: element, expanded: false};\n      if (this.expanseMap) {\n        ins.expanded = this.expanseMap[element.id];\n      }\n      dd.push(ins);\n    });\n    const root = [];\n    const idMapping = dd.reduce((acc, el, i) => {\n      acc[el.data.id] = i;\n      return acc;\n    }, {});\n    dd.forEach(el => {\n      if (el.data.parent === null) {\n        root.push(el);\n        return;\n      }\n      const parentEl = dd[idMapping[el.data.parent]];\n      parentEl.children = [...(parentEl.children || []), el];\n      if (parentEl.children.length === 0) {\n        delete parentEl.children;\n      }\n\n    });\n    this.categories = root;\n    this.ownProductionCategorizedList = cloneDeep(this.categories);\n  }\n\n  private fillOwnProductionWithData() {\n    this.fillCategorizedTree();\n  }\n\n  fillCategorizedTree(): void {\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\n\n    this.orders.forEach(order => {\n      order.unique_root_production_plans.forEach(plan => {\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\n          const rootCatId = plan.root_nomenclature.root_category.id;\n          const rootCatName = plan.root_nomenclature.root_category.name;\n          const rootLevel = 1;\n\n          const catId = plan.root_nomenclature.id;\n          const catName = plan.root_nomenclature.name;\n          const catLevel = 2;\n\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\n\n          if (rootExistsIndex < 0) {\n            categoriesTemp.push({\n              id: rootCatId,\n              level: rootLevel,\n              name: rootCatName,\n              parentId: null\n            });\n          }\n\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\n\n          if (catExistsIndex < 0) {\n            categoriesTemp.push({\n              id: catId,\n              level: catLevel,\n              name: catName,\n              parentId: rootCatId\n            });\n          }\n        }\n      });\n\n      if (order.unique_root_production_plans.length < 1) {\n        const noCategoryIndex = this.ownProductionCategorizedList.findIndex(nodeInner => nodeInner.data.id === -1);\n\n        if (noCategoryIndex < 0) {\n          this.ownProductionCategorizedList.push({\n            data: {\n              id: -1,\n              level: 0,\n              name: 'No Root List',\n              parentId: null\n            },\n            expanded: false,\n            children: [\n              {\n                data: {order, plan: null, level: 4},\n                expanded: false,\n                children: []\n              }]\n          });\n        } else {\n          this.ownProductionCategorizedList[noCategoryIndex].children.push(\n            {\n              data: {order, plan: null, level: 4},\n              expanded: false,\n              children: []\n            }\n          );\n        }\n      }\n    });\n\n    if (this.ownProductionCategorizedList) {\n      const temp = cloneDeep(this.ownProductionCategorizedList);\n      temp.forEach(node => {\n        this.appendCategories(node, categoriesTemp);\n      });\n\n      temp.forEach(node => {\n        this.fillWithTheData(node, this.orders);\n      });\n\n      temp.forEach(node => {\n        this.removeUpdateEmptyCategories(node);\n      });\n\n      this.ownProductionCategorizedList = temp;\n      this.isLoadingOrders = false;\n    }\n  }\n\n  appendCategories(node: TreeNode, categoriesTemp: { id: number, level: number, parentId: number, name: string }[]): void {\n    if (!node.children) {\n      node.children = [];\n    }\n\n    categoriesTemp.forEach(cat => {\n      if (cat.parentId === node.data.id) {\n        node.children.push({\n          data: {\n            id: cat.id,\n            name: cat.name,\n            level: cat.level,\n            parentId: cat.parentId,\n            isCategory: true,\n            categories: 0\n          },\n          expanded: false,\n          children: []\n        });\n      }\n    });\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.appendCategories(childNode, categoriesTemp);\n      });\n    }\n  }\n\n  fillWithTheData(node: TreeNode, orders): void {\n    if (!node.children) {\n      node.children = [];\n    }\n\n    if (node.data.isCategory) {\n      orders.forEach(order => {\n        order.unique_root_production_plans.forEach(plan => {\n          if (plan.root_nomenclature) {\n            const catId = plan.root_nomenclature.id;\n            if (node.data.id === catId) {\n              const existingCatChildIndex = node.children.findIndex(cat => cat.data.id === plan.list_product.nomenclature.id);\n\n              if (existingCatChildIndex < 0) {\n                node.children.push({\n                  data: {\n                    id: plan.list_product.nomenclature.id,\n                    name: plan.list_product.nomenclature.name,\n                    level: 3,\n                    categories: 0,\n                  },\n                  expanded: false,\n                  children: [{\n                    data: {order, plan, level: 4},\n                    expanded: false,\n                    children: []\n                  }]\n                });\n              } else {\n                node.children[existingCatChildIndex].children.push({\n                  data: {order, plan, level: 4},\n                  expanded: false,\n                  children: []\n                });\n              }\n            }\n          }\n        });\n      });\n    }\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.fillWithTheData(childNode, orders);\n      });\n    }\n  }\n\n  removeUpdateEmptyCategories(node: TreeNode): void {\n    if (!node.data.isCategory && !node.data.order) {\n      let hideFromTable = true;\n      const hasContent = node.children.filter(child => child.data.order).length > 0;\n      if (hasContent) {\n        hideFromTable = false;\n      }\n\n      node.children.forEach(childNode => {\n        checkForContent(childNode);\n      });\n\n      function checkForContent(childNode) {\n        if (hideFromTable) {\n          const hasContentInner = childNode.children.filter(child => child.data.order).length > 0;\n          if (hasContentInner) {\n            hideFromTable = false;\n          }\n        }\n        childNode.children.forEach(childNode2 => {\n          checkForContent(childNode2);\n        });\n      }\n\n      node.data.hideFromTable = hideFromTable;\n    }\n\n    node.data.categories = node.children.length;\n    if (node.children) {\n      node.children.forEach((childNode, indexChild) => {\n        this.removeUpdateEmptyCategories(childNode);\n      });\n    }\n  }\n\n  expandCollapseAllInvoices(isToExpand = true): void {\n    const temp = cloneDeep(this.invoiceManufacturedTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, isToExpand);\n    });\n    this.invoiceManufacturedTree = temp;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  expandCollapsePurchasedInvoices(isToExpand = true): void {\n    const temp = cloneDeep(this.invoicePurchasedTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, isToExpand);\n    });\n    this.invoicePurchasedTree = temp;\n  }\n\n  expandCollapseAllOrders(isToExpand = true): void {\n    const temp = cloneDeep(this.ownProductionCategorizedList);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, isToExpand);\n    });\n    this.ownProductionCategorizedList = temp;\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'quality-control'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Invoices</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__tabs\">\n    <p-tabView class=\"custom-tabs\">\n      <p-tabPanel\n        [header]=\"'Production Lists Procurement and Outsourcing Invoices'\"\n        [selected]=\"true\"\n      >\n        <div class=\"page__table\">\n          <p-treeTable\n            #dt\n            selectionMode=\"single\"\n            [value]=\"invoiceManufacturedTree\"\n            [(selection)]=\"selectedInvoiceNode\"\n            scrollHeight=\"calc(100vh - 22rem)\"\n            [scrollable]=\"true\"\n          >\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\n                <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\n                <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p\n                  class=\"subtitle\"\n                  *ngIf=\"!selectedInvoiceNode\">\n                  Choose the Production Lists Procurement or Outsourcing Invoice to view Items\n                </p>\n                <a\n                  [class.disabled]=\"!selectedInvoiceNode\"\n                  [routerLink]=\"['../', 'invoice', selectedInvoiceNode?.data.order ?\n      selectedInvoiceNode?.data.order.id :\n      selectedInvoiceNode?.data.id]\"\n                  class=\"ml-auto mr-2\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Items\"\n                >\n                </a>\n                <button\n                  [disabled]=\"isLoadingInvoices\"\n                  class=\"mr-2\"\n                  pButton\n                  type=\"button\"\n                  label=\"Expand All\"\n                  icon=\"pi pi-angle-down\"\n                  (click)=\"expandCollapseAllInvoices()\"\n                ></button>\n                <button\n                  [disabled]=\"isLoadingInvoices\"\n                  pButton\n                  type=\"button\"\n                  label=\"Collapse All\"\n                  icon=\"pi pi-angle-up\"\n                  (click)=\"expandCollapseAllInvoices(false)\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template\n              pTemplate=\"body\"\n              let-invoiceNode\n              let-invoice=\"rowData\"\n              let-i=\"rowIndex\"\n            >\n              <tr\n                [ttRow]=\"invoiceNode\"\n                [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\n                [ttSelectableRow]=\"invoiceNode\"\n                  *ngIf=\"!invoice.hideFromTable\"\n              >\n                <td  style=\"width: 20%\" [class.text-center]=\"invoice.order\">\n                  <div class=\"table-toggle\">\n                    <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\n                    <ng-container *ngIf=\"!invoice.order\">\n                      <span [class.category-name]=\"invoice.level === 0 && invoice.hideFromTable !== false\">\n                        {{invoice.name}}\n                        <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\n                        <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\n                      </span>\n                    </ng-container>\n                    <span *ngIf=\"invoice.level === 4\">\n                      {{(invoice.order?.order?.qc_started_date ? invoice.order?.order?.qc_started_date :\n                      invoice.order.system_creation_date) |date:'dd/MM/yyyy HH:mm'}}\n                      </span>\n                  </div>\n                </td>\n                <td  style=\"width: 15%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\n                  </ng-container>\n                  <span\n                    *ngIf=\"invoice.level === 4\"\n                    [class.text-warning]=\"invoice.order.unique_root_production_plans.length > 1\"\n                  >\n                   {{invoice.order.self_serial_number}} {{invoice.order.self_proforma_serial_number}}\n                  </span>\n                </td>\n                <td  style=\"width: 10%\" class=\"text-center\">\n                  <span *ngIf=\"invoice.level === 4\">\n                    {{invoice.order?.order?.id}}\n                  </span>\n                </td>\n                <td  style=\"width: 20%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.supplier?.name}}\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4\">\n                    {{invoice.order.supplier?.name}}\n                  </span>\n                </td>\n                <td  style=\"width: 15%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4\">\n                    {{invoice.order.items_reception_date | date: 'dd/MM/yyyy'}}\n                   </span>\n                </td>\n                <td style=\"width: 20%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\n                      {{root_list.list_product.nomenclature.name}}\n                    </div>\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4 && invoice.plan\">\n                    {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\n                    <span>({{invoice.plan.required_quantity}})</span>\n              </span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel\n        [header]=\"'Own Production Invoices'\"\n      >\n        <div class=\"page__table\">\n          <p-treeTable\n            #dt\n            selectionMode=\"single\"\n            [value]=\"ownProductionCategorizedList\"\n            [(selection)]=\"selectedOrderNode\"\n            [scrollable]=\"true\"\n            scrollHeight=\"calc(100vh - 22rem)\"\n          >\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\n                <th style=\"width: 15%;\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 45%;\" class=\"text-center\">Items Reception Date</th>\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p\n                  class=\"subtitle\"\n                  *ngIf=\"!selectedOrderNode\">\n                  Choose Own Production Invoice to view Items\n                </p>\n                <a\n                  [class.disabled]=\"!selectedOrderNode\"\n                  [routerLink]=\"['../', 'order', selectedOrderNode?.data.order.id]\"\n                  class=\"ml-auto mr-2\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Items\"\n                >\n                </a>\n                <button\n                  [disabled]=\"isLoadingOrders\"\n                  (click)=\"expandCollapseAllOrders()\"\n                  class=\"mr-2\"\n                  pButton\n                  type=\"button\"\n                  label=\"Expand All\"\n                  icon=\"pi pi-angle-down\"\n                ></button>\n                <button\n                  [disabled]=\"isLoadingOrders\"\n                  (click)=\"expandCollapseAllOrders(false)\"\n                  pButton\n                  type=\"button\"\n                  label=\"Collapse All\"\n                  icon=\"pi pi-angle-up\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template\n              pTemplate=\"body\"\n              let-rowNode\n              let-rowData=\"rowData\"\n            >\n              <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\" [ttSelectableRowDisabled]=\"rowData.level < 4\" *ngIf=\"!rowData.hideFromTable\">\n                <td style=\"width: 20%;\">\n                  <div  class=\"table-toggle\">\n                    <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                    <span [class.category-name]=\"rowData.level === 0\">\n                        {{rowData.name}}\n                      <i *ngIf=\"rowData.level < 4\" style=\"font-style: normal\">({{rowData.categories}})</i>\n                </span>\n                    <span *ngIf=\"rowData.order\">\n                  {{(rowData.order.qc_started_date? rowData.order.qc_started_date : rowData.order.created) | date: 'dd/MM/yyyy HH:mm'}}\n              </span>\n                  </div>\n                </td>\n                <td style=\"width: 15%;\" class=\"text-center\">\n              <span *ngIf=\"rowData.order\" [class.text-warning]=\"rowData.order.unique_root_production_plans.length > 1\">\n                {{rowData.order.id}}\n              </span>\n                </td>\n                <td style=\"width: 45%;\" class=\"text-center\">\n            <span *ngIf=\"rowData.order\">\n              {{rowData.order.items_reception_date | date: 'dd/MM/yyyy'}}\n            </span>\n                </td>\n                <td style=\"width: 20%;\" class=\"text-center\">\n              <span *ngIf=\"rowData.order && rowData.plan\"  >\n                {{rowData.plan.list_product.nomenclature.code}}~{{rowData.plan.list_product.nomenclature.name}}\n              </span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n                  <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel\n        [header]=\"'General Procurement Invoices'\"\n      >\n        <div class=\"page__table\">\n          <p-treeTable\n            #dt\n            selectionMode=\"single\"\n            [value]=\"invoicePurchasedTree\"\n            [(selection)]=\"selectedPurchasedInvoiceNode\"\n            scrollHeight=\"calc(100vh - 22rem)\"\n            [scrollable]=\"true\"\n          >\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 20%; padding-left: 19px\">QC Started Date</th>\n                <th style=\"width: 15%\" class=\"text-center\">Invoice Number</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 20%\" class=\"text-center\">Supplier</th>\n                <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\n                <th style=\"width: 20%;\" class=\"text-center\">Root List</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p\n                  class=\"subtitle\"\n                  *ngIf=\"!selectedPurchasedInvoiceNode\">\n                  Choose the General Procurement Invoice to view Items\n                </p>\n                <a\n                  [class.disabled]=\"!selectedPurchasedInvoiceNode\"\n                  [routerLink]=\"['../', 'invoice', selectedPurchasedInvoiceNode?.data.invoice ?\n      selectedPurchasedInvoiceNode?.data.invoice.id :\n      selectedPurchasedInvoiceNode?.data.id]\"\n                  class=\"ml-auto mr-2\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Items\"\n                >\n                </a>\n                <button\n                  [disabled]=\"isLoadingInvoices\"\n                  class=\"mr-2\"\n                  pButton\n                  type=\"button\"\n                  label=\"Expand All\"\n                  icon=\"pi pi-angle-down\"\n                  (click)=\"expandCollapsePurchasedInvoices()\"\n                ></button>\n                <button\n                  [disabled]=\"isLoadingInvoices\"\n                  pButton\n                  type=\"button\"\n                  label=\"Collapse All\"\n                  icon=\"pi pi-angle-up\"\n                  (click)=\"expandCollapsePurchasedInvoices(false)\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-invoiceNode let-invoice=\"rowData\" let-i=\"rowIndex\">\n              <tr [ttRow]=\"invoiceNode\"\n                  [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\n                  [ttSelectableRow]=\"invoiceNode\">\n                <td  style=\"width: 20%\"\n                     [class.text-center]=\"invoice.order\">\n                  <div  class=\"table-toggle\">\n                    <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\n                    <ng-container *ngIf=\"!invoice.order\">\n                  <span [class.category-name]=\"!invoice.level && invoice.level !== 1\">{{invoice.name}}\n                    <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\n                    <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">({{invoice.categories}})</i>\n                  </span>\n                    </ng-container>\n                    <ng-container *ngIf=\"invoice.order\">\n                <span>\n                  {{(invoice.order.qc_started_date ? invoice.order.qc_started_date : invoice.system_creation_date)|date:'dd/MM/yyyy HH:mm'}}\n                </span>\n                    </ng-container>\n                  </div>\n                </td>\n                <td  style=\"width: 15%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4\" [class.text-warning]=\"invoice.invoice.unique_root_production_plans.length > 1\">\n                {{invoice.invoice.self_serial_number}} {{invoice.invoice.self_proforma_serial_number}}\n              </span>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.order.id}}\n                  </ng-container>\n                </td>\n                <td  style=\"width: 20%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.supplier?.name}}\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4\">\n                {{invoice.invoice.supplier?.name}}\n              </span>\n                </td>\n                <td  style=\"width: 15%\" class=\"text-center\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4\">\n                {{invoice.invoice.items_reception_date | date: 'dd/MM/yyyy'}}\n              </span>\n                </td>\n                <td style=\"width: 20%\">\n                  <ng-container *ngIf=\"invoice.order\">\n                    <div *ngFor=\"let root_list of invoice.unique_root_production_plans\">\n                      {{root_list.list_product.nomenclature.name}}\n                    </div>\n                  </ng-container>\n                  <span *ngIf=\"invoice.level === 4 && invoice.plan\">\n                {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\n                    <span>({{invoice.plan.required_quantity}})</span>\n              </span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-qc-order',\n  templateUrl: './qc-order.component.html',\n  styleUrls: ['./qc-order.component.scss']\n})\nexport class QcOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>qc-order works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { QcRouting } from './qc.routing';\nimport { QcListComponent } from './components/qc-list/qc-list.component';\nimport { QcLayoutComponent } from './components/qc-layout/qc-layout.component';\nimport {SharedModule} from '@shared/shared.module';\nimport {LayoutModule} from '../layout/layout.module';\nimport { QcInvoiceComponent } from './components/qc-invoice/qc-invoice.component';\nimport { QcOrderComponent } from './components/qc-order/qc-order.component';\n\n\n@NgModule({\n  declarations: [\n    QcListComponent,\n    QcLayoutComponent,\n    QcInvoiceComponent,\n    QcOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    QcRouting,\n    SharedModule,\n    LayoutModule\n  ]\n})\nexport class QcModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {QcLayoutComponent} from './components/qc-layout/qc-layout.component';\nimport {QcListComponent} from './components/qc-list/qc-list.component';\nimport {QcOrderComponent} from './components/qc-order/qc-order.component';\nimport {QcInvoiceComponent} from './components/qc-invoice/qc-invoice.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QcLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'list', pathMatch: 'full'},\n      {path: 'list', title: 'Quality Control', component: QcListComponent},\n      {path: 'invoice/:id', title: 'Invoice Quality Control', component: QcInvoiceComponent},\n      {path: 'order/:id', title: 'Order Quality Control', component: QcOrderComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class QcRouting { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}