{"version":3,"file":"src_app_warehouse_warehouse_module_ts.js","mappings":"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","sources":["./src/app/procurement/services/invoice-product.service.ts","./src/app/procurement/services/invoice.service.ts","./src/app/procurement/services/order-product.service.ts","./src/app/procurement/services/order.service.ts","./src/app/warehouse/components/physical-inventory/physical-inventory-products/physical-inventory-products.component.ts","./src/app/warehouse/components/physical-inventory/physical-inventory-products/physical-inventory-products.component.html","./src/app/warehouse/components/physical-inventory/physical-inventory.component.ts","./src/app/warehouse/components/physical-inventory/physical-inventory.component.html","./src/app/warehouse/components/warehouse-categories/warehouse-categories.component.ts","./src/app/warehouse/components/warehouse-categories/warehouse-categories.component.html","./src/app/warehouse/components/warehouse-insulator/components/warehouse-insulator-invoices/warehouse-insulator-invoices.component.ts","./src/app/warehouse/components/warehouse-insulator/components/warehouse-insulator-invoices/warehouse-insulator-invoices.component.html","./src/app/warehouse/components/warehouse-insulator/components/warehouse-insulator-orders/warehouse-insulator-orders.component.ts","./src/app/warehouse/components/warehouse-insulator/components/warehouse-insulator-orders/warehouse-insulator-orders.component.html","./src/app/warehouse/components/warehouse-insulator/warehouse-insulator.component.ts","./src/app/warehouse/components/warehouse-insulator/warehouse-insulator.component.html","./src/app/warehouse/components/warehouse-items/warehouse-items.component.ts","./src/app/warehouse/components/warehouse-items/warehouse-items.component.html","./src/app/warehouse/components/warehouse-layout/warehouse-layout.component.ts","./src/app/warehouse/components/warehouse-layout/warehouse-layout.component.html","./src/app/warehouse/components/warehouse-locators/warehouse-locators.component.ts","./src/app/warehouse/components/warehouse-locators/warehouse-locators.component.html","./src/app/warehouse/components/warehouse-production-request/warehouse-production-request.component.ts","./src/app/warehouse/components/warehouse-production-request/warehouse-production-request.component.html","./src/app/warehouse/components/warehouse-production-requests/warehouse-production-requests.component.ts","./src/app/warehouse/components/warehouse-production-requests/warehouse-production-requests.component.html","./src/app/warehouse/components/warehouse-serial-types/warehouse-serial-types.component.ts","./src/app/warehouse/components/warehouse-serial-types/warehouse-serial-types.component.html","./src/app/warehouse/components/warehouse-tool-request/warehouse-tool-request.component.ts","./src/app/warehouse/components/warehouse-tool-request/warehouse-tool-request.component.html","./src/app/warehouse/components/warehouse-tool-requests/warehouse-tool-requests.component.ts","./src/app/warehouse/components/warehouse-tool-requests/warehouse-tool-requests.component.html","./src/app/warehouse/components/warehouse-units-measure/warehouse-units-measure.component.ts","./src/app/warehouse/components/warehouse-units-measure/warehouse-units-measure.component.html","./src/app/warehouse/components/warehouse-warehouses/warehouse-warehouses.component.ts","./src/app/warehouse/components/warehouse-warehouses/warehouse-warehouses.component.html","./src/app/warehouse/components/warehouse-where-used/warehouse-where-used.component.ts","./src/app/warehouse/components/warehouse-where-used/warehouse-where-used.component.html","./src/app/warehouse/modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component.ts","./src/app/warehouse/modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component.html","./src/app/warehouse/modals/create-edit-serial-type/create-edit-serial-type.component.ts","./src/app/warehouse/modals/create-edit-serial-type/create-edit-serial-type.component.html","./src/app/warehouse/modals/create-physical-inventory/create-physical-inventory.component.ts","./src/app/warehouse/modals/create-physical-inventory/create-physical-inventory.component.html","./src/app/warehouse/modals/move-physical-inventory-product/move-physical-inventory-product.component.ts","./src/app/warehouse/modals/move-physical-inventory-product/move-physical-inventory-product.component.html","./src/app/warehouse/services/physical-inventory.service.ts","./src/app/warehouse/services/serial-type.service.ts","./src/app/warehouse/services/tool-order.service.ts","./src/app/warehouse/services/tool-request.service.ts","./src/app/warehouse/warehouse.module.ts","./src/app/warehouse/warehouse.routing.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {InvoiceProduct} from '../models/invoice-product';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceProductService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'invoice_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n\n  }\n\n  get(query?: QuerySearch[]): Observable<InvoiceProduct[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Invoice} from '../models/invoice';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'invoices/';\n\n  constructor(\n    private httpClient: HttpClient,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Invoice[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Invoice[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../models/order-product';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderProductService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'order_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<OrderProduct[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {Order} from '../models/order';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'orders/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Order[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Order[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {PhysicalInventoryService} from '../../../services/physical-inventory.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, map, switchMap, tap} from 'rxjs/operators';\nimport {finalize, fromEvent, Subject, takeUntil} from 'rxjs';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {Product} from '../../../../product-structure/models/product';\nimport {Paginator} from 'primeng/paginator';\nimport {InventoryProduct, PhysicalInventory} from '../../../models/physical-inventory';\nimport {ENomenclatureType} from '@shared/models/nomenclature';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-physical-inventory-products',\n  templateUrl: './physical-inventory-products.component.html',\n  styleUrls: ['./physical-inventory-products.component.scss']\n})\nexport class PhysicalInventoryProductsComponent implements OnInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n  @ViewChild('searchBoxDescription') searchBoxDescription;\n\n  isCompleting = false;\n  isCancelation = false;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [null],\n    code: [null],\n    description: [null],\n    warehouse: [null],\n    category: [null],\n    locator: [null],\n    type: [null],\n    accepted_by_invoices: [null],\n    page: [1],\n  });\n\n  isShowAll = false;\n  warehousesIds: number[] = [];\n\n  selectedInventoryProduct: Product;\n  inventoryProducts: Product[] = [];\n\n  isLoadingCurrentInventory = true;\n  isLoadingInventoryList = true;\n\n  queryKey = 'name:null/code:null/description:null/type:null/accepted_by_invoices:null/warehouse:null/locator:null/category:null';\n\n  query: QuerySearch[] = [\n    {name: 'paginated', value: true},\n    {name: 'page', value: this.searchForm.get('page').value},\n  ];\n\n  isStartOnePage = false;\n  countProducts = 0;\n  inventoryId: number;\n  currentInventory: PhysicalInventory = null;\n\n  newQuantity$ = new Subject<InventoryProduct>();\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly fb: FormBuilder,\n    private readonly modalService: ModalService,\n    private readonly physicalInventoryService: PhysicalInventoryService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedInventoryProduct = null),\n        map(() => this.searchBoxName.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchProducts();\n    });\n\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedInventoryProduct = null),\n        map(() => this.searchBoxCode.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchProducts();\n    });\n\n    fromEvent(this.searchBoxDescription.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedInventoryProduct = null),\n        map(() => this.searchBoxDescription.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchProducts();\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.inventoryId = +id),\n      switchMap(() => this.physicalInventoryService.getById(this.inventoryId)),\n      takeUntil(this.destroy$)\n    ).subscribe(inventory => {\n      this.currentInventory = inventory;\n      this.warehousesIds = this.currentInventory.warehouses.map(w => w.id);\n      this.isLoadingCurrentInventory = false;\n    });\n\n    this.onChangeQuantity();\n    this.getInventoryProductsForPagination();\n  }\n\n  onChangeQuantity() {\n    this.newQuantity$.pipe(\n      tap(inventoryProduct => this.prepareForSave(inventoryProduct)),\n      debounceTime(350),\n      switchMap(inventoryProduct => this.physicalInventoryService.updateQuantityInventoryProduct(inventoryProduct)),\n    ).subscribe();\n  }\n\n  prepareForSave(inventoryProduct: InventoryProduct) {\n    if (inventoryProduct.new_quantity === null || inventoryProduct.new_quantity < 0) {\n      inventoryProduct.new_quantity = 0;\n    }\n  }\n\n  searchProducts() {\n    this.isLoadingInventoryList = true;\n    this.destroy$.next(true);\n    this.selectedInventoryProduct = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/description:${this.searchForm.get('description').value}/type:${this.searchForm.get('type').value}/accepted_by_invoices:${this.searchForm.get('accepted_by_invoices').value}/warehouse:${this.searchForm.get('warehouse').value}/locator:${this.searchForm.get('locator').value}/category:${this.searchForm.get('category').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [];\n\n    if (!this.isShowAll) {\n      this.query = [\n        {name: 'paginated', value: 'true'},\n        {name: 'page', value: this.searchForm.get('page').value},\n      ];\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({name: 'code', value: this.searchForm.get('code').value});\n    }\n\n    if (this.searchForm.get('name').value) this.query.push({name: 'name', value: this.searchForm.get('name').value});\n\n    if (this.searchForm.get('description').value) this.query.push({\n      name: 'description',\n      value: this.searchForm.get('description').value\n    });\n\n    if (this.searchForm.get('warehouse').value) this.query.push({\n      name: 'warehouse',\n      value: this.searchForm.get('warehouse').value\n    });\n\n    if (this.searchForm.get('locator').value) this.query.push({\n      name: 'locator',\n      value: this.searchForm.get('locator').value\n    });\n\n    if (this.searchForm.get('type').value !== null) this.query.push({\n      name: 'type',\n      value: this.searchForm.get('type').value\n    });\n\n    if (this.searchForm.get('accepted_by_invoices').value !== null) this.query.push({\n      name: 'accepted_by_invoices',\n      value: this.searchForm.get('accepted_by_invoices').value\n    });\n\n    if (!this.isShowAll) {\n      this.getInventoryProductsForPagination();\n    } else {\n      this.searchForm.get('page').patchValue(1);\n      this.getInventoryProducts();\n    }\n  }\n\n  getInventoryProductsForPagination() {\n    const newInventoryProducts = [];\n\n    this.physicalInventoryService.getInventoryProductsListsForPagination(this.inventoryId, this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(inventoryLists => {\n      inventoryLists.results.forEach(list => {\n        list.products[0].countProducts = list.products.length;\n        list.products[0].products = [...list.products];\n        list.products[0].is_scanned_root = list.is_scanned;\n        list.products[0].root_id = list.id;\n        newInventoryProducts.push(list.products[0]);\n      });\n\n      this.inventoryProducts = [...newInventoryProducts];\n      this.countProducts = inventoryLists.count;\n\n      if (this.isStartOnePage) {\n        this.paginator?.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoadingInventoryList = false;\n    });\n  }\n\n  getInventoryProducts() {\n    const newInventoryProducts = [];\n\n    this.physicalInventoryService.getInventoryProducts(this.inventoryId, this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(inventoryLists => {\n      inventoryLists.forEach(list => {\n        list.products[0].countProducts = list.products.length;\n        list.products[0].products = [...list.products];\n        list.products[0].is_scanned_root = list.is_scanned;\n        list.products[0].root_id = list.id;\n        newInventoryProducts.push(list.products[0]);\n      });\n\n      this.inventoryProducts = [...newInventoryProducts];\n      this.countProducts = inventoryLists.length;\n\n      if (this.isStartOnePage) {\n        this.paginator?.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoadingInventoryList = false;\n    });\n  }\n\n  onSelectWarehouse(id: number) {\n    this.searchForm.get('warehouse').patchValue(id);\n    this.searchForm.get('locator').patchValue(null);\n    this.searchProducts();\n  }\n\n  onSelectLocator(id: number) {\n    this.searchForm.get('locator').patchValue(id);\n    this.searchProducts();\n  }\n\n  onSelectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.searchProducts();\n  }\n\n  onSelectAcceptedByInvoices(value: boolean) {\n    this.searchForm.get('accepted_by_invoices').patchValue(value);\n    this.searchProducts();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchProducts();\n    }\n  }\n\n  onComplete() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isCompleting = true;\n        this.physicalInventoryService.completePhysicalInventory(+this.inventoryId).pipe(\n          finalize(() => this.isCompleting = false)\n        ).subscribe(() => {\n          this.router.navigateByUrl('/warehouse/physical-inventory').then();\n        });\n      }\n    });\n  }\n\n  onRemovePhysicalInventory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.isCancelation = true;\n        this.physicalInventoryService.removePhysicalInventory(+this.inventoryId).pipe(\n          finalize(() => this.isCancelation = false)\n        ).subscribe(() => {\n          this.router.navigateByUrl('/warehouse/physical-inventory').then();\n        });\n      }\n    });\n  }\n\n  onShowAll() {\n    this.isShowAll = true;\n    this.searchProducts();\n  }\n\n  onShowPartial() {\n    this.isShowAll = false;\n    this.searchProducts();\n  }\n\n  onMoveProduct() {\n    this.physicalInventoryService.openPhysicalInventoryProductMoveModal(this.selectedInventoryProduct).subscribe(res => {\n      if (res) {\n        this.searchProducts();\n      }\n    });\n  }\n\n  onOpenAddProductModal() {\n    this.physicalInventoryService.openAddProductToPhysicalInventory(this.inventoryId).subscribe(res => {\n      if (res) {\n        this.searchProducts();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>\n        Physical Inventory Products of Warehouses:\n        <ng-container *ngIf=\"isLoadingCurrentInventory\">...</ng-container>\n        <ng-container *ngIf=\"!isLoadingCurrentInventory\">\n          <ng-container *ngFor=\"let warehouse of currentInventory.warehouses; let idx = index\">\n            {{warehouse.name}} <span *ngIf=\"idx !== currentInventory.warehouses.length - 1\">,</span>\n          </ng-container>\n        </ng-container>\n      </h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Add Product\"\n        class=\"mr-2\"\n        (click)=\"onOpenAddProductModal()\"\n      >\n      </button>\n      <button\n        pButton\n        type=\"button\"\n        class=\"mr-2 p-button-icon\"\n        icon=\"pi pi-check\"\n        label=\"Complete\"\n        (click)=\"onComplete()\"\n        [loading]=\"isCompleting\"\n        [disabled]=\"!currentInventory || (isLoadingCurrentInventory && currentInventory.status === '0')\">\n      </button>\n\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-times\"\n        label=\"Cancel Physical Inventory\"\n        class=\"p-button-danger p-button-icon\"\n        [loading]=\"isCancelation\"\n        (click)=\"onRemovePhysicalInventory()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form\n      [formGroup]=\"searchForm\"\n      class=\"physical-inventory-products__form mb-3\"\n    >\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label>Code</label>\n            <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label>Description</label>\n            <input class=\"form-control\" formControlName=\"description\" pInputText #searchBoxDescription>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label>Warehouses</label>\n                <pek-warehouse-picker\n                  [acceptedWarehouseIds]=\"warehousesIds\"\n                  (selectWarehouse)=\"onSelectWarehouse($event)\"\n                ></pek-warehouse-picker>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label>Locator</label>\n                <pek-locator-picker\n                  (selectLocator)=\"onSelectLocator($event)\"\n                  [warehouseId]=\"searchForm.get('warehouse').value\"\n                  [isAllLocators]=\"false\"\n                  [isDisabled]=\"true\"\n                ></pek-locator-picker>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label>Type</label>\n                <pek-nomenclature-type-picker\n                  (choiceNomenclatureType)=\"onSelectNomenclatureType($event)\"\n                ></pek-nomenclature-type-picker>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"form-group\">\n                <label>Accepted Type</label>\n                <pek-accepted-type-picker\n                  (selectAcceptedType)=onSelectAcceptedByInvoices($event)\n                ></pek-accepted-type-picker>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"action-buttons\">\n            <button\n              class=\"ml-auto mt-auto\"\n              pButton\n              type=\"button\"\n              icon=\"pi pi-angle-double-right\"\n              label=\"Move product\"\n              [disabled]=\"!selectedInventoryProduct\"\n              (click)=\"onMoveProduct()\"\n            >\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 30.25rem)\"\n        [scrollable]=\"true\"\n        dataKey=\"id\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedInventoryProduct\"\n        [value]=\"inventoryProducts\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 14%\">Code</th>\n            <th style=\"width: 10%\">Name</th>\n            <th style=\"width: 10%\" class=\"text-center\">Technology</th>\n            <th style=\"width: 9%\" class=\"text-center\">Initial Quantity</th>\n            <th style=\"width: 11%\" class=\"text-center\">Entered Quantity</th>\n            <th style=\"width: 13%\" class=\"text-center\">Category</th>\n            <th style=\"width: 6%\" class=\"text-center\">UOM</th>\n            <th style=\"width: 12%\" class=\"text-center\">Warehouse</th>\n            <th style=\"width: 14%\">Locator</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-inventoryProduct let-i=\"rowIndex\">\n          <tr\n            [pSelectableRow]=\"inventoryProduct\"\n            [pRowToggler]=\"inventoryProduct\"\n          >\n            <td style=\"width: 5%\" class=\"text-center\">\n              {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\n            </td>\n            <td style=\"width: 14%\">\n              <ng-container *ngIf=\"inventoryProduct.product && !inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.product.nomenclature.code}}\n              </ng-container>\n              <ng-container *ngIf=\"inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.physical_inventory_nomenclature.code}}\n              </ng-container>\n            </td>\n            <td style=\"width: 10%\">\n              <ng-container *ngIf=\"inventoryProduct.product && !inventoryProduct.physical_inventory_nomenclature\">\n                <b *ngIf=\"inventoryProduct.product.nomenclature.bulk_or_serial === '1'\">(S)</b>\n                {{inventoryProduct.product.nomenclature.name}}\n                <b\n                  *ngIf=\"inventoryProduct.product.nomenclature.bulk_or_serial === '1'\">\n                  ({{inventoryProduct.countProducts}})\n                </b>\n              </ng-container>\n\n              <ng-container *ngIf=\"inventoryProduct.physical_inventory_nomenclature\">\n                <b *ngIf=\"inventoryProduct.physical_inventory_nomenclature.bulk_or_serial === '1'\">(S)</b>\n                {{inventoryProduct.physical_inventory_nomenclature.name}}\n                <b\n                  *ngIf=\"inventoryProduct.physical_inventory_nomenclature.bulk_or_serial === '1'\">\n                  ({{inventoryProduct.countProducts}})\n                </b>\n              </ng-container>\n            </td>\n            <td style=\"width: 10%\" class=\"text-center\">\n              <ng-container *ngIf=\"inventoryProduct.product\">\n                {{inventoryProduct.product.current_technology?.name}}\n              </ng-container>\n\n              <ng-container *ngIf=\"!inventoryProduct.product && inventoryProduct.physical_inventory_technology\">\n                {{inventoryProduct.physical_inventory_technology?.name}}\n              </ng-container>\n            </td>\n            <td style=\"width: 9%\" class=\"text-center\">\n              {{inventoryProduct.initial_quantity}}\n            </td>\n            <td pEditableColumn class=\"text-center\" style=\"width: 11%\">\n\n              <p-cellEditor *ngIf=\"currentInventory && currentInventory.status === '0'\">\n                <ng-template pTemplate=\"input\">\n                  <input\n                    pInputText\n                    style=\"width: 100%; text-align: center\"\n                    type=\"number\"\n                    step=\"1\"\n                    [(ngModel)]=\"inventoryProduct.new_quantity\"\n                    (ngModelChange)=\"newQuantity$.next(inventoryProduct)\"\n                  >\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                  {{inventoryProduct.new_quantity}}\n                </ng-template>\n              </p-cellEditor>\n\n              <span *ngIf=\"currentInventory && currentInventory.status === '1'\">{{inventoryProduct.new_quantity}}</span>\n            </td>\n            <td style=\"width: 13%\" class=\"text-center\">\n              <ng-container *ngIf=\"inventoryProduct.product && !inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.product.nomenclature.category?.name}}\n              </ng-container>\n\n              <ng-container *ngIf=\"inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.physical_inventory_nomenclature.category?.name}}\n              </ng-container>\n            </td>\n            <td style=\"width: 6%\" class=\"text-center\">\n              <ng-container *ngIf=\"inventoryProduct.product  && !inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.product.nomenclature.category?.unit_of_measure?.symbol ? inventoryProduct.product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}\n              </ng-container>\n\n              <ng-container *ngIf=\"inventoryProduct.physical_inventory_nomenclature\">\n                {{inventoryProduct.physical_inventory_nomenclature.category?.unit_of_measure?.symbol ? inventoryProduct.physical_inventory_nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}\n              </ng-container>\n            </td>\n            <td style=\"width: 12%\" class=\"text-center\">\n              <ng-container *ngIf=\"inventoryProduct.locator; else productWarehouse\">\n                {{inventoryProduct.locator.warehouse.name}}\n              </ng-container>\n            </td>\n            <td style=\"width: 14%\">\n              <div *ngIf=\"inventoryProduct.locator; else productLocator\">\n                {{inventoryProduct.locator.name}}\n\n                <span class=\"d-block\">\n                  R: {{inventoryProduct.locator.row}}\n                  Col: {{inventoryProduct.locator.column}}\n                  Sh: {{inventoryProduct.locator.shelf}}\n                  Pl: {{inventoryProduct.locator.place}}\n                </span>\n              </div>\n            </td>\n\n            <ng-template #productLocator>\n              <div *ngIf=\"inventoryProduct.product.locator\">\n                {{inventoryProduct.product.locator.name}}\n                <span class=\"d-block\">\n                  R: {{inventoryProduct.product.locator.row}}\n                  Col: {{inventoryProduct.product.locator.column}}\n                  Sh: {{inventoryProduct.product.locator.shelf}}\n                  Pl: {{inventoryProduct.product.locator.place}}\n                </span>\n              </div>\n            </ng-template>\n\n            <ng-template #productWarehouse>\n              {{inventoryProduct.product.locator.warehouse.name}}\n            </ng-template>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"10\">\n              <i *ngIf=\"isLoadingInventoryList\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoadingInventoryList\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoadingInventoryList\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n    </div>\n    <div\n      class=\"paginator-wrapper\"\n      *ngIf=\"!isShowAll\"\n      [class.paginator-wrapper_hide]=\"inventoryProducts.length === 0\"\n    >\n      <p-paginator\n        #paginator\n        [rows]=\"10\"\n        [totalRecords]=\"countProducts\"\n        (onPageChange)=\"paginate($event)\"\n      >\n      </p-paginator>\n      <p-button\n        (click)=\"onShowAll()\"\n        class=\"paginator-all\"\n        type=\"button\"\n        styleClass=\"p-button-text\"\n      >\n        All\n      </p-button>\n    </div>\n\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowPartial()\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PhysicalInventory} from '../../models/physical-inventory';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-physical-inventory',\n  templateUrl: './physical-inventory.component.html',\n  styleUrls: ['./physical-inventory.component.scss']\n})\nexport class PhysicalInventoryComponent implements OnInit, OnDestroy {\n  isLoading = true;\n\n  physicalInventories: PhysicalInventory[] = [];\n  selectedPhysicalInventory: PhysicalInventory;\n  countPhysicalInventory = 0;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1]\n  });\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly physicalInventoryService: PhysicalInventoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPhysicalInventoryForPagination();\n  }\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  getPhysicalInventoryForPagination() {\n    this.physicalInventoryService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(physicalInventories => {\n      this.physicalInventories = physicalInventories.results;\n      this.countPhysicalInventory = physicalInventories.count;\n      this.isLoading = false;\n    });\n  }\n\n  searchPhysicalInventory() {\n    this.isLoading = true;\n    this.selectedPhysicalInventory = null;\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true}\n    ];\n\n    this.getPhysicalInventoryForPagination();\n  }\n\n  onCreatePhysicalInventory() {\n    this.physicalInventoryService.openCreatePhysicalInventoryModal().subscribe(response => {\n      if (response) {\n        this.searchPhysicalInventory();\n      }\n    })\n  }\n\n  paginate(evt: any) {\n    this.searchForm.get('page').patchValue(evt.page + 1);\n    this.searchPhysicalInventory();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Physical Inventory</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Create Physical Inventory\"\n        (click)=\"onCreatePhysicalInventory()\"\n      >\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__block\">\n      <button\n        pButton\n        type=\"button\"\n        class=\"ml-auto\"\n        icon=\"pi pi-bars\"\n        label=\"Inventory Products\"\n        [routerLink]=\"[selectedPhysicalInventory?.id]\"\n        [disabled]=\"!selectedPhysicalInventory\"\n      ></button>\n    </div>\n    <div class=\"page__table\">\n      <div class=\"table-pagination-preloader\">\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          scrollHeight=\"calc(100vh - 18.8rem)\"\n          [scrollable]=\"true\"\n          [rows]=\"10\"\n          [(selection)]=\"selectedPhysicalInventory\"\n          [value]=\"physicalInventories\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th class=\"text-center\" style=\"width: 5%\">#</th>\n              <th class=\"text-center\" style=\"width: 25%\">Id</th>\n              <th class=\"text-center\" style=\"width: 35%\">Date</th>\n              <th class=\"text-center\" style=\"width: 35%\">Status</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-physicalInventory let-i=\"rowIndex\">\n            <tr [pSelectableRow]=\"physicalInventory\">\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 25%\" class=\"text-center\">{{physicalInventory.id}}</td>\n              <td style=\"width: 35%\"\n                  class=\"text-center\">{{physicalInventory?.system_creation_date | date:'dd/MM/yyyy'}}</td>\n              <td style=\"width: 35%\" class=\"text-center\">\n                <span *ngIf=\"physicalInventory.status === '1'\">Completed</span>\n                <span *ngIf=\"physicalInventory.status === '0'\">In Progress</span>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"paginatorright\">\n            <p-button\n              type=\"button\"\n              (click)=\"dt.paginator=false\"\n              styleClass=\"p-button-text\"\n            >\n              All\n            </p-button>\n          </ng-template>\n        </p-table>\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </div>\n    </div>\n    <div class=\"paginator-wrapper\" *ngIf=\"physicalInventories.length > 0\">\n      <p-paginator\n        #paginator\n        [rows]=\"10\"\n        [totalRecords]=\"countPhysicalInventory\"\n        (onPageChange)=\"paginate($event)\">\n      </p-paginator>\n      <p-button\n        class=\"paginator-all\"\n        type=\"button\"\n        styleClass=\"p-button-text\"\n      >\n        All\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {Category} from '../../../product-structure/models/category';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {cloneDeep} from 'lodash-es';\nimport {finalize, Subject, takeUntil} from 'rxjs';\nimport {TreeService} from '@shared/services/tree.service';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-categories',\n  templateUrl: './warehouse-categories.component.html',\n  styleUrls: ['./warehouse-categories.component.scss']\n})\nexport class WarehouseCategoriesComponent implements OnInit, OnDestroy {\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Selected Category',\n      items: [\n        {\n          label: 'Edit',\n          icon: 'pi pi-pencil',\n          command: () => this.onEditCategory()\n        },\n        {\n          label: 'Remove',\n          icon: 'pi pi-trash',\n          command: () => this.onRemoveCategory()\n        }\n      ]\n    }\n  ];\n\n  isMovingUp = false;\n  isMovingDown = false;\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  categoriesTree: TreeNode<Category>[];\n  selectedCategory: TreeNode<Category>;\n  categories: Category[] = [];\n  expanseMap = {};\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private readonly treeService: TreeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.categoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  onAddCategory() {\n    this.categoriesService.createEditWarehouseCategoryModal('create').subscribe(category => {\n      if (category) {\n        this.categories.unshift(category);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditCategory() {\n    this.categoriesService.createEditWarehouseCategoryModal('edit', this.selectedCategory.data).subscribe(category => {\n      if (category) {\n        const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n        this.categories[index] = category;\n        this.createTree();\n        this.selectedCategory = this.treeService.findSelectedNode(this.selectedCategory, this.categoriesTree);\n      }\n    });\n  }\n\n  onRemoveCategory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.categoriesService.delete(this.selectedCategory.data).subscribe(() => {\n          const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n          this.categories.splice(index, 1);\n          this.selectedCategory = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, this.expanseMap);\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, this.expanseMap);\n  }\n\n  getMeasure(measure) {\n    if (measure != null) {\n      return measure.name + ' (' + measure.symbol + ')';\n    } else {\n      return '_';\n    }\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.categoriesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.categoriesTree = temp;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  down() {\n    const node = this.selectedCategory;\n\n    const index = this.findIndexToMove(node.data.id);\n\n    if ((index < node.parent?.children.length - 1 || (!node.parent && index < this.categoriesTree.length - 1)) && !this.isMovingDown) {\n      this.isMovingDown = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index + 1].data.id : this.categoriesTree[index + 1].data.id,\n        move_to: 'right'\n      };\n      this.categoriesService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingDown = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'down');\n      });\n    }\n  }\n\n  up() {\n    const node = this.selectedCategory;\n    const index = this.findIndexToMove(node.data.id);\n\n    if (index > 0 && !this.isMovingUp) {\n      this.isMovingUp = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index - 1].data.id : this.categoriesTree[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.categoriesService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingUp = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'up');\n      });\n    }\n  }\n\n  findIndexToMove(selectedNodeId) {\n    let index;\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach((node, i) => {\n        if (node.data.id === selectedNodeId) {\n          index = i;\n          return;\n        } else {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n    return index;\n  }\n\n  productMoved(category: Category, direction: 'up' | 'down') {\n    let findedProduct: TreeNode<Category>;\n    let parentProduct: TreeNode<Category>;\n\n    const findProduct = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === category.id) {\n          findedProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findProduct(node.children);\n          }\n        }\n      });\n    };\n\n    const findParent = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === findedProduct.parent.data.id) {\n          parentProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findParent(node.children);\n          }\n        }\n      });\n    };\n\n    findProduct(this.categoriesTree);\n\n    if (findedProduct.parent) {\n      findParent(this.categoriesTree);\n    } else {\n      parentProduct = findedProduct;\n    }\n\n    if (findedProduct.parent) {\n      const index = parentProduct.children.findIndex(child => child.data.id === category.id);\n\n      if (direction === 'down') {\n        [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\n      } else {\n        [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\n      }\n    } else {\n      const index = this.categoriesTree.findIndex(node => node.data.id === category.id);\n\n      if (direction === 'down') {\n        [this.categoriesTree[index], this.categoriesTree[index + 1]] = [this.categoriesTree[index + 1], this.categoriesTree[index]];\n      } else {\n        [this.categoriesTree[index], this.categoriesTree[index - 1]] = [this.categoriesTree[index - 1], this.categoriesTree[index]];\n      }\n    }\n\n    this.categoriesTree = this.categoriesTree.map(node => node);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouse Categories</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Category\" (click)=\"onAddCategory()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-treeTable\n        [value]=\"categoriesTree\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedCategory\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 19.2rem)\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-arrow-up\"\n              class=\"p-button-rounded mr-2\"\n              [disabled]=\"!selectedCategory\"\n              [loading]=\"isMovingUp\"\n              (click)=\"up()\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-arrow-down\"\n              class=\"p-button-rounded mr-2\"\n              [disabled]=\"!selectedCategory\"\n              [loading]=\"isMovingDown\"\n              (click)=\"down()\"\n            ></button>\n            <p class=\"ml-1 subtitle\" *ngIf=\"!selectedCategory\">Choose the Category to edit</p>\n            <p-menubar\n              class=\"product-structure-bar ml-auto mr-2\"\n              [model]=\"menuItems\"\n              [class.disabled]=\"!selectedCategory\"\n            ></p-menubar>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-angle-down\"\n              label=\"Expand All\"\n              class=\"mr-2\"\n              (click)=\"onExpandAll()\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-angle-up\"\n              label=\"Collapse All\"\n              (click)=\"onCollapseAll()\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"padding-left: 52px; width: 40%\">Name</th>\n            <th style=\"width: 35%\" class=\"text-center\">Unit of Measure</th>\n            <th style=\"width: 35%\">Description</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n          <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n            <td style=\"width: 40%\">\n              <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n              {{rowData.name}}\n            </td>\n            <td style=\"width: 35%\" class=\"text-center\">\n              {{getMeasure(rowData.unit_of_measure)}}\n            </td>\n            <td style=\"width: 35%\">\n              <ng-container>\n                {{rowData.description}}\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {InvoiceProduct} from '../../../../../procurement/models/invoice-product';\nimport {map, switchMap} from 'rxjs/operators';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {InvoiceProductService} from '../../../../../procurement/services/invoice-product.service';\n\n@Component({\n  selector: 'pek-warehouse-insulator-invoices',\n  templateUrl: './warehouse-insulator-invoices.component.html',\n  styleUrls: ['./warehouse-insulator-invoices.component.scss']\n})\nexport class WarehouseInsulatorInvoicesComponent implements OnInit, OnDestroy {\n\n  isLoading = true;\n  invoiceProducts: InvoiceProduct[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly invoiceProductService: InvoiceProductService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      switchMap(id => this.invoiceProductService.get(\n        [\n          {name: 'invoice', value: id},\n          {name: 'not_passed_quantity__gt', value: 0}\n        ]\n      )),\n      takeUntil(this.destroy$)\n    ).subscribe(invoiceProducts => {\n      this.invoiceProducts = invoiceProducts;\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Invoice Insulator Items</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"invoiceProducts.length > 0\"\n        [rows]=\"10\"\n        [value]=\"invoiceProducts\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"mt-1\"></div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 35%\">Name</th>\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && invoiceProducts.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {InvoiceProduct} from '../../../../../procurement/models/invoice-product';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {InvoiceProductService} from '../../../../../procurement/services/invoice-product.service';\nimport {map, switchMap} from 'rxjs/operators';\nimport {OrderProduct} from '../../../../../procurement/models/order-product';\nimport {OrderProductService} from '../../../../../procurement/services/order-product.service';\n\n@Component({\n  selector: 'pek-warehouse-insulator-orders',\n  templateUrl: './warehouse-insulator-orders.component.html',\n  styleUrls: ['./warehouse-insulator-orders.component.scss']\n})\nexport class WarehouseInsulatorOrdersComponent implements OnInit, OnDestroy {\n\n  isLoading = true;\n  orderProducts: OrderProduct[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly orderProductService: OrderProductService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      switchMap(id => this.orderProductService.get(\n        [\n          {name: 'not_passed_quantity__gt', value: '0'},\n          {name: 'order', value: id}\n        ]\n      )),\n      takeUntil(this.destroy$)\n    ).subscribe(orderProducts => {\n      this.orderProducts = orderProducts;\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Order Insulator Items</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orderProducts.length > 0\"\n        [rows]=\"10\"\n        [value]=\"orderProducts\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"mt-1\"></div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 35%\">Name</th>\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && orderProducts.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Order} from '../../../procurement/models/order';\nimport {Invoice} from '../../../procurement/models/invoice';\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-insulator',\n  templateUrl: './warehouse-insulator.component.html',\n  styleUrls: ['./warehouse-insulator.component.scss']\n})\nexport class WarehouseInsulatorComponent implements OnInit, OnDestroy {\n  isLoadingInvoices = true;\n  isLoadingOrders = true;\n\n  invoices: Invoice[] = [];\n  orders: Order[] = [];\n\n  selectedInvoice: Invoice;\n  selectedOrder: Order;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private orderService: OrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getInvoices();\n    this.getOrders();\n  }\n\n  getInvoices() {\n    this.invoiceService.get([{name: 'contains_isolated_products', value: true}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(invoices => {\n      this.invoices = invoices;\n      this.isLoadingInvoices = false;\n    });\n  }\n\n  getOrders() {\n    this.orderService.get([{name: 'contains_isolated_products', value: true}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(orders => {\n      this.orders = orders;\n      this.isLoadingOrders = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouse Insulator</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__tabs\">\n    <p-tabView class=\"custom-tabs\">\n      <p-tabPanel header=\"Invoices Insulator\" [selected]=\"true\">\n        <div class=\"page__table\">\n          <p-table\n            #dt\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 18.8rem)\"\n            [scrollable]=\"true\"\n            [paginator]=\"invoices.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedInvoice\"\n            [value]=\"invoices\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p class=\"subtitle\" *ngIf=\"!selectedInvoice\">Choose the Invoice to view Items</p>\n                <button\n                  class=\"ml-auto\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Insulator Items\"\n                  [disabled]=\"!selectedInvoice\"\n                  [routerLink]=\"['invoices', selectedInvoice?.id]\"\n                ></button>\n              </div>\n            </ng-template>\n\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 20%\" class=\"text-center\">Date</th>\n                <th style=\"width: 25%\" class=\"text-center\">Invoice Number</th>\n                <th style=\"width: 25%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 25%\" class=\"text-center\">Supplier</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\n              <tr [pSelectableRow]=\"invoice\">\n                <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{invoice.system_creation_date | date:'dd/MM/yyyy'}}</td>\n                <td style=\"width: 25%\"\n                    class=\"text-center\">{{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{invoice.order?.id}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{invoice.supplier?.name}}</td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"dt.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n        </div>\n        <div *ngIf=\"!dt.paginator && !isLoadingInvoices && invoices.length > 0\" class=\"paginator-return-pagination\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=true\"\n            styleClass=\"p-button-text\"\n          >\n            Return pagination\n          </p-button>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Orders Insulator\">\n        <div class=\"page__table\">\n          <p-table\n            #st\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 18.8rem)\"\n            [scrollable]=\"true\"\n            [paginator]=\"orders.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedOrder\"\n            [value]=\"orders\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p class=\"subtitle\" *ngIf=\"!selectedOrder\">Choose the Order to view Items</p>\n                <button\n                  class=\"ml-auto\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Insulator Items\"\n                  [disabled]=\"!selectedOrder\"\n                  [routerLink]=\"['orders', selectedOrder?.id]\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 20%\" class=\"text-center\">Date</th>\n                <th style=\"width: 25%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 25%\" class=\"text-center\">Root List</th>\n                <th style=\"width: 25%\" class=\"text-center\">Items Reception Date</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n              <tr [pSelectableRow]=\"order\">\n                <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{order.created | date:'dd/MM/yyyy'}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{order.id}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">\n                  <ng-container *ngIf=\"order.root_production_list_products.length > 0\">\n                    {{order.root_production_list_products[0].nomenclature.code}}\n                    ~{{order.root_production_list_products[0].nomenclature.name}}\n                  </ng-container>\n                </td>\n                <td style=\"width: 25%\" class=\"text-center\">{{order.items_reception_date | date: 'dd/MM/yyyy'}}</td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n                  <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"st.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n        </div>\n        <div *ngIf=\"!st.paginator && !isLoadingOrders && orders.length > 0\" class=\"paginator-return-pagination\">\n          <p-button\n            type=\"button\"\n            (click)=\"st.paginator=true\"\n            styleClass=\"p-button-text\"\n          >\n            Return pagination\n          </p-button>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {WarehouseProduct} from '../../models/warehouse-product';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Category} from '../../../product-structure/models/category';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {TreeNode} from 'primeng/api';\nimport {WarehouseProductService} from '../../services/warehouse-product.service';\nimport {QuerySearch} from '@shared/models/other';\n\n@Component({\n  selector: 'pek-warehouse-items',\n  templateUrl: './warehouse-items.component.html',\n  styleUrls: ['./warehouse-items.component.scss']\n})\nexport class WarehouseItemsComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  isStartOnePage = false;\n\n  selectedProduct: WarehouseProduct;\n  products: WarehouseProduct[] = [];\n  countProducts: number = 0;\n\n  categoriesTree: TreeNode<Category>[] = [];\n  isLoadingCategories = true;\n\n  categories: Category[];\n\n  searchForm: FormGroup = this.fb.group({\n    name: [null],\n    code: [null],\n    description: [null],\n    warehouse: [null],\n    category: [null],\n    root_categories: [null],\n    locator: {value: null, disabled: true},\n    type: [null],\n    accepted_by_invoices: [null],\n    page: [1],\n  });\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'at_area', value: false}\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly productCategoriesService: CategoriesService,\n    private readonly warehouseProductService: WarehouseProductService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n    this.getProductsForPagination();\n  }\n\n  getCategories() {\n    this.productCategoriesService.get([{name: 'is_for_root', value: false}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n      this.isLoadingCategories = false;\n    });\n  }\n\n  getProductsForPagination() {\n    this.warehouseProductService.getGroupedPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe( response => {\n      response.results.forEach((product: any, idx) => {\n        if (!product.nomenclature) {\n          product.nomenclature = {\n            id: product.nomenclature_id,\n            code: product.code,\n            name: product.name,\n            type: product.type,\n            category: product.category,\n            description: product.description,\n          };\n\n          product.checkedForGeneration = false;\n          product.uid = idx;\n        }\n      });\n\n      this.products = response.results;\n      this.countProducts = response.count;\n      this.isLoading = false;\n    });\n  }\n\n  searchProducts() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    this.destroy$.next(true);\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'at_area', value: false}\n    ];\n\n    this.getProductsForPagination();\n  }\n\n  onAddItem() {\n\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n    this.categoriesTree = [...tree];\n  }\n\n  getProductsAll() {\n\n  }\n\n  selectWarehouse(warehouseId: number) {\n    let value = null;\n    if (warehouseId) value = warehouseId;\n    this.searchForm.get('warehouse').patchValue(value);\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchProducts();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouse Items</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Item\" (click)=\"onAddItem()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"warehouse-items\">\n      <div class=\"warehouse-items__left\">\n        <div class=\"form-group\">\n          <label>Categories</label>\n          <div class=\"warehouse-items__tree-wrapper\" *ngIf=\"!isLoadingCategories; else spinner\">\n            <div class=\"warehouse-items__tree\">\n              <p-tree\n                [metaKeySelection]=\"false\"\n                [value]=\"categoriesTree\"\n                selectionMode=\"single\"\n              >\n                <ng-template let-node pTemplate=\"default\">\n                  {{node.data.name}}\n                </ng-template>\n              </p-tree>\n            </div>\n          </div>\n\n          <ng-template #spinner>\n            <div class=\"warehouse-items__spinner\">\n              <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n      <div class=\"warehouse-items__right\">\n        <div class=\"page__table\">\n          <form\n            [formGroup]=\"searchForm\"\n            class=\"warehouse-items__form mb-3\"\n          >\n            <div class=\"row\">\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label>Code</label>\n                  <input class=\"form-control\" pInputText #searchBoxCode>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label>Name</label>\n                  <input class=\"form-control\" pInputText #searchBoxName>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label>Description</label>\n                  <input class=\"form-control\" pInputText #searchBoxDescription>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <label>Warehouses</label>\n                      <pek-warehouse-picker (selectWarehouse)=\"selectWarehouse($event)\"></pek-warehouse-picker>\n                    </div>\n                  </div>\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <label>Locator</label>\n                      <pek-locator-picker\n                        [warehouseId]=\"searchForm.get('warehouse').value\"\n                        [isAllLocators]=\"false\"\n                        [isDisabled]=\"true\"\n                      ></pek-locator-picker>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <label>Type</label>\n                      <pek-nomenclature-type-picker></pek-nomenclature-type-picker>\n                    </div>\n                  </div>\n                  <div class=\"col-6\">\n                    <div class=\"form-group\">\n                      <label>Accepted Type</label>\n                      <pek-accepted-type-picker></pek-accepted-type-picker>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label>Product Structure Category</label>\n                  <pek-product-structure-category-picker></pek-product-structure-category-picker>\n                </div>\n              </div>\n            </div>\n          </form>\n\n          <div class=\"table-pagination-preloader\">\n            <p-table\n              #dt\n              selectionMode=\"single\"\n              scrollHeight=\"calc(100vh - 30.25rem)\"\n              [scrollable]=\"true\"\n              [rows]=\"10\"\n              [(selection)]=\"selectedProduct\"\n              [value]=\"products\"\n            >\n              <ng-template pTemplate=\"header\">\n                <tr>\n                  <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n                  <th style=\"width: 15%\">Code</th>\n                  <th style=\"width: 15%\">Name</th>\n                  <th class=\"text-center\" style=\"width: 10%\">Technology</th>\n                  <th class=\"text-center\" style=\"width: 10%\">Quantity</th>\n                  <th class=\"text-center\" style=\"width: 6%\">UOM</th>\n                  <th class=\"text-center\" style=\"width: 13%\">Category</th>\n                  <th class=\"text-center\" style=\"width: 12%\">Warehouse</th>\n                  <th class=\"text-center\" style=\"width: 14%\">Locator</th>\n                </tr>\n              </ng-template>\n              <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n                <tr [pSelectableRow]=\"product\" [pRowToggler]=\"product\">\n                  <td style=\"width: 5%\" class=\"text-center\">\n                    {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\n                  </td>\n                  <td style=\"width: 15%\">\n                    {{product.nomenclature.code}}\n                  </td>\n                  <td style=\"width: 15%\">\n                    <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\n                    {{product.nomenclature.name}}\n                  </td>\n                  <td style=\"width: 10%\" class=\"text-center\">\n                    {{product.current_technology?.name}}\n                  </td>\n                  <td style=\"width: 10%\" class=\"text-center\">\n                    {{product.total_locator_quantity}}\n                  </td>\n                  <td style=\"width: 6%\" class=\"text-center\">\n                    <ng-container *ngIf=\"product.nomenclature.category || product.nomenclature.root_category\">\n                      <ng-container *ngIf=\"product.nomenclature.category\">\n                        {{product.nomenclature.category?.unit_of_measure?.symbol ? product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\n                      </ng-container>\n                      <ng-container *ngIf=\"product.nomenclature.root_category\">\n                        {{product.nomenclature.root_category?.unit_of_measure?.symbol ? product.nomenclature.root_category?.unit_of_measure?.symbol : 'Pcs' }}\n                      </ng-container>\n                    </ng-container>\n\n                    <span *ngIf=\"!product.nomenclature.category && !product.nomenclature.root_category\">\n                    Pcs\n                  </span>\n                  </td>\n                  <td style=\"width: 13%\" class=\"text-center\">\n                    {{product.nomenclature.category?.name}}\n                    {{product.nomenclature.root_category?.name}}\n                  </td>\n                  <td style=\"width: 12%\" class=\"text-center\">\n                    <ng-container\n                      *ngIf=\"product.locator\">\n                      {{product.locator.warehouse.name}}\n                    </ng-container>\n                  </td>\n                  <td style=\"width: 14%\" class=\"text-center\">\n                    <ng-container *ngIf=\"product.locator\">\n                      {{product.locator.name}}\n                    </ng-container>\n                    <span class=\"d-block\" *ngIf=\"product.locator\"> R: {{product.locator.row}} Col:\n                      {{product.locator.column}} Sh: {{product.locator.shelf}} Pl:\n                      {{product.locator.place}}\n                  </span>\n                  </td>\n                </tr>\n              </ng-template>\n              <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                  <td class=\"text-center p-2\" [attr.colspan]=\"9\">\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\n                  </td>\n                </tr>\n              </ng-template>\n            </p-table>\n            <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n              <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            </div>\n          </div>\n          <div class=\"paginator-wrapper\" *ngIf=\"products.length > 0\">\n            <p-paginator\n              #paginator\n              [rows]=\"10\"\n              [totalRecords]=\"countProducts\"\n              (onPageChange)=\"paginate($event)\">\n            </p-paginator>\n            <p-button\n              class=\"paginator-all\"\n              type=\"button\"\n              styleClass=\"p-button-text\"\n            >\n              All\n            </p-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--    <div *ngIf=\"!dt.paginator && !isLoading && products.length > 0\" class=\"paginator-return-pagination\">-->\n    <!--      <p-button-->\n    <!--        type=\"button\"-->\n    <!--        (click)=\"dt.paginator=true\"-->\n    <!--        styleClass=\"p-button-text\"-->\n    <!--      >-->\n    <!--        Return pagination-->\n    <!--      </p-button>-->\n    <!--    </div>-->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-warehouse-layout',\n  templateUrl: './warehouse-layout.component.html',\n  styleUrls: ['./warehouse-layout.component.scss']\n})\nexport class WarehouseLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Items', commands: ['items']},\n    {label: 'Production Requests', commands: ['production-requests']},\n    {label: 'Tool Requests', commands: ['tool-requests']},\n    {label: 'Where Used', commands: ['where-used']},\n    {label: 'Physical Inventory', commands: ['physical-inventory']},\n    {label: 'Warehouses', commands: ['warehouses']},\n    {label: 'Categories', commands: ['categories']},\n    {label: 'Units of Measure', commands: ['measure']},\n    {label: 'Serial Number Types', commands: ['serial-types']},\n    {label: 'Insulator', commands: ['insulator']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Warehouse'\"\n  [routes]=\"routes\"\n></pek-header>\n\n<router-outlet></router-outlet>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {map, switchMap, tap} from 'rxjs/operators';\nimport {LocatorService} from '../../services/locator.service';\nimport {Locator} from '../../models/locator';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Warehouse} from '../../models/warehouse';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-locators',\n  templateUrl: './warehouse-locators.component.html',\n  styleUrls: ['./warehouse-locators.component.scss']\n})\nexport class WarehouseLocatorsComponent implements OnInit, OnDestroy {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Locator',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditLocator()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveLocator()\n      }\n    ]\n  }];\n\n  warehouseId: number;\n  currentWarehouse: Warehouse;\n\n  locators: Locator[] = [];\n  selectedLocator: Locator;\n\n  isLoading = true;\n  isLoadingWarehouse = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private locatorService: LocatorService,\n    private readonly warehouseService: WarehouseService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getLocators();\n    this.getCurrentWarehouse();\n  }\n\n  getLocators() {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.warehouseId = +id),\n      switchMap(() => this.locatorService.get([{name: 'warehouse', value: this.warehouseId}])),\n      takeUntil(this.destroy$)\n    ).subscribe(locators => {\n      this.locators = locators;\n      this.isLoading = false;\n    });\n  }\n\n  getCurrentWarehouse() {\n    this.warehouseService.getById(this.warehouseId).subscribe(warehouse => {\n      this.currentWarehouse = warehouse;\n      this.isLoadingWarehouse = false;\n    });\n  }\n\n  onAddLocator() {\n    this.locatorService.createEditLocatorModal('create').subscribe(locator => {\n      if (locator) {\n        this.locators.unshift(locator);\n      }\n    });\n  }\n\n  onEditLocator() {\n    this.locatorService.createEditLocatorModal('edit', this.selectedLocator).subscribe(locator => {\n      if (locator) {\n        const index = this.locators.findIndex(t => t.id === this.selectedLocator.id);\n        this.locators[index] = locator;\n        this.selectedLocator = this.locators[index];\n      }\n    });\n  }\n\n  onRemoveLocator() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.locatorService.delete(this.selectedLocator).subscribe(() => {\n          const index = this.locators.findIndex(w => w.id === this.selectedLocator.id);\n          this.locators.splice(index, 1);\n            this.selectedLocator = null;\n        });\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Locators (Warehouse: {{isLoadingWarehouse ? '...' : currentWarehouse.name}})</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Locator\" (click)=\"onAddLocator()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"locators.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedLocator\"\n        [value]=\"locators\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedLocator\">Choose the Locator to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedLocator\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 20%\">Name</th>\n            <th style=\"width: 20%\" class=\"text-center\">Description</th>\n            <th style=\"width: 15%\" class=\"text-center\">Row</th>\n            <th style=\"width: 15%\" class=\"text-center\">Column</th>\n            <th style=\"width: 15%\" class=\"text-center\">Shelf</th>\n            <th style=\"width: 10%\" class=\"text-center\">Place</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-locator let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"locator\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1 }}</td>\n            <td style=\"width: 20%\">{{locator.name}}</td>\n            <td style=\"width: 20%;\" class=\"text-center\">{{locator.description}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.row}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.column}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.shelf}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{locator.place}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && locators.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-warehouse-production-request',\n  templateUrl: './warehouse-production-request.component.html',\n  styleUrls: ['./warehouse-production-request.component.scss']\n})\nexport class WarehouseProductionRequestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Requests for Order</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Complete\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Order} from '../../../procurement/models/order';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {QuerySearch} from '@shared/models/other';\n\n@Component({\n  selector: 'pek-warehouse-production-requests',\n  templateUrl: './warehouse-production-requests.component.html',\n  styleUrls: ['./warehouse-production-requests.component.scss']\n})\nexport class WarehouseProductionRequestsComponent implements OnInit {\n\n  isLoading = true;\n  orders: Order[] = [];\n  selectedOrder: Order;\n\n  query: QuerySearch[] = [\n    {name: 'accounting_type__in', value: '2,3'},\n    {name: 'is_prepared', value: false}\n  ];\n\n  constructor(\n    private readonly orderService: OrderService\n  ) { }\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders() {\n    this.orderService.get(this.query).subscribe(orders => {\n      this.orders = orders;\n      this.isLoading = false;\n    })\n  }\n\n  showProductionLists(plans: any[]): void {\n  }\n\n  getRootLists(rootLists: any[]): { list: any, count?: number }[] {\n    const lists: { list: any, count?: number }[] = [];\n\n    if (rootLists) {\n      rootLists.forEach((res: any) => {\n        if (res) {\n          const found = lists.find(el => el.list.root_nomenclature?.id === res.root_nomenclature?.id);\n          if (found) {\n            found.count++;\n          } else {\n            lists.push({list: res, count: 1});\n          }\n        }\n      });\n    }\n    return lists;\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Production Requests</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button class=\"mr-2\" pButton type=\"button\" icon=\"pi pi-table\" label=\"Hierarchy\"></button>\n      <button pButton type=\"button\" icon=\"pi pi-list\" label=\"List\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orders.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedOrder\"\n        [value]=\"orders\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <button\n              pButton\n              class=\"ml-auto\"\n              type=\"button\"\n              icon=\"pi pi-bars\"\n              label=\"Parts/Materials List\"\n              [disabled]=\"!selectedOrder\"\n              [routerLink]=\"[selectedOrder?.id]\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\n            <th class=\"text-center\" style=\"width: 10%;\">ID</th>\n            <th class=\"text-center\" style=\"width: 30%;\">Created Date</th>\n            <th class=\"text-center\" style=\"width: 30%;\">Closing Date</th>\n            <th style=\"width: 45%;\">Root Lists</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"order\">\n            <td class=\"text-center\" style=\"width: 5%;\">{{i + 1}}</td>\n            <td class=\"text-center\" style=\"width: 10%;\">\n              <a [routerLink]=\"['materials', order.id]\" target=\"_blank\">\n                {{order.id}}\n              </a>\n            </td>\n            <td class=\"text-center\" style=\"width: 30%;\">\n              {{order.created | date:'dd/MM/yyyy HH:MM'}}\n            </td>\n            <td class=\"text-center\" style=\"width: 30%;\">\n              {{order.production_requests_fully_completed | date:'dd/MM/yyyy HH:MM'}}\n            </td>\n            <td style=\"width: 45%;\">\n\n              <div class=\"d-block\" *ngFor=\"let item of getRootLists(order.root_production_plans); let idx = index\">\n\n                <ng-template [ngIf]=\"item.count === 1\">\n                  <a\n                    *ngIf=\"item.list.serial_numbers.length < 1\"\n                    target=\"_blank\"\n                    [routerLink]=\"['/dash/production/plan/tasks', item.list.id]\"\n                  >\n                    {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}\n                    ({{item.count}})\n                  </a>\n\n                  <ng-template *ngIf=\"item.list.serial_numbers.length >= 1\">\n                    <a\n                      *ngFor=\"let serial of item.list.serial_numbers\"\n                      target=\"_blank\"\n                      [routerLink]=\"['/dash/production/plan/tasks', serial.id]\"\n                    >\n                      {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}\n                      ({{item.count}})\n                    </a>\n                  </ng-template>\n                </ng-template>\n\n                <ng-template [ngIf]=\"item.count > 1\">\n                  <a (click)=\"showProductionLists(order.root_production_plans)\">\n                    {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}\n                    ({{item.count}})\n                  </a>\n\n                  <ng-template *ngIf=\"item.list.serial_numbers.length >= 1\">\n                    <a (click)=\"showProductionLists(order.root_production_plans)\">\n                      {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}\n                      ({{item.count}})\n                    </a>\n                  </ng-template>\n                </ng-template>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >\n            All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && orders.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {SerialType} from '../../models/serial-type';\nimport {MenuItem} from 'primeng/api';\nimport {SerialTypeService} from '../../services/serial-type.service';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-serial-types',\n  templateUrl: './warehouse-serial-types.component.html',\n  styleUrls: ['./warehouse-serial-types.component.scss']\n})\nexport class WarehouseSerialTypesComponent implements OnInit {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Serial Type',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditSerialType()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveSerialType()\n      }\n    ]\n  }];\n\n  isLoading = true;\n  serialTypes: SerialType[] = [];\n  selectedSerialType: SerialType;\n\n  constructor(\n    private serialTypeService: SerialTypeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getSerialTypes();\n  }\n\n  getSerialTypes() {\n    this.serialTypeService.get().subscribe(serialTypes => {\n      this.serialTypes = serialTypes;\n      this.isLoading = false;\n    })\n  }\n\n  onEditSerialType() {\n    this.serialTypeService.createEditSerialTypeModal('edit', this.selectedSerialType).subscribe(serialTypes => {\n      if (serialTypes) {\n        const index = this.serialTypes.findIndex(t => t.id === this.selectedSerialType.id);\n        this.serialTypes[index] = serialTypes;\n        this.selectedSerialType = this.serialTypes[index];\n      }\n    });\n  }\n\n  onRemoveSerialType() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.serialTypeService.delete(this.selectedSerialType).subscribe(() => {\n          const index = this.serialTypes.findIndex(w => w.id === this.selectedSerialType.id);\n          this.serialTypes.splice(index, 1);\n          this.selectedSerialType = null;\n        });\n      }\n    });\n  }\n\n  onAddSerialType() {\n    this.serialTypeService.createEditSerialTypeModal('create').subscribe(serialType => {\n      if (serialType) {\n        this.serialTypes.unshift(serialType);\n      }\n    });\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Serial Number Types</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Serial Type\" (click)=\"onAddSerialType()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"serialTypes.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedSerialType\"\n        [value]=\"serialTypes\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedSerialType\">Choose the Serial Type to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedSerialType\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 35%\">Name</th>\n            <th style=\"width: 20%\" class=\"text-center\">Prefix</th>\n            <th style=\"width: 20%\" class=\"text-center\">Start Number</th>\n            <th style=\"width: 20%\" class=\"text-center\">Suffix</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-type let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"type\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 35%\">{{type.name}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.prefix}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.start_number}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.suffix}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && serialTypes.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ToolRequest} from '../../services/tool-request';\nimport {ActivatedRoute} from '@angular/router';\nimport {ToolOrder} from '../../models/tool-order';\nimport {map, switchMap, tap} from 'rxjs/operators';\nimport {ToolRequestService} from '../../services/tool-request.service';\nimport {ToolOrderService} from '../../services/tool-order.service';\n\n@Component({\n  selector: 'pek-warehouse-tool-request',\n  templateUrl: './warehouse-tool-request.component.html',\n  styleUrls: ['./warehouse-tool-request.component.scss']\n})\nexport class WarehouseToolRequestComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  requests: ToolRequest[] = [];\n  selectedRequest: ToolRequest;\n\n  orderId: number;\n  order: ToolOrder;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private route: ActivatedRoute,\n    private toolRequestService: ToolRequestService,\n    private toolOrderService: ToolOrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.orderId = +id),\n      tap(() => this.getToolOrder()),\n      tap(() => this.getToolRequest()),\n    ).subscribe();\n  }\n\n  getToolOrder() {\n    this.toolOrderService.getById(this.orderId).subscribe(toolOrder => {\n      this.order = toolOrder;\n    });\n  }\n\n  getToolRequest() {\n    this.toolRequestService.get([\n        {name: 'tool_order', value: this.orderId},\n        {name: 'is_completed', value: false}\n      ]).subscribe(requests => {\n      this.requests = requests;\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>\n        Tool Request\n        <ng-container *ngIf=\"order; else empty\">\n          Order ID: {{order.id}}\n          Area:  {{order.area_locator.area.name}}\n          Locator: {{order.area_locator.name}}\n        </ng-container>\n      </h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Complete\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"requests.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedRequest\"\n        [value]=\"requests\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <button\n              class=\"ml-auto\"\n              pButton\n              type=\"button\"\n              icon=\"pi pi-images\"\n              label=\"Show Images\"\n              [disabled]=\"!selectedRequest\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 35%\">Code</th>\n            <th style=\"width: 45%\">Name</th>\n            <th class=\"text-center\" style=\"width: 15%\">Requested Quantity</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-request let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"request\">\n            <td class=\"text-center\" style=\"width: 5%\">\n              {{i + 1}}\n            </td>\n            <td style=\"width: 35%\">\n              {{request.nomenclature.code}}\n            </td>\n            <td style=\"width: 45%\">\n              {{request.nomenclature.name}}\n            </td>\n            <td style=\"width: 15%\" class=\"text-center\">\n              {{request.required_quantity}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && requests.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<ng-template #empty>\n  ...\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ToolOrderService} from '../../services/tool-order.service';\nimport {ToolOrder} from '../../models/tool-order';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-tool-requests',\n  templateUrl: './warehouse-tool-requests.component.html',\n  styleUrls: ['./warehouse-tool-requests.component.scss']\n})\nexport class WarehouseToolRequestsComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  toolRequests: ToolOrder[] = [];\n  selectedRequest: ToolOrder;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private toolRequestService: ToolOrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getRequests();\n  }\n\n  getRequests() {\n    this.toolRequestService.get([{name: 'is_completed', value: false}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(toolRequests => {\n      this.toolRequests = toolRequests;\n      this.isLoading = false;\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Tool Requests</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <div class=\"page__block\">\n        <button\n          pButton\n          type=\"button\"\n          class=\"ml-auto\"\n          icon=\"pi pi-bars\"\n          label=\"Nomenclatures\"\n          [routerLink]=\"[selectedRequest?.id]\"\n          [disabled]=\"!selectedRequest\"\n        ></button>\n      </div>\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"toolRequests.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedRequest\"\n        [value]=\"toolRequests\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 35%\" class=\"text-center\">Area</th>\n            <th style=\"width: 30%\" class=\"text-center\">Locator</th>\n            <th style=\"width: 30%\" class=\"text-center\">Creation Date</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"order\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1 }}</td>\n            <td style=\"width: 35%\" class=\"text-center\">{{order.area_locator.area.name}}</td>\n            <td style=\"width: 30%\" class=\"text-center\">{{order.area_locator.name}}</td>\n            <td style=\"width: 30%\" class=\"text-center\">{{order.created | date:'dd/MM/yyyy'}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && toolRequests.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UnitMeasureService} from '../../services/unit-measure.service';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-units-measure',\n  templateUrl: './warehouse-units-measure.component.html',\n  styleUrls: ['./warehouse-units-measure.component.scss']\n})\nexport class WarehouseUnitsMeasureComponent implements OnInit, OnDestroy  {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Unit',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditUnit()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveUnit()\n      }\n    ]\n  }];\n\n  isLoading = true;\n\n  unitsMeasure: UnitMeasure[] = [];\n  selectedUnitMeasure: UnitMeasure;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly unitMeasureService: UnitMeasureService,\n    private readonly modalService: ModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getUnitsMeasure();\n  }\n\n  getUnitsMeasure() {\n    this.unitMeasureService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(unitsMeasure => {\n      this.unitsMeasure = unitsMeasure;\n      this.isLoading = false;\n    })\n  }\n\n  onAddUnit() {\n    this.unitMeasureService.createEditUnitMeasureModal('create').subscribe(unitMeasure => {\n      if (unitMeasure) {\n        this.unitsMeasure.unshift(unitMeasure);\n      }\n    });\n  }\n\n  onEditUnit() {\n    this.unitMeasureService.createEditUnitMeasureModal('edit', this.selectedUnitMeasure).subscribe(unitMeasure => {\n      if (unitMeasure) {\n        const index = this.unitsMeasure.findIndex(t => t.id === this.selectedUnitMeasure.id);\n        this.unitsMeasure[index] = unitMeasure;\n        this.selectedUnitMeasure = this.unitsMeasure[index];\n      }\n    });\n  }\n\n  onRemoveUnit() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.unitMeasureService.delete(this.selectedUnitMeasure).subscribe(() => {\n          const index = this.unitsMeasure.findIndex(w => w.id === this.selectedUnitMeasure.id);\n          this.unitsMeasure.splice(index, 1);\n          this.selectedUnitMeasure = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Units of Measure</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Unit\" (click)=\"onAddUnit()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"unitsMeasure.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedUnitMeasure\"\n        [value]=\"unitsMeasure\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedUnitMeasure\">Choose the Unit of Measure to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedUnitMeasure\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 50%\" class=\"text-center\">Symbol</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-unit let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"unit\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{unit.name}}</td>\n            <td class=\"text-center\" style=\"width: 50%\">{{unit.symbol}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && unitsMeasure.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Warehouse} from '../../models/warehouse';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {MenuItem} from 'primeng/api';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-warehouses',\n  templateUrl: './warehouse-warehouses.component.html',\n  styleUrls: ['./warehouse-warehouses.component.scss']\n})\nexport class WarehouseWarehousesComponent implements OnInit, OnDestroy {\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Warehouse',\n    items: [\n      {\n        label: 'Locators',\n        icon: 'pi pi-bars',\n        command: () => this.onGoToWarehouseLocators()\n      },\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditTechnology()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveTechnology()\n      }\n    ]\n  }];\n\n  warehouses: Warehouse[] = [];\n  selectedWarehouse: Warehouse;\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n  }\n\n  getWarehouses() {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.isLoading = false;\n    });\n  }\n\n  onAddWarehouse() {\n    this.warehouseService.createEditWarehouseModal('create').subscribe(warehouse => {\n      if (warehouse) {\n        this.warehouses.unshift(warehouse);\n      }\n    });\n  }\n\n  onGoToWarehouseLocators() {\n    this.router.navigate([this.selectedWarehouse.id, 'locators'], {relativeTo: this.route});\n  }\n\n  onEditTechnology() {\n    this.warehouseService.createEditWarehouseModal('edit', this.selectedWarehouse).subscribe(warehouse => {\n      if (warehouse) {\n        const index = this.warehouses.findIndex(t => t.id === this.selectedWarehouse.id);\n        this.warehouses[index] = warehouse;\n        this.selectedWarehouse = this.warehouses[index];\n      }\n    });\n  }\n\n  onRemoveTechnology() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.warehouseService.delete(this.selectedWarehouse).subscribe(() => {\n          const index = this.warehouses.findIndex(w => w.id === this.selectedWarehouse.id);\n          this.warehouses.splice(index, 1);\n          this.selectedWarehouse = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouses</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Warehouse\" (click)=\"onAddWarehouse()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"warehouses.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedWarehouse\"\n        [value]=\"warehouses\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedWarehouse\">Choose the Warehouse to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedWarehouse\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-warehouse let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"warehouse\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{warehouse.name}}</td>\n            <td style=\"width: 50%\">{{warehouse.description}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && warehouses.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {QuerySearch} from '@shared/models/other';\nimport {Paginator} from 'primeng/paginator';\nimport {debounceTime, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-warehouse-where-used',\n  templateUrl: './warehouse-where-used.component.html',\n  styleUrls: ['./warehouse-where-used.component.scss']\n})\nexport class WarehouseWhereUsedComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  isStartOnePage = false;\n  isLoadingNomenclatures = true;\n  isLoadingUsedNomenclatures = false;\n\n  nomenclatureList: Nomenclature[] = [];\n  usedNomenclatures: Nomenclature[] = [];\n\n  whereUsedNomenclature: Nomenclature;\n  selectedNomenclature: Nomenclature;\n\n  countNomenclatures = 0;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    category: [''],\n    root_categories: [''],\n    page: [1]\n  });\n\n  queryKey = 'name:/code:/categories:/root_categories:';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private nomenclatureService: NomenclatureService,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedNomenclature = null),\n        map(() => this.searchBoxName.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchNomenclatures();\n    });\n\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedNomenclature = null),\n        map(() => this.searchBoxCode.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchNomenclatures();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatureList = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoadingNomenclatures = false;\n    });\n  }\n\n  getType(type: ENomenclatureType) {\n    switch (type) {\n      case ENomenclatureType.PURCHASED:\n        return 'Purchased';\n      case ENomenclatureType.ASSEMBLY:\n        return 'Assembly';\n      case ENomenclatureType.MANUFACTURED:\n        return 'Manufactured';\n    }\n  }\n\n  onSearchWhereUsed() {\n    if (this.selectedNomenclature) {\n      this.whereUsedNomenclature = this.selectedNomenclature;\n      this.isLoadingUsedNomenclatures = true;\n      this.usedNomenclatures = [];\n      this.destroy$.next(true);\n      this.nomenclatureService.searchWhereUsed(this.selectedNomenclature.id).pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(usedNomenclatures => {\n        this.usedNomenclatures = usedNomenclatures;\n        this.isLoadingUsedNomenclatures = false;\n      });\n    } else {\n      this.whereUsedNomenclature = null;\n      this.usedNomenclatures = [];\n    }\n  }\n\n  searchNomenclatures() {\n    this.destroy$.next(true);\n    this.isLoadingNomenclatures = true;\n    this.selectedNomenclature = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/categories:${this.searchForm.get('category').value}/root_categories:${this.searchForm.get('root_categories').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true}\n    ];\n\n    if (this.searchForm.get('name').value !== '') {\n      this.query.push({name: 'name', value: this.searchForm.get('name').value});\n    }\n\n    if (this.searchForm.get('code').value !== '') {\n      this.query.push({name: 'code', value: encodeURIComponent(this.searchForm.get('code').value)});\n    }\n\n    if (this.searchForm.get('category').value) {\n      this.query.push({name: 'categories', value: this.searchForm.get('category').value});\n    }\n\n    if (this.searchForm.get('root_categories').value) this.query.push({\n      name: 'root_categories',\n      value: this.searchForm.get('root_categories').value\n    });\n\n    this.getNomenclatures();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n  onSelectCategory(ids: number[]) {\n    if (ids) {\n      this.searchForm.get('category').patchValue(ids.join(','));\n    } else {\n      this.searchForm.get('category').patchValue('');\n    }\n    this.searchNomenclatures();\n  }\n\n  onSelectRootCategory(ids: number[]) {\n    if (ids) {\n      this.searchForm.get('root_categories').patchValue(ids.join(','));\n    } else {\n      this.searchForm.get('root_categories').patchValue('');\n    }\n\n    this.searchNomenclatures();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Where Used</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <form\n        [formGroup]=\"searchForm\"\n        class=\"warehouse-items__form mb-3\"\n      >\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Code</label>\n              <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Name</label>\n              <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Category</label>\n              <pek-product-category-picker\n                (choiceCategoryFolAllIds)=\"onSelectCategory($event)\"\n                [isAllIds]=\"true\"\n              ></pek-product-category-picker>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Product Structure Category</label>\n              <pek-product-structure-category-picker\n                (choiceCategoryFolAllIds)=\"onSelectRootCategory($event)\"\n                [isAllIds]=\"true\"\n              ></pek-product-structure-category-picker>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"table-pagination-preloader\">\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          scrollHeight=\"calc(100vh - 30.25rem)\"\n          [scrollable]=\"true\"\n          [rows]=\"10\"\n          [(selection)]=\"selectedNomenclature\"\n          [value]=\"nomenclatureList\"\n          (selectionChange)=\"onSearchWhereUsed()\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th class=\"text-center\" style=\"width: 5%\">#</th>\n              <th style=\"width: 30%\">Code</th>\n              <th style=\"width: 35%\">Name</th>\n              <th style=\"width: 30%\">Category</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n            <tr [pSelectableRow]=\"nomenclature\">\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\n              <td style=\"width: 35%\">{{nomenclature.name}}</td>\n              <td style=\"width: 30%\">{{nomenclature.category?.name}}{{nomenclature.root_category?.name}}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoadingNomenclatures\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoadingNomenclatures\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoadingNomenclatures\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </div>\n      <div\n        class=\"paginator-wrapper\"\n        [class.hide]=\"nomenclatureList.length === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"countNomenclatures\"\n          (onPageChange)=\"paginate($event)\">\n        </p-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        [value]=\"usedNomenclatures\"\n        scrollHeight=\"calc(100vh - 335px)\"\n        [paginator]=\"usedNomenclatures.length > 0\"\n        [rows]=\"10\"\n        selectionMode=\"single\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <h2 class=\"mt-1 mb-1\">\n            Where Used\n            <ng-container *ngIf=\"whereUsedNomenclature; else empty\">\n              {{whereUsedNomenclature.name}} ({{whereUsedNomenclature.code}})\n            </ng-container>\n          </h2>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Code</th>\n            <th style=\"width: 35%\">Name</th>\n            <th style=\"width: 30%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-usedNomenclature let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 30%\">\n              <a\n                target=\"_blank\"\n                [routerLink]=\"'/product-structure/products/structure/' + usedNomenclature.id\"\n              >\n                {{usedNomenclature.nomenclature.code}}\n              </a>\n            </td>\n            <td style=\"width: 35%\">{{usedNomenclature.nomenclature.name}}</td>\n            <td style=\"width: 30%\">{{getType(usedNomenclature.nomenclature.type)}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoadingUsedNomenclatures\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoadingUsedNomenclatures\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </div>\n</div>\n\n<ng-template #empty>\n  <i>(Select the Nomenclature)</i>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-add-product-to-physical-inventory',\n  templateUrl: './add-product-to-physical-inventory.component.html',\n  styleUrls: ['./add-product-to-physical-inventory.component.scss']\n})\nexport class AddProductToPhysicalInventoryComponent implements OnInit {\n  isSaving = false;\n  isSelectProductMode = false;\n\n  nomenclatureType = ENomenclatureType;\n\n  selectedNomenclature: Nomenclature;\n  selectedNomenclatureTechnologiesIds: number[] = [];\n\n  form: FormGroup = this.fb.group({\n    locator_id: [null, Validators.required],\n    add_quantity: [1, [Validators.required, Validators.min(1)]],\n    nomenclature_id: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<AddProductToPhysicalInventoryComponent>,\n    private readonly physicalInventoryService: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) private inventoryId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSelectProductMode() {\n    this.dialogRef.updateSize('90rem', 'auto');\n    this.isSelectProductMode = true;\n  }\n\n  selectLocator(id: number) {\n    this.form.get('locator_id').patchValue(id);\n  }\n\n  onSelectNomenclature(nomenclature: Nomenclature) {\n    this.selectedNomenclature = nomenclature;\n\n    if (nomenclature) {\n      this.form.get('nomenclature_id').patchValue(nomenclature.id);\n      this.selectedNomenclatureTechnologiesIds = nomenclature.technologies.map(t => t.id);\n    } else {\n      this.form.get('nomenclature_id').patchValue(null);\n      this.selectedNomenclatureTechnologiesIds = [];\n    }\n\n    if (this.selectedNomenclatureTechnologiesIds.length > 0) {\n      this.form.addControl('current_technology_id', new FormControl(null, Validators.required));\n    } else {\n      this.form.removeControl('current_technology_id');\n    }\n  }\n\n  onReselectProduct() {\n    this.onSelectProductMode();\n    this.selectedNomenclature = null;\n    this.form.get('nomenclature_id').patchValue(null);\n    this.form.removeControl('current_technology_id');\n    this.selectedNomenclatureTechnologiesIds = [];\n  }\n\n  onChoiceProduct() {\n    this.dialogRef.updateSize('40rem', 'auto');\n    this.isSelectProductMode = false;\n  }\n\n  onSave() {\n    this.isSaving = true;\n    const send = this.form.value;\n    this.physicalInventoryService.addProductToInventory(this.inventoryId, send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n\n  selectTechnology(id: number) {\n    this.form.get('current_technology_id').patchValue(id);\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Add product to Physical Inventory\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <div *ngIf=\"!isSelectProductMode; else nomenclaturePicker\">\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label>Move to*</label>\n\n        <pek-group-locator-picker\n          [selectedLocatorId]=\"this.form.get('locator_id').value\"\n          (selectLocator)=\"selectLocator($event)\"\n        ></pek-group-locator-picker>\n      </div>\n      <div class=\"form-group\">\n        <label>Quantity*</label>\n        <input type=\"number\" min=\"0\" id=\"name\" pInputText formControlName=\"add_quantity\">\n      </div>\n\n      <div\n        class=\"form-group\"\n        *ngIf=\"selectedNomenclature &&\n        selectedNomenclature.type !== nomenclatureType.PURCHASED &&\n        selectedNomenclatureTechnologiesIds.length > 0\"\n      >\n        <label>Technology*</label>\n        <pek-technology-picker\n          (selectTechnology)=\"selectTechnology($event)\"\n          [acceptedTechnologyIds]=\"selectedNomenclatureTechnologiesIds\"\n        ></pek-technology-picker>\n      </div>\n\n      <div class=\"form-group\">\n        <label>\n          Product*\n          <ng-container *ngIf=\"selectedNomenclature\">\n            : {{selectedNomenclature.code}} {{selectedNomenclature.name}}\n          </ng-container>\n        </label>\n\n        <div class=\"custom-button\" *ngIf=\"!selectedNomenclature\">\n          <p-button\n            icon=\"pi pi-plus\"\n            (click)=\"onSelectProductMode()\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n          >\n            Select Product\n          </p-button>\n        </div>\n\n        <div class=\"custom-button\" *ngIf=\"selectedNomenclature\">\n          <p-button\n            icon=\"pi pi-replay\"\n            (click)=\"onReselectProduct()\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n          >\n            Reselect Product\n          </p-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions\n  class=\"justify-content-between\"\n  [class.buttons]=\"isSelectProductMode\"\n>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    *ngIf=\"!isSelectProductMode\"\n    pButton\n    type=\"button\"\n    label=\"Add Product\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n\n  <button\n    *ngIf=\"isSelectProductMode\"\n    pButton\n    type=\"button\"\n    label=\"Select Product\"\n    class=\"p-button-success\"\n    [disabled]=\"!selectedNomenclature\"\n    (click)=\"onChoiceProduct()\"\n  ></button>\n</mat-dialog-actions>\n\n<ng-template #nomenclaturePicker>\n  <pek-nomenclature-picker\n    (selectProduct)=\"onSelectNomenclature($event)\"\n    [paginationAbsolute]=\"true\"\n  ></pek-nomenclature-picker>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {SerialTypeService} from '../../services/serial-type.service';\nimport {SerialType} from '../../models/serial-type';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-create-edit-serial-type',\n  templateUrl: './create-edit-serial-type.component.html',\n  styleUrls: ['./create-edit-serial-type.component.scss']\n})\nexport class CreateEditSerialTypeComponent implements OnInit {\n  isSaving = false;\n\n  nomenclatures: Partial<Nomenclature>[] = [];\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    prefix: ['', [Validators.required]],\n    suffix: ['', [Validators.required]],\n    start_number: [0, [Validators.required]],\n    nomenclature_set: [[]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly serialTypeService: SerialTypeService,\n    private readonly modalService: ModalService,\n    private dialogRef: MatDialogRef<CreateEditSerialTypeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, serialType: SerialType }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.serialType.id));\n      this.form.patchValue(<any>this.data.serialType);\n\n      this.form.get('nomenclature_set').patchValue(this.data.serialType.nomenclature_set.map(n => n.id));\n      this.nomenclatures = this.data.serialType.nomenclature_set;\n    }\n  }\n\n  getType(type: ENomenclatureType) {\n    switch (type) {\n      case ENomenclatureType.PURCHASED:\n        return 'Purchased';\n      case ENomenclatureType.ASSEMBLY:\n        return 'Assembly';\n      case ENomenclatureType.MANUFACTURED:\n        return 'Manufactured';\n    }\n  }\n\n  onRemoveNomenclature(id: number) {\n    const index = this.nomenclatures.findIndex(n => n.id === id);\n    this.nomenclatures.splice(index, 1);\n    this.form.get('nomenclature_set').patchValue(this.nomenclatures.map(n => n.id));\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createSerialType();\n        break;\n      }\n      case 'edit': {\n        this.editSerialType();\n        break;\n      }\n    }\n  }\n\n  onChoiceNomenclature() {\n    this.modalService.choiceNomenclatureModal().subscribe(nomenclature => {\n      if (nomenclature) {\n        this.form.get('nomenclature_set').value.push(nomenclature.id);\n        this.nomenclatures.push(nomenclature);\n      }\n    })\n  }\n\n  createSerialType() {\n    const send = <any>this.form.value;\n    this.serialTypeService.create(send).subscribe({\n      next: serialType => this.dialogRef.close(serialType),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editSerialType() {\n    const send = <any>this.form.value;\n    this.serialTypeService.update(send).subscribe({\n      next: serialType => this.dialogRef.close(serialType),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Serial Number Type\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"prefix\"> Prefix* </label>\n          <input formControlName=\"prefix\" pInputText class=\"form-control\" type=\"text\" id=\"prefix\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"start\"> Start Number* </label>\n          <input formControlName=\"start_number\" pInputText class=\"form-control\" type=\"number\" id=\"start\"\n                 required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"suffix\"> Suffix* </label>\n          <input formControlName=\"suffix\" pInputText class=\"form-control\" type=\"text\" id=\"suffix\" required=\"required\">\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"nomenclature-header\">\n        <label> Nomenclatures </label>\n        <div class=\"custom-button\">\n          <p-button\n            icon=\"pi pi-plus\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n            (click)=\"onChoiceNomenclature()\"\n          >\n            Add Nomenclature\n          </p-button>\n        </div>\n      </div>\n\n      <div *ngIf=\"nomenclatures.length > 0; else empty\">\n        <p-table\n          [value]=\"nomenclatures\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          selectionMode=\"single\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\n              <th style=\"width: 33%\">Name</th>\n              <th style=\"width: 30%\">Code</th>\n              <th style=\"width: 20%\" class=\"text-center\">Type</th>\n              <th style=\"width: 10%\" class=\"text-right\"></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n            <tr>\n              <td style=\"width: 7%\" class=\"text-center\">{{i + 1}}</td>\n              <td style=\"width: 33%\">{{nomenclature.name}}</td>\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\n              <td style=\"width: 20%\" class=\"text-center\">{{getType(nomenclature.type)}}</td>\n              <td style=\"width: 10%\" class=\"text-right\">\n                <button\n                  pButton\n                  (click)=\"onRemoveNomenclature(nomenclature.id)\"\n                  type=\"button\"\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                  icon=\"pi pi-trash\"\n                ></button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n\n      <ng-template #empty>\n        <div class=\"empty\">The nomenclature is missing</div>\n      </ng-template>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Warehouse} from '../../models/warehouse';\nimport {Locator} from '../../models/locator';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-create-physical-inventory',\n  templateUrl: './create-physical-inventory.component.html',\n  styleUrls: ['./create-physical-inventory.component.scss']\n})\nexport class CreatePhysicalInventoryComponent implements OnInit {\n  form: FormGroup = this.fb.group({\n    warehouses: [null, Validators.required],\n    locators: [null, Validators.required],\n  });\n\n  isSaving = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<CreatePhysicalInventoryComponent>,\n    private readonly physicalInventoryServices: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) private data: any,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectWarehouses(warehouses: Warehouse[]) {\n    let value = null;\n    if (warehouses?.length > 0) value = warehouses.map(w => w.id);\n    this.form.get('warehouses').patchValue(value);\n  }\n\n  selectLocators(locators: Locator[]) {\n    let value = null;\n    if (locators?.length > 0) value = locators.map(w => w.id);\n    this.form.get('locators').patchValue(value);\n  }\n\n  onCreatePhysicalInventory() {\n    this.isSaving = true;\n    const locatorsIds = this.form.get('locators').value.splice(',').join(',');\n    this.physicalInventoryServices.createPhysicalInventory(locatorsIds).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Create Physical Inventory\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Warehouses</label>\n      <pek-multi-warehouse-picker\n        (selectWarehouses)=\"selectWarehouses($event)\"\n        [currentWarehousesIds]=\"form.get('warehouses').value\"\n      ></pek-multi-warehouse-picker>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Locator</label>\n      <pek-multi-locator-picker\n        [isDisabled]=\"true\"\n        [currentWarehousesIds]=\"form.get('warehouses').value\"\n        (selectLocators)=\"selectLocators($event)\"\n      >\n      </pek-multi-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Create\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onCreatePhysicalInventory()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {Product} from '../../../product-structure/models/product';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-move-physical-inventory-product',\n  templateUrl: './move-physical-inventory-product.component.html',\n  styleUrls: ['./move-physical-inventory-product.component.scss']\n})\nexport class MovePhysicalInventoryProductComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    new_locator_id: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<MovePhysicalInventoryProductComponent>,\n    private readonly physicalInventoryService: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) public data: Product,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectLocator(id: number) {\n    this.form.get('new_locator_id').patchValue(id);\n  }\n\n  onMoveProduct() {\n    this.isSaving = true;\n    this.physicalInventoryService.movePhysicalInventoryProduct(this.data.id, this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Move Product\n\n        <ng-container *ngIf=\"data.product; else productTitle\">\n          {{data.product.nomenclature.name}}\n        </ng-container>\n\n        <ng-template #productTitle>\n          {{data.physical_inventory_nomenclature.name}}\n        </ng-template>\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <label class=\"current-locator\">\n      Current Locator: {{data.product.locator.name}}\n      R: {{data.product.locator.row}}\n      Col: {{data.product.locator.column}}\n      Sh: {{data.product.locator.shelf}}\n      Pl: {{data.product.locator.place}}\n    </label>\n    <div class=\"form-group\">\n      <label>Move to*</label>\n      <pek-group-locator-picker\n        [product]=\"data\"\n        (selectLocator)=\"selectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Move\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMoveProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Injectable} from '@angular/core';\nimport {QuerySearch} from '@shared/models/other';\nimport {\n  InventoryList,\n  InventoryLists,\n  InventoryProduct,\n  PhysicalInventories,\n  PhysicalInventory\n} from '../models/physical-inventory';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreatePhysicalInventoryComponent\n} from '../modals/create-physical-inventory/create-physical-inventory.component';\nimport {\n  MovePhysicalInventoryProductComponent\n} from '../modals/move-physical-inventory-product/move-physical-inventory-product.component';\nimport {Product} from '../../product-structure/models/product';\nimport {\n  AddProductToPhysicalInventoryComponent\n} from '../modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhysicalInventoryService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'physical_inventory/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  getForPagination(query?: QuerySearch[]): Observable<PhysicalInventories> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: PhysicalInventories }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id: number): Observable<PhysicalInventory> {\n    return this.httpClient.get<{ data: PhysicalInventory }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  getInventoryProducts(id: number, query?: QuerySearch[]): Observable<InventoryList[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '&' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: InventoryList[] }>(this.API_URL + 'physical_inventory_products_lists/?physical_inventory_id=' + id + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getInventoryProductsListsForPagination(id: number, query?: QuerySearch[]): Observable<InventoryLists> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '&' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: InventoryLists }>(this.API_URL + 'physical_inventory_products_lists/?physical_inventory_id=' + id + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createPhysicalInventory(locatorsIds: string): Observable<PhysicalInventory[]> {\n    return this.httpClient.post<{ data: PhysicalInventory[] }>(this.API_URL + this.url + '?locators_ids=' + locatorsIds, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  completePhysicalInventory(inventoryId: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + inventoryId + '/complete_physical_inventory/', null);\n  }\n\n  removePhysicalInventory(inventoryId: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + inventoryId + '/');\n  }\n\n  updateQuantityInventoryProduct(inventoryProduct: InventoryProduct): Observable<InventoryProduct> {\n    const send = {\n      is_scanned: inventoryProduct.is_scanned,\n      new_quantity: inventoryProduct.new_quantity\n    };\n    return this.httpClient.put<{ data: InventoryProduct }>(this.API_URL + 'physical_inventory_products/' + inventoryProduct.id + '/', send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  movePhysicalInventoryProduct(id: number, send: {new_locator_id: number}): Observable<InventoryProduct> {\n    return this.httpClient.post<{data: InventoryProduct}>(this.API_URL + 'physical_inventory_products/' + id + '/move_to_locator/', send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  addProductToInventory(inventoryId: number, send: any): Observable<InventoryProduct> {\n    return this.httpClient.post<{data: InventoryProduct}>(this.API_URL + this.url + inventoryId + '/add_to_inventory/', send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  openCreatePhysicalInventoryModal(): Observable<any> {\n    return this.dialog\n      .open<CreatePhysicalInventoryComponent>(CreatePhysicalInventoryComponent, {\n        width: '40rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openPhysicalInventoryProductMoveModal(product: Product): Observable<any> {\n    return this.dialog\n      .open<MovePhysicalInventoryProductComponent>(MovePhysicalInventoryProductComponent, {\n        width: '40rem',\n        height: 'auto',\n        data: product,\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openAddProductToPhysicalInventory(inventoryId: number): Observable<any> {\n    return this.dialog\n      .open<AddProductToPhysicalInventoryComponent>(AddProductToPhysicalInventoryComponent, {\n        width: '40rem',\n        height: 'auto',\n        data: inventoryId,\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {QuerySearch} from '@shared/models/other';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {SerialType} from '../models/serial-type';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../models/warehouse';\nimport {CreateEditWarehouseComponent} from '../modals/create-edit-warehouse/create-edit-warehouse.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditSerialTypeComponent} from '../modals/create-edit-serial-type/create-edit-serial-type.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerialTypeService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'serial_number_types/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<SerialType[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: SerialType[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.post<{ data: SerialType }>(this.API_URL + this.url, serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.patch<{ data: SerialType }>(this.API_URL + this.url + serialType.id + '/', serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.put<{ data: SerialType }>(this.API_URL + this.url + serialType.id + '/', serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(serialType: SerialType): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + serialType.id + '/');\n  }\n\n  createEditSerialTypeModal(type: ModalActionType, serialType?: SerialType): Observable<SerialType> {\n    return this.dialog\n      .open<CreateEditSerialTypeComponent>(CreateEditSerialTypeComponent, {\n        width: '65rem',\n        height: 'auto',\n        data: {type, serialType},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\nimport {ToolOrder} from '../models/tool-order';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolOrderService {\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'tool_orders/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n\n  get(query?: QuerySearch[]): Observable<ToolOrder[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: ToolOrder[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id: number): Observable<ToolOrder> {\n    return this.httpClient.get<{ data: ToolOrder }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\nimport {ToolRequest} from './tool-request';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolRequestService {\n\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'tool_requests/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<ToolRequest[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: ToolRequest[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {WarehouseRouting} from './warehouse.routing';\nimport {WarehouseItemsComponent} from './components/warehouse-items/warehouse-items.component';\nimport {WarehouseLayoutComponent} from './components/warehouse-layout/warehouse-layout.component';\nimport {LayoutModule} from '../layout/layout.module';\nimport {SharedModule} from '@shared/shared.module';\nimport { WarehouseWarehousesComponent } from './components/warehouse-warehouses/warehouse-warehouses.component';\nimport {TreeModule} from 'primeng/tree';\nimport { WarehouseLocatorsComponent } from './components/warehouse-locators/warehouse-locators.component';\nimport {WarehouseUnitsMeasureComponent} from './components/warehouse-units-measure/warehouse-units-measure.component';\nimport { WarehouseSerialTypesComponent } from './components/warehouse-serial-types/warehouse-serial-types.component';\nimport { WarehouseInsulatorComponent } from './components/warehouse-insulator/warehouse-insulator.component';\nimport { WarehouseInsulatorInvoicesComponent } from './components/warehouse-insulator/components/warehouse-insulator-invoices/warehouse-insulator-invoices.component';\nimport { WarehouseInsulatorOrdersComponent } from './components/warehouse-insulator/components/warehouse-insulator-orders/warehouse-insulator-orders.component';\nimport { WarehouseCategoriesComponent } from './components/warehouse-categories/warehouse-categories.component';\nimport { WarehouseWhereUsedComponent } from './components/warehouse-where-used/warehouse-where-used.component';\nimport { PhysicalInventoryComponent } from './components/physical-inventory/physical-inventory.component';\nimport { PhysicalInventoryProductsComponent } from './components/physical-inventory/physical-inventory-products/physical-inventory-products.component';\nimport { WarehouseToolRequestsComponent } from './components/warehouse-tool-requests/warehouse-tool-requests.component';\nimport { WarehouseToolRequestComponent } from './components/warehouse-tool-request/warehouse-tool-request.component';\nimport { WarehouseProductionRequestsComponent } from './components/warehouse-production-requests/warehouse-production-requests.component';\nimport { WarehouseProductionRequestComponent } from './components/warehouse-production-request/warehouse-production-request.component';\nimport { CreatePhysicalInventoryComponent } from './modals/create-physical-inventory/create-physical-inventory.component';\nimport { MovePhysicalInventoryProductComponent } from './modals/move-physical-inventory-product/move-physical-inventory-product.component';\nimport { AddProductToPhysicalInventoryComponent } from './modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component';\nimport { CreateEditWarehouseComponent } from './modals/create-edit-warehouse/create-edit-warehouse.component';\nimport { CreateEditLocatorComponent } from './modals/create-edit-locator/create-edit-locator.component';\nimport { CreateEditWarehouseCategoryComponent } from './modals/create-edit-warehouse-category/create-edit-warehouse-category.component';\nimport {CreateEditUnitMeasureComponent} from './modals/create-edit-unit-measure/create-edit-unit-measure.component';\nimport { CreateEditSerialTypeComponent } from './modals/create-edit-serial-type/create-edit-serial-type.component';\n\n\n@NgModule({\n  declarations: [\n    WarehouseItemsComponent,\n    WarehouseLayoutComponent,\n    WarehouseWarehousesComponent,\n    WarehouseLocatorsComponent,\n    WarehouseUnitsMeasureComponent,\n    WarehouseSerialTypesComponent,\n    WarehouseInsulatorComponent,\n    WarehouseInsulatorInvoicesComponent,\n    WarehouseInsulatorOrdersComponent,\n    WarehouseCategoriesComponent,\n    WarehouseWhereUsedComponent,\n    PhysicalInventoryComponent,\n    PhysicalInventoryProductsComponent,\n    WarehouseToolRequestsComponent,\n    WarehouseToolRequestComponent,\n    WarehouseProductionRequestsComponent,\n    WarehouseProductionRequestComponent,\n    CreatePhysicalInventoryComponent,\n    MovePhysicalInventoryProductComponent,\n    AddProductToPhysicalInventoryComponent,\n    CreateEditWarehouseComponent,\n    CreateEditLocatorComponent,\n    CreateEditWarehouseCategoryComponent,\n    CreateEditUnitMeasureComponent,\n    CreateEditSerialTypeComponent\n  ],\n  imports: [\n    CommonModule,\n    WarehouseRouting,\n    LayoutModule,\n    SharedModule,\n    TreeModule\n  ]\n})\nexport class WarehouseModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {WarehouseItemsComponent} from './components/warehouse-items/warehouse-items.component';\nimport {WarehouseLayoutComponent} from './components/warehouse-layout/warehouse-layout.component';\nimport {WarehouseWarehousesComponent} from './components/warehouse-warehouses/warehouse-warehouses.component';\nimport {WarehouseLocatorsComponent} from './components/warehouse-locators/warehouse-locators.component';\nimport {WarehouseUnitsMeasureComponent} from './components/warehouse-units-measure/warehouse-units-measure.component';\nimport {WarehouseSerialTypesComponent} from './components/warehouse-serial-types/warehouse-serial-types.component';\nimport {WarehouseInsulatorComponent} from './components/warehouse-insulator/warehouse-insulator.component';\nimport {\n  WarehouseInsulatorInvoicesComponent\n} from './components/warehouse-insulator/components/warehouse-insulator-invoices/warehouse-insulator-invoices.component';\nimport {\n  WarehouseInsulatorOrdersComponent\n} from './components/warehouse-insulator/components/warehouse-insulator-orders/warehouse-insulator-orders.component';\nimport {WarehouseCategoriesComponent} from './components/warehouse-categories/warehouse-categories.component';\nimport {WarehouseWhereUsedComponent} from './components/warehouse-where-used/warehouse-where-used.component';\nimport {PhysicalInventoryComponent} from './components/physical-inventory/physical-inventory.component';\nimport {\n  PhysicalInventoryProductsComponent\n} from './components/physical-inventory/physical-inventory-products/physical-inventory-products.component';\nimport {WarehouseToolRequestsComponent} from './components/warehouse-tool-requests/warehouse-tool-requests.component';\nimport {WarehouseToolRequestComponent} from './components/warehouse-tool-request/warehouse-tool-request.component';\nimport {\n  WarehouseProductionRequestsComponent\n} from './components/warehouse-production-requests/warehouse-production-requests.component';\nimport {\n  WarehouseProductionRequestComponent\n} from './components/warehouse-production-request/warehouse-production-request.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: WarehouseLayoutComponent, children: [\n      {path: '', redirectTo: 'items', pathMatch: 'full'},\n      {path: 'items', title: 'Warehouse Items', component: WarehouseItemsComponent},\n      {\n        path: 'warehouses',\n        children: [\n          {path: '', title: 'Warehouses', component: WarehouseWarehousesComponent},\n          {path: ':id/locators', title: 'Locators', component: WarehouseLocatorsComponent},\n        ]\n      },\n      {path: 'measure', title: 'Units of Measure', component: WarehouseUnitsMeasureComponent},\n      {path: 'serial-types', title: 'Serial Number Types', component: WarehouseSerialTypesComponent},\n      {path: 'categories', title: 'Warehouse Categories', component: WarehouseCategoriesComponent},\n      {path: 'where-used', title: 'Where Used', component: WarehouseWhereUsedComponent},\n      {\n        path: 'production-requests', children: [\n          {path: '', title: 'Production Requests', component: WarehouseProductionRequestsComponent},\n          {path: ':id', title: 'Tool Request', component: WarehouseProductionRequestComponent}\n        ]\n      },\n      {\n        path: 'tool-requests', children: [\n          {path: '', title: 'Tool Requests', component: WarehouseToolRequestsComponent},\n          {path: ':id', title: 'Tool Request', component: WarehouseToolRequestComponent}\n        ]\n      },\n      {\n        path: 'physical-inventory', children: [\n          {path: '', title: 'Physical Inventory', component: PhysicalInventoryComponent},\n          {path: ':id', title: 'Physical Inventory Products', component: PhysicalInventoryProductsComponent},\n        ]\n      },\n      {\n        path: 'insulator', children: [\n          {path: '', title: 'Insulator', component: WarehouseInsulatorComponent},\n          {path: 'invoices/:id', title: 'Insulator Invoices', component: WarehouseInsulatorInvoicesComponent},\n          {path: 'orders/:id', title: 'Insulator Orders', component: WarehouseInsulatorOrdersComponent}\n        ]\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WarehouseRouting {\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}