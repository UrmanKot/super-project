{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/auth/auth-state.enum.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/auth.service.ts","./src/app/business-trips/enums/business-trip-expenses-type.ts","./src/app/business-trips/enums/business-trip-location-status.enum.ts","./src/app/business-trips/enums/business-trip-vehicle-type.ts","./src/app/business-trips/modals/create-business-trip/create-business-trip.component.ts","./src/app/business-trips/modals/create-business-trip/create-business-trip.component.html","./src/app/business-trips/modals/take-photo-modal/take-photo-modal.component.ts","./src/app/business-trips/modals/take-photo-modal/take-photo-modal.component.html","./src/app/business-trips/modals/uploaded-data-viewer/uploaded-data-viewer.component.ts","./src/app/business-trips/modals/uploaded-data-viewer/uploaded-data-viewer.component.html","./src/app/business-trips/services/business-trip.service.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.html","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.ts","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.html","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.ts","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.html","./src/app/confirmation/components/production-list-confirmation/production-list-confirmation.component.ts","./src/app/confirmation/components/production-list-confirmation/production-list-confirmation.component.html","./src/app/confirmation/components/reservation-confirmation/reservation-confirmation.component.ts","./src/app/confirmation/components/reservation-confirmation/reservation-confirmation.component.html","./src/app/confirmation/components/supplier-confirmation/supplier-confirmation.component.ts","./src/app/confirmation/components/supplier-confirmation/supplier-confirmation.component.html","./src/app/confirmation/components/write-off-confirmation/write-off-confirmation.component.ts","./src/app/confirmation/components/write-off-confirmation/write-off-confirmation.component.html","./src/app/confirmation/confirmation.module.ts","./src/app/confirmation/confirmation.routing.ts","./src/app/confirmation/modals/payment-confirmation-limit/payment-confirmation-limit.component.ts","./src/app/confirmation/modals/payment-confirmation-limit/payment-confirmation-limit.component.html","./src/app/confirmation/models/order-supplier.ts","./src/app/confirmation/services/order-supplier.service.ts","./src/app/crm/modals/add-company-to-event/add-company-to-event.component.ts","./src/app/crm/modals/add-company-to-event/add-company-to-event.component.html","./src/app/crm/modals/add-contact-person-to-event/add-contact-person-to-event.component.ts","./src/app/crm/modals/add-contact-person-to-event/add-contact-person-to-event.component.html","./src/app/crm/modals/add-event-to-company/add-event-to-company.component.ts","./src/app/crm/modals/add-event-to-company/add-event-to-company.component.html","./src/app/crm/modals/add-event-to-contact-person/add-event-to-contact-person.component.ts","./src/app/crm/modals/add-event-to-contact-person/add-event-to-contact-person.component.html","./src/app/crm/modals/create-edit-company-category/create-edit-company-category.component.ts","./src/app/crm/modals/create-edit-company-category/create-edit-company-category.component.html","./src/app/crm/modals/create-edit-company/create-edit-company.component.ts","./src/app/crm/modals/create-edit-company/create-edit-company.component.html","./src/app/crm/modals/create-edit-contact-person/create-edit-contact-person.component.ts","./src/app/crm/modals/create-edit-contact-person/create-edit-contact-person.component.html","./src/app/crm/modals/create-edit-crm-employee/create-edit-crm-employee.component.ts","./src/app/crm/modals/create-edit-crm-employee/create-edit-crm-employee.component.html","./src/app/crm/modals/create-edit-event-type/create-edit-event-type.component.ts","./src/app/crm/modals/create-edit-event-type/create-edit-event-type.component.html","./src/app/crm/modals/create-edit-event/create-edit-event.component.ts","./src/app/crm/modals/create-edit-event/create-edit-event.component.html","./src/app/crm/modals/create-edit-external-event-type/create-edit-external-event-type.component.ts","./src/app/crm/modals/create-edit-external-event-type/create-edit-external-event-type.component.html","./src/app/crm/modals/create-edit-linked-company/create-edit-linked-company.component.ts","./src/app/crm/modals/create-edit-linked-company/create-edit-linked-company.component.html","./src/app/crm/modals/create-edit-linked-contact/create-edit-linked-contact.component.ts","./src/app/crm/modals/create-edit-linked-contact/create-edit-linked-contact.component.html","./src/app/crm/modals/create-edit-user-profile/create-edit-user-profile.component.ts","./src/app/crm/modals/create-edit-user-profile/create-edit-user-profile.component.html","./src/app/crm/modals/create-update-crm-positions/create-update-crm-positions.component.ts","./src/app/crm/modals/create-update-crm-positions/create-update-crm-positions.component.html","./src/app/crm/modals/edit-employee-event-date/edit-employee-event-date.component.ts","./src/app/crm/modals/edit-employee-event-date/edit-employee-event-date.component.html","./src/app/crm/pickers/crm-employee-picker/crm-employee-picker.component.ts","./src/app/crm/pickers/crm-employee-picker/crm-employee-picker.component.html","./src/app/crm/pickers/crm-event-type-picker/crm-event-type-picker.component.ts","./src/app/crm/pickers/crm-event-type-picker/crm-event-type-picker.component.html","./src/app/crm/services/company-category.service.ts","./src/app/crm/services/company.service.ts","./src/app/crm/services/contact-person.service.ts","./src/app/crm/services/crm-employee.service.ts","./src/app/crm/services/crm-positions.service.ts","./src/app/crm/services/event-types.service.ts","./src/app/crm/services/events-list.service.ts","./src/app/crm/services/user-profile.service.ts","./src/app/delivery-chains/components/not-found/not-found.component.ts","./src/app/delivery-chains/components/not-found/not-found.component.html","./src/app/delivery-chains/delivery-chains.module.ts","./src/app/delivery-chains/delivery-chains.routing.ts","./src/app/guide/guide-button/guide-button.component.ts","./src/app/guide/guide-button/guide-button.component.html","./src/app/guide/guide-glossary/guide-glossary.component.ts","./src/app/guide/guide-glossary/guide-glossary.component.html","./src/app/guide/guide-instructions/confirmation-instruction/confirmation-instruction.component.ts","./src/app/guide/guide-instructions/confirmation-instruction/confirmation-instruction.component.html","./src/app/guide/guide-instructions/main-instruction/main-instruction.component.ts","./src/app/guide/guide-instructions/main-instruction/main-instruction.component.html","./src/app/guide/guide-instructions/product-structure-instruction/product-structure-instruction.component.ts","./src/app/guide/guide-instructions/product-structure-instruction/product-structure-instruction.component.html","./src/app/guide/guide-instructions/sales-instruction/sales-instruction.component.ts","./src/app/guide/guide-instructions/sales-instruction/sales-instruction.component.html","./src/app/guide/guide-instructions/warehouse-instruction/warehouse-instruction.component.ts","./src/app/guide/guide-instructions/warehouse-instruction/warehouse-instruction.component.html","./src/app/guide/guide-outsourcing/guide-outsourcing.component.ts","./src/app/guide/guide-outsourcing/guide-outsourcing.component.html","./src/app/guide/guide-procurement/guide-procurement.component.ts","./src/app/guide/guide-procurement/guide-procurement.component.html","./src/app/guide/guide-production/guide-production.component.ts","./src/app/guide/guide-production/guide-production.component.html","./src/app/guide/guide-sales/guide-sales.component.ts","./src/app/guide/guide-sales/guide-sales.component.html","./src/app/guide/guide-schemes/guide-confirmation/guide-confirmation.component.ts","./src/app/guide/guide-schemes/guide-confirmation/guide-confirmation.component.html","./src/app/guide/guide-schemes/guide-warehouse/guide-warehouse.component.ts","./src/app/guide/guide-schemes/guide-warehouse/guide-warehouse.component.html","./src/app/guide/guide.module.ts","./src/app/guide/guide.routing.ts","./src/app/guide/guide/guide.component.ts","./src/app/guide/guide/guide.component.html","./src/app/layout/components/header/header.component.ts","./src/app/layout/components/header/header.component.html","./src/app/layout/components/layout/layout.component.ts","./src/app/layout/components/layout/layout.component.html","./src/app/layout/components/logo/logo.component.ts","./src/app/layout/components/logo/logo.component.html","./src/app/layout/layout.module.ts","./src/app/outsourcing/components/outsourcing-chain-creation-list/outsourcing-chain-creation-list.component.ts","./src/app/outsourcing/components/outsourcing-chain-creation-list/outsourcing-chain-creation-list.component.html","./src/app/outsourcing/components/outsourcing-chains/outsourcing-chains.component.ts","./src/app/outsourcing/components/outsourcing-chains/outsourcing-chains.component.html","./src/app/outsourcing/components/outsourcing-layout/outsourcing-layout.component.ts","./src/app/outsourcing/components/outsourcing-layout/outsourcing-layout.component.html","./src/app/outsourcing/components/outsourcing-order-page/outsourcing-order-page.component.ts","./src/app/outsourcing/components/outsourcing-order-page/outsourcing-order-page.component.html","./src/app/outsourcing/components/outsourcing-order-statuses/outsourcing-order-statuses.component.ts","./src/app/outsourcing/components/outsourcing-order-statuses/outsourcing-order-statuses.component.html","./src/app/outsourcing/components/outsourcing-requests/outsourcing-requests.component.ts","./src/app/outsourcing/components/outsourcing-requests/outsourcing-requests.component.html","./src/app/outsourcing/modals/add-material-to-order/add-material-to-order.component.ts","./src/app/outsourcing/modals/add-material-to-order/add-material-to-order.component.html","./src/app/outsourcing/modals/add-supplier-to-order/add-supplier-to-order.component.ts","./src/app/outsourcing/modals/add-supplier-to-order/add-supplier-to-order.component.html","./src/app/outsourcing/modals/create-outsourcing-request/create-outsourcing-request.component.ts","./src/app/outsourcing/modals/create-outsourcing-request/create-outsourcing-request.component.html","./src/app/outsourcing/modals/edit-order-supplier/edit-order-supplier.component.ts","./src/app/outsourcing/modals/edit-order-supplier/edit-order-supplier.component.html","./src/app/outsourcing/modals/search-product-in-warehouse/search-product-in-warehouse.component.ts","./src/app/outsourcing/modals/search-product-in-warehouse/search-product-in-warehouse.component.html","./src/app/outsourcing/outsourcing.module.ts","./src/app/outsourcing/outsourcing.routing.ts","./src/app/payments/components/delivery-payment-list/delivery-payment-list.component.ts","./src/app/payments/components/delivery-payment-list/delivery-payment-list.component.html","./src/app/payments/components/payment-layout/payment-layout.component.ts","./src/app/payments/components/payment-layout/payment-layout.component.html","./src/app/payments/components/payment-lists/payment-lists.component.ts","./src/app/payments/components/payment-lists/payment-lists.component.html","./src/app/payments/modals/create-edit-payment-form/create-edit-payment-form.component.ts","./src/app/payments/modals/create-edit-payment-form/create-edit-payment-form.component.html","./src/app/payments/modals/create-edit-service-payment-form/create-edit-service-payment-form.component.ts","./src/app/payments/modals/create-edit-service-payment-form/create-edit-service-payment-form.component.html","./src/app/payments/modals/payment-file-form/payment-file-form.component.ts","./src/app/payments/modals/payment-file-form/payment-file-form.component.html","./src/app/payments/modals/service-payment-file-form/service-payment-file-form.component.ts","./src/app/payments/modals/service-payment-file-form/service-payment-file-form.component.html","./src/app/payments/payments.module.ts","./src/app/payments/payments.routing.ts","./src/app/payments/services/payment.service.ts","./src/app/payments/services/service-invoice-payment.service.ts","./src/app/procurement/components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component.ts","./src/app/procurement/components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component.html","./src/app/procurement/components/procurement-chain-creation-list/procurement-chain-creation-list.component.ts","./src/app/procurement/components/procurement-chain-creation-list/procurement-chain-creation-list.component.html","./src/app/procurement/components/procurement-chains/procurement-chains.component.ts","./src/app/procurement/components/procurement-chains/procurement-chains.component.html","./src/app/procurement/components/procurement-layout/procurement-layout.component.ts","./src/app/procurement/components/procurement-layout/procurement-layout.component.html","./src/app/procurement/components/procurement-order-page/procurement-order-page.component.ts","./src/app/procurement/components/procurement-order-page/procurement-order-page.component.html","./src/app/procurement/components/procurement-order-statuses/procurement-order-statuses.component.ts","./src/app/procurement/components/procurement-order-statuses/procurement-order-statuses.component.html","./src/app/procurement/modals/add-order-product-to-order/add-order-product-to-order.component.ts","./src/app/procurement/modals/add-order-product-to-order/add-order-product-to-order.component.html","./src/app/procurement/modals/create-edit-auxiliary-invoice-type/create-edit-auxiliary-invoice-type.component.ts","./src/app/procurement/modals/create-edit-auxiliary-invoice-type/create-edit-auxiliary-invoice-type.component.html","./src/app/procurement/modals/edit-order-product-delivery-date/edit-order-product-delivery-date.component.ts","./src/app/procurement/modals/edit-order-product-delivery-date/edit-order-product-delivery-date.component.html","./src/app/procurement/modals/edit-order-product-quantity/edit-order-product-quantity.component.ts","./src/app/procurement/modals/edit-order-product-quantity/edit-order-product-quantity.component.html","./src/app/procurement/modals/invoice-files/invoice-files.component.ts","./src/app/procurement/modals/invoice-files/invoice-files.component.html","./src/app/procurement/modals/service-invoice-files/service-invoice-files.component.ts","./src/app/procurement/modals/service-invoice-files/service-invoice-files.component.html","./src/app/procurement/models/invoice.ts","./src/app/procurement/models/order-product.ts","./src/app/procurement/models/order.ts","./src/app/procurement/procurement.module.ts","./src/app/procurement/procurement.routing.ts","./src/app/procurement/services/base-services.service.ts","./src/app/procurement/services/invoice-product.service.ts","./src/app/procurement/services/invoice.service.ts","./src/app/procurement/services/order-product.service.ts","./src/app/procurement/services/order.service.ts","./src/app/procurement/services/status.service.ts","./src/app/product-structure/components/create-edit-product-form/components/nomenclature-files/nomenclature-files.component.ts","./src/app/product-structure/components/create-edit-product-form/components/nomenclature-files/nomenclature-files.component.html","./src/app/product-structure/components/create-edit-product-form/components/technical-equipments-table/edit-technical-equipment/edit-technical-equipment.component.ts","./src/app/product-structure/components/create-edit-product-form/components/technical-equipments-table/edit-technical-equipment/edit-technical-equipment.component.html","./src/app/product-structure/components/create-edit-product-form/components/technical-equipments-table/technical-equipments-table.component.ts","./src/app/product-structure/components/create-edit-product-form/components/technical-equipments-table/technical-equipments-table.component.html","./src/app/product-structure/components/create-edit-product-form/create-edit-product-form.component.ts","./src/app/product-structure/components/create-edit-product-form/create-edit-product-form.component.html","./src/app/product-structure/components/prefixes/prefixes.component.ts","./src/app/product-structure/components/prefixes/prefixes.component.html","./src/app/product-structure/components/product-structure-categories/product-structure-categories.component.ts","./src/app/product-structure/components/product-structure-categories/product-structure-categories.component.html","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.ts","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.html","./src/app/product-structure/components/product-structure-product/product-structure-product.component.ts","./src/app/product-structure/components/product-structure-product/product-structure-product.component.html","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.ts","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.html","./src/app/product-structure/components/technologies/technologies.component.ts","./src/app/product-structure/components/technologies/technologies.component.html","./src/app/product-structure/modals/add-product/add-product.component.ts","./src/app/product-structure/modals/add-product/add-product.component.html","./src/app/product-structure/modals/add-technical-equipment/add-technical-equipment.component.ts","./src/app/product-structure/modals/add-technical-equipment/add-technical-equipment.component.html","./src/app/product-structure/modals/compare-structure/compare-structure.component.ts","./src/app/product-structure/modals/compare-structure/compare-structure.component.html","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.ts","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.html","./src/app/product-structure/modals/create-edit-product-structure-category/create-edit-product-structure-category.component.ts","./src/app/product-structure/modals/create-edit-product-structure-category/create-edit-product-structure-category.component.html","./src/app/product-structure/modals/create-edit-root-product/create-edit-root-product.component.ts","./src/app/product-structure/modals/create-edit-root-product/create-edit-root-product.component.html","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.ts","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.html","./src/app/product-structure/modals/edit-product/edit-product.component.ts","./src/app/product-structure/modals/edit-product/edit-product.component.html","./src/app/product-structure/modals/make-production-list/make-production-list.component.ts","./src/app/product-structure/modals/make-production-list/make-production-list.component.html","./src/app/product-structure/modals/make-root-product/make-root-product.component.ts","./src/app/product-structure/modals/make-root-product/make-root-product.component.html","./src/app/product-structure/modals/product-files/product-files.component.ts","./src/app/product-structure/modals/product-files/product-files.component.html","./src/app/product-structure/modals/upload-product-structure/upload-product-structure.component.ts","./src/app/product-structure/modals/upload-product-structure/upload-product-structure.component.html","./src/app/product-structure/models/product.ts","./src/app/product-structure/product-structure.module.ts","./src/app/product-structure/product-structure.routing.ts","./src/app/product-structure/services/categories.service.ts","./src/app/product-structure/services/prefix.service.ts","./src/app/product-structure/services/product-structure-category.service.ts","./src/app/product-structure/services/product.service.ts","./src/app/product-structure/services/technical-equipment.service.ts","./src/app/product-structure/services/technology.service.ts","./src/app/purchasing/components/purchasing-categories/purchasing-categories.component.ts","./src/app/purchasing/components/purchasing-categories/purchasing-categories.component.html","./src/app/purchasing/components/purchasing-chain-creation-list/purchasing-chain-creation-list.component.ts","./src/app/purchasing/components/purchasing-chain-creation-list/purchasing-chain-creation-list.component.html","./src/app/purchasing/components/purchasing-chains/purchasing-chains.component.ts","./src/app/purchasing/components/purchasing-chains/purchasing-chains.component.html","./src/app/purchasing/components/purchasing-layout/purchasing-layout.component.ts","./src/app/purchasing/components/purchasing-layout/purchasing-layout.component.html","./src/app/purchasing/components/purchasing-order-page/purchasing-order-page.component.ts","./src/app/purchasing/components/purchasing-order-page/purchasing-order-page.component.html","./src/app/purchasing/components/purchasing-order-statuses/purchasing-order-statuses.component.ts","./src/app/purchasing/components/purchasing-order-statuses/purchasing-order-statuses.component.html","./src/app/purchasing/components/purchasing-requests/purchasing-requests.component.ts","./src/app/purchasing/components/purchasing-requests/purchasing-requests.component.html","./src/app/purchasing/modals/create-edit-purchasing-category/create-edit-purchasing-category.component.ts","./src/app/purchasing/modals/create-edit-purchasing-category/create-edit-purchasing-category.component.html","./src/app/purchasing/modals/create-empty-purchase-chain/create-empty-purchase-chain.component.ts","./src/app/purchasing/modals/create-empty-purchase-chain/create-empty-purchase-chain.component.html","./src/app/purchasing/purchasing.module.ts","./src/app/purchasing/purchasing.routing.ts","./src/app/purchasing/services/purchasing-category.service.ts","./src/app/qr-code/components/print-qr-codes/print-qr-codes.component.ts","./src/app/qr-code/components/print-qr-codes/print-qr-codes.component.html","./src/app/qr-code/components/qr-code-item/qr-code-item.component.ts","./src/app/qr-code/components/qr-code-item/qr-code-item.component.html","./src/app/qr-code/components/qr-code-modal/qr-code-modal.component.ts","./src/app/qr-code/components/qr-code-modal/qr-code-modal.component.html","./src/app/qr-code/components/qr-code-scanner/qr-code-scanner.component.ts","./src/app/qr-code/components/qr-code-scanner/qr-code-scanner.component.html","./src/app/qr-code/qr-code.module.ts","./src/app/qr-code/qr-code.service.ts","./src/app/qr-code/qr-code.ts","./src/app/sales/modals/create-edit-sales-status/create-edit-sales-status.component.ts","./src/app/sales/modals/create-edit-sales-status/create-edit-sales-status.component.html","./src/app/sales/services/sales-status.service.ts","./src/app/shared/components/categories-tree-picker/categories-tree-picker.component.ts","./src/app/shared/components/categories-tree-picker/categories-tree-picker.component.html","./src/app/shared/components/images-slider/images-slider.component.ts","./src/app/shared/components/images-slider/images-slider.component.html","./src/app/shared/components/nomenclature-picker/nomenclature-picker.component.ts","./src/app/shared/components/nomenclature-picker/nomenclature-picker.component.html","./src/app/shared/components/order-page/order-page.component.ts","./src/app/shared/components/order-page/order-page.component.html","./src/app/shared/components/order-statuses-chart/order-statuses-chart.component.ts","./src/app/shared/components/order-statuses-chart/order-statuses-chart.component.html","./src/app/shared/components/order-statuses-table/order-statuses-table.component.ts","./src/app/shared/components/order-statuses-table/order-statuses-table.component.html","./src/app/shared/components/order-statuses/order-statuses.component.ts","./src/app/shared/components/order-statuses/order-statuses.component.html","./src/app/shared/components/upload-file-picker/upload-file-picker.component.ts","./src/app/shared/components/upload-file-picker/upload-file-picker.component.html","./src/app/shared/components/upload-file/upload-file.component.ts","./src/app/shared/components/upload-file/upload-file.component.html","./src/app/shared/directives/paste-screen-image.directive.ts","./src/app/shared/guards/external-uri.guard.ts","./src/app/shared/icons/in-icon/in-icon.component.ts","./src/app/shared/icons/in-icon/in-icon.component.html","./src/app/shared/icons/module-icon/module-icon.component.ts","./src/app/shared/icons/module-icon/module-icon.component.html","./src/app/shared/icons/sort-icon/sort-icon.component.ts","./src/app/shared/icons/sort-icon/sort-icon.component.html","./src/app/shared/interceptors/error-interceptor.ts","./src/app/shared/modals/add-file-to-order/add-file-to-order.component.ts","./src/app/shared/modals/add-file-to-order/add-file-to-order.component.html","./src/app/shared/modals/add-products-to-chain/add-products-to-chain.component.ts","./src/app/shared/modals/add-products-to-chain/add-products-to-chain.component.html","./src/app/shared/modals/confirm/confirm.component.ts","./src/app/shared/modals/confirm/confirm.component.html","./src/app/shared/modals/create-chain/create-chain.component.ts","./src/app/shared/modals/create-chain/create-chain.component.html","./src/app/shared/modals/create-edit-status/create-edit-status.component.ts","./src/app/shared/modals/create-edit-status/create-edit-status.component.html","./src/app/shared/modals/edit-order/edit-order.component.ts","./src/app/shared/modals/edit-order/edit-order.component.html","./src/app/shared/modals/image-gallery/image-gallery.component.ts","./src/app/shared/modals/image-gallery/image-gallery.component.html","./src/app/shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component.ts","./src/app/shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component.html","./src/app/shared/modals/paste-image/paste-image.component.ts","./src/app/shared/modals/paste-image/paste-image.component.html","./src/app/shared/modals/refactoring/complete-list/complete-list.component.ts","./src/app/shared/modals/refactoring/complete-list/complete-list.component.html","./src/app/shared/modals/refactoring/list-products/list-products.component.ts","./src/app/shared/modals/refactoring/list-products/list-products.component.html","./src/app/shared/modals/warehouse-search/warehouse-search.component.ts","./src/app/shared/modals/warehouse-search/warehouse-search.component.html","./src/app/shared/models/nomenclature.ts","./src/app/shared/pickers/accepted-type-picker/accepted-type-picker.component.ts","./src/app/shared/pickers/accepted-type-picker/accepted-type-picker.component.html","./src/app/shared/pickers/accounting-type-picker/accounting-type-picker.component.ts","./src/app/shared/pickers/accounting-type-picker/accounting-type-picker.component.html","./src/app/shared/pickers/area-locator-picker/area-locator-picker.component.ts","./src/app/shared/pickers/area-locator-picker/area-locator-picker.component.html","./src/app/shared/pickers/area-picker/area-picker.component.ts","./src/app/shared/pickers/area-picker/area-picker.component.html","./src/app/shared/pickers/company-categorized-multi-picker/company-categorized-multi-picker.component.ts","./src/app/shared/pickers/company-categorized-multi-picker/company-categorized-multi-picker.component.html","./src/app/shared/pickers/company-category-module-picker/company-category-module-picker.component.ts","./src/app/shared/pickers/company-category-module-picker/company-category-module-picker.component.html","./src/app/shared/pickers/company-category-picker/company-category-picker.component.ts","./src/app/shared/pickers/company-category-picker/company-category-picker.component.html","./src/app/shared/pickers/company-picker/company-picker.component.ts","./src/app/shared/pickers/company-picker/company-picker.component.html","./src/app/shared/pickers/crm-company-picker/crm-company-picker.component.ts","./src/app/shared/pickers/crm-company-picker/crm-company-picker.component.html","./src/app/shared/pickers/crm-employee-picker/crm-single-employee-picker.component.ts","./src/app/shared/pickers/crm-employee-picker/crm-single-employee-picker.component.html","./src/app/shared/pickers/crm-position-picker/crm-position-picker.component.ts","./src/app/shared/pickers/crm-position-picker/crm-position-picker.component.html","./src/app/shared/pickers/crm-tree-company-picker/crm-tree-company-picker.component.ts","./src/app/shared/pickers/crm-tree-company-picker/crm-tree-company-picker.component.html","./src/app/shared/pickers/currency-picker/currency-picker.component.ts","./src/app/shared/pickers/currency-picker/currency-picker.component.html","./src/app/shared/pickers/date-time-picker/date-time-picker.component.ts","./src/app/shared/pickers/date-time-picker/date-time-picker.component.html","./src/app/shared/pickers/employee-picker/employee-picker.component.ts","./src/app/shared/pickers/employee-picker/employee-picker.component.html","./src/app/shared/pickers/group-locator-picker/group-locator-picker.component.ts","./src/app/shared/pickers/group-locator-picker/group-locator-picker.component.html","./src/app/shared/pickers/locator-picker/locator-picker.component.ts","./src/app/shared/pickers/locator-picker/locator-picker.component.html","./src/app/shared/pickers/multi-categories-picker/multi-categories-picker.component.ts","./src/app/shared/pickers/multi-categories-picker/multi-categories-picker.component.html","./src/app/shared/pickers/multi-company-category-picker/multi-company-category-picker.component.ts","./src/app/shared/pickers/multi-company-category-picker/multi-company-category-picker.component.html","./src/app/shared/pickers/multi-company-picker/multi-company-picker.component.ts","./src/app/shared/pickers/multi-company-picker/multi-company-picker.component.html","./src/app/shared/pickers/multi-contacts-picker/multi-contacts-picker.component.ts","./src/app/shared/pickers/multi-contacts-picker/multi-contacts-picker.component.html","./src/app/shared/pickers/multi-locator-picker/multi-locator-picker.component.ts","./src/app/shared/pickers/multi-locator-picker/multi-locator-picker.component.html","./src/app/shared/pickers/multi-product-categories-picker/multi-product-categories-picker.component.ts","./src/app/shared/pickers/multi-product-categories-picker/multi-product-categories-picker.component.html","./src/app/shared/pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component.ts","./src/app/shared/pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component.html","./src/app/shared/pickers/multi-purchase-category-picker/multi-purchase-category-picker.component.ts","./src/app/shared/pickers/multi-purchase-category-picker/multi-purchase-category-picker.component.html","./src/app/shared/pickers/multi-sales-status-picker/multi-sales-status-picker.component.ts","./src/app/shared/pickers/multi-sales-status-picker/multi-sales-status-picker.component.html","./src/app/shared/pickers/multi-statuses-picker/multi-statuses-picker.component.ts","./src/app/shared/pickers/multi-statuses-picker/multi-statuses-picker.component.html","./src/app/shared/pickers/multi-technology-picker/multi-technology-picker.component.ts","./src/app/shared/pickers/multi-technology-picker/multi-technology-picker.component.html","./src/app/shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component.ts","./src/app/shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component.html","./src/app/shared/pickers/nomenclature-type-picker/nomenclature-type-picker.component.ts","./src/app/shared/pickers/nomenclature-type-picker/nomenclature-type-picker.component.html","./src/app/shared/pickers/product-category-picker/product-category-picker.component.ts","./src/app/shared/pickers/product-category-picker/product-category-picker.component.html","./src/app/shared/pickers/product-structure-category-picker/product-structure-category-picker.component.ts","./src/app/shared/pickers/product-structure-category-picker/product-structure-category-picker.component.html","./src/app/shared/pickers/region-picker/region-picker.component.ts","./src/app/shared/pickers/region-picker/region-picker.component.html","./src/app/shared/pickers/statuses-picker/statuses-picker.component.ts","./src/app/shared/pickers/statuses-picker/statuses-picker.component.html","./src/app/shared/pickers/sub-region-picker/sub-region-picker.component.ts","./src/app/shared/pickers/sub-region-picker/sub-region-picker.component.html","./src/app/shared/pickers/technology-picker/technology-picker.component.ts","./src/app/shared/pickers/technology-picker/technology-picker.component.html","./src/app/shared/pickers/unit-measure-picker/unit-measure-picker.component.ts","./src/app/shared/pickers/unit-measure-picker/unit-measure-picker.component.html","./src/app/shared/pickers/user-profile-picker/user-profile-picker.component.ts","./src/app/shared/pickers/user-profile-picker/user-profile-picker.component.html","./src/app/shared/pickers/warehouse-picker/warehouse-picker.component.ts","./src/app/shared/pickers/warehouse-picker/warehouse-picker.component.html","./src/app/shared/pipes/money-format.pipe.ts","./src/app/shared/pipes/search.pipe.ts","./src/app/shared/services/adapter.service.ts","./src/app/shared/services/area-locators.service.ts","./src/app/shared/services/areas.service.ts","./src/app/shared/services/country.service.ts","./src/app/shared/services/currencies.service.ts","./src/app/shared/services/employee.service.ts","./src/app/shared/services/modal.service.ts","./src/app/shared/services/nomenclature.service.ts","./src/app/shared/services/nomenclatures-file.service.ts","./src/app/shared/services/region.service.ts","./src/app/shared/services/service-invoice.service.ts","./src/app/shared/services/sub-region.service.ts","./src/app/shared/services/task.service.ts","./src/app/shared/services/tree.service.ts","./src/app/shared/shared.module.ts","./src/app/warehouse/components/physical-inventory/physical-inventory-products/physical-inventory-products.component.ts","./src/app/warehouse/components/physical-inventory/physical-inventory-products/physical-inventory-products.component.html","./src/app/warehouse/components/physical-inventory/physical-inventory.component.ts","./src/app/warehouse/components/physical-inventory/physical-inventory.component.html","./src/app/warehouse/components/production-lists/list-product-print-item/list-product-print-item.component.ts","./src/app/warehouse/components/production-lists/list-product-print-item/list-product-print-item.component.html","./src/app/warehouse/components/production-lists/production-list/production-list.component.ts","./src/app/warehouse/components/production-lists/production-list/production-list.component.html","./src/app/warehouse/components/production-lists/production-lists.component.ts","./src/app/warehouse/components/production-lists/production-lists.component.html","./src/app/warehouse/components/warehouse-categories/warehouse-categories.component.ts","./src/app/warehouse/components/warehouse-categories/warehouse-categories.component.html","./src/app/warehouse/components/warehouse-isolator/components/warehouse-isolator-invoices/warehouse-isolator-invoices.component.ts","./src/app/warehouse/components/warehouse-isolator/components/warehouse-isolator-invoices/warehouse-isolator-invoices.component.html","./src/app/warehouse/components/warehouse-isolator/components/warehouse-isolator-orders/warehouse-isolator-orders.component.ts","./src/app/warehouse/components/warehouse-isolator/components/warehouse-isolator-orders/warehouse-isolator-orders.component.html","./src/app/warehouse/components/warehouse-isolator/warehouse-isolator.component.ts","./src/app/warehouse/components/warehouse-isolator/warehouse-isolator.component.html","./src/app/warehouse/components/warehouse-items/warehouse-items.component.ts","./src/app/warehouse/components/warehouse-items/warehouse-items.component.html","./src/app/warehouse/components/warehouse-layout/warehouse-layout.component.ts","./src/app/warehouse/components/warehouse-layout/warehouse-layout.component.html","./src/app/warehouse/components/warehouse-locators/warehouse-locators.component.ts","./src/app/warehouse/components/warehouse-locators/warehouse-locators.component.html","./src/app/warehouse/components/warehouse-production-request-print-page/warehouse-production-request-print-page.component.ts","./src/app/warehouse/components/warehouse-production-request-print-page/warehouse-production-request-print-page.component.html","./src/app/warehouse/components/warehouse-production-request/warehouse-production-request.component.ts","./src/app/warehouse/components/warehouse-production-request/warehouse-production-request.component.html","./src/app/warehouse/components/warehouse-production-requests/warehouse-production-requests.component.ts","./src/app/warehouse/components/warehouse-production-requests/warehouse-production-requests.component.html","./src/app/warehouse/components/warehouse-qc/warehouse-qc-invoice/warehouse-qc-invoice.component.ts","./src/app/warehouse/components/warehouse-qc/warehouse-qc-invoice/warehouse-qc-invoice.component.html","./src/app/warehouse/components/warehouse-qc/warehouse-qc-order/warehouse-qc-order.component.ts","./src/app/warehouse/components/warehouse-qc/warehouse-qc-order/warehouse-qc-order.component.html","./src/app/warehouse/components/warehouse-qc/warehouse-qc.component.ts","./src/app/warehouse/components/warehouse-qc/warehouse-qc.component.html","./src/app/warehouse/components/warehouse-serial-types/warehouse-serial-types.component.ts","./src/app/warehouse/components/warehouse-serial-types/warehouse-serial-types.component.html","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-request-print/warehouse-shipping-request-print.component.ts","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-request-print/warehouse-shipping-request-print.component.html","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-request/warehouse-shipping-request.component.ts","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-request/warehouse-shipping-request.component.html","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-requests.component.ts","./src/app/warehouse/components/warehouse-shipping-requests/warehouse-shipping-requests.component.html","./src/app/warehouse/components/warehouse-tool-request/warehouse-tool-request.component.ts","./src/app/warehouse/components/warehouse-tool-request/warehouse-tool-request.component.html","./src/app/warehouse/components/warehouse-tool-requests/warehouse-tool-requests.component.ts","./src/app/warehouse/components/warehouse-tool-requests/warehouse-tool-requests.component.html","./src/app/warehouse/components/warehouse-units-measure/warehouse-units-measure.component.ts","./src/app/warehouse/components/warehouse-units-measure/warehouse-units-measure.component.html","./src/app/warehouse/components/warehouse-warehouses/warehouse-warehouses.component.ts","./src/app/warehouse/components/warehouse-warehouses/warehouse-warehouses.component.html","./src/app/warehouse/components/warehouse-where-used/warehouse-where-used.component.ts","./src/app/warehouse/components/warehouse-where-used/warehouse-where-used.component.html","./src/app/warehouse/modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component.ts","./src/app/warehouse/modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component.html","./src/app/warehouse/modals/create-edit-locator/create-edit-locator.component.ts","./src/app/warehouse/modals/create-edit-locator/create-edit-locator.component.html","./src/app/warehouse/modals/create-edit-serial-type/create-edit-serial-type.component.ts","./src/app/warehouse/modals/create-edit-serial-type/create-edit-serial-type.component.html","./src/app/warehouse/modals/create-edit-unit-measure/create-edit-unit-measure.component.ts","./src/app/warehouse/modals/create-edit-unit-measure/create-edit-unit-measure.component.html","./src/app/warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component.ts","./src/app/warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component.html","./src/app/warehouse/modals/create-edit-warehouse-item/create-edit-warehouse-product.component.ts","./src/app/warehouse/modals/create-edit-warehouse-item/create-edit-warehouse-product.component.html","./src/app/warehouse/modals/create-edit-warehouse/create-edit-warehouse.component.ts","./src/app/warehouse/modals/create-edit-warehouse/create-edit-warehouse.component.html","./src/app/warehouse/modals/create-physical-inventory/create-physical-inventory.component.ts","./src/app/warehouse/modals/create-physical-inventory/create-physical-inventory.component.html","./src/app/warehouse/modals/move-physical-inventory-product/move-physical-inventory-product.component.ts","./src/app/warehouse/modals/move-physical-inventory-product/move-physical-inventory-product.component.html","./src/app/warehouse/modals/move-warehouse-product/move-warehouse-product.component.ts","./src/app/warehouse/modals/move-warehouse-product/move-warehouse-product.component.html","./src/app/warehouse/modals/nomenclature-serial-info/nomenclature-serial-info.component.ts","./src/app/warehouse/modals/nomenclature-serial-info/nomenclature-serial-info.component.html","./src/app/warehouse/modals/physical-inventory-products-changes/physical-inventory-products-changes.component.ts","./src/app/warehouse/modals/physical-inventory-products-changes/physical-inventory-products-changes.component.html","./src/app/warehouse/modals/qc-accept-technical-equipment/qc-accept-technical-equipment.component.ts","./src/app/warehouse/modals/qc-accept-technical-equipment/qc-accept-technical-equipment.component.html","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.ts","./src/app/warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component.html","./src/app/warehouse/modals/set-production-list-locator/set-production-list-locator.component.ts","./src/app/warehouse/modals/set-production-list-locator/set-production-list-locator.component.html","./src/app/warehouse/models/warehouse-product.ts","./src/app/warehouse/services/delivery-chain.service.ts","./src/app/warehouse/services/list-product.service.ts","./src/app/warehouse/services/list.service.ts","./src/app/warehouse/services/locator.service.ts","./src/app/warehouse/services/order-technical-equipments.service.ts","./src/app/warehouse/services/physical-inventory.service.ts","./src/app/warehouse/services/qc-list-modal.service.ts","./src/app/warehouse/services/request.service.ts","./src/app/warehouse/services/serial-type.service.ts","./src/app/warehouse/services/technical-equipments-in-use.service.ts","./src/app/warehouse/services/tool-order.service.ts","./src/app/warehouse/services/tool-request.service.ts","./src/app/warehouse/services/unit-measure.service.ts","./src/app/warehouse/services/warehouse-product.service.ts","./src/app/warehouse/services/warehouse.service.ts","./src/app/warehouse/warehouse.module.ts","./src/app/warehouse/warehouse.routing.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|canvas","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|fs","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|http","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|https","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|url","ignored|D:\\work\\pekauto-new\\frontend\\node_modules\\pdfjs-dist\\build|zlib"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pek-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'slopehelper-erp-frontend';\n}\n","<router-outlet></router-outlet>\n\n<p-toast position=\"bottom-right\"></p-toast>\n","import {NgModule, Provider} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppRouting} from './app.routing';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {LayoutModule} from './layout/layout.module';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {AuthModule} from './auth/auth.module';\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {AuthInterceptor} from './auth/auth.interceptor';\r\nimport {ConfirmationModule} from './confirmation/confirmation.module';\r\nimport {DeliveryChainsModule} from './delivery-chains/delivery-chains.module';\r\nimport {GuideModule} from './guide/guide.module';\r\nimport {ErrorInterceptor} from '@shared/interceptors/error-interceptor';\r\nimport { MessageService } from 'primeng/api';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {ProductStructureModule} from './product-structure/product-structure.module';\r\nimport {NgxMaskModule} from 'ngx-mask';\r\nimport {PdfViewerModule} from 'ng2-pdf-viewer';\r\nimport {PaymentsModule} from \"./payments/payments.module\";\r\nimport {QrCodeModule} from './qr-code/qr-code.module';\r\nimport {PurchasingModule} from './purchasing/purchasing.module';\r\nimport {OutsourcingModule} from './outsourcing/outsourcing.module';\r\nimport {ProcurementModule} from './procurement/procurement.module';\r\n\r\nconst INTERCEPTOR_PROVIDER: Provider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: AuthInterceptor,\r\n  multi: true,\r\n};\r\n\r\nconst INTERCEPTORS_ERROR: Provider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true,\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRouting,\r\n    HttpClientModule,\r\n    AuthModule,\r\n    LayoutModule,\r\n    ConfirmationModule,\r\n    ProductStructureModule,\r\n    DeliveryChainsModule,\r\n    QrCodeModule,\r\n    GuideModule,\r\n    ToastModule,\r\n    PdfViewerModule,\r\n    PaymentsModule,\r\n    PurchasingModule,\r\n    OutsourcingModule,\r\n    ProcurementModule,\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    INTERCEPTOR_PROVIDER,\r\n    INTERCEPTORS_ERROR,\r\n    AuthGuard,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LayoutComponent} from './layout/components/layout/layout.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {ExternalUriGuard} from '@shared/guards/external-uri.guard';\r\nimport {OrderStatusesChartComponent} from '@shared/components/order-statuses-chart/order-statuses-chart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'product-structure',\r\n        title: 'Product structure',\r\n        loadChildren: () => import('./product-structure/product-structure.module').then(m => m.ProductStructureModule)\r\n      },\r\n      {\r\n        path: 'procurement',\r\n        title: 'Procurement',\r\n        loadChildren: () => import('./procurement/procurement.module').then(m => m.ProcurementModule)\r\n      },\r\n      {\r\n        path: 'outsourcing',\r\n        title: 'Outsourcing',\r\n        loadChildren: () => import('./outsourcing/outsourcing.module').then(m => m.OutsourcingModule)\r\n      },\r\n      {\r\n        path: 'purchasing',\r\n        title: 'Purchasing',\r\n        loadChildren: () => import('./purchasing/purchasing.module').then(m => m.PurchasingModule)\r\n      },\r\n      {\r\n        path: 'confirmation',\r\n        title: 'Confirmation',\r\n        loadChildren: () => import('./confirmation/confirmation.module').then(m => m.ConfirmationModule)\r\n      },\r\n      {\r\n        path: 'warehouse',\r\n        title: 'Warehouse',\r\n        loadChildren: () => import('./warehouse/warehouse.module').then(m => m.WarehouseModule)\r\n      },\r\n      {\r\n        path: 'sales',\r\n        title: 'Sales',\r\n        loadChildren: () => import('./sales/sales.module').then(m => m.SalesModule)\r\n      },\r\n      {\r\n        path: 'delivery-procurement-chains',\r\n        title: 'Delivery Chains',\r\n        loadChildren: () => import('./delivery-chains/delivery-chains.module').then(m => m.DeliveryChainsModule)\r\n      },\r\n      {\r\n        path: 'statistics',\r\n        title: 'ERP Statistics',\r\n        loadChildren: () => import('./delivery-chains/delivery-chains.module').then(m => m.DeliveryChainsModule)\r\n      },\r\n      {\r\n        path: 'payments',\r\n        title: 'Payments',\r\n        loadChildren: () => import('./payments/payments.module').then(m => m.PaymentsModule)\r\n      },\r\n      {\r\n        path: 'crm',\r\n        title: 'CRM',\r\n        loadChildren: () => import('./crm/crm.module').then(m => m.CrmModule)\r\n      },\r\n      {\r\n        path: 'business-trips',\r\n        title: 'Business Trips',\r\n        loadChildren: () => import('./business-trips/business-trips.module').then(m => m.BusinessTripsModule)\r\n      },\r\n      {path: 'order-statuses-chart', component: OrderStatusesChartComponent},\r\n      {\r\n        path: 'correspondents',\r\n        title: 'Correspondents',\r\n        loadChildren: () => import('./correspondent/correspondent.module').then(m => m.CorrespondentModule)\r\n      },\r\n      {\r\n        path: 'instruments',\r\n        title: 'Instruments',\r\n        loadChildren: () => import('./instruments/instruments.module').then(m => m.InstrumentsModule)\r\n      },\r\n      {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n    ]\r\n  },\r\n  {path: 'login', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\r\n\r\n  // Не удалять\r\n  {path: 'external/:uri', canActivate: [ExternalUriGuard], children: []},\r\n  {path: '**', redirectTo: 'dashboard', pathMatch: 'full'},\r\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRouting {\r\n}\r\n","export enum AuthState {\r\n  PENDING = 'pending',\r\n  LOGGED_IN = 'logged-in',\r\n  LOGGED_OUT = 'logged-out',\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {Subscription, throwError} from 'rxjs';\n\n@Component({\n  selector: 'pek-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  loginForm: FormGroup = this.fb.group({\n    username: [null, Validators.required],\n    password: [null, Validators.required]\n  });\n\n  private errorSub: Subscription;\n  public errorMessage: string;\n\n  constructor(\n    public auth: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.errorSub = this.auth.error$.subscribe(error => this.errorMessage = error);\n  }\n\n  login() {\n    const user = this.loginForm.value;\n    this.auth.login(user).subscribe(\n      () => {\n        this.router.navigateByUrl('/').then();\n      },\n      (error => throwError(error))\n    );\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n\n}\n","<div class=\"auth\">\n  <div class=\"auth__box\">\n    <div class=\"auth-header\">\n      <h1 class=\"logo\">Slopehelper ERP</h1>\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n      <div class=\"form-group\">\n        <input type=\"text\" pInputText formControlName=\"username\" placeholder=\"Username\">\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"password\" pInputText formControlName=\"password\" placeholder=\"Password\">\n      </div>\n\n      <button pButton type=\"submit\" [disabled]=\"loginForm.invalid\">Log In</button>\n    </form>\n\n    <div class=\"alert alert-danger mt-3\" *ngIf=\"errorMessage\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {AuthState} from './auth-state.enum';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  public loginPageUri = ['/login'];\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.auth.getActualState().pipe(\r\n      map(state => {\r\n        return state === AuthState.LOGGED_IN ? true : this.router.createUrlTree(this.loginPageUri);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authService.isAuthentificated()) {\r\n      req = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${this.authService.token}`)\r\n      });\r\n    }\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 401) {\r\n            this.authService.logout();\r\n            this.router.navigate(['/login'], {\r\n              queryParams: {\r\n                authFailed: true\r\n              }\r\n            }).then();\r\n          }\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRouting } from './auth.routing';\r\nimport { AuthComponent } from './auth.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AuthComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AuthRouting,\r\n        SharedModule,\r\n    ]\r\n})\r\nexport class AuthModule { }\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AuthComponent} from './auth.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRouting { }\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, take, tap} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {AuthState} from './auth-state.enum';\nimport {User, UserPermissions} from '@shared/models/user';\n\nexport class AuthResponse {\n  access: string;\n  refresh: string;\n}\n\nexport class AuthStateObject {\n  state: AuthState;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  readonly #onAuth$ = new BehaviorSubject<AuthStateObject>({\n    state: AuthState.PENDING,\n    user: undefined,\n  });\n\n  public onAuth$ = this.#onAuth$.pipe(\n    debounceTime(0),\n    distinctUntilChanged(),\n  );\n\n  public user: User = null;\n  public userPermissions: UserPermissions = null;\n\n  public error$: Subject<string> = new Subject<string>();\n  API_URL = environment.base_url;\n  readonly url = environment.users_url;\n\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n    setTimeout(() => {\n      this.getMe().subscribe();\n    });\n  }\n\n  get token(): string | null {\n    return localStorage.getItem('access');\n  }\n\n  login(user: User): Observable<User> {\n    return this.httpClient.post<{ data: AuthResponse }>(this.API_URL + 'token/', user).pipe(\n      map(response => response.data),\n      tap(this.setToken),\n      switchMap(() => this.getMe()),\n      catchError(this.handleError.bind(this))\n    );\n  }\n\n  private handleError(error: any): any {\n    const message = error.error.data.detail;\n    this.error$.next(message);\n    return throwError(error);\n  }\n\n  logout(): void {\n    this.setToken(null);\n  }\n\n  isAuthentificated(): boolean {\n    return !!this.token;\n  }\n\n  private setToken(response: AuthResponse | null): void {\n    if (response) {\n      localStorage.setItem('access', response.access);\n      localStorage.setItem('refresh', response.refresh);\n    } else {\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n    }\n  }\n\n  public getActualState(): Observable<AuthState> {\n    return this.onAuth$.pipe(\n      filter(({state}) => state !== AuthState.PENDING),\n      take(1),\n      map(({state}) => state),\n    );\n  }\n\n  getMe(): Observable<User> {\n    return this.httpClient.get<{ data: User }>(this.API_URL + this.url + 'get_me/')\n      .pipe(\n        map(response => response.data),\n        tap(user => this.setState(user)),\n      );\n  }\n\n  setState(user: User) {\n    this.user = user;\n    if (this.user) {\n      this.getUserPermissions();\n    }\n\n    this.#onAuth$.next({\n      state: this.user ? AuthState.LOGGED_IN : AuthState.LOGGED_OUT,\n      user: this.user,\n    });\n  }\n\n  getUserPermissions() {\n    this.userPermissions = {\n      can_edit_product_structure: this.user.can_edit_product_structure,\n      can_edit_confirmation: this.user.can_edit_confirmation,\n      can_edit_warehouse: this.user.can_edit_warehouse,\n      can_edit_manufacturing_procurement: this.user.can_edit_manufacturing_procurement,\n      can_edit_quality_control: this.user.can_edit_quality_control,\n      can_edit_manufacturing: this.user.can_edit_manufacturing,\n      can_edit_contacts_and_events: this.user.can_edit_contacts_and_events,\n      can_edit_outsourcing: this.user.can_edit_outsourcing,\n      can_edit_purchase: this.user.can_edit_purchase,\n      can_edit_sales: this.user.can_edit_sales,\n      can_edit_reports: this.user.can_edit_reports,\n      can_edit_administration: this.user.can_edit_administration,\n    };\n  }\n}\n","export enum BusinessTripExpensesType {\r\n  CORPORATE = '0',\r\n  OWN = '1'\r\n}\r\n","export enum BusinessTripLocationTypes {\r\n  FIRST = '0',\r\n  INTERMEDIATE = '1',\r\n  LAST = '2',\r\n}\r\n","export enum BusinessTripVehicleType {\r\n  WITHOUT= '0',\r\n  PRIVATE = '1',\r\n  RENT = '2',\r\n  COMPANY_CAR = '3',\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {DataToSend} from '../../components/edit-business-trip/edit-business-trip.component';\r\nimport {BusinessTripService} from '../../services/business-trip.service';\r\nimport {take} from 'rxjs/operators';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {Router} from '@angular/router';\r\nimport {BusinessTripEmployee} from '../../models/business-trip-employee';\r\nimport {Subject, takeUntil} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-create-business-trip',\r\n  templateUrl: './create-business-trip.component.html',\r\n  styleUrls: ['./create-business-trip.component.scss']\r\n})\r\nexport class CreateBusinessTripComponent implements OnInit, OnDestroy {\r\n  form: FormGroup;\r\n  employeeFilter: [QuerySearch] = [{name: 'by_user_trip_permissions', value: true}];\r\n  private formData: FormData;\r\n  private destroy$ = new Subject();\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private businessService: BusinessTripService,\r\n    private dialogRef: MatDialogRef<CreateBusinessTripComponent>,\r\n    private router: Router\r\n    ) {\r\n    this.form = this.fb.group({\r\n      isOtherEmployee: [false],\r\n      employee: this.fb.group({\r\n        id: [null],\r\n        first_name: [null],\r\n        last_name: [null],\r\n        position: [null]\r\n      }),\r\n      employee_first_name: [''],\r\n      employee_last_name: [''],\r\n      employee_position: [null],\r\n      employee_id: [null],\r\n    });\r\n  }\r\n\r\n  tripId: number;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  employeeChanged() {\r\n    this.form.get('employee').reset();\r\n    this.form.get('employee_first_name').reset();\r\n    this.form.get('employee_last_name').reset();\r\n    this.form.get('employee_position').reset();\r\n  }\r\n\r\n  get _employee(): FormGroup {\r\n    return (this.form.get('employee') as FormGroup) as FormGroup;\r\n  }\r\n  addBusinessTrip() {\r\n    const employee = this.form.value.employee.id ? this.form.value.employee.id : null;\r\n    this.businessService\r\n      .create({id: null, employee})\r\n      .pipe(take(1), takeUntil(this.destroy$))\r\n      .subscribe((res) => {\r\n        this.tripId = res.id;\r\n        this.employeeUpdate();\r\n      });\r\n  }\r\n\r\n  employeeUpdate() {\r\n    const employeeUpdate: DataToSend = {};\r\n    if (this.form.value.employee.id) {\r\n      employeeUpdate.employee = this.form.value.employee.id;\r\n      employeeUpdate.custom_employee = null;\r\n    } else {\r\n      const position = this.form.value.employee_position;\r\n      const firstName = this.form.value.employee_first_name;\r\n      const lastNameName = this.form.value.employee_last_name;\r\n      if (!firstName || !lastNameName) {\r\n        return;\r\n      }\r\n      employeeUpdate.custom_employee = {\r\n        id: this.form.value.employee_id,\r\n        first_name: this.form.value.employee_first_name,\r\n        last_name: this.form.value.employee_last_name,\r\n        position: position ? position : null,\r\n      };\r\n      employeeUpdate.employee = null;\r\n    }\r\n\r\n    this.businessService\r\n      .updateBusinessTripEmployee(this.tripId, employeeUpdate)\r\n      .pipe(take(1), takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.router.navigate(['/business-trips/trip/edit/', this.tripId]);\r\n        this.dialogRef.close(true);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span>Create Business Trip</span>\r\n  </h2>\r\n</div>\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <label for=\"other\">Not Listed Employee</label>\r\n          <p-checkbox\r\n            id=\"other\"\r\n            formControlName=\"isOtherEmployee\"\r\n            [binary]=\"true\"\r\n            (onChange)=\"employeeChanged()\"\r\n          ></p-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"form.get('isOtherEmployee').value else predefinedEmployee\">\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>First Name</label>\r\n            <input pInputText\r\n                   formControlName=\"employee_first_name\"\r\n                   class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>Last Name</label>\r\n            <input pInputText\r\n                   formControlName=\"employee_last_name\"\r\n                   class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>Position</label>\r\n            <app-crm-position-picker\r\n              [position]=\"this.form.get('employee_position').value\"\r\n              (valueChange)=\"form.get('employee_position').setValue($event)\"\r\n            ></app-crm-position-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #predefinedEmployee>\r\n      <div formGroupName=\"employee\">\r\n        <div class=\"row\">\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>First Name</label>\r\n              <pek-crm-single-employee-picker\r\n                [filters]=\"employeeFilter\"\r\n                [showProfession]=\"true\"\r\n                [employee]=\"_employee.get('id').value\"\r\n                (valueChange)=\"_employee.setValue($event)\"\r\n              ></pek-crm-single-employee-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>Last Name</label>\r\n              <input pInputText\r\n                     [disabled]=\"true\"\r\n                     formControlName=\"last_name\"\r\n                     class=\"form-control\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>Position</label>\r\n              <input\r\n                pInputText\r\n                disabled\r\n                [ngModel]=\"_employee.get('position').value ? _employee.get('position').value.title : null\"\r\n                [ngModelOptions]=\"{standalone: true}\"\r\n                class=\"form-control\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton label=\"Cancel\" type=\"button\" class=\"p-button-danger\" [mat-dialog-close]=\"false\"></button>\r\n  <button\r\n    pButton\r\n    [label]=\"'Add'\"\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    (click)=\"addBusinessTrip()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {WebcamImage} from 'ngx-webcam';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {debounceTime, tap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-take-photo-modal',\r\n  templateUrl: './take-photo-modal.component.html',\r\n  styleUrls: ['./take-photo-modal.component.scss']\r\n})\r\nexport class TakePhotoModalComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private trigger: Subject<any> = new Subject();\r\n  public webcamImage!: WebcamImage;\r\n  private photoTaken: Subject<File> = new Subject<File>();\r\n  sysImage = '';\r\n  isPhotoTaken = false;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<TakePhotoModalComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.photoTaken.pipe(tap(() => this.isPhotoTaken = true), debounceTime(200)).subscribe(file => {\r\n      this.dialogRef.close(file);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  public getSnapshot(): void {\r\n    this.trigger.next(void 0);\r\n  }\r\n  public captureImg(webcamImage: WebcamImage): void {\r\n    this.webcamImage = webcamImage;\r\n    this.sysImage = webcamImage!.imageAsDataUrl;\r\n    const file = this.makeDataUrlAsFile(this.sysImage, 'snapshot.png');\r\n    this.photoTaken.next(file);\r\n  }\r\n  public get invokeObservable(): Observable<any> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  makeDataUrlAsFile(dataUrl, filename) {\r\n    const arr = dataUrl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]);\r\n\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n    while(n--){\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n  }\r\n\r\n  fileAdded(file: File) {\r\n    this.photoTaken.next(file);\r\n  }\r\n\r\n  closeCamera() {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  loaded() {\r\n  }\r\n}\r\n","  <webcam\r\n    pekPasteScreenImage [trackMousePosition]=\"false\" (imageAdded)=\"fileAdded($event)\"\r\n    [class.taken]=\"isPhotoTaken\"\r\n    (load)=\"loaded()\"\r\n    [trigger]=\"invokeObservable\"\r\n    [imageType]=\"'png'\"\r\n    (imageCapture)=\"captureImg($event)\"\r\n  ></webcam>\r\n  <div class=\"background\"></div>\r\n  <button\r\n    (click)=\"getSnapshot()\"\r\n    class=\"take-photo\">TAKE PHOTO</button>\r\n  <div class=\"cancel-photo\" (click)=\"closeCamera()\">\r\n    <i class=\"pi pi-times\"></i>\r\n  </div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {environment} from '@env/environment';\r\nimport {saveAs} from 'file-saver';\r\n\r\nexport class ViewerFile {\r\n  file: any;\r\n  type?: 'loaded' | 'uploaded';\r\n  extension?: 'image' | 'pdf' | 'noSupported';\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-uploaded-data-viewer',\r\n  templateUrl: './uploaded-data-viewer.component.html',\r\n  styleUrls: ['./uploaded-data-viewer.component.scss']\r\n})\r\nexport class UploadedDataViewerComponent implements OnInit {\r\n  dataToDisplay: ViewerFile[] = [];\r\n  url = environment.image_path;\r\n\r\n  offsetSlider = 0;\r\n  activeSlideIndex = 0;\r\n  isLoading = false;\r\n\r\n  galleryWidth = 1300;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UploadedDataViewerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { links: any[], files: any[] },\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activeSlideIndex = 1;\r\n    this.prepareFiles();\r\n  }\r\n\r\n\r\n  prepareFiles() {\r\n    if (this.data.links) {\r\n      this.data.links.forEach(link => {\r\n        const imageExtensions = ['png', 'jpg', 'jpeg'];\r\n        const pdfExtension = ['pdf'];\r\n        const splited = link.file.split('.');\r\n        const ext = splited[splited.length - 1];\r\n\r\n        let extension: 'image' | 'pdf' | 'noSupported' = 'noSupported';\r\n        if (imageExtensions.includes(ext)) {\r\n          extension = 'image';\r\n        }\r\n        if (pdfExtension.includes(ext)) {\r\n          extension = 'pdf';\r\n        }\r\n\r\n        this.dataToDisplay.push({file: link, type: 'uploaded', extension});\r\n      });\r\n    }\r\n\r\n    if (this.data.files) {\r\n      this.data.files.forEach(file => {\r\n        let extension: 'image' | 'pdf' | 'noSupported' = 'noSupported';\r\n        if (file.file.includes('image/png') || file.file.includes('image/jpeg')) {\r\n          extension = 'image';\r\n        }\r\n        if (file.file.includes('application/pdf')) {\r\n          extension = 'pdf';\r\n        }\r\n        this.dataToDisplay.push({file, type: 'loaded', extension});\r\n      });\r\n    }\r\n  }\r\n\r\n  onSlideNext() {\r\n    if (this.activeSlideIndex === this.dataToDisplay.length) {\r\n      this.offsetSlider = 0;\r\n      this.activeSlideIndex = 1;\r\n    } else {\r\n      this.offsetSlider = this.galleryWidth * this.activeSlideIndex;\r\n      this.activeSlideIndex++;\r\n    }\r\n  }\r\n\r\n  onSlidePrev() {\r\n    if (this.activeSlideIndex === 1) {\r\n      this.offsetSlider = this.galleryWidth * (this.dataToDisplay.length - 1);\r\n      this.activeSlideIndex = this.dataToDisplay.length;\r\n    } else {\r\n      this.offsetSlider = (this.activeSlideIndex - 2) * this.galleryWidth;\r\n      this.activeSlideIndex--;\r\n    }\r\n  }\r\n\r\n  downloadMyFile() {\r\n    const currentFile = this.dataToDisplay[this.activeSlideIndex - 1];\r\n    const url = currentFile.type === 'uploaded' ? this.url : '';\r\n    const link = url + currentFile.file.file;\r\n    saveAs(link);\r\n  }\r\n\r\n  getUrl(filePath: string): string {\r\n    return filePath.startsWith('http') ? filePath : this.url + filePath;\r\n  }\r\n}\r\n","<div class=\"gallery-slider\" *ngIf=\"dataToDisplay.length > 0\">\r\n  <div class=\"gallery-slider__wrapper\">\r\n    <div\r\n      class=\"gallery-slider__inner\"\r\n      [style.width]=\"galleryWidth * dataToDisplay.length + 'px'\"\r\n      [style.transform]=\"'translateX(-' + offsetSlider + 'px)'\"\r\n    >\r\n      <div class=\"gallery-slider__slide\" *ngFor=\"let file of dataToDisplay; let idx = index\">\r\n        <img [alt]=\"'Слайда ' + idx + 1\"\r\n             *ngIf=\"file.extension === 'image'\"\r\n             alt=\"file\"\r\n             [src]=\"file.type === 'uploaded' ? getUrl(file.file.file) : file.file.file\">\r\n        <pdf-viewer *ngIf=\"file.extension === 'pdf'\"\r\n                    [src]=\"file.type === 'uploaded' ? getUrl(file.file.file) : file.file.file\"\r\n                    [render-text]=\"true\"\r\n                    [original-size]=\"false\"\r\n                    style=\"width: 1300px; height: 830px\"\r\n        ></pdf-viewer>\r\n        <div class=\"no-supported-file\" *ngIf=\"file.extension === 'noSupported'\">File Not Supported For Preview</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button class=\"btn btn-primary\" placement=\"bottom\"\r\n          ngbTooltip=\"Download\" (click)=\"downloadMyFile()\">\r\n    <i class=\"pi pi-arrow-circle-down\"></i>\r\n  </button>\r\n  <i class=\"arrows pi pi-chevron-left btn btn-prev\" (click)=\"onSlidePrev()\" *ngIf=\"dataToDisplay.length > 1\"></i>\r\n  <i class=\"arrows pi pi-chevron-right btn btn-next\" (click)=\"onSlideNext()\" *ngIf=\"dataToDisplay.length > 1\"></i>\r\n</div>\r\n<div class=\"slider-none\" *ngIf=\"dataToDisplay.length === 0\">\r\n  No Files\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Observable} from 'rxjs';\r\nimport {BusinessTrip, BusinessTripPaginated} from '../models/business-trip';\r\nimport {BusinessTripLocationTypes} from '../enums/business-trip-location-status.enum';\r\nimport {ExpensesSum} from '../models/expenses-sum';\r\nimport {map} from 'rxjs/operators';\r\nimport {UploadedDataViewerComponent} from '../modals/uploaded-data-viewer/uploaded-data-viewer.component';\r\nimport {CreateBusinessTripComponent} from '../modals/create-business-trip/create-business-trip.component';\r\nimport {TakePhotoModalComponent} from '../modals/take-photo-modal/take-photo-modal.component';\r\nimport {DataToSend} from '../components/edit-business-trip/edit-business-trip.component';\r\nimport * as Excel from 'exceljs/dist/exceljs.min.js';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {DatePipe, formatDate} from '@angular/common';\r\nimport {BusinessTripLocation} from '../models/business-trip-location';\r\nimport {BusinessTripHotel} from '../models/business-trip-hotel';\r\nimport {BusinessTripExpensesType} from '../enums/business-trip-expenses-type';\r\nimport {Currency} from '@shared/models/currency';\r\nimport {BusinessTripVehicleType} from '../enums/business-trip-vehicle-type';\r\n\r\nconst SPACE_BETWEEN = 4;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessTripService {\r\n  API_URL = environment.base_url + environment.business_trips_url;\r\n  readonly url = 'business-trips/';\r\n  totalIndex = 1;\r\n  totalDisplayedRows = 1;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient, public dialog: MatDialog,\r\n    private adapterService: AdapterService\r\n    ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<BusinessTripPaginated> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient\r\n      .get<{ data: BusinessTripPaginated }>(this.API_URL + this.url + qString)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAll(query?: QuerySearch[]): Observable<BusinessTrip[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient\r\n      .get<{ data: BusinessTrip[] }>(this.API_URL + this.url + qString)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDetailed(id: number): Observable<BusinessTrip> {\r\n    return this.httpClient\r\n      .get<{ data: BusinessTrip }>(this.API_URL + this.url + id + '/detailed_business_trip/')\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateHotelInfo(id: number, hotelData: BusinessTripHotel): Observable<BusinessTrip> {\r\n    return this.httpClient\r\n      .post<{ data: BusinessTrip }>(this.API_URL + this.url + id + '/edit_business_trip_hotel/', hotelData)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateBusinessTripEmployee(id: number, hotelData: DataToSend): Observable<BusinessTrip> {\r\n    return this.httpClient\r\n      .post<{ data: BusinessTrip }>(this.API_URL + this.url + id + '/update_business_trip_employee/', hotelData)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateBusinessTripVehicle(id: number, hotelData: DataToSend): Observable<BusinessTrip> {\r\n    return this.httpClient\r\n      .post<{ data: BusinessTrip }>(this.API_URL + this.url + id + '/update_business_trip_vehicle/', hotelData)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  create(entity) {\r\n    return this.httpClient\r\n      .post<{ data: BusinessTrip }>(this.API_URL + this.url, entity)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(id, entity) {\r\n    return this.httpClient.patch<{ data: BusinessTrip }>(this.API_URL + this.url + id + '/', entity);\r\n  }\r\n\r\n  delete(entity: BusinessTrip) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n\r\n  download_hotel_file(id: number) {\r\n    return this.httpClient.get(this.API_URL + 'hotel_file_download/' + id, {responseType: 'blob'})\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n  download_expense_file(id: number) {\r\n    return this.httpClient.get(this.API_URL + 'expense_file_download/' + id, {responseType: 'blob'})\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n  async exportToExcel(businessTripData: DataToSend, expensesSum: ExpensesSum[]) {\r\n    // Создаем книгу Excel\r\n    const workbook = new Excel.Workbook();\r\n    let worksheet: any;\r\n\r\n    // Создаем лист Excel\r\n    worksheet = workbook.addWorksheet('Business Trip');\r\n    this.totalIndex = 1;\r\n    this.totalDisplayedRows = 1;\r\n\r\n    worksheet.columns = [\r\n      {header: '#', key: 'index', width: 10},\r\n      {header: 'Field', key: 'firstCol', width: 40},\r\n      {header: 'Value', key: 'secondCol', width: 40},\r\n      {header: '', key: 'thirdCol', width: 40},\r\n      {header: '', key: 'fourthCol', width: 40},\r\n      {header: '', key: 'fifthCol', width: 40},\r\n      {header: '', key: 'sixthCol', width: 40},\r\n    ];\r\n\r\n    const cols = 7;\r\n    // Задаем форматирование\r\n    let idx = 1;\r\n    while (idx <= cols) {\r\n      worksheet.getColumn(idx).alignment = {vertical: 'middle', horizontal: 'center'};\r\n      worksheet.getColumn(idx).font = {\r\n        name: 'Calibri',\r\n        size: 12,\r\n      };\r\n      idx++;\r\n    }\r\n    worksheet = this.makeHeader(worksheet);\r\n\r\n    worksheet.addRow({\r\n      index: this.totalDisplayedRows,\r\n      firstCol: 'Employee',\r\n      secondCol: businessTripData.full_employee.first_name +\r\n      ' ' + businessTripData.full_employee.last_name +\r\n      (businessTripData.fullPosition ? ' (' + businessTripData.fullPosition.title + ')' : '')\r\n    });\r\n    this.totalIndex++;\r\n    this.totalDisplayedRows++;\r\n    worksheet = this.makeGap(worksheet, 1);\r\n\r\n    if (businessTripData.trip_start || businessTripData.trip_end) {\r\n      // Trip Dates\r\n      const test = formatDate(businessTripData.trip_start, 'dd/mm/yyyy', 'en');\r\n      const start = businessTripData.trip_start ?\r\n        formatDate(businessTripData.trip_start, 'dd/MM/yyyy HH:mm', 'en')\r\n        : '-';\r\n      const end = businessTripData.trip_end ?\r\n        formatDate(businessTripData.trip_end, 'dd/MM/yyyy HH:mm', 'en')\r\n         : '-';\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Trip Start - End',\r\n        secondCol: start + '  -  ' + end\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n\r\n    worksheet = this.makeGap(worksheet, 1);\r\n    // Locations\r\n    const startLocation = businessTripData.locations.find(location => location.type === BusinessTripLocationTypes.FIRST);\r\n    const lastLocation = businessTripData.locations.find(location => location.type === BusinessTripLocationTypes.LAST);\r\n    const intermediateLocations = businessTripData.locations.filter(location => location.type === BusinessTripLocationTypes.INTERMEDIATE);\r\n    if (startLocation) {\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Starting point',\r\n        secondCol: startLocation.fullCountry.name + ', ' + startLocation.address\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n\r\n    if (lastLocation) {\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Arrival point',\r\n        secondCol: lastLocation.fullCountry.name + ', ' + lastLocation.address\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n      lastLocation.location_meetings.forEach((meeting, meetingIndex) => {\r\n        worksheet.addRow({\r\n          index: this.totalDisplayedRows,\r\n          firstCol: 'Meeting Company ' + (meetingIndex + 1),\r\n          secondCol: meeting.fullCompany.name\r\n        });\r\n        meeting.fullContacts.forEach((person, personIndex) => {\r\n          worksheet.addRow({\r\n            index: this.totalDisplayedRows,\r\n            firstCol: 'Company Contact Person ' + (personIndex + 1),\r\n            secondCol: person.first_name + ' ' + person.last_name\r\n          });\r\n          this.totalIndex++;\r\n          this.totalDisplayedRows++;\r\n        });\r\n\r\n        this.totalIndex++;\r\n        this.totalDisplayedRows++;\r\n        worksheet = this.makeGap(worksheet, 1);\r\n      });\r\n    }\r\n\r\n    worksheet = this.makeGap(worksheet, 2);\r\n    intermediateLocations.forEach((location, index) => {\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Intermediate point ' + (index + 1),\r\n        secondCol: location.fullCountry.name + ', ' + location.address\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n      location.location_meetings.forEach((meeting, meetingIndex) => {\r\n        worksheet.addRow({\r\n          index: this.totalDisplayedRows,\r\n          firstCol: 'Meeting Company ' + (meetingIndex + 1),\r\n          secondCol: meeting.fullCompany.name\r\n        });\r\n        meeting.fullContacts.forEach((person, personIndex) => {\r\n          worksheet.addRow({\r\n            index: this.totalDisplayedRows,\r\n            firstCol: 'Company Contact Person ' + (personIndex + 1),\r\n            secondCol: person.first_name + ' ' + person.last_name\r\n          });\r\n          this.totalIndex++;\r\n          this.totalDisplayedRows++;\r\n        });\r\n\r\n        this.totalIndex++;\r\n        this.totalDisplayedRows++;\r\n        worksheet = this.makeGap(worksheet, 1);\r\n      });\r\n      worksheet = this.makeGap(worksheet, 2);\r\n    });\r\n\r\n    if (businessTripData.purpose_short) {\r\n      worksheet = this.makeGap(worksheet, 1);\r\n      // Purpose fields\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Purpose short',\r\n        secondCol: businessTripData.purpose_short\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n\r\n    if (businessTripData.purpose_full) {\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Purpose Description',\r\n        secondCol: businessTripData.purpose_full\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n\r\n    if (businessTripData.hotels.length > 0) {\r\n      businessTripData.hotels.forEach(hotel => {\r\n        worksheet = this.makeGap(worksheet, 1);\r\n        // Hotel\r\n        // if (businessTripData.hotel) {\r\n          worksheet.addRow({\r\n            index: this.totalDisplayedRows,\r\n            firstCol: 'Hotel Name',\r\n            secondCol: hotel.name\r\n          });\r\n          this.totalIndex++;\r\n          this.totalDisplayedRows++;\r\n\r\n          if (hotel.fullCountry) {\r\n            worksheet.addRow({\r\n              index: this.totalDisplayedRows,\r\n              firstCol: 'Hotel Address',\r\n              secondCol: hotel.fullCountry.name + ', ' + hotel.address\r\n            });\r\n            this.totalIndex++;\r\n            this.totalDisplayedRows++;\r\n          }\r\n\r\n          const start = hotel.residence_start ?\r\n            formatDate(hotel.residence_start, 'dd/MM/yyyy', 'en') : '-';\r\n          const end = hotel.residence_end ?\r\n            formatDate(hotel.residence_end, 'dd/MM/yyyy', 'en') : '-';\r\n          worksheet.addRow({\r\n            index: this.totalDisplayedRows,\r\n            firstCol: 'Hotel Residence start/end',\r\n            secondCol: start + '  -  ' + end\r\n          });\r\n          this.totalIndex++;\r\n          this.totalDisplayedRows++;\r\n          worksheet = this.makeGap(worksheet, 1);\r\n        // }\r\n      });\r\n    }\r\n\r\n    // Vehicle\r\n    if (businessTripData.fullVehicle) {\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Vehicle Details',\r\n        secondCol: ''\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n      let type = '';\r\n      if (businessTripData.vehicle_type === BusinessTripVehicleType.PRIVATE) {\r\n        type = 'Private';\r\n      }\r\n      if (businessTripData.vehicle_type === BusinessTripVehicleType.RENT) {\r\n        type = 'Rent';\r\n      }\r\n      if (businessTripData.vehicle_type === BusinessTripVehicleType.COMPANY_CAR) {\r\n        type = 'Company Car';\r\n      }\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Type',\r\n        secondCol: type\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n      const vehicle = businessTripData.fullVehicle;\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Model (number)',\r\n        secondCol: vehicle.model + ' (' + vehicle.number + ')'\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Mileage start - end',\r\n        secondCol: businessTripData.start_mileage + '  -  ' + businessTripData.end_mileage\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n    if (businessTripData.fullInitiator) {\r\n      worksheet = this.makeGap(worksheet, 1);\r\n      // Initiator\r\n      worksheet.addRow({\r\n        index: this.totalDisplayedRows,\r\n        firstCol: 'Initiator',\r\n        secondCol: businessTripData.fullInitiator.first_name + ' ' + businessTripData.fullInitiator.last_name\r\n      });\r\n      this.totalIndex++;\r\n      this.totalDisplayedRows++;\r\n    }\r\n\r\n    // Gap\r\n    worksheet = this.makeGap(worksheet);\r\n\r\n    const ownEvidences = businessTripData.expenses\r\n      .filter(expense => expense.type === BusinessTripExpensesType.OWN &&\r\n              expense.is_verified === true);\r\n\r\n    if (ownEvidences.length > 0) {\r\n      // Expenses\r\n      worksheet.addRow({\r\n        index: '',\r\n        firstCol: 'OWN EVIDENCES',\r\n        secondCol: '',\r\n        thirdCol: '',\r\n        fourthCol: '',\r\n        fifthCol: '',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n      worksheet.addRow({\r\n        index: '#',\r\n        firstCol: 'Evidence Name',\r\n        secondCol: 'Evidence Description',\r\n        thirdCol: 'Evidence Sum',\r\n        fourthCol: 'Evidence Currency',\r\n        fifthCol: 'Evidence Status',\r\n        sixthCol: 'Evidence Type',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n\r\n      ownEvidences.forEach((expense, index) => {\r\n        worksheet.addRow({\r\n          index: (index + 1),\r\n          firstCol: expense.fullExpense.name,\r\n          secondCol: expense.fullExpense.description,\r\n          thirdCol: expense.sum,\r\n          fourthCol: expense.currency,\r\n          fifthCol: expense.is_verified ? 'Verified' : 'Need Verification',\r\n          sixthCol: 'Own Evidence',\r\n        });\r\n        this.totalIndex++;\r\n      });\r\n      this.makeGap(worksheet, 1);\r\n      const ownSum: {currency: string | Currency, amount: number }[] = [];\r\n      ownEvidences.forEach(expense => {\r\n        const sumForCurrency = ownSum.find(evidence => evidence.currency === expense.currency);\r\n        if (sumForCurrency) {\r\n          sumForCurrency.amount += +expense.sum;\r\n        } else {\r\n          ownSum.push({\r\n            currency: expense.currency,\r\n            amount: +expense.sum\r\n          });\r\n        }\r\n      });\r\n\r\n      if (ownSum.length > 0) {\r\n        // Expenses Sum\r\n        worksheet.addRow({\r\n          index: '',\r\n          firstCol: '',\r\n          secondCol: '',\r\n          thirdCol: 'Total Sum (Verified)',\r\n          fourthCol: 'Total Currency (Verified)',\r\n          fifthCol: '',\r\n        });\r\n        this.totalIndex++;\r\n        worksheet = this.makeHeader(worksheet);\r\n\r\n        ownSum.forEach(expenseSum => {\r\n          worksheet.addRow({\r\n            index: '',\r\n            firstCol: '',\r\n            secondCol: '',\r\n            thirdCol: expenseSum.amount,\r\n            fourthCol: expenseSum.currency,\r\n            fifthCol: '',\r\n          });\r\n          this.totalIndex++;\r\n        });\r\n        this.makeGap(worksheet, 3);\r\n      }\r\n    }\r\n\r\n    const corporateEvidences = businessTripData.expenses\r\n      .filter(expense => expense.type === BusinessTripExpensesType.CORPORATE &&\r\n        expense.is_verified === true);\r\n\r\n    if (corporateEvidences.length > 0) {\r\n      // Expenses\r\n      worksheet.addRow({\r\n        index: '',\r\n        firstCol: 'CORPORATE EVIDENCES',\r\n        secondCol: '',\r\n        thirdCol: '',\r\n        fourthCol: '',\r\n        fifthCol: '',\r\n        sixthCol: '',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n      worksheet.addRow({\r\n        index: '#',\r\n        firstCol: 'Evidence Name',\r\n        secondCol: 'Evidence Description',\r\n        thirdCol: 'Evidence Sum',\r\n        fourthCol: 'Evidence Currency',\r\n        fifthCol: 'Evidence Status',\r\n        sixthCol: 'Evidence Type',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n\r\n      corporateEvidences.forEach((expense, index) => {\r\n        worksheet.addRow({\r\n          index: (index + 1),\r\n          firstCol: expense.fullExpense.name,\r\n          secondCol: expense.fullExpense.description,\r\n          thirdCol: expense.sum,\r\n          fourthCol: expense.currency,\r\n          fifthCol: expense.is_verified ? 'Verified' : 'Need Verification',\r\n          sixthCol: 'Corporate Evidence',\r\n        });\r\n        this.totalIndex++;\r\n      });\r\n      this.makeGap(worksheet, 1);\r\n\r\n      const corporateSum: {currency: string | Currency, amount: number }[] = [];\r\n      corporateEvidences.forEach(expense => {\r\n        const sumForCurrency = corporateSum.find(evidence => evidence.currency === expense.currency);\r\n        if (sumForCurrency) {\r\n          sumForCurrency.amount += +expense.sum;\r\n        } else {\r\n          corporateSum.push({\r\n            currency: expense.currency,\r\n            amount: +expense.sum\r\n          });\r\n        }\r\n      });\r\n\r\n      if (corporateSum.length > 0) {\r\n        // Expenses Sum\r\n        worksheet.addRow({\r\n          index: '',\r\n          firstCol: '',\r\n          secondCol: '',\r\n          thirdCol: 'Total Sum (Verified)',\r\n          fourthCol: 'Total Currency (Verified)',\r\n          fifthCol: '',\r\n        });\r\n        this.totalIndex++;\r\n        worksheet = this.makeHeader(worksheet);\r\n\r\n        corporateSum.forEach(expenseSum => {\r\n          worksheet.addRow({\r\n            index: '',\r\n            firstCol: '',\r\n            secondCol: '',\r\n            thirdCol: expenseSum.amount,\r\n            fourthCol: expenseSum.currency,\r\n            fifthCol: '',\r\n          });\r\n          this.totalIndex++;\r\n        });\r\n        this.makeGap(worksheet, 3);\r\n      }\r\n    }\r\n\r\n    const canceledEvidences = businessTripData.expenses\r\n      .filter(expense => expense.is_verified === false);\r\n\r\n    if (canceledEvidences.length > 0) {\r\n      // Expenses\r\n      worksheet.addRow({\r\n        index: '',\r\n        firstCol: 'CANCELED EVIDENCES',\r\n        secondCol: '',\r\n        thirdCol: '',\r\n        fourthCol: '',\r\n        fifthCol: '',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n      worksheet.addRow({\r\n        index: '#',\r\n        firstCol: 'Evidence Name',\r\n        secondCol: 'Evidence Description',\r\n        thirdCol: 'Evidence Sum',\r\n        fourthCol: 'Evidence Currency',\r\n        fifthCol: 'Evidence Status',\r\n        sixthCol: 'Evidence Type',\r\n      });\r\n      this.totalIndex++;\r\n      worksheet = this.makeHeader(worksheet);\r\n\r\n      canceledEvidences.forEach((expense, index) => {\r\n        worksheet.addRow({\r\n          index: (index + 1),\r\n          firstCol: expense.fullExpense.name,\r\n          secondCol: expense.fullExpense.description,\r\n          thirdCol: expense.sum,\r\n          fourthCol: expense.currency,\r\n          fifthCol: 'Canceled',\r\n          sixthCol: expense.type === BusinessTripExpensesType.OWN ? 'Own Evidence' : 'Corporate Evidence',\r\n        });\r\n        this.totalIndex++;\r\n      });\r\n      this.makeGap(worksheet, 1);\r\n\r\n      const canceledSum: {currency: string | Currency, amount: number }[] = [];\r\n      canceledEvidences.forEach(expense => {\r\n        const sumForCurrency = canceledSum.find(evidence => evidence.currency === expense.currency);\r\n        if (sumForCurrency) {\r\n          sumForCurrency.amount += +expense.sum;\r\n        } else {\r\n          canceledSum.push({\r\n            currency: expense.currency,\r\n            amount: +expense.sum\r\n          });\r\n        }\r\n      });\r\n\r\n      if (canceledSum.length > 0) {\r\n        // Expenses Sum\r\n        worksheet.addRow({\r\n          index: '',\r\n          firstCol: '',\r\n          secondCol: '',\r\n          thirdCol: 'Total Sum (Verified)',\r\n          fourthCol: 'Total Currency (Verified)',\r\n          fifthCol: '',\r\n        });\r\n        this.totalIndex++;\r\n        worksheet = this.makeHeader(worksheet);\r\n\r\n        canceledSum.forEach(expenseSum => {\r\n          worksheet.addRow({\r\n            index: '',\r\n            firstCol: '',\r\n            secondCol: '',\r\n            thirdCol: expenseSum.amount,\r\n            fourthCol: expenseSum.currency,\r\n            fifthCol: '',\r\n          });\r\n          this.totalIndex++;\r\n        });\r\n      }\r\n    }\r\n\r\n    // Вызываем скрипт скачивания документы\r\n    workbook.xlsx.writeBuffer().then((data: any) => {\r\n      const blob = new Blob([data], {\r\n        type:\r\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n      });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      document.body.appendChild(a);\r\n      a.setAttribute('style', 'display: none');\r\n      a.href = url;\r\n      a.download = `Business Trip.xlsx`;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      a.remove();\r\n    });\r\n  }\r\n\r\n  addSection(worksheet) {\r\n    return worksheet;\r\n  }\r\n\r\n  makeGap(worksheet, spaceAmount = null) {\r\n    const spaceToPass = spaceAmount ? spaceAmount : SPACE_BETWEEN;\r\n    for (let i = 0; i < spaceToPass; i++) {\r\n      this.totalIndex++;\r\n      worksheet.addRow({\r\n        index: '',\r\n        firstCol: '',\r\n        secondCol: ''\r\n      });\r\n    }\r\n    return worksheet;\r\n  }\r\n\r\n  makeHeader(worksheet) {\r\n    worksheet.getRow(this.totalIndex).font = {\r\n      name: 'Calibri',\r\n      size: 13,\r\n      bold: true\r\n    };\r\n    return worksheet;\r\n  }\r\n\r\n  viewBusinessTripFiles(files) {\r\n    return this.dialog\r\n      .open<UploadedDataViewerComponent>(UploadedDataViewerComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        data: files,\r\n        panelClass: 'gallery-modal',\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  createChangeBusinessTrip(entity: BusinessTrip = null) {\r\n    return this.dialog\r\n      .open<CreateBusinessTripComponent>(CreateBusinessTripComponent, {\r\n        width: '800px',\r\n        data: {type: entity ? 'edit' : 'add', entity},\r\n        disableClose: true,\r\n        panelClass: 'modal-overflow-visible',\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  takePhotoModal(entity = null, canVerify = false) {\r\n    return this.dialog\r\n      .open<TakePhotoModalComponent>(TakePhotoModalComponent, {\r\n        width: '800px',\r\n        data: {type: entity ? 'edit' : 'add', entity, canVerify},\r\n        disableClose: false,\r\n        panelClass: 'modal-overflow-visible',\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NavigationLink} from '../../../layout/navigation-route';\r\n\r\n@Component({\r\n  selector: 'pek-confirmation-layout',\r\n  templateUrl: './confirmation-layout.component.html',\r\n  styleUrls: ['./confirmation-layout.component.scss'],\r\n})\r\nexport class ConfirmationLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Nomenclature Confirmation', commands: ['nomenclature']},\r\n    {label: 'Payments Confirmation', commands: ['payments']},\r\n    {label: 'Write Off Confirmation', commands: ['write-off']},\r\n    {label: 'Production Lists Confirmation', commands: ['production-lists']},\r\n    {label: 'Suppliers Confirmation', commands: ['suppliers']},\r\n    {label: 'Reservations Confirmation', commands: ['reservations']},\r\n  ]\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<pek-header\n  [module]=\"'Confirmation'\"\n  [routes]=\"routes\"\n></pek-header>\n\n<router-outlet></router-outlet>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureApproval, NewNomenclature} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-nomenclature-confirmation',\n  templateUrl: './nomenclature-confirmation.component.html',\n  styleUrls: ['./nomenclature-confirmation.component.scss']\n})\nexport class NomenclatureConfirmationComponent implements OnInit, OnDestroy {\n  nomenclatures: NewNomenclature[] = [];\n  selectedNomenclatures: NewNomenclature[] = [];\n  isLoading: boolean = true;\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly modalService: ModalService\n  ) { }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getNewNomenclatures().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures;\n      this.isLoading = false;\n    })\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm= true;\n        const confirmNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(nomenclature => {\n          confirmNomenclatures.push({\n            id: nomenclature.id,\n            approved: ENomenclatureApproval.APPROVED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(confirmNomenclatures).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          confirmNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = [...this.nomenclatures.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedNomenclatures = [];\n        });\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(decline => {\n      if (decline) {\n        this.isPendingDecline = true;\n        const declineNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(product => {\n          declineNomenclatures.push({\n            id: product.id,\n            approved: ENomenclatureApproval.DECLINED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(declineNomenclatures).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          declineNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = [...this.nomenclatures.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedNomenclatures = [];\n          this.isPendingDecline = false;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Nomenclature Confirmation</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.65rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"nomenclatures.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedNomenclatures\"\r\n        [value]=\"nomenclatures\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-times\"\r\n              label=\"Decline\"\r\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\r\n              [loading]=\"isPendingDecline\"\r\n              (click)=\"onDecline()\"\r\n              [disabled]=\"selectedNomenclatures?.length === 0\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-check\"\r\n              label=\"Confirm\"\r\n              class=\"p-button-success p-button-icon\"\r\n              [loading]=\"isPendingConfirm\"\r\n              (click)=\"onConfirm()\"\r\n              [disabled]=\"selectedNomenclatures?.length === 0\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 45%\">Name</th>\r\n            <th style=\"width: 47%\">Root Items</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"nomenclature\"></p-tableCheckbox>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 45%\">{{nomenclature.name}}</td>\r\n            <td style=\"width: 47%\">\r\n              <ng-container *ngFor=\"let parent of nomenclature.parents; let idx = index\">\r\n                {{parent.name}}<span *ngIf=\"idx !== nomenclature.parents.length - 1\">, </span>\r\n              </ng-container>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && nomenclatures.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ServiceInvoicePaymentService} from '../../../payments/services/service-invoice-payment.service';\r\nimport {ServiceInvoicePayment} from '../../../payments/models/service-invoice-payment';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {finalize, forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  PaymentConfirmationLimitComponent\r\n} from '../../modals/payment-confirmation-limit/payment-confirmation-limit.component';\r\nimport {environment} from '@env/environment';\r\nimport {Payment} from '../../../payments/models/payment';\r\nimport {PaymentService} from '../../../payments/services/payment.service';\r\n\r\n@Component({\r\n  selector: 'pek-payment-confirmation',\r\n  templateUrl: './payment-confirmation.component.html',\r\n  styleUrls: ['./payment-confirmation.component.scss']\r\n})\r\nexport class PaymentConfirmationComponent implements OnInit, OnDestroy {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  paymentTotals = {\r\n    totalPricePayments: 0,\r\n    totalPriceServiceInvoicePayments: 0,\r\n    totalAmountPayments: 0,\r\n    totalAmountServiceInvoicePayments: 0\r\n  };\r\n\r\n  isPendingPaymentsDecline = false;\r\n  isPendingPaymentsConfirm = false;\r\n\r\n  isPendingServiceInvoicePaymentsDecline = false;\r\n  isPendingServiceInvoicePaymentsConfirm = false;\r\n\r\n  isLoadingPayments = true;\r\n  payments: Payment[] = [];\r\n  paymentTree: TreeNode<Payment | { name: string, id: number }>[] = [];\r\n  selectedPayments: TreeNode<Payment>[] = [];\r\n\r\n  isLoadingServiceInvoicePayments = true;\r\n  serviceInvoicePayments: ServiceInvoicePayment[] = [];\r\n  serviceInvoicePaymentsTree: TreeNode<ServiceInvoicePayment | { name: string, id: number }>[] = [];\r\n  selectedServiceInvoicePayments: TreeNode<ServiceInvoicePayment>[] = [];\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly paymentService: PaymentService,\r\n    private readonly serviceInvoicePaymentService: ServiceInvoicePaymentService,\r\n    private readonly modalService: ModalService,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getPayments();\r\n    this.getAllPayments();\r\n  }\r\n\r\n  getAllPayments() {\r\n    forkJoin({\r\n      payments: this.paymentService.getConfirmationPayments(),\r\n      serviceInvoicePayments: this.serviceInvoicePaymentService.getConfirmationPayments()\r\n    }).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(({payments, serviceInvoicePayments}) => {\r\n      this.payments = payments.filter(payment => !payment.invoice.order.purchase_category);\r\n      // @ts-ignore\r\n      this.serviceInvoicePayments.push(...payments.filter(payment => payment.invoice.order.purchase_category));\r\n      this.serviceInvoicePayments.push(...serviceInvoicePayments);\r\n\r\n      this.countPaymentsTotals();\r\n      this.createPaymentsTree();\r\n\r\n      this.countServiceInvoicePaymentsTotals();\r\n      this.createServiceInvoicePaymentsTree();\r\n\r\n      this.isLoadingPayments = false;\r\n      this.isLoadingServiceInvoicePayments = false;\r\n\r\n    });\r\n  }\r\n\r\n  createPaymentsTree() {\r\n    this.paymentTree = [];\r\n\r\n    const tree: TreeNode<Payment | { name: string, id: number }>[] = [];\r\n    const categories: { name: string, id: number }[] = [];\r\n\r\n    this.payments.forEach(payment => {\r\n      if (payment.invoice.order.accounting_type === 1) {\r\n        const isAdded = categories.findIndex(el => el.id === 1);\r\n        if (isAdded < 0) {\r\n          categories.push({name: 'Manufacturing Procurement', id: 1});\r\n        }\r\n      }\r\n      if (payment.invoice.order.accounting_type === 2) {\r\n        const isAdded = categories.findIndex(el => el.id === 2);\r\n        if (isAdded < 0) {\r\n          categories.push({name: 'Outsourcing', id: 2});\r\n        }\r\n      }\r\n    });\r\n\r\n    categories.forEach(category => {\r\n      tree.push({\r\n        data: category,\r\n        expanded: true,\r\n        parent: null,\r\n        children: []\r\n      });\r\n    });\r\n\r\n    tree.forEach(node => {\r\n      this.payments.forEach(payment => {\r\n        if (payment.invoice.order.accounting_type === node.data.id) {\r\n          node.children.push({\r\n            data: payment,\r\n            expanded: false,\r\n            children: []\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    this.paymentTree = [...tree];\r\n  }\r\n\r\n  createServiceInvoicePaymentsTree() {\r\n    this.serviceInvoicePaymentsTree = [];\r\n\r\n    const tree: TreeNode<ServiceInvoicePayment | { name: string, id: number }>[] = [];\r\n    const categories: { name: string, id: number }[] = [];\r\n    this.serviceInvoicePayments.forEach(payment => {\r\n      let purchaseCategory = null;\r\n\r\n      if (payment.serviceinvoice) {\r\n        purchaseCategory = payment.serviceinvoice.order.purchase_category;\r\n      }\r\n\r\n      // @ts-ignore\r\n      if (payment.invoice) {\r\n        // @ts-ignore\r\n        purchaseCategory = payment.invoice.order.purchase_category;\r\n      }\r\n\r\n      if (purchaseCategory) {\r\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\r\n        if (isAdded < 0) {\r\n          categories.push({name: purchaseCategory.name, id: purchaseCategory.id});\r\n        }\r\n      } else {\r\n        const isAdded = categories.findIndex(el => el.id === -2);\r\n        if (isAdded < 0) {\r\n          categories.push({name: 'Manufacturing Procurement And Outsourcing Auxiliary Invoices', id: -2});\r\n        }\r\n      }\r\n    });\r\n\r\n    categories.forEach(category => {\r\n      tree.push({\r\n        data: category,\r\n        expanded: true,\r\n        children: [],\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    tree.forEach(node => {\r\n      this.serviceInvoicePayments.forEach(product => {\r\n        if (product.serviceinvoice) {\r\n          const purchaseCategory = product.serviceinvoice.order.purchase_category;\r\n          if (purchaseCategory) {\r\n            if (purchaseCategory.id === node.data.id) {\r\n              node.children.push({\r\n                data: product,\r\n                expanded: false,\r\n                children: []\r\n              });\r\n            }\r\n          } else {\r\n            if (node.data.id === -2) {\r\n              node.children.push({\r\n                data: product,\r\n                expanded: false,\r\n                children: []\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        // @ts-ignore\r\n        if (product.invoice) {\r\n          // @ts-ignore\r\n          const purchaseCategory = product.invoice.order.purchase_category;\r\n\r\n          if (purchaseCategory) {\r\n            if (purchaseCategory.id === node.data.id) {\r\n              node.children.push({\r\n                data: product,\r\n                expanded: false,\r\n                children: []\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.serviceInvoicePaymentsTree = [...tree];\r\n  }\r\n\r\n  countPaymentsTotals() {\r\n    this.paymentTotals.totalPricePayments = 0;\r\n    this.paymentTotals.totalAmountPayments = 0;\r\n\r\n    this.payments.forEach(payment => {\r\n      this.paymentTotals.totalPricePayments += payment.invoice_total_price;\r\n      this.paymentTotals.totalAmountPayments += parseFloat(payment.payment_amount);\r\n    });\r\n  }\r\n\r\n  countServiceInvoicePaymentsTotals() {\r\n    this.paymentTotals.totalPriceServiceInvoicePayments = 0;\r\n    this.paymentTotals.totalAmountServiceInvoicePayments = 0;\r\n\r\n    this.serviceInvoicePayments.forEach(payment => {\r\n      // @ts-ignore\r\n      this.paymentTotals.totalPriceServiceInvoicePayments += payment.service_invoice_total_price ? payment.service_invoice_total_price : payment.invoice_total_price;\r\n      // @ts-ignore\r\n      this.paymentTotals.totalAmountServiceInvoicePayments += payment.service_invoice_payment_amount ? parseFloat(payment.service_invoice_payment_amount) : parseFloat(payment.payment_amount);\r\n    });\r\n  }\r\n\r\n  onConfirmPayments() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isPendingPaymentsConfirm = true;\r\n        const ids = this.selectedPayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\r\n        this.paymentService.severalConfirm(ids).pipe(\r\n          finalize(() => this.isPendingPaymentsConfirm = false)\r\n        ).subscribe(() => {\r\n          ids.forEach(id => this.payments = [...this.payments.filter(p => p.id !== id)]);\r\n          this.countPaymentsTotals();\r\n          this.createPaymentsTree();\r\n          this.selectedPayments = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeclinePayments() {\r\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isPendingPaymentsDecline = true;\r\n        const ids = this.selectedPayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\r\n        this.paymentService.severalDecline(ids).pipe(\r\n          finalize(() => this.isPendingPaymentsDecline = false)\r\n        ).subscribe(() => {\r\n          ids.forEach(id => this.payments = [...this.payments.filter(p => p.id !== id)]);\r\n          this.countPaymentsTotals();\r\n          this.createPaymentsTree();\r\n          this.selectedPayments = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onConfirmServiceInvoicePayments() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isPendingServiceInvoicePaymentsConfirm = true;\r\n\r\n\r\n        const serviceInvoicePaymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.serviceinvoice).map(payment => payment.data.id);\r\n        // @ts-ignore\r\n        const paymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\r\n\r\n        if (paymentIds.length > 0 && serviceInvoicePaymentIds.length > 0) {\r\n          forkJoin({\r\n            serviceInvoicePaymentIds: this.serviceInvoicePaymentService.severalConfirm(serviceInvoicePaymentIds),\r\n            paymentsIds: this.paymentService.severalConfirm(paymentIds)\r\n          }).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\r\n          ).subscribe(() => {\r\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        } else if (serviceInvoicePaymentIds.length > 0 && paymentIds.length === 0) {\r\n          this.serviceInvoicePaymentService.severalConfirm(serviceInvoicePaymentIds).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\r\n          ).subscribe(() => {\r\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        } else if (paymentIds.length > 0 && serviceInvoicePaymentIds.length === 0) {\r\n          this.paymentService.severalConfirm(paymentIds).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\r\n          ).subscribe(() => {\r\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeclineServiceInvoicePayments() {\r\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isPendingServiceInvoicePaymentsDecline = true;\r\n\r\n        const serviceInvoicePaymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.serviceinvoice).map(payment => payment.data.id);\r\n        // @ts-ignore\r\n        const paymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\r\n\r\n        if (serviceInvoicePaymentIds.length > 0 && paymentIds.length > 0) {\r\n          forkJoin({\r\n            serviceInvoicePaymentIds: this.serviceInvoicePaymentService.severalDecline(serviceInvoicePaymentIds),\r\n            paymentsIds: this.serviceInvoicePaymentService.severalDecline(paymentIds)\r\n          }).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\r\n          ).subscribe(() => {\r\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        } else if (serviceInvoicePaymentIds.length > 0 && paymentIds.length === 0) {\r\n          this.serviceInvoicePaymentService.severalDecline(serviceInvoicePaymentIds).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\r\n          ).subscribe(() => {\r\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        } else if (paymentIds.length > 0 && serviceInvoicePaymentIds.length === 0) {\r\n          this.paymentService.severalDecline(paymentIds).pipe(\r\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\r\n          ).subscribe(() => {\r\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\r\n            this.countServiceInvoicePaymentsTotals();\r\n            this.createServiceInvoicePaymentsTree();\r\n            this.selectedServiceInvoicePayments = [];\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditConfirmationLimit() {\r\n    return this.dialog\r\n      .open<PaymentConfirmationLimitComponent>(PaymentConfirmationLimitComponent, {\r\n        width: '30rem',\r\n        height: 'auto',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  // TODO пофиксить\r\n\r\n  onGoToPaymentInvoice(payment: Payment) {\r\n    window.open(`${this.link}accounting/invoices/products/` + payment.invoice.id);\r\n  }\r\n\r\n  onGoToPaymentServiceInvoice(payment: Payment) {\r\n    window.open(`${this.link}accounting/invoices/service-invoice/` + payment.invoice.id);\r\n  }\r\n\r\n  onGoToServicePaymentInvoice(servicePayment: ServiceInvoicePayment) {\r\n    window.open(`${this.link}accounting/invoices/service-invoice/` +  servicePayment.serviceinvoice.id);\r\n  }\r\n\r\n  onGoToPaymentOrder(payment: Payment) {\r\n    let link = '';\r\n\r\n    if (payment.invoice.order.accounting_type === 1) {\r\n      link = `${this.link}procurement/orders/products/` + payment.invoice.order.id;\r\n    } else if (payment.invoice.order.accounting_type === 2) {\r\n      link = `${this.link}outsource/outsource-chain/products/` + payment.invoice.order.id;\r\n    }\r\n\r\n    window.open(link);\r\n  }\r\n\r\n  onGoToServiceOrder(servicePayment: ServiceInvoicePayment) {\r\n    let link = '';\r\n\r\n    if (servicePayment.serviceinvoice.order.accounting_type === 1) {\r\n      link = `${this.link}procurement/orders/products/` + servicePayment.serviceinvoice.order.id;\r\n    } else if (servicePayment.serviceinvoice.order.accounting_type === 2) {\r\n      link = `${this.link}outsource/outsource-chain/products/` + servicePayment.serviceinvoice.order.id;\r\n    }\r\n\r\n    window.open(link);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Payments Confirmation</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-pencil\"\r\n        label=\"Payment Confirmation Limit\"\r\n        (click)=\"onEditConfirmationLimit()\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__tabs\">\r\n    <p-tabView class=\"custom-tabs\">\r\n      <p-tabPanel\r\n        [header]=\"'Production Lists Procurement and Outsourcing Payments (' + (isLoadingPayments ? '...' : payments.length) + ')'\"\r\n        [selected]=\"true\"\r\n      >\r\n        <div class=\"page__table\">\r\n          <p-treeTable\r\n            selectionMode=\"checkbox\"\r\n            [value]=\"paymentTree\"\r\n            [(selection)]=\"selectedPayments\"\r\n            scrollHeight=\"calc(100vh - 21.8rem)\"\r\n            [scrollable]=\"true\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"payment-price\">\r\n                  <ng-container *ngIf=\"!isLoadingPayments; else paymentsEmpty\">\r\n                    Total Price: {{paymentTotals.totalPricePayments | moneyFormat}} €,\r\n                    Total Amount: {{paymentTotals.totalAmountPayments | moneyFormat}} €\r\n                  </ng-container>\r\n                </div>\r\n                <button\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-times\"\r\n                  label=\"Decline\"\r\n                  class=\"ml-auto p-button-danger p-button-icon mr-2\"\r\n                  [disabled]=\"selectedPayments?.length === 0\"\r\n                  [loading]=\"isPendingPaymentsDecline\"\r\n                  (click)=\"onDeclinePayments()\"\r\n                ></button>\r\n                <button\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-check\"\r\n                  label=\"Confirm\"\r\n                  class=\"p-button-success p-button-icon\"\r\n                  [disabled]=\"selectedPayments?.length === 0\"\r\n                  [loading]=\"isPendingPaymentsConfirm\"\r\n                  (click)=\"onConfirmPayments()\"\r\n                ></button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 22%\">\r\n                  <div class=\"payment-header\">\r\n                    <div class=\"payment-header-checkbox\">\r\n                      <p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\r\n                    </div>\r\n                    Date\r\n                  </div>\r\n                </th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\r\n                <th style=\"width: 18%\">Supplier</th>\r\n                <th style=\"width: 20%\">Root list</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice Total Price</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-paymentNode let-payment=\"rowData\" let-i=\"rowIndex\">\r\n              <tr>\r\n                <td style=\"width: 22%\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"table-toggler\" *ngIf=\"!payment.invoice\">\r\n                      <p-treeTableToggler [rowNode]=\"paymentNode\"></p-treeTableToggler>\r\n                    </div>\r\n\r\n                    <div class=\"table-checkbox\" *ngIf=\"payment.invoice\">\r\n                      <p-treeTableCheckbox [value]=\"paymentNode\"></p-treeTableCheckbox>\r\n                    </div>\r\n\r\n                    <div class=\"table-content\">\r\n                      <ng-container *ngIf=\"!payment.invoice; else paymentDate\">\r\n                        {{payment.name}}\r\n                      </ng-container>\r\n                    </div>\r\n\r\n                    <ng-template #paymentDate>\r\n                      {{payment.invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                    </ng-template>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n<!--                    <a-->\r\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/products/' + payment.invoice.id]\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.self_serial_number}}-->\r\n<!--                    </a>-->\r\n\r\n                    <a\r\n                      (click)=\"onGoToPaymentInvoice(payment)\"\r\n                    >\r\n                      {{payment.invoice.self_serial_number}}\r\n                    </a>\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 18%\">\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.invoice.supplier.name}}\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 20%\">\r\n                  <ng-container>\r\n                    <div *ngIf=\"payment.invoice\">\r\n                      <ng-container *ngFor=\"let rootList of payment.invoice.root_production_plans; let idx = index\">\r\n                        {{rootList.list_product.nomenclature.name}}<span *ngIf=\"idx !== payment.invoice.root_production_plans.length - 1\">,</span>\r\n                      </ng-container>\r\n                    </div>\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.invoice_total_price | moneyFormat}} €\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.payment_amount| moneyFormat}} €\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 1\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.invoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.order.id}}-->\r\n<!--                    </a>-->\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 2\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' + payment.invoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.order.id}}-->\r\n<!--                    </a>-->\r\n\r\n                    <a\r\n                      (click)=\"onGoToPaymentOrder(payment)\"\r\n                    >\r\n                      {{payment.invoice.order.id}}\r\n                    </a>\r\n                  </ng-container>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                  <i *ngIf=\"isLoadingPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingPayments\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-treeTable>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel\r\n        [header]=\"'General Procurement Payments (' + (isLoadingServiceInvoicePayments ? '...' : serviceInvoicePayments.length) + ')'\"\r\n      >\r\n        <div class=\"page__table\">\r\n          <p-treeTable\r\n            selectionMode=\"checkbox\"\r\n            [value]=\"serviceInvoicePaymentsTree\"\r\n            [(selection)]=\"selectedServiceInvoicePayments\"\r\n            scrollHeight=\"calc(100vh - 21.8rem)\"\r\n            [scrollable]=\"true\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"payment-price\">\r\n                  <ng-container *ngIf=\"!isLoadingServiceInvoicePayments; else paymentsEmpty\">\r\n                    Total Price: {{paymentTotals.totalPriceServiceInvoicePayments | moneyFormat}} €,\r\n                    Total Amount: {{paymentTotals.totalAmountServiceInvoicePayments | moneyFormat}} €\r\n                  </ng-container>\r\n                </div>\r\n                <button\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-times\"\r\n                  label=\"Decline\"\r\n                  class=\"ml-auto p-button-danger p-button-icon mr-2\"\r\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\r\n                  [loading]=\"isPendingServiceInvoicePaymentsDecline\"\r\n                  (click)=\"onDeclineServiceInvoicePayments()\"\r\n                ></button>\r\n                <button\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-check\"\r\n                  label=\"Confirm\"\r\n                  class=\"p-button-success p-button-icon\"\r\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\r\n                  [loading]=\"isPendingServiceInvoicePaymentsConfirm\"\r\n                  (click)=\"onConfirmServiceInvoicePayments()\"\r\n                ></button>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 22%\">\r\n                  <div class=\"payment-header\">\r\n                    <div class=\"payment-header-checkbox\">\r\n                      <p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\r\n                    </div>\r\n                    Date\r\n                  </div>\r\n                </th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\r\n                <th style=\"width: 18%\">Supplier</th>\r\n                <th style=\"width: 20%\">Root list</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice Total Price</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-paymentNode let-payment=\"rowData\" let-i=\"rowIndex\">\r\n              <tr>\r\n                <td style=\"width: 22%\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"table-toggler\" *ngIf=\"!payment.serviceinvoice && !payment.invoice\">\r\n                      <p-treeTableToggler [rowNode]=\"paymentNode\"></p-treeTableToggler>\r\n                    </div>\r\n\r\n                    <div class=\"table-checkbox\" *ngIf=\"payment.serviceinvoice || payment.invoice\">\r\n                      <p-treeTableCheckbox [value]=\"paymentNode\"></p-treeTableCheckbox>\r\n                    </div>\r\n\r\n                    <div class=\"table-content\">\r\n                      <ng-container *ngIf=\"!payment.serviceinvoice || !payment.invoice\">\r\n                        {{payment.name}}\r\n                      </ng-container>\r\n\r\n                      <ng-container *ngIf=\"payment.invoice\">\r\n                        {{payment.invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                      </ng-container>\r\n\r\n                      <ng-container *ngIf=\"payment.serviceinvoice\">\r\n                        {{payment.serviceinvoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice || payment.invoice\">\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.serviceinvoice\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/service-invoice/' + payment.serviceinvoice.id]\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.serviceinvoice.self_serial_number}}-->\r\n<!--                    </a>-->\r\n\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.invoice\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/service-invoice/' + payment.invoice.id]\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.self_serial_number}}-->\r\n<!--                    </a>-->\r\n\r\n                    <a\r\n                      *ngIf=\"payment.serviceinvoice\"\r\n                      (click)=\"onGoToServicePaymentInvoice(payment)\"\r\n                    >\r\n                      {{payment.serviceinvoice.self_serial_number}}\r\n                    </a>\r\n\r\n                    <a\r\n                      *ngIf=\"payment.invoice\"\r\n                      (click)=\"onGoToPaymentServiceInvoice(payment)\"\r\n                    >\r\n                      {{payment.invoice.self_serial_number}}\r\n                    </a>\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 18%\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\r\n                    {{payment.serviceinvoice.supplier.name}}\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.invoice.supplier.name}}\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 20%\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\r\n                    <div *ngFor=\"let rootList of payment.serviceinvoice.root_production_plans; let idx = index\">\r\n                      {{rootList.list_product.nomenclature.name}}\r\n                      <span *ngIf=\"idx !== payment.serviceinvoice.root_production_plans.length - 1\">,</span>\r\n                    </div>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    <ng-container *ngFor=\"let rootList of payment.invoice.root_production_plans; let idx = index\">\r\n                      {{rootList.list_product.nomenclature.name}}<span *ngIf=\"idx !== payment.invoice.root_production_plans.length - 1\">,</span>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\r\n                    {{payment.service_invoice_total_price | moneyFormat}} €\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.invoice_total_price | moneyFormat}} €\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\r\n                    {{payment.service_invoice_payment_amount | moneyFormat}} €\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n                    {{payment.payment_amount | moneyFormat}} €\r\n                  </ng-container>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.serviceinvoice.order.accounting_type == 1\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.serviceinvoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.serviceinvoice.order.id}}-->\r\n<!--                    </a>-->\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.serviceinvoice.order.accounting_type == 2\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' + payment.serviceinvoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.serviceinvoice.order.id}}-->\r\n<!--                    </a>-->\r\n\r\n                    <a\r\n                      (click)=\"onGoToServiceOrder(payment)\"\r\n                    >\r\n                      {{payment.serviceinvoice.order.id}}\r\n                    </a>\r\n                  </ng-container>\r\n\r\n                  <ng-container *ngIf=\"payment.invoice\">\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 1\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.invoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.order.id}}-->\r\n<!--                    </a>-->\r\n<!--                    <a-->\r\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 2\"-->\r\n<!--                      rel=\"noopener noreferrer\"-->\r\n<!--                      target=\"_blank\"-->\r\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' +  payment.invoice.order.id]\"-->\r\n<!--                    >-->\r\n<!--                      {{payment.invoice.order.id}}-->\r\n<!--                    </a>-->\r\n\r\n                    <a\r\n                      (click)=\"onGoToPaymentOrder(payment)\"\r\n                    >\r\n                      {{payment.invoice.order.id}}\r\n                    </a>\r\n                  </ng-container>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                  <i\r\n                    *ngIf=\"isLoadingServiceInvoicePayments\"\r\n                    class=\"pi pi-spin pi-spinner\"\r\n                    style=\"font-size: 2.25rem\"\r\n                  >\r\n                  </i>\r\n                  <span *ngIf=\"!isLoadingServiceInvoicePayments\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-treeTable>\r\n        </div>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #paymentsEmpty>\r\n  <ng-container>\r\n    Total Price: ... €, Total Amount: ... €\r\n  </ng-container>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {List} from '../../../warehouse/models/list';\nimport {ListService} from '../../../warehouse/services/list.service';\nimport {concat, finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-production-list-confirmation',\n  templateUrl: './production-list-confirmation.component.html',\n  styleUrls: ['./production-list-confirmation.component.scss']\n})\nexport class ProductionListConfirmationComponent implements OnInit, OnDestroy  {\n  isLoading = true;\n  productionLists: List[] = [];\n  selectedProductionLists: List[] = [];\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly modalService: ModalService,\n    private readonly listService: ListService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProductionLists();\n  }\n\n  getProductionLists() {\n    this.listService.getProductionLists().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(productionLists => {\n      this.productionLists = productionLists;\n      this.isLoading = false;\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const confirmProductionLists = [];\n\n        this.selectedProductionLists.forEach(productionList => {\n          confirmProductionLists.push({\n            id: productionList.id,\n            is_confirmed: true,\n          });\n        });\n\n        confirmProductionLists.sort((a, b) => a.id - b.id);\n\n        this.listService.updateListSeveral(confirmProductionLists).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          confirmProductionLists.forEach(productionList => {\n            this.productionLists = [...this.productionLists.filter(p => p.id !== productionList.id)];\n          });\n\n          this.selectedProductionLists = [];\n        });\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const declineProductionLists = [];\n\n        this.selectedProductionLists.forEach(productionList => {\n          declineProductionLists.push({\n            id: productionList.id,\n            is_confirmed: false,\n          });\n        });\n\n        declineProductionLists.sort((a, b) => a.id - b.id);\n\n       this.listService.updateListSeveral(declineProductionLists).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(response => {\n          declineProductionLists.forEach(productionList => {\n            if (response) {\n              this.productionLists = [...this.productionLists.filter(p => p.id !== productionList.id)];\n            }\n          });\n\n          this.selectedProductionLists = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Production Lists Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"productionLists.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedProductionLists\"\n        [value]=\"productionLists\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"selectedProductionLists.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"selectedProductionLists.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Code</th>\n            <th style=\"width: 27%\">Name</th>\n            <th style=\"width: 15%\" class=\"text-center\">Quantity</th>\n            <th style=\"width: 20%\" class=\"text-center\">Is Grouped</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-list let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"list\"></p-tableCheckbox>\n            </td>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{list.nomenclature.code}}</td>\n            <td style=\"width: 27%\">{{list.nomenclature.name}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{list.quantity}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">\n              <div class=\"icons\">\n                <i *ngIf=\"list.is_grouped; else notGrouped\" class=\"pi pi-check-circle success\"></i>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && productionLists.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<ng-template #notGrouped>\n  <i class=\"pi pi-times-circle danger\"></i>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ENomenclatureBulk} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-reservation-confirmation',\n  templateUrl: './reservation-confirmation.component.html',\n  styleUrls: ['./reservation-confirmation.component.scss']\n})\nexport class ReservationConfirmationComponent implements OnInit, OnDestroy {\n  nomenclatureBulk = ENomenclatureBulk;\n\n  isLoading = true;\n  selectedProducts: WarehouseProduct[] = [];\n  products: WarehouseProduct[] = [];\n\n  isPendingDecline = false;\n  isPendingConfirm = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseProductsService: WarehouseProductService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.warehouseProductsService.getReservations().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(products => {\n      this.products = products;\n      this.isLoading = false;\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const ids: number[] = this.selectedProducts.map(p => p.id);\n        const send: { is_confirmed: boolean } = {\n          is_confirmed: false,\n        };\n\n        this.warehouseProductsService.severalUpdateReservations(ids, send).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.products = [...this.products.filter(product => product.id !== id)]);\n          this.selectedProducts = [];\n        });\n      }\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const ids: number[] = this.selectedProducts.map(p => p.id);\n        const send: { is_confirmed: boolean } = {\n          is_confirmed: true,\n        };\n\n        this.warehouseProductsService.severalUpdateReservations(ids, send).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.products = [...this.products.filter(product => product.id !== id)]);\n          this.selectedProducts = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Reservations Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"products.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedProducts\"\n        [value]=\"products\"\n        dataKey=\"id\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"selectedProducts?.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"selectedProducts?.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 15%\">Code</th>\n            <th style=\"width: 15%\">Name</th>\n            <th style=\"width: 10%\" class=\"text-center\">Serial Number</th>\n            <th style=\"width: 15%\" class=\"text-center\">Created</th>\n            <th style=\"width: 10%\" class=\"text-center\">List Id</th>\n            <th style=\"width: 15%\" class=\"text-center\">Required Quantity</th>\n            <th style=\"width: 12%\" class=\"text-center\">Reserved Quantity</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\n            </td>\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 15%\">{{product.listproduct.nomenclature.code}}</td>\n            <td style=\"width: 15%\">\n              <b *ngIf=\"product.listproduct.nomenclature.bulk_or_serial === nomenclatureBulk.SERIAL\">(S)</b>\n              {{product.listproduct.nomenclature.name}}\n            </td>\n            <td style=\"width: 10%\" class=\"text-center\">{{product.serialnumber}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{product.created | date: 'dd/MM/y'}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{product?.list?.id}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{product.listproduct.required_quantity}}</td>\n            <td style=\"width: 12%\" class=\"text-center\">{{product.reserved_quantity}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"9\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && products.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {EOrderSupplierConfirmStatus, OrderSupplier, OrderSupplierConfirmation} from '../../models/order-supplier';\nimport {OrderSupplierService} from '../../services/order-supplier.service';\nimport {ListProduct} from '../../../warehouse/models/list-product';\nimport {ModalService} from '@shared/services/modal.service';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-supplier-confirmation',\n  templateUrl: './supplier-confirmation.component.html',\n  styleUrls: ['./supplier-confirmation.component.scss']\n})\nexport class SupplierConfirmationComponent implements OnInit {\n  orderSupplierConfirmStatus = EOrderSupplierConfirmStatus;\n\n  selectedOrder: OrderSupplierConfirmation;\n\n  selectedOrderSupplierConfirmation: OrderSupplierConfirmation;\n  selectedOrderSupplier: OrderSupplier;\n\n  orderSupplierConfirmations: OrderSupplierConfirmation[] = [];\n  orderSuppliers: OrderSupplier[] = [];\n\n  isLoading = true;\n  isLoadingOrderSuppliers = false;\n\n  isPendingConfirm = false;\n  isPendingDecline = false;\n  isPendingDeclineAll = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly orderSupplierService: OrderSupplierService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getConfirmations();\n  }\n\n  getConfirmations() {\n    this.orderSupplierService.getConfirmations().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(confirmations => {\n      this.orderSupplierConfirmations = confirmations;\n      this.isLoading = false;\n    });\n  }\n\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\n    const lists: { list: ListProduct, count?: number }[] = [];\n\n    rootLists.forEach((res: ListProduct) => {\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\n\n      if (found) {\n        found.count++;\n      } else {\n        lists.push({list: res, count: 1});\n      }\n    });\n\n    return lists;\n  }\n\n  getConfirmStatus(status: EOrderSupplierConfirmStatus) {\n    switch (status) {\n      case EOrderSupplierConfirmStatus.UNTACHED:\n        return 'Untached';\n      case EOrderSupplierConfirmStatus.DECLINED:\n        return 'Declined';\n      case EOrderSupplierConfirmStatus.CONFIRMED:\n        return 'Confirmed';\n    }\n  }\n\n  getOrderSuppliers() {\n    this.orderSuppliers = [];\n    this.isLoadingOrderSuppliers = true;\n    this.orderSupplierService.getOrderSuppliers(this.selectedOrder.id).pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(orderSuppliers => {\n      this.orderSuppliers = orderSuppliers;\n      this.isLoadingOrderSuppliers = false;\n    });\n  }\n\n  onSelectOrder() {\n    if (this.selectedOrderSupplierConfirmation) {\n      this.selectedOrder = this.selectedOrderSupplierConfirmation;\n      this.getOrderSuppliers();\n    } else {\n      this.orderSuppliers = [];\n      this.selectedOrder = null;\n    }\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        this.orderSupplierService.confirmOrderSupplier(this.selectedOrderSupplier.id)\n          .pipe(\n            finalize(() => this.isPendingConfirm = false)\n          ).subscribe(() => this.clear());\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        this.orderSupplierService.declineOrderSupplier(this.selectedOrderSupplier.id)\n          .pipe(\n            finalize(() => this.isPendingDecline = false)\n          ).subscribe(() => {\n          const index = this.orderSuppliers.findIndex(c => c.id === this.selectedOrderSupplier.id);\n          this.orderSuppliers[index].confirm_status = EOrderSupplierConfirmStatus.DECLINED;\n          this.selectedOrderSupplier = null;\n\n          if (this.orderSuppliers.every(item => item.confirm_status === EOrderSupplierConfirmStatus.DECLINED)) {\n            this.declineAll();\n          }\n        });\n      }\n    });\n  }\n\n  onDeclineAll() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.declineAll();\n      }\n    });\n  }\n\n  declineAll() {\n    this.isPendingDeclineAll = true;\n    this.orderSupplierService.declineAll(this.selectedOrderSupplierConfirmation.id)\n      .pipe(\n        finalize(() => this.isPendingDeclineAll = false)\n      ).subscribe(() => this.clear());\n  }\n\n  clear() {\n    this.orderSupplierConfirmations = [...this.orderSupplierConfirmations.filter(o => o.id !== this.selectedOrderSupplierConfirmation.id)];\n    this.orderSuppliers = [];\n    this.selectedOrder = null;\n    this.selectedOrderSupplier = null;\n    this.selectedOrderSupplierConfirmation = null;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Suppliers Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <h2 class=\"page__caption\">Suppliers Confirmation Orders</h2>\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 21.75rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orderSupplierConfirmations.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedOrderSupplierConfirmation\"\n        [value]=\"orderSupplierConfirmations\"\n        (selectionChange)=\"onSelectOrder()\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 60%\">Order</th>\n            <th style=\"width: 35%\">Root Lists</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-confirmation let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"confirmation \">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 60%\">\n              <a\n                target=\"_blank\"\n                [routerLink]=\"'/dash/outsource/outsource-chain/products/' + confirmation.order.id\"\n              >\n                {{confirmation.order.id}}\n              </a>\n            </td>\n            <td>\n              <div\n                *ngFor=\"let item of getRootLists(confirmation.order.root_production_list_products); let idx = index\">\n                {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && orderSupplierConfirmations.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n\n  <div class=\"page__card page__card_bottom\">\n\n    <div class=\"page__table\">\n      <p-table\n        #st\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 20.875rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orderSuppliers.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedOrderSupplier\"\n        [value]=\"orderSuppliers\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <h2 class=\"page__caption mb-0\">Suppliers Confirmation Items For Order {{selectedOrder ? selectedOrder.order.id : '...'}}</h2>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline All\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDeclineAll()\"\n              [loading]=\"isPendingDeclineAll\"\n              [disabled]=\"!selectedOrderSupplierConfirmation\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"!selectedOrderSupplier || !selectedOrderSupplierConfirmation || selectedOrderSupplier?.confirm_status === orderSupplierConfirmStatus.DECLINED\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"!selectedOrderSupplier || !selectedOrderSupplierConfirmation\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\n            <th style=\"width: 30%\">Supplier</th>\n            <th style=\"width: 10%\" class=\"text-center\">Price</th>\n            <th style=\"width: 15%\" class=\"text-center\">Delivery Date</th>\n            <th style=\"width: 30%\">Comment</th>\n            <th style=\"width: 10%\" class=\"text-center\">Confirm Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-orderSupplier let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"orderSupplier\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{orderSupplier.supplier}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{orderSupplier.price | moneyFormat}} €</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{orderSupplier.delivery_date | date: 'dd/MM/yyyy'}}</td>\n            <td style=\"width: 30%\" class=\"text-center\">{{orderSupplier.comment}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{getConfirmStatus(orderSupplier.confirm_status)}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoadingOrderSuppliers\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoadingOrderSuppliers\">Select An Order</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"st.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!st.paginator && !isLoadingOrderSuppliers && orderSuppliers.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"st.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureApproval, Nomenclature} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-write-off-confirmation',\n  templateUrl: './write-off-confirmation.component.html',\n  styleUrls: ['./write-off-confirmation.component.scss']\n})\nexport class WriteOffConfirmationComponent implements OnInit, OnDestroy {\n  warehouseProducts: WarehouseProduct[] = [];\n  selectedWarehouseProducts: WarehouseProduct[] = [];\n  isLoading = true;\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseProductService: WarehouseProductService,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.warehouseProductService.get([{name: 'to_write_off', value: true}]).pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(warehouseProducts => {\n      this.warehouseProducts = warehouseProducts;\n      this.isLoading = false;\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const declineNomenclatures: Partial<Nomenclature>[] = [];\n\n        this.selectedWarehouseProducts.forEach(product => {\n          declineNomenclatures.push({\n            id: product.id,\n            approved: ENomenclatureApproval.DECLINED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(declineNomenclatures).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          declineNomenclatures.forEach(nomenclature => {\n            this.warehouseProducts = [...this.warehouseProducts.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedWarehouseProducts = [];\n        });\n      }\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const ids: number[] = [];\n\n        this.selectedWarehouseProducts.forEach(product => ids.push(product.id));\n\n        this.warehouseProductService.severalWriteOff(ids).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.warehouseProducts = [...this.warehouseProducts.filter(product => product.id !== id)]);\n          this.selectedWarehouseProducts = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Write Off Confirmation</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.65rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"warehouseProducts.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedWarehouseProducts\"\r\n        [value]=\"warehouseProducts\"\r\n        dataKey=\"id\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-times\"\r\n              label=\"Decline\"\r\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\r\n              (click)=\"onDecline()\"\r\n              [loading]=\"isPendingDecline\"\r\n              [disabled]=\"selectedWarehouseProducts?.length === 0\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-check\"\r\n              label=\"Confirm\"\r\n              class=\"p-button-success p-button-icon\"\r\n              (click)=\"onConfirm()\"\r\n              [loading]=\"isPendingConfirm\"\r\n              [disabled]=\"selectedWarehouseProducts?.length === 0\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 30%\">Code</th>\r\n            <th style=\"width: 27%\">Name</th>\r\n            <th style=\"width: 15%\"  class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 20%\"  class=\"text-center\">Write Off Quantity</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 30%\">{{product.nomenclature.code}}</td>\r\n            <td style=\"width: 27%\">{{product.nomenclature.name}}</td>\r\n            <td style=\"width: 15%\" class=\"text-center\">{{product.total_area_locator_quantity}}</td>\r\n            <td style=\"width: 20%\" class=\"text-center\">{{product.quantity_to_write_off}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && warehouseProducts.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ConfirmationRouting } from './confirmation.routing';\r\nimport { NomenclatureConfirmationComponent } from './components/nomenclature-confirmation/nomenclature-confirmation.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport { PaymentConfirmationComponent } from './components/payment-confirmation/payment-confirmation.component';\r\nimport { ConfirmationLayoutComponent } from './components/confirmation-layout/confirmation-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport { WriteOffConfirmationComponent } from './components/write-off-confirmation/write-off-confirmation.component';\r\nimport { ProductionListConfirmationComponent } from './components/production-list-confirmation/production-list-confirmation.component';\r\nimport { SupplierConfirmationComponent } from './components/supplier-confirmation/supplier-confirmation.component';\r\nimport { ReservationConfirmationComponent } from './components/reservation-confirmation/reservation-confirmation.component';\r\nimport { PaymentConfirmationLimitComponent } from './modals/payment-confirmation-limit/payment-confirmation-limit.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NomenclatureConfirmationComponent,\r\n        PaymentConfirmationComponent,\r\n        ConfirmationLayoutComponent,\r\n        WriteOffConfirmationComponent,\r\n        ProductionListConfirmationComponent,\r\n        SupplierConfirmationComponent,\r\n        ReservationConfirmationComponent,\r\n        PaymentConfirmationLimitComponent,\r\n    ],\r\n    exports: [\r\n        SupplierConfirmationComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ConfirmationRouting,\r\n        SharedModule,\r\n        LayoutModule,\r\n    ]\r\n})\r\nexport class ConfirmationModule { }\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  NomenclatureConfirmationComponent\n} from './components/nomenclature-confirmation/nomenclature-confirmation.component';\nimport {PaymentConfirmationComponent} from './components/payment-confirmation/payment-confirmation.component';\nimport {ConfirmationLayoutComponent} from './components/confirmation-layout/confirmation-layout.component';\nimport {WriteOffConfirmationComponent} from './components/write-off-confirmation/write-off-confirmation.component';\nimport {\n  ProductionListConfirmationComponent\n} from './components/production-list-confirmation/production-list-confirmation.component';\nimport {SupplierConfirmationComponent} from './components/supplier-confirmation/supplier-confirmation.component';\nimport {\n  ReservationConfirmationComponent\n} from './components/reservation-confirmation/reservation-confirmation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmationLayoutComponent, children: [\n      {path: '', redirectTo: 'nomenclature', pathMatch: 'full'},\n      {path: 'nomenclature', title: 'Nomenclature Confirmation', component: NomenclatureConfirmationComponent},\n      {path: 'payments', title: 'Payments Confirmation', component: PaymentConfirmationComponent},\n      {path: 'write-off', title: 'Write Off Confirmation', component: WriteOffConfirmationComponent},\n      {path: 'production-lists', title: 'Production Lists Confirmation', component: ProductionListConfirmationComponent},\n      {path: 'suppliers', title: 'Suppliers Confirmation', component: SupplierConfirmationComponent},\n      {path: 'reservations', title: 'Reservations Confirmation', component: ReservationConfirmationComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfirmationRouting { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {finalize, Subject, takeUntil} from 'rxjs';\r\nimport {PaymentService} from '../../../payments/services/payment.service';\r\n\r\n@Component({\r\n  selector: 'pek-payment-confirmation-limit',\r\n  templateUrl: './payment-confirmation-limit.component.html',\r\n  styleUrls: ['./payment-confirmation-limit.component.scss']\r\n})\r\nexport class PaymentConfirmationLimitComponent implements OnInit, OnDestroy {\r\n  isSaving = false;\r\n  isLoading = true;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    id: [null],\r\n    value: [0, [Validators.required, Validators.min(0)]],\r\n  });\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<PaymentConfirmationLimitComponent>,\r\n    private readonly fb: FormBuilder,\r\n    private readonly paymentService: PaymentService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLimit();\r\n  }\r\n\r\n  getLimit() {\r\n    this.paymentService.getLimit().pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      const data = {\r\n        id: response[0].id,\r\n        value: +response[0].value,\r\n      };\r\n\r\n      this.form.patchValue(data);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n    this.paymentService.setLimit(this.form.value).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Payment Confirmation Limit\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"limit\">Limit*</label>\n      <input\n        *ngIf=\"!isLoading; else spinner\"\n        type=\"number\"\n        step=\"0.001\"\n        id=\"limit\"\n        pInputText\n        formControlName=\"value\"\n      >\n    </div>\n  </form>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Save'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {ListProduct} from '../../warehouse/models/list-product';\r\n\r\nexport class OrderSupplier {\r\n  confirm_status: EOrderSupplierConfirmStatus;\r\n  delivery_date: string | Date;\r\n  id: number;\r\n  list: number;\r\n  price: string | number;\r\n  supplier: string;\r\n  comment: string;\r\n}\r\n\r\nexport class OrderSupplierConfirmation {\r\n  id: number;\r\n  sent_to_confirmation: boolean;\r\n  order: {\r\n    id: number;\r\n    root_production_list_products: ListProduct[]\r\n  };\r\n}\r\n\r\nexport enum EOrderSupplierConfirmStatus {\r\n  UNTACHED = 0,\r\n  DECLINED = 1,\r\n  CONFIRMED = 2\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrderSupplier, OrderSupplierConfirmation} from '../models/order-supplier';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  AddSupplierToOrderComponent\n} from '../../outsourcing/modals/add-supplier-to-order/add-supplier-to-order.component';\nimport {EditOrderSupplierComponent} from '../../outsourcing/modals/edit-order-supplier/edit-order-supplier.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderSupplierService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'order_supplier_confirmation/';\n  readonly orderSupplierUrl = 'order_supplier_confirmation_list_item/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  getConfirmations(): Observable<OrderSupplierConfirmation[]> {\n    return this.httpClient.get<{ data: OrderSupplierConfirmation[] }>(this.API_URL + `${this.url}?sent_to_confirmation=true`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getOrderSuppliers(orderId: number): Observable<OrderSupplier[]> {\n    return this.httpClient.get<{ data: OrderSupplier[] }>(this.API_URL + `${this.orderSupplierUrl}?list_id=${orderId}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  declineOrderSupplier(orderId: number): Observable<OrderSupplier> {\n    return this.httpClient.post<{ data: OrderSupplier }>(this.API_URL + `${this.orderSupplierUrl}${orderId}/decline_supplier/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  confirmOrderSupplier(orderId: number): Observable<OrderSupplier> {\n    return this.httpClient.post<{ data: OrderSupplier }>(this.API_URL + `${this.orderSupplierUrl}${orderId}/confirm_supplier/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  declineAll(id: number): Observable<any> {\n    return this.httpClient.post<{ data: OrderSupplierConfirmation[] }>(this.API_URL + `${this.url}${id}/decline_all_suppliers/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getOrderSupplierListForOrder(id: number): Observable<OrderSupplier[]> {\n    return this.httpClient.get<{ data: OrderSupplier[] }>(this.API_URL + `order_supplier_confirmation_list_item/?order_id=${id}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getOrderSupplierListForList(id: number): Observable<OrderSupplier[]> {\n    return this.httpClient.get<{ data: OrderSupplier[] }>(this.API_URL + `order_supplier_confirmation_list_item/?list_id=${id}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  addSupplierToOrder(data: any): Observable<OrderSupplier> {\n    return this.httpClient.post<{ data: OrderSupplier }>(this.API_URL + `order_supplier_confirmation_list_item/`, data).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updateSupplier(data: Partial<OrderSupplier>) {\n    return this.httpClient.patch<{ data: OrderSupplier }>(this.API_URL + `order_supplier_confirmation_list_item/${data.id}/`, data).pipe(\n      map(response => response.data)\n    );\n  }\n\n  orderSupplierConfirm(id: number): Observable<any> {\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + `${id}/send_to_confirmation/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  deleteSupplier(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + `order_supplier_confirmation_list_item/${id}/`);\n  }\n\n  openAddSupplierToOrderModal(id: number): Observable<OrderSupplier> {\n    return this.dialog\n      .open<AddSupplierToOrderComponent>(AddSupplierToOrderComponent, {\n        width: '40rem',\n        data: {id},\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  getOrderSupplierConfirmation(id: number): Observable<OrderSupplierConfirmation[]> {\n    return this.httpClient.get<{ data: OrderSupplierConfirmation[] }>(this.API_URL + this.url + `?order=${id}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  openEditSupplierModal(orderSupplier: OrderSupplier): Observable<OrderSupplier> {\n    return this.dialog\n      .open<EditOrderSupplierComponent>(EditOrderSupplierComponent, {\n        width: '40rem',\n        data: {orderSupplier},\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {EventsListService} from '../../services/events-list.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {finalize} from 'rxjs';\nimport {EventItem} from '../../models/event-item';\n\n@Component({\n  selector: 'pek-add-company-to-event',\n  templateUrl: './add-company-to-event.component.html',\n  styleUrls: ['./add-company-to-event.component.scss']\n})\nexport class AddCompanyToEventComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    company_id: [null, Validators.required],\n    comment: [null],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<AddCompanyToEventComponent>,\n    @Inject(MAT_DIALOG_DATA) private eventId: number,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    this.eventListService.addCompany(this.eventId, [this.form.value as Partial<EventItem>]).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(event => {\n      this.dialogRef.close(event);\n    });\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('company_id').patchValue(id as any);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Company to Event\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Company*</label>\n      <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\">Comment</label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventsListService} from '../../services/events-list.service';\nimport {EventItem} from '../../models/event-item';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-add-contact-person-to-event',\n  templateUrl: './add-contact-person-to-event.component.html',\n  styleUrls: ['./add-contact-person-to-event.component.scss']\n})\nexport class AddContactPersonToEventComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    contact_person_id: [null, [Validators.required]],\n    comment: [null],\n    company: [null],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<AddContactPersonToEventComponent>,\n    @Inject(MAT_DIALOG_DATA) private eventId: number,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    this.eventListService.addContact(this.eventId, [this.form.value as Partial<EventItem>]).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(event => {\n      this.dialogRef.close(event);\n    });\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('company').patchValue(id as any);\n  }\n\n  onSelectContactPerson(id: number) {\n    this.form.get('contact_person_id').patchValue(id as any);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Concat Person to Event\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Contact Person*</label>\n      <pek-crm-contact-person-picker (selectContactPerson)=\"onSelectContactPerson($event)\"></pek-crm-contact-person-picker>\n    </div>\n    <div class=\"form-group\">\n      <label>Company</label>\n      <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\">Comment</label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {AddEventModalType, Company} from '../../models/company';\r\nimport {EventsListService} from '../../services/events-list.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {finalize} from 'rxjs';\r\nimport {CRMEmployee} from '../../models/crm-employee';\r\n\r\n@Component({\r\n  selector: 'pek-add-event-to-company',\r\n  templateUrl: './add-event-to-company.component.html',\r\n  styleUrls: ['./add-event-to-company.component.scss']\r\n})\r\nexport class AddEventToCompanyComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    event_type: [null, [Validators.required]],\r\n    start: [null, [Validators.required]],\r\n    end: [null, [Validators.required]],\r\n    company_ids: [[this.data.company.id]],\r\n    description: [''],\r\n    employee_ids: [[]],\r\n    contact_ids: [[]],\r\n    is_locked_by_company: [true],\r\n  });\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddEventToCompanyComponent>,\r\n    private readonly fb: FormBuilder,\r\n    private readonly eventListService: EventsListService,\r\n    private readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: AddEventModalType, company: Company },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.data.type === 'withEmployee') {\r\n    //   this.form.addControl('employee_ids', new FormControl([], Validators.required));\r\n    // }\r\n  }\r\n\r\n  onSave() {\r\n    if (this.form.valid) {\r\n      this.isSaving = true;\r\n      const send = this.form.value;\r\n      send.start = this.adapterService.dateTimeAdapter(this.form.value.start);\r\n      send.end = this.adapterService.dateTimeAdapter(this.form.value.end);\r\n      this.eventListService.create(send).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(event => this.dialogRef.close(event));\r\n    }\r\n  }\r\n\r\n  onSelectEventType(id: number) {\r\n    this.form.get('event_type').patchValue(id);\r\n  }\r\n\r\n  onSelectContactPersons(contactPersonsIds: number[]) {\r\n    if (contactPersonsIds) {\r\n      this.form.get('contact_ids').patchValue(contactPersonsIds);\r\n    } else {\r\n      this.form.get('contact_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onSelectEmployees(ids: number[]) {\r\n    if (ids) {\r\n      this.form.get('employee_ids').patchValue(ids);\r\n    } else {\r\n      this.form.get('employee_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onOpenDatesEmployees() {\r\n    this.eventListService.openEditEmployeeEventDatesModal(this.form.get('employee_ids').value, this.form.value).subscribe(data => {\r\n      if (data) {\r\n        this.form.patchValue(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSetStartDate(date: Date) {\r\n    this.form.get('start').patchValue(date);\r\n  }\r\n\r\n  onSetEndDate(date: Date) {\r\n    this.form.get('end').patchValue(date);\r\n  }\r\n\r\n  onClearStartDate() {\r\n    this.form.get('start').patchValue(null);\r\n  }\r\n\r\n  onClearEndDate() {\r\n    this.form.get('end').patchValue(null);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Add Event to Company {{data.type === 'withEmployee' ? 'with' : 'without'}} Employee\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Event Type*</label>\r\n      <pek-crm-event-type-picker\r\n        [filters]=\"[\r\n          {name: 'is_inner', value: true},\r\n          {name: 'is_auto', value: false}\r\n        ]\"\r\n        (selectEventType)=\"onSelectEventType($event)\"\r\n      >\r\n      </pek-crm-event-type-picker>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"data.type === 'withEmployee'\">\r\n      <label>Employees*</label>\r\n      <pek-crm-employee-picker (selectEmployees)=\"onSelectEmployees($event)\"></pek-crm-employee-picker>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contacts</label>\r\n      <pek-crm-multi-contact-persons-picker\r\n        [selectedCompaniesIds]=\"this.form.get('company_ids').value\"\r\n        (selectContactPersons)=\"onSelectContactPersons($event)\"\r\n      ></pek-crm-multi-contact-persons-picker>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.type === 'withoutEmployee'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>Start Date and Time*</label>\r\n            <pek-date-time-picker\r\n              [maxDate]=\"form.get('end')?.value\"\r\n              (clearDate)=\"onClearStartDate()\"\r\n              (setDate)=\"onSetStartDate($event)\"\r\n              placeholder=\"Choice Start Date and Time\"\r\n            ></pek-date-time-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>End Date and Time*</label>\r\n            <pek-date-time-picker\r\n              [minDate]=\"form.get('start')?.value\"\r\n              (clearDate)=\"onClearEndDate()\"\r\n              (setDate)=\"onSetEndDate($event)\"\r\n              placeholder=\"Choice End Date and Time\"\r\n            ></pek-date-time-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"data.type === 'withEmployee'\">\r\n      <div\r\n        (click)=\"onOpenDatesEmployees()\"\r\n        [class.disabled]=\"form.get('employee_ids').value.length === 0\"\r\n        class=\"row select-date\"\r\n      >\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>Start Date and Time*</label>\r\n            <p-calendar\r\n              [minDate]=\"form.get('end')?.value\"\r\n              [showTime]=\"true\"\r\n              [showClear]=\"true\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              hourFormat=\"24\"\r\n              formControlName=\"start\"\r\n              placeholder=\"Choice Start Date and Time\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>End Date and Time*</label>\r\n            <p-calendar\r\n              [minDate]=\"form.get('start')?.value\"\r\n              [showTime]=\"true\"\r\n              [showClear]=\"true\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              hourFormat=\"24\"\r\n              formControlName=\"end\"\r\n              placeholder=\"Choice End Date and Time\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description</label>\r\n      <textarea\r\n        id=\"description\"\r\n        [rows]=\"2\"\r\n        pInputTextarea\r\n        formControlName=\"description\"\r\n        [autoResize]=\"true\"\r\n      ></textarea>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"'Add'\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {EventsListService} from '../../services/events-list.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {AddEventModalType, Company} from '../../models/company';\r\nimport {finalize} from 'rxjs';\r\nimport {ContactPerson} from '@shared/models/contact-person';\r\n\r\n@Component({\r\n  selector: 'pek-add-event-to-contact-person',\r\n  templateUrl: './add-event-to-contact-person.component.html',\r\n  styleUrls: ['./add-event-to-contact-person.component.scss']\r\n})\r\nexport class AddEventToContactPersonComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    event_type: [null, [Validators.required]],\r\n    start: [null, Validators.required],\r\n    end: [null, Validators.required],\r\n    contact_person_ids: [[this.data.contactPerson.id]],\r\n    description: [''],\r\n    company_ids: [[]],\r\n    contact_ids: [[this.data.contactPerson.id]],\r\n    employee_ids: [[]],\r\n  });\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddEventToContactPersonComponent>,\r\n    private readonly fb: FormBuilder,\r\n    private readonly eventListService: EventsListService,\r\n    private readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: AddEventModalType, contactPerson: ContactPerson },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSave() {\r\n    if (this.form.valid) {\r\n      this.isSaving = true;\r\n      const send = this.form.value;\r\n      send.start = this.adapterService.dateTimeAdapter(this.form.value.start);\r\n      send.end = this.adapterService.dateTimeAdapter(this.form.value.end);\r\n      this.eventListService.create(send).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(event => this.dialogRef.close(event));\r\n    }\r\n  }\r\n\r\n  onSelectEventType(id: number) {\r\n    this.form.get('event_type').patchValue(id);\r\n  }\r\n\r\n  onSelectEmployees(ids: number[]) {\r\n    if (ids) {\r\n      this.form.get('employee_ids').patchValue(ids);\r\n    } else {\r\n      this.form.get('employee_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onOpenDatesEmployees() {\r\n    this.eventListService.openEditEmployeeEventDatesModal(this.form.get('employee_ids').value, this.form.value).subscribe(data => {\r\n      if (data) {\r\n        this.form.patchValue(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSetStartDate(date: Date) {\r\n    this.form.get('start').patchValue(date);\r\n  }\r\n\r\n  onSetEndDate(date: Date) {\r\n    this.form.get('end').patchValue(date);\r\n  }\r\n\r\n  onClearStartDate() {\r\n    this.form.get('start').patchValue(null);\r\n  }\r\n\r\n  onClearEndDate() {\r\n    this.form.get('end').patchValue(null);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Event to Contact {{data.type === 'withEmployee' ? 'with' : 'without'}} Employee\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Event Type*</label>\n      <pek-crm-event-type-picker\n        [filters]=\"[\n          {name: 'is_inner', value: true},\n          {name: 'is_auto', value: false}\n        ]\"\n        (selectEventType)=\"onSelectEventType($event)\"\n      >\n      </pek-crm-event-type-picker>\n    </div>\n    <div class=\"form-group\" *ngIf=\"data.type === 'withEmployee'\">\n      <label>Employees*</label>\n      <pek-crm-employee-picker (selectEmployees)=\"onSelectEmployees($event)\"></pek-crm-employee-picker>\n    </div>\n\n    <ng-container *ngIf=\"data.type === 'withoutEmployee'\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <pek-date-time-picker\n              [maxDate]=\"form.get('end')?.value\"\n              (clearDate)=\"onClearStartDate()\"\n              (setDate)=\"onSetStartDate($event)\"\n              placeholder=\"Choice Start Date and Time\"\n            ></pek-date-time-picker>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <pek-date-time-picker\n              [minDate]=\"form.get('start')?.value\"\n              (clearDate)=\"onClearEndDate()\"\n              (setDate)=\"onSetEndDate($event)\"\n              placeholder=\"Choice End Date and Time\"\n            ></pek-date-time-picker>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.type === 'withEmployee'\">\n      <div\n        (click)=\"onOpenDatesEmployees()\"\n        [class.disabled]=\"form.get('employee_ids').value.length === 0\"\n        class=\"row select-date\"\n      >\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('end')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"start\"\n              placeholder=\"Choice Start Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('start')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"end\"\n              placeholder=\"Choice End Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea\n        id=\"description\"\n        [rows]=\"2\"\n        pInputTextarea\n        formControlName=\"description\"\n        [autoResize]=\"true\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CompanyCategoryService} from '../../services/company-category.service';\nimport {CompanyCategory, CompanyCategoryModule} from '../../models/company-category';\n\n@Component({\n  selector: 'pek-create-edit-company-category',\n  templateUrl: './create-edit-company-category.component.html',\n  styleUrls: ['./create-edit-company-category.component.scss']\n})\nexport class CreateEditCompanyCategoryComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: [null, [Validators.required]],\n    modules: [[]],\n  });\n\n  selectedModulesIds = [];\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyCategoryService: CompanyCategoryService,\n    private dialogRef: MatDialogRef<CreateEditCompanyCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: CompanyCategory }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.category.id));\n      this.form.patchValue(<any>this.data.category);\n      this.selectedModulesIds = this.data.category.modules.map(m => m.id);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCompanyCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCompanyCategory();\n        break;\n      }\n    }\n  }\n\n  createCompanyCategory() {\n    const send = <any>this.form.value;\n    this.companyCategoryService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCompanyCategory() {\n    const send = <any>this.form.value;\n    this.companyCategoryService.update(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectModule(modules: CompanyCategoryModule[]) {\n    this.form.get('modules').patchValue(modules.map(m => m.id));\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Company Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label>Modules</label>\n      <pek-company-category-module-picker\n        (selectModule)=\"onSelectModule($event)\"\n        [currentModulesIds]=\"selectedModulesIds\"\n      ></pek-company-category-module-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {CompanyService} from '../../services/company.service';\r\nimport {Company} from '../../models/company';\r\nimport {Region} from '@shared/models/region';\r\nimport {Country} from '@shared/models/country';\r\nimport {SubRegion} from '@shared/models/sub-region';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-company',\r\n  templateUrl: './create-edit-company.component.html',\r\n  styleUrls: ['./create-edit-company.component.scss']\r\n})\r\nexport class CreateEditCompanyComponent implements OnInit {\r\n  isSaving = false;\r\n\r\n  currentCategoriesIds = [];\r\n\r\n  form = this.fb.group({\r\n    name: ['', Validators.required],\r\n    address: [''],\r\n    comment: [''],\r\n    tax_number: [''],\r\n    registration_number: [''],\r\n    categories: [[], Validators.required],\r\n    email: [''],\r\n    phone_number: [''],\r\n    website: [''],\r\n    supplier_nomenclature: [''],\r\n    contact_persons: [[]],\r\n    has_not_vat: [false],\r\n    country: [null],\r\n    region: [null],\r\n    sub_region: [null],\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly companyService: CompanyService,\r\n    private dialogRef: MatDialogRef<CreateEditCompanyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, company: Company }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.addControl('id' as any, new FormControl(this.data.company.id));\r\n      this.form.patchValue(this.data.company);\r\n\r\n      this.form.get('categories').patchValue(this.data.company.categories?.map(c => c.id));\r\n      this.currentCategoriesIds = this.data.company.categories?.map(c => c.id);\r\n\r\n      this.form.get('contact_persons').patchValue(this.data.company.contact_persons?.map(c => c.id));\r\n      console.log('this.form. EDIT', this.form.value);\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createCompany();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editCompany();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createCompany() {\r\n    let country = this.form.get('country').value;\r\n    if (country) {\r\n      this.form.get('country').setValue(country.id);\r\n    }\r\n    let region = this.form.get('region').value;\r\n    if (region) {\r\n      this.form.get('region').setValue(region.id);\r\n    }\r\n    let subRegion = this.form.get('sub_region').value;\r\n    if (subRegion) {\r\n      this.form.get('sub_region').setValue(subRegion.id);\r\n    }\r\n    let send = <Partial<Company>>this.form.value;\r\n    this.companyService.create(send).subscribe({\r\n      next: company => this.dialogRef.close(company),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editCompany() {\r\n    let country = this.form.get('country').value;\r\n    if (country) {\r\n      this.form.get('country').setValue(country.id);\r\n    }\r\n    let region = this.form.get('region').value;\r\n    if (region) {\r\n      this.form.get('region').setValue(region.id);\r\n    }\r\n    let subRegion = this.form.get('sub_region').value;\r\n    if (subRegion) {\r\n      this.form.get('sub_region').setValue(subRegion.id);\r\n    }\r\n\r\n    const send = <Partial<Company>>this.form.value;\r\n\r\n    this.companyService.updatePartial(send).subscribe({\r\n      next: company => this.dialogRef.close(company),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n\r\n  onSelectCompanyCategories(ids: string) {\r\n    if (ids) {\r\n      this.form.get('categories').patchValue(ids.split(',').map(id => +id));\r\n    } else {\r\n      this.form.get('categories').patchValue(null);\r\n    }\r\n  }\r\n\r\n  countrySelected(country: Country) {\r\n    if (country) {\r\n      this.form.get('country').setValue(country);\r\n      this.form.get('sub_region').setValue(null);\r\n      this.form.get('region').setValue(null);\r\n    }\r\n  }\r\n\r\n  regionSelected(region: Partial<Region>) {\r\n    this.form.get('region').setValue(region);\r\n    this.form.get('sub_region').setValue(null);\r\n  }\r\n\r\n  regionSubSelected(subRegion: Partial<SubRegion>) {\r\n    if (subRegion) {\r\n      this.form.get('sub_region').setValue(subRegion);\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Supplier\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name*</label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Category*</label>\r\n      <pek-multi-company-category-picker\r\n        [currentCompanyCategoriesIds]=\"currentCategoriesIds\"\r\n        (selectCompanyCategories)=\"onSelectCompanyCategories($event)\">\r\n      </pek-multi-company-category-picker>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"tax\"> Tax Number </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"tax_number\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"tax\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"address\">Address </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"address\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"address\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\"> Email</label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"email\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"email\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"phone_number\"> Phone Number </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"phone_number\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"phone_number\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"website\"> Website </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"website\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"website\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"reg\"> Registration Number </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"registration_number\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"reg\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country</label>\r\n      <div class=\"countries\">\r\n        <pek-crm-company-picker\r\n          [country]=\"form.get('country').value?.id\"\r\n          (valueChange)=\"countrySelected($event)\"\r\n        ></pek-crm-company-picker>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Region</label>\r\n      <div class=\"countries\">\r\n        <pek-region-picker\r\n          [isDisabled]=\"!form.get('country').value\"\r\n          [countrySelected]=\"form.get('country').value?.id\"\r\n          [selectedRegionId]=\"form.get('region').value?.id\"\r\n          (selectRegionFull)=\"regionSelected($event)\"\r\n        ></pek-region-picker>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Sub Region</label>\r\n      <div class=\"countries\">\r\n        <pek-sub-region-picker\r\n          [isDisabled]=\"!form.get('region').value\"\r\n          [regionSelected]=\"form.get('region').value?.id\"\r\n          [selectedSubRegionId]=\"form.get('sub_region').value?.id\"\r\n          (selectSubRegionFull)=\"regionSubSelected($event)\"\r\n        ></pek-sub-region-picker>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"supplier_nomenclature\">Nomenclature</label>\r\n      <textarea\r\n        pInputTextarea\r\n        formControlName=\"supplier_nomenclature\"\r\n        class=\"form-control\"\r\n        id=\"supplier_nomenclature\"\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"comment\">Description</label>\r\n      <textarea\r\n        id=\"comment\"\r\n        [rows]=\"2\"\r\n        pInputTextarea\r\n        [autoResize]=\"false\"\r\n        formControlName=\"comment\"\r\n      ></textarea>\r\n    </div>\r\n    <div class=\"form-group checkbox\">\r\n      <p-checkbox\r\n        class=\"checkbox-big\"\r\n        name=\"vat\"\r\n        [binary]=\"true\"\r\n        inputId=\"vat\"\r\n        formControlName=\"has_not_vat\"\r\n      >\r\n      </p-checkbox>\r\n      <label for=\"vat\">Dont Have VAT</label>\r\n    </div>\r\n\r\n\r\n\r\n<!--    <div class=\"form-group\">-->\r\n<!--      <label>Country</label>-->\r\n<!--      <div class=\"countries\">-->\r\n<!--        <app-regions-picker [selectedNode]=\"selectedCountry\" [isPicker]=\"true\"-->\r\n<!--                            (pickRegion)=\"pickCountry($event)\"></app-regions-picker>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--    <div class=\"form-group\">-->\r\n<!--      <label>Region</label>-->\r\n<!--      <div *ngIf=\"!form.get('country').value\" class=\"message\">Choose a country</div>-->\r\n<!--      <div class=\"countries\" *ngIf=\"form.get('country').value\">-->\r\n<!--        <p-table-->\r\n<!--          [value]=\"regions\"-->\r\n<!--          selectionMode=\"single\"-->\r\n<!--          [(selection)]=\"selectedRegion\"-->\r\n<!--          (selectionChange)=\"pickRegion()\"-->\r\n<!--        >-->\r\n<!--          <ng-template pTemplate=\"header\">-->\r\n<!--            <tr>-->\r\n<!--              <th class=\"index-header text-center\" style=\"width: 10%\">#</th>-->\r\n<!--              <th pSortableColumn=\"name\" style=\"width: 90%\">-->\r\n<!--                Name-->\r\n<!--              </th>-->\r\n<!--            </tr>-->\r\n<!--          </ng-template>-->\r\n\r\n<!--          <ng-template pTemplate=\"body\" let-region let-i=\"rowIndex\">-->\r\n<!--            <tr [pSelectableRow]=\"region\">-->\r\n<!--              <td style=\"width: 10%\" class=\"text-center\">{{i + 1}}</td>-->\r\n<!--              <td style=\"width: 90%\">-->\r\n<!--                {{ region.name }}-->\r\n<!--              </td>-->\r\n<!--            </tr>-->\r\n<!--          </ng-template>-->\r\n<!--          <ng-template pTemplate=\"emptymessage\" let-columns>-->\r\n<!--            <tr>-->\r\n<!--              <td style=\"width: 100%;\" class=\"text-center p-4\" [attr.colspan]=\"2\">-->\r\n<!--                <i *ngIf=\"isLoadingRegions\" class=\"fas fa-circle-notch fa-spin fa-3x \"></i>-->\r\n<!--                <span *ngIf=\"!isLoadingRegions\">-->\r\n<!--              No Records Found-->\r\n<!--            </span>-->\r\n<!--              </td>-->\r\n<!--            </tr>-->\r\n<!--          </ng-template>-->\r\n<!--        </p-table>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ContactPerson} from '@shared/models/contact-person';\nimport {ContactPersonService} from '../../services/contact-person.service';\n\n@Component({\n  selector: 'pek-create-edit-contact-person',\n  templateUrl: './create-edit-contact-person.component.html',\n  styleUrls: ['./create-edit-contact-person.component.scss']\n})\nexport class CreateEditContactPersonComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    first_name: [null, [Validators.required]],\n    last_name: [null, [Validators.required]],\n    email: ['', [Validators.email]],\n    position: [''],\n    phone_number: [''],\n    comment: [''],\n    company: [this.data.companyId],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly contactPersonService: ContactPersonService,\n    private dialogRef: MatDialogRef<CreateEditContactPersonComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { companyId: number, type: ModalActionType, contactPerson: ContactPerson }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.contactPerson.id));\n      this.form.patchValue(<any>this.data.contactPerson);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createContactPerson();\n        break;\n      }\n      case 'edit': {\n        this.editContactPerson();\n        break;\n      }\n    }\n  }\n\n  createContactPerson() {\n    const send = <any>this.form.value;\n    this.contactPersonService.create(send).subscribe({\n      next: contactPerson => this.dialogRef.close(contactPerson),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editContactPerson() {\n    const send = <any>this.form.value;\n    this.contactPersonService.update(send).subscribe({\n      next: contactPerson => this.dialogRef.close(contactPerson),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Contact Person\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"first_name\">First Name*</label>\n          <input\n            pInputText\n            formControlName=\"first_name\"\n            class=\"form-control\"\n            type=\"text\"\n            id=\"first_name\"\n            required=\"required\"\n          >\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"last_name\">Last Name*</label>\n          <input\n            pInputText\n            formControlName=\"last_name\"\n            class=\"form-control\"\n            type=\"text\"\n            id=\"last_name\"\n            required=\"required\"\n          >\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\"> Email </label>\n      <input pInputText formControlName=\"email\" class=\"form-control\" type=\"text\" id=\"email\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"position\"> Position </label>\n      <input pInputText formControlName=\"position\" class=\"form-control\" type=\"text\" id=\"position\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone_number\"> Phone</label>\n      <input pInputText formControlName=\"phone_number\" class=\"form-control\" type=\"text\" id=\"phone_number\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\"> Comment </label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {CrmEmployeeService} from '../../services/crm-employee.service';\r\nimport {CRMEmployee} from '../../models/crm-employee';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-crm-employee',\r\n  templateUrl: './create-edit-crm-employee.component.html',\r\n  styleUrls: ['./create-edit-crm-employee.component.scss']\r\n})\r\nexport class CreateEditCrmEmployeeComponent implements OnInit {\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    first_name: ['', Validators.required],\r\n    last_name: ['', Validators.required],\r\n    position: [null],\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly crmEmployeeService: CrmEmployeeService,\r\n    private dialogRef: MatDialogRef<CreateEditCrmEmployeeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, employee: CRMEmployee }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.addControl('id' as any, new FormControl(this.data.employee.id));\r\n      this.form.patchValue(<any>this.data.employee);\r\n      if (this.data.employee.position) {\r\n        this.form.controls.position.patchValue(this.data.employee.position.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createEmployee();\r\n        break;\r\n      }\r\n\r\n      case 'edit': {\r\n        this.editEmployee();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createEmployee() {\r\n    const send = <any>this.form.value;\r\n    this.crmEmployeeService.create(send).subscribe({\r\n      next: employee => this.dialogRef.close(employee),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editEmployee() {\r\n    const send = <any>this.form.value;\r\n    this.crmEmployeeService.update(send).subscribe({\r\n      next: employee => this.dialogRef.close(employee),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Employee\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">First Name*</label>\r\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"first_name\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"last-name\">Last Name*</label>\r\n      <input type=\"text\" id=\"last-name\" pInputText formControlName=\"last_name\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Position</label>\r\n      <app-crm-position-picker\r\n        [position]=\"this.form.get('position').value\"\r\n        (valueChange)=\"form.get('position').setValue($event)\"\r\n      ></app-crm-position-picker>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {EventTypesService} from '../../services/event-types.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../../models/event-type';\nimport {CRMEmployee} from '../../models/crm-employee';\n\n@Component({\n  selector: 'pek-create-edit-event-type',\n  templateUrl: './create-edit-event-type.component.html',\n  styleUrls: ['./create-edit-event-type.component.scss']\n})\nexport class CreateEditEventTypeComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: [null, [Validators.required]],\n    description: [null, Validators.required],\n    google_calendar_id: [null],\n    google_owner_first_name: [null],\n    google_owner_last_name: [null],\n    google_owner_gmail: [null],\n    profiles_ids: this.fb.array([\n      // this.fb.group({\n      //   profile_id: [null, Validators.required],\n      //   employees_ids: [null, Validators.required],\n      // })\n    ], Validators.required),\n    is_inner: [true],\n    color_hex: ['#3788d8', Validators.required]\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateEditEventTypeComponent>,\n    private eventTypesService: EventTypesService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, eventType: EventType }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.data.eventType.color_hex = this.data.eventType.color_hex ? this.data.eventType.color_hex : '#3788d8';\n      this.form.addControl(<any>'id', new FormControl(this.data.eventType.id));\n      this.form.patchValue(<any>this.data.eventType);\n\n      if (this.data.eventType.access_users.length > 0) {\n        this.data.eventType.access_users.forEach(user => {\n          (this.form.get('profiles_ids') as FormArray).push(this.fb.group({\n            // @ts-ignore\n            profile_id: [user.user_profile.id, Validators.required],\n            // @ts-ignore\n            employees_ids: [user.access_users_employees.map(u => u.employee.id), Validators.required],\n          }));\n        });\n      }\n    }\n\n    if (this.data.type === 'create') {\n      (this.form.get('profiles_ids') as FormArray).push(this.fb.group({\n        profile_id: [null, Validators.required],\n        employees_ids: [[], Validators.required],\n      }));\n    }\n  }\n\n  get users() {\n    return this.form.get('profiles_ids') as FormArray;\n  }\n\n  addUser() {\n    (this.form.get('profiles_ids') as FormArray).push(this.fb.group({\n      profile_id: [null, Validators.required],\n      employees_ids: [[], Validators.required],\n    }));\n  }\n\n  removeUser(index: number) {\n    (this.form.get('profiles_ids') as FormArray).removeAt(index);\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createEventType();\n        break;\n      }\n      case 'edit': {\n        this.editEventType();\n        break;\n      }\n    }\n  }\n\n  createEventType() {\n    const send = <any>this.form.value;\n    this.eventTypesService.create(send).subscribe({\n      next: type => this.dialogRef.close(type),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editEventType() {\n    const send = <any>this.form.value;\n    this.eventTypesService.update(send).subscribe({\n      next: type => this.dialogRef.close(type),\n      error: () => this.isSaving = false,\n    });\n  }\n\n\n  onSelectUserProfile(userProfileId: number, user: AbstractControl<any>) {\n    user.get('profile_id').patchValue(userProfileId);\n  }\n\n  onSelectEmployees(ids: number[], user: AbstractControl<any>) {\n    if (ids) {\n      user.get('employees_ids').patchValue(ids);\n    } else {\n      user.get('employees_ids').patchValue(null);\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Company Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"row-1\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input\n          pInputText\n          formControlName=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n      <div class=\"form-group ml-3 form-group_color\">\n        <label for=\"name\"> Color </label>\n        <p-colorPicker formControlName=\"color_hex\"></p-colorPicker>\n      </div>\n    </div>\n\n    <div class=\"employees\" formArrayName=\"profiles_ids\">\n      <div class=\"employees-row\" *ngFor=\"let user of users.controls; let idx = index\" [formGroupName]=\"idx\">\n        <div class=\"employees-col\">\n          <div class=\"form-group\">\n            <label>User Profiles*</label>\n            <pek-user-profile-picker\n              [currentUserProfileId]=\"user.get('profile_id').value\"\n              (selectUserProfile)=\"onSelectUserProfile($event, user)\"\n            ></pek-user-profile-picker>\n          </div>\n          <div class=\"form-group\">\n            <label>Employees*</label>\n            <pek-crm-employee-picker\n              (selectEmployees)=\"onSelectEmployees($event, user)\"\n              [currentEmployeeIds]=\"user.get('employees_ids').value\"\n            ></pek-crm-employee-picker>\n          </div>\n\n          <button\n            pButton\n            type=\"button\"\n            icon=\"pi pi-times\"\n            class=\"p-button-rounded p-button-danger mr-2\"\n            (click)=\"removeUser(idx)\"\n          ></button>\n        </div>\n      </div>\n    </div>\n    <button\n      pButton\n      type=\"button\"\n      icon=\"pi pi-plus\"\n      class=\"add-button mt-2 mb-2\"\n      label=\"Add User\"\n      (click)=\"addUser()\"\n    >\n    </button>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea\n        id=\"description\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"description\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {EventsListService} from '../../services/events-list.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {AddEventModalType} from '../../models/company';\r\nimport {CRMEmployee} from '../../models/crm-employee';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {EventItem} from '../../models/event-item';\r\nimport {finalize, Observable} from 'rxjs';\r\nimport {MessageService} from 'primeng/api';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-event',\r\n  templateUrl: './create-edit-event.component.html',\r\n  styleUrls: ['./create-edit-event.component.scss']\r\n})\r\nexport class CreateEditEventComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  eventsLists: EventItem[] = [];\r\n  eventId = -1;\r\n\r\n  scheduleDays = [\r\n    {value: 0, name: 'Monday'},\r\n    {value: 1, name: 'Tuesday'},\r\n    {value: 2, name: 'Wednesday'},\r\n    {value: 3, name: 'Thursday'},\r\n    {value: 4, name: 'Friday'},\r\n    {value: 5, name: 'Saturday'},\r\n    {value: 6, name: 'Sunday'},\r\n  ];\r\n\r\n  form: FormGroup = this.fb.group({\r\n    id: [null],\r\n    event_type: [null, [Validators.required]],\r\n    start: [null, [Validators.required]],\r\n    end: [null, [Validators.required]],\r\n    company_ids: [[]],\r\n    description: [''],\r\n    contact_ids: [[]],\r\n    employee_ids: [[]],\r\n    is_locked_by_company: [false],\r\n    is_scheduled: [false],\r\n    parent: [null],\r\n  });\r\n\r\n  scheduleForm = this.fb.group({\r\n    schedule_id: [null],\r\n    start: [null, [Validators.required]],\r\n    end: [null, [Validators.required]],\r\n    schedule_values: [[], [Validators.required]]\r\n  });\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateEditEventComponent>,\r\n    private readonly fb: FormBuilder,\r\n    private readonly eventListService: EventsListService,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly messageService: MessageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { modalType: ModalActionType,\r\n      type: AddEventModalType,\r\n      event: EventItem,\r\n      companyId: number,\r\n      isLinkedEvent:boolean },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.companyId) {\r\n      this.form.get('company_ids').patchValue([this.data.companyId]);\r\n    }\r\n\r\n    if (this.data.isLinkedEvent) {\r\n      this.form.get('parent').patchValue(this.data.event.id);\r\n    }\r\n\r\n    if (this.data.modalType === 'edit') {\r\n      this.eventId = this.data.event.id;\r\n      this.form.get('id').patchValue(this.data.event.id);\r\n      this.form.get('event_type').patchValue(this.data.event.event_type?.id);\r\n      this.form.get('contact_ids').patchValue(this.data.event.on_contacts.map(el => +el.contact_person_id));\r\n      this.form.get('company_ids').patchValue(this.data.event.on_companies.map(el => +el.company_id));\r\n      this.form.get('is_locked_by_company').patchValue(this.data.event.is_locked_by_company);\r\n      this.form.get('description').patchValue(this.data.event.description);\r\n      this.form.get('start').patchValue(new Date(this.data.event.start));\r\n      this.form.get('end').patchValue(new Date(this.data.event.end));\r\n      this.form.get('employee_ids').patchValue(this.data.event.employee?.map(e => e.id));\r\n\r\n      if (this.data.event.scheduler) {\r\n        this.scheduleForm.get('schedule_values').patchValue(this.data.event.scheduler.values);\r\n        this.scheduleForm.get('schedule_id').patchValue(this.data.event.scheduler.id);\r\n        this.scheduleForm.get('start').patchValue(<any>new Date(this.data.event.scheduler.start));\r\n        this.scheduleForm.get('end').patchValue(<any>new Date(this.data.event.scheduler.end));\r\n        this.form.get('is_scheduled').patchValue(true);\r\n\r\n        this.form.get('is_scheduled').disable();\r\n        this.scheduleForm.get('start').disable();\r\n        this.scheduleForm.get('end').disable();\r\n        this.scheduleForm.get('schedule_values').disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    if (this.form.valid) {\r\n      switch (this.data.modalType) {\r\n        case 'create':\r\n          this.onCreateEvent();\r\n          break;\r\n        case 'edit':\r\n          this.onEdit();\r\n      }\r\n    }\r\n  }\r\n\r\n  onEdit() {\r\n    if (this.form.get('employee_ids').value.length > 0) {\r\n      this.checkEmployeesDatesBeforeAddingUpdating().subscribe(res => {\r\n        if (res) {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Dates colliding.',\r\n            detail: `Check for colliding dates!`\r\n          });\r\n          return;\r\n        } else {\r\n          this.onEditEvent();\r\n        }\r\n      });\r\n    } else {\r\n      this.onEditEvent();\r\n    }\r\n  }\r\n\r\n  onCreateEvent() {\r\n    if (this.form.get('employee_ids').value.length > 0) {\r\n      this.checkEmployeesDatesBeforeAddingUpdating().subscribe(res => {\r\n        if (res) {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Dates colliding.',\r\n            detail: `Check for colliding dates!`\r\n          });\r\n          return;\r\n        } else {\r\n          this.addEvent();\r\n        }\r\n      });\r\n    } else {\r\n      this.addEvent();\r\n    }\r\n  }\r\n\r\n  addEvent() {\r\n    this.isSaving = true;\r\n    const send = this.form.value;\r\n    send.start = this.adapterService.dateTimeAdapter(this.form.value.start);\r\n    send.end = this.adapterService.dateTimeAdapter(this.form.value.end);\r\n    this.eventListService.create(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(event => {\r\n      if (this.form.get('is_scheduled').value && !this.scheduleForm.get('schedule_id').value) {\r\n        this.createScheduleFromEvent(event.id);\r\n      } else {\r\n        this.dialogRef.close(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkEmployeesDatesBeforeAddingUpdating(): Observable<boolean> {\r\n    const start = this.form.get('start').value;\r\n    const end = this.form.get('end').value;\r\n\r\n    if (this.form.get('employee_ids').value.length > 0) {\r\n      const query = [\r\n        {name: 'employee_ids', value: this.form.get('employee_ids').value},\r\n        {name: 'get_colliding_events_events', value: true},\r\n        {\r\n          name: 'from_datetime',\r\n          value: this.adapterService.dateTimeAdapter(start ?\r\n            new Date(new Date(start).setHours(12, 0, 0)) : new Date())\r\n        }\r\n      ];\r\n\r\n      if (end) {\r\n        query.push(\r\n          {\r\n            name: 'to_datetime', value: this.adapterService.dateTimeAdapter(end ?\r\n              new Date(new Date(end).setHours(12, 0, 0)) : new Date())\r\n          }\r\n        );\r\n      }\r\n      const res = this.eventListService.getShorts(query).pipe(\r\n        map(events => {\r\n          this.eventsLists = events;\r\n          this.eventsLists = this.eventsLists.filter(event => event.id !== this.eventId);\r\n          this.eventsLists.forEach(event => {\r\n            if (start) {\r\n              const eventStartDate = new Date(event.start);\r\n              const eventEndDate = new Date(event.end);\r\n\r\n              event.isDatesColliding = start <= eventEndDate && end >= eventStartDate;\r\n            } else {\r\n              event.isDatesColliding = false;\r\n            }\r\n          });\r\n          console.log('this.eventsLists', this.eventsLists);\r\n          return this.eventsLists.filter(el => el.isDatesColliding).length > 0;\r\n        }));\r\n      return res;\r\n    }\r\n  }\r\n\r\n  onEditEvent() {\r\n    if (this.form.get('is_scheduled').value) {\r\n      const startDate = new Date(<any>this.scheduleForm.get('start').value);\r\n      const endDate = new Date(<any>this.scheduleForm.get('end').value);\r\n      if (startDate.getTime() >= endDate.getTime()) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Validation Error',\r\n          detail: `Start time date cannot be greater than End time`\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.isSaving = true;\r\n    this.eventListService.changeEvent(this.data.event.id, this.form.value).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe((res) => {\r\n      if (this.form.get('is_scheduled').value && !this.scheduleForm.get('schedule_id').value) {\r\n        this.createScheduleFromEvent(res.id);\r\n      } else {\r\n        this.dialogRef.close(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  createScheduleFromEvent(eventId: number): void {\r\n    if (!this.scheduleForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.isSaving = true;\r\n\r\n    const data = {\r\n      schedule_values: this.scheduleForm.get('schedule_values').value,\r\n      start: this.scheduleForm.get('start').value,\r\n      end: this.scheduleForm.get('end').value,\r\n    };\r\n\r\n    this.eventListService.createScheduleFromEvent(eventId, data).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(res => {\r\n      this.dialogRef.close(res);\r\n    });\r\n  }\r\n\r\n  onSelectEventType(id: number) {\r\n    this.form.get('event_type').patchValue(id);\r\n  }\r\n\r\n  onSelectContactPersons(contactPersonsIds: number[]) {\r\n    if (contactPersonsIds) {\r\n      this.form.get('contact_ids').patchValue(contactPersonsIds);\r\n    } else {\r\n      this.form.get('contact_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onSelectEmployees(ids: number[]) {\r\n    if (ids) {\r\n      this.form.get('employee_ids').patchValue(ids);\r\n    } else {\r\n      this.form.get('employee_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onOpenDatesEmployees() {\r\n    this.eventListService.openEditEmployeeEventDatesModal(this.form.get('employee_ids').value, this.form.value).subscribe(data => {\r\n      if (data) {\r\n        this.form.patchValue(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSelectCompanies(ids: string) {\r\n    if (ids) {\r\n      this.form.get('company_ids').patchValue(ids.split(',').map(id => +id));\r\n    } else {\r\n      this.form.get('company_ids').patchValue([]);\r\n    }\r\n  }\r\n\r\n  onSetStartDate(date: Date) {\r\n    this.form.get('start').patchValue(date);\r\n  }\r\n\r\n  onSetEndDate(date: Date) {\r\n    this.form.get('end').patchValue(date);\r\n  }\r\n\r\n  onClearStartDate() {\r\n    this.form.get('start').patchValue(null);\r\n  }\r\n\r\n  onClearEndDate() {\r\n    this.form.get('end').patchValue(null);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <ng-container *ngIf=\"data.modalType === 'create'\">\r\n      Add Event {{data.type === 'withEmployee' ? 'with' : 'without'}} Employee\r\n    </ng-container>\r\n    <ng-container *ngIf=\"data.modalType === 'edit'\">\r\n      Edit Event\r\n    </ng-container>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Event Type*</label>\r\n      <pek-crm-event-type-picker\r\n        [currentEventTypeId]=\"form.get('event_type').value\"\r\n        [filters]=\"[\r\n          {name: 'is_inner', value: true},\r\n          {name: 'is_auto', value: false}\r\n        ]\"\r\n        (selectEventType)=\"onSelectEventType($event)\"\r\n      >\r\n      </pek-crm-event-type-picker>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"data.type === 'withEmployee'\">\r\n      <label>Employees</label>\r\n      <pek-crm-employee-picker\r\n        [currentEmployeeIds]=\"this.form.get('employee_ids').value\"\r\n        (selectEmployees)=\"onSelectEmployees($event)\"\r\n      ></pek-crm-employee-picker>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Companies</label>\r\n          <pek-company-categorized-multi-picker\r\n            [currentCompaniesIds]=\"form.get('company_ids').value\"\r\n            (selectCompanies)=\"onSelectCompanies($event)\"\r\n          ></pek-company-categorized-multi-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Contacts</label>\r\n          <pek-crm-multi-contact-persons-picker\r\n            [isDisabled]=\"form.get('company_ids').value.length === 0\"\r\n            [selectedCompaniesIds]=\"form.get('company_ids').value\"\r\n            [currentContactPersonsIds]=\"form.get('contact_ids').value\"\r\n            (selectContactPersons)=\"onSelectContactPersons($event)\"\r\n          ></pek-crm-multi-contact-persons-picker>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"data.type === 'withoutEmployee'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>Start Date and Time*</label>\r\n            <pek-date-time-picker\r\n              [maxDate]=\"form.get('end')?.value\"\r\n              (clearDate)=\"onClearStartDate()\"\r\n              (setDate)=\"onSetStartDate($event)\"\r\n              [date]=\"form.get('start')?.value\"\r\n              placeholder=\"Choice Start Date and Time\"\r\n            ></pek-date-time-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>End Date and Time*</label>\r\n            <pek-date-time-picker\r\n              [minDate]=\"form.get('start')?.value\"\r\n              (clearDate)=\"onClearEndDate()\"\r\n              (setDate)=\"onSetEndDate($event)\"\r\n              [date]=\"form.get('end')?.value\"\r\n              placeholder=\"Choice End Date and Time\"\r\n            ></pek-date-time-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"data.type === 'withEmployee'\">\r\n      <div\r\n        (click)=\"onOpenDatesEmployees()\"\r\n        [class.disabled]=\"form.get('employee_ids').value.length === 0\"\r\n        class=\"row select-date\"\r\n      >\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>Start Date and Time*</label>\r\n            <p-calendar\r\n              [minDate]=\"form.get('end')?.value\"\r\n              [showTime]=\"true\"\r\n              [showClear]=\"true\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              hourFormat=\"24\"\r\n              formControlName=\"start\"\r\n              placeholder=\"Choice Start Date and Time\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"form-group\">\r\n            <label>End Date and Time*</label>\r\n            <p-calendar\r\n              [minDate]=\"form.get('start')?.value\"\r\n              [showTime]=\"true\"\r\n              [showClear]=\"true\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              hourFormat=\"24\"\r\n              formControlName=\"end\"\r\n              placeholder=\"Choice End Date and Time\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description</label>\r\n      <textarea\r\n        id=\"description\"\r\n        [rows]=\"2\"\r\n        pInputTextarea\r\n        formControlName=\"description\"\r\n        [autoResize]=\"true\"\r\n      ></textarea>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"is_scheduled\"> Is Scheduled </label>\r\n      <p-inputSwitch\r\n        id=\"is_scheduled\"\r\n        formControlName=\"is_scheduled\"\r\n      >\r\n      </p-inputSwitch>\r\n    </div>\r\n  </form>\r\n\r\n  <form *ngIf=\"form.get('is_scheduled').value\" [formGroup]=\"scheduleForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"start\">Start*</label>\r\n          <p-calendar\r\n            placeholder=\"Choice Start Time\"\r\n            [showButtonBar]=\"true\"\r\n            id=\"start\"\r\n            formControlName=\"start\"\r\n            [showTime]=\"true\"\r\n            [timeOnly]=\"true\"\r\n            [hourFormat]=\"'24'\"\r\n            inputId=\"timeonly\"\r\n          >\r\n          </p-calendar>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"end\">End*</label>\r\n          <p-calendar\r\n            id=\"end\"\r\n            placeholder=\"Choice End Time\"\r\n            [showButtonBar]=\"true\"\r\n            formControlName=\"end\"\r\n            [showTime]=\"true\"\r\n            [timeOnly]=\"true\"\r\n            [hourFormat]=\"'24'\"\r\n            [dateFormat]=\"'hh:mm'\" inputId=\"timeonly\"\r\n          >\r\n          </p-calendar>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-4\">\r\n        <div class=\"form-group\">\r\n          <label> Week days* </label>\r\n          <p-multiSelect\r\n            placeholder=\"Choice Week Days\"\r\n            formControlName=\"schedule_values\"\r\n            optionLabel=\"name\"\r\n            optionValue=\"value\"\r\n            [options]=\"scheduleDays\"\r\n          ></p-multiSelect>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.modalType\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid || (form.get('is_scheduled').value && scheduleForm.invalid)\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventTypesService} from '../../services/event-types.service';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../../models/event-type';\n\n@Component({\n  selector: 'pek-create-edit-external-event-type',\n  templateUrl: './create-edit-external-event-type.component.html',\n  styleUrls: ['./create-edit-external-event-type.component.scss']\n})\nexport class CreateEditExternalEventTypeComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    google_calendar_id: [null, [Validators.required]],\n    google_owner_first_name: [null],\n    google_owner_last_name: [null],\n    color_hex: ['#3788d8'],\n    profiles_ids: [[]],\n    google_owner_gmail: [null, [Validators.email]],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateEditExternalEventTypeComponent>,\n    private eventTypesService: EventTypesService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, eventType: EventType }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.data.eventType.color_hex = this.data.eventType.color_hex ? this.data.eventType.color_hex : '#3788d8';\n      this.form.addControl(<any>'id', new FormControl(this.data.eventType.id));\n      this.form.patchValue(<any>this.data.eventType);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createEventType();\n        break;\n      }\n      case 'edit': {\n        this.editEventType();\n        break;\n      }\n    }\n  }\n\n  createEventType() {\n    const send = <any>this.form.value;\n    this.eventTypesService.addCalendarFromGoogle(send).subscribe({\n      next: type => this.dialogRef.close(type),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editEventType() {\n    const send = <any>this.form.value;\n    this.eventTypesService.update(send).subscribe({\n      next: type => this.dialogRef.close(type),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Company Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"calendar\">Google Calendar ID*</label>\n      <input\n        pInputText\n        formControlName=\"google_calendar_id\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"calendar\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"first-name\">First Name</label>\n      <input\n        pInputText\n        formControlName=\"google_owner_first_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"first-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"last-name\">Last Name</label>\n      <input\n        pInputText\n        formControlName=\"google_owner_last_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"last-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gmail\">Gmail</label>\n      <input\n        pInputText\n        formControlName=\"google_owner_gmail\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"gmail\"\n      />\n    </div>\n\n    <div class=\"form-group form-group_color\">\n      <label> Color </label>\n      <p-colorPicker formControlName=\"color_hex\"></p-colorPicker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CompanyService} from '../../services/company.service';\nimport {Company} from '../../models/company';\nimport {ContactPerson} from '@shared/models/contact-person';\n\n@Component({\n  selector: 'pek-create-edit-linked-company',\n  templateUrl: './create-edit-linked-company.component.html',\n  styleUrls: ['./create-edit-linked-company.component.scss']\n})\nexport class CreateEditLinkedCompanyComponent implements OnInit {\n  isSaving = false;\n  isLoading = false;\n\n  contactPersons: ContactPerson[] = [];\n\n  form = this.fb.group({\n    to_company_id: [null, [Validators.required]],\n    contact_person_id: [{ value: null, disabled: true }, Validators.required],\n    link_weight: [0, [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyService: CompanyService,\n    private dialogRef: MatDialogRef<CreateEditLinkedCompanyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {companyId: number, type: ModalActionType, company: Company }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.get('link_weight').patchValue(this.data.company.link_weight);\n      this.form.get('to_company_id').patchValue(<any>this.data.company.to_company.id);\n      this.form.get('contact_person_id').patchValue(<any>this.data.company.contact_person.id);\n\n      this.form.get('contact_person_id').enable();\n\n      this.searchContactPersons();\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createLinkedCompany();\n        break;\n      }\n      case 'edit': {\n        this.editLinkedCompany();\n        break;\n      }\n    }\n  }\n\n  createLinkedCompany() {\n    const send = <any>this.form.value;\n    this.companyService.createEditLinkCompany(this.data.companyId, send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editLinkedCompany() {\n    const send = <any>this.form.value;\n    this.companyService.createEditLinkCompany(this.data.company.to_company.id, send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  searchContactPersons() {\n    const companyId = this.form.get('to_company_id').value;\n\n    if (companyId) {\n      this.isLoading = true;\n      this.companyService.getById(+companyId).subscribe(company => {\n        this.contactPersons = company.contact_persons.map(c => {\n          return {\n            ...c,\n            fullName: `${c.first_name} ${c.last_name}`\n          };\n        });\n        this.isLoading = false;\n      });\n    }\n  }\n\n  onSelectCompany(id: number) {\n    if (id) {\n      this.form.get('to_company_id').patchValue(<any>id);\n      this.form.get('contact_person_id').enable();\n      this.searchContactPersons();\n      console.log(this.form.value);\n    } else {\n      this.form.get('to_company_id').patchValue(null);\n      this.form.get('contact_person_id').disable();\n      this.form.get('contact_person_id').patchValue(null);\n      this.contactPersons = [];\n    }\n  }\n}\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Linked Company\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Company*</label>\r\n      <pek-company-picker\r\n        (selectCompany)=\"onSelectCompany($event)\"\r\n        [currentCompanyId]=\"1\"\r\n      ></pek-company-picker>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Person* (First, choose a Company)</label>\r\n      <p-dropdown\r\n        *ngIf=\"!isLoading; else spinner\"\r\n        [options]=\"contactPersons\"\r\n        formControlName=\"contact_person_id\"\r\n        placeholder=\"Select Contact Person\"\r\n        optionLabel=\"fullName\"\r\n        optionValue=\"id\"\r\n        [showClear]=\"true\"\r\n      >\r\n      </p-dropdown>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label>Connection Weight*: {{ form.get('link_weight').value }}</label>\r\n      <p-slider formControlName=\"link_weight\" [min]=\"0\" [max]=\"10\"></p-slider>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ContactPerson} from '@shared/models/contact-person';\nimport {ContactPersonService} from '../../services/contact-person.service';\n\n@Component({\n  selector: 'pek-create-edit-linked-contact',\n  templateUrl: './create-edit-linked-contact.component.html',\n  styleUrls: ['./create-edit-linked-contact.component.scss']\n})\nexport class CreateEditLinkedContactComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    to_contact: [null, [Validators.required]],\n    link_weight: [0, [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<CreateEditLinkedContactComponent>,\n    private readonly contactPersonService: ContactPersonService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, person: ContactPerson, contactPerson: any }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.get('link_weight').patchValue(this.data.contactPerson.link_weight);\n      this.form.get('to_contact').patchValue(this.data.contactPerson.to_contact);\n      this.form.addControl(<any>'from_contact', new FormControl(this.data.contactPerson.from_contact.id));\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createLinkedContact();\n        break;\n      }\n      case 'edit': {\n        this.editLinkedContact();\n        break;\n      }\n    }\n  }\n\n  createLinkedContact() {\n    const send = <Partial<ContactPerson>>this.form.value;\n    this.contactPersonService.linkContact(this.data.person.id, send).subscribe({\n      next: contactPerson => this.dialogRef.close(contactPerson),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editLinkedContact() {\n    const send = <Partial<ContactPerson>>this.form.value;\n    this.contactPersonService.linkContact(this.data.person.id, send).subscribe({\n      next: contactPerson => this.dialogRef.close(contactPerson),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectContactPerson(id: number) {\n    this.form.get('to_contact').patchValue(<any>id);\n  }\n\n  onSelectContactPersonFromContact(id: number) {\n    this.form.get('from_contact').patchValue(<never>id);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Linked Company\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label> Contact Person* </label>\n      <ng-container *ngIf=\"data.type === 'create'\">\n        <pek-crm-contact-person-picker\n          [currentContactPersonId]=\"form.get('to_contact').value\"\n          (selectContactPerson)=\"onSelectContactPerson($event)\"\n        ></pek-crm-contact-person-picker>\n      </ng-container>\n      <ng-container *ngIf=\"data.type === 'edit'\">\n        <pek-crm-contact-person-picker\n          [currentContactPersonId]=\"form.get('from_contact').value\"\n          (selectContactPerson)=\"onSelectContactPersonFromContact($event)\"\n        ></pek-crm-contact-person-picker>\n      </ng-container>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"form-group\">\n        <label>Connection Weight*: {{ form.get('link_weight').value }}</label>\n        <p-slider formControlName=\"link_weight\" [min]=\"0\" [max]=\"10\"></p-slider>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventTypesService} from '../../services/event-types.service';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../../models/event-type';\nimport {UserProfile} from '../../models/user-profile';\nimport {UserProfileService} from '../../services/user-profile.service';\n\n@Component({\n  selector: 'pek-create-edit-user-profile',\n  templateUrl: './create-edit-user-profile.component.html',\n  styleUrls: ['./create-edit-user-profile.component.scss']\n})\nexport class CreateEditUserProfileComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    first_name: [null, Validators.required],\n    last_name: [null, Validators.required],\n    gmail: [null, Validators.required],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateEditUserProfileComponent>,\n    private userProfileService: UserProfileService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, userProfile: UserProfile }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl(<any>'id', new FormControl(this.data.userProfile.id));\n      this.form.patchValue(<any>this.data.userProfile);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createEventType();\n        break;\n      }\n      case 'edit': {\n        this.editEventType();\n        break;\n      }\n    }\n  }\n\n  createEventType() {\n    const send = <any>this.form.value;\n    this.userProfileService.create(send).subscribe({\n      next: userProfile => this.dialogRef.close(userProfile),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editEventType() {\n    const send = <any>this.form.value;\n    this.userProfileService.update(send).subscribe({\n      next: userProfile => this.dialogRef.close(userProfile),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} User Profile\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"first-name\">First Name*</label>\n      <input\n        pInputText\n        formControlName=\"first_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"first-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"last-name\">Last Name*</label>\n      <input\n        pInputText\n        formControlName=\"last_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"last-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gmail\">Gmail*</label>\n      <input\n        pInputText\n        formControlName=\"gmail\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"gmail\"\n      />\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {CrmPositionsService} from '../../services/crm-positions.service';\r\nimport {take} from 'rxjs/operators';\r\nimport {CrmPosition} from '../../../business-trips/models/crm-position';\r\n\r\n@Component({\r\n  selector: 'pek-create-update-crm-positions',\r\n  templateUrl: './create-update-crm-positions.component.html',\r\n  styleUrls: ['./create-update-crm-positions.component.scss']\r\n})\r\nexport class CreateUpdateCrmPositionsComponent implements OnInit {\r\n  form: FormGroup;\r\n  isSaving: boolean;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateUpdateCrmPositionsComponent>,\r\n    private fb: FormBuilder,\r\n    private crmPositionService: CrmPositionsService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: 'create' | 'edit', position: CrmPosition }\r\n  ) {\r\n\r\n    this.form = this.fb.group({\r\n      title: [null , [Validators.required]]\r\n    });\r\n\r\n    if (this.data.type === 'edit') {\r\n      this.form.patchValue(this.data.position);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSave() {\r\n    if (this.data.type === 'create') {\r\n      this.addPosition();\r\n    } else {\r\n      this.editPosition();\r\n    }\r\n  }\r\n\r\n  addPosition() {\r\n    if (this.form.valid) {\r\n      this.crmPositionService\r\n        .create(this.form.value)\r\n        .pipe(take(1))\r\n        .subscribe((res) => {\r\n          this.isSaving = true;\r\n          this.dialogRef.close(res);\r\n        });\r\n    }\r\n  }\r\n\r\n  editPosition() {\r\n    if (this.form.valid) {\r\n      this.form.value.id = this.data.position.id;\r\n      this.crmPositionService\r\n        .update( this.form.value.id, this.form.value)\r\n        .pipe(take(1))\r\n        .subscribe((res) => {\r\n          this.isSaving = true;\r\n          this.dialogRef.close(res);\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Position\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\"> Title </label>\r\n      <input\r\n        pInputText\r\n        formControlName=\"title\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        id=\"name\"\r\n      />\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {EventsListService} from '../../services/events-list.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Subject} from 'rxjs';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {EventItem} from '../../models/event-item';\r\nimport {MenuItem, MessageService} from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'pek-edit-employee-event-date',\r\n  templateUrl: './edit-employee-event-date.component.html',\r\n  styleUrls: ['./edit-employee-event-date.component.scss']\r\n})\r\nexport class EditEmployeeEventDateComponent implements OnInit, OnDestroy {\r\n\r\n  menuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Event',\r\n      items: [\r\n        {\r\n          label: 'Event Card',\r\n          icon: 'pi pi-calendar',\r\n          command: () => this.onGoEvent()\r\n        },\r\n        {\r\n          label: 'Edit',\r\n          icon: 'pi pi-pencil',\r\n          command: () => this.onEditEvent()\r\n        },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  isLoading = false;\r\n\r\n  form: FormGroup = this.fb.group({\r\n    end: [null, [Validators.required]],\r\n    start: [null, [Validators.required]],\r\n    employee_ids: [[]],\r\n  });\r\n\r\n  destroy$ = new Subject();\r\n\r\n  query: QuerySearch[] = [];\r\n\r\n  eventId: number;\r\n\r\n  constructor(\r\n    private eventsListService: EventsListService,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<EditEmployeeEventDateComponent>,\r\n    private messageService: MessageService,\r\n    private readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { employeeIds: number[], event: EventItem },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.get('employee_ids').patchValue(this.data.employeeIds.join(','));\r\n    if (this.data.event.id) {\r\n      this.eventId = this.data.event.id;\r\n\r\n    }\r\n    if (this.data.event.start) {\r\n      this.form.get('start').patchValue(this.data.event.start);\r\n    }\r\n    if (this.data.event.end) {\r\n      this.form.get('end').patchValue(this.data.event.end);\r\n    }\r\n    this.search();\r\n  }\r\n\r\n  events: EventItem[] = [];\r\n  selectedEvent: EventItem;\r\n\r\n  search() {\r\n    this.isLoading = true;\r\n    this.selectedEvent = null;\r\n    this.events = [];\r\n    this.destroy$.next(true);\r\n\r\n    this.query = [\r\n      {name: 'employee_ids', value: this.form.get('employee_ids').value},\r\n      {name: 'get_colliding_events_events', value: true},\r\n    ];\r\n    console.log('this.form.get(\\'start\\').value', this.form.get('start').value);\r\n    if (this.form.get('start').value) {\r\n      this.query.push({\r\n        name: 'from_datetime',\r\n        value: this.adapterService.dateTimeAdapter(this.form.get('start').value)\r\n      });\r\n    } else {\r\n      this.query.push({\r\n        name: 'from_datetime',\r\n        value: this.adapterService.dateTimeAdapter(new Date())\r\n      });\r\n    }\r\n\r\n    if (this.form.get('end').value) {\r\n      this.query.push({name: 'to_datetime', value: this.adapterService.dateTimeAdapter(this.form.get('end').value)});\r\n    }\r\n\r\n    this.getEvents();\r\n  }\r\n\r\n  getEvents() {\r\n    this.eventsListService.getShorts(this.query).subscribe(events => {\r\n      this.events = events;\r\n\r\n      this.events.sort((a, b) => new Date(b.start).getTime() - new Date(a.start).getTime());\r\n      this.findCollidingAndSortEvents();\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  disableEmployees() {\r\n    if (this.events.length === 0 && this.form.get('end').value && this.form.get('start').value) return false;\r\n\r\n    if (this.events.some(e => e.isDatesColliding) || !this.form.get('end').value || !this.form.get('start').value) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  findCollidingAndSortEvents(): void {\r\n    this.events  = this.events.filter(event => event.id !== this.eventId);\r\n    this.events.forEach(event => {\r\n      event.startDate = new Date(event.start);\r\n      if (this.form.get('start').value) {\r\n        const eventStartDate = new Date(event.start);\r\n        const eventEndDate = new Date(event.end);\r\n        event.isDatesColliding = this.form.get('start').value <= eventEndDate && this.form.get('end').value >= eventStartDate;\r\n      } else {\r\n        event.isDatesColliding = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onAccept() {\r\n    if (this.events.filter(el => el.isDatesColliding).length > 0) {\r\n      this.messageService.add({severity: 'error', summary: 'Dates colliding.', detail: `Check for colliding dates!`});\r\n      return;\r\n    }\r\n\r\n    this.dialogRef.close({start: this.form.get('start').value, end: this.form.get('end').value});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private onEditEvent() {\r\n    this.eventsListService.openCreateEventEventModal('edit', 'withEmployee', this.selectedEvent).subscribe(event => {\r\n      if (event) {\r\n        this.search();\r\n      }\r\n    });\r\n  }\r\n\r\n  private onGoEvent() {\r\n    const link = 'crm/events/' + this.selectedEvent.id;\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  onSetStartDate(date: Date) {\r\n    this.form.get('start').patchValue(date);\r\n    // this.search();\r\n  }\r\n\r\n  onSetEndDate(date: Date) {\r\n    this.form.get('end').patchValue(date);\r\n    // this.search();\r\n  }\r\n\r\n  onClearStartDate() {\r\n    this.form.get('start').patchValue(null);\r\n    this.search();\r\n  }\r\n\r\n  onClearEndDate() {\r\n    this.form.get('end').patchValue(null);\r\n    this.search();\r\n  }\r\n\r\n  onSelectStartDate(date: Date) {\r\n    if (date instanceof Date) {\r\n      this.form.get('start').patchValue(date);\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  onSelectEndDate(date: Date) {\r\n    if (date instanceof Date) {\r\n      this.form.get('end').patchValue(date);\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  onCloseStartDate(date: Date) {\r\n    // this.form.get('start').patchValue(date);\r\n    // this.search();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Check Employees Free Time\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\" class=\"mb-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4 edit-start-date\">\r\n        <div class=\"form-group\">\r\n          <label>Start Date and Time*</label>\r\n          <pek-date-time-picker\r\n            (select)=\"onSelectStartDate($event)\"\r\n            [maxDate]=\"form.get('end')?.value\"\r\n            (clearDate)=\"onClearStartDate()\"\r\n            (setDate)=\"onSetStartDate($event)\"\r\n            [date]=\"form.get('start')?.value\"\r\n            placeholder=\"Choice Start Date and Time\"\r\n          ></pek-date-time-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-4 edit-end-date\">\r\n        <div class=\"form-group\">\r\n          <label>End Date and Time*</label>\r\n          <pek-date-time-picker\r\n            (select)=\"onSelectEndDate($event)\"\r\n            [minDate]=\"form.get('start')?.value\"\r\n            (clearDate)=\"onClearEndDate()\"\r\n            (setDate)=\"onSetEndDate($event)\"\r\n            [date]=\"form.get('end')?.value\"\r\n            placeholder=\"Choice End Date and Time\"\r\n          ></pek-date-time-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <div class=\"bar\">\r\n          <p-menubar [model]=\"menuItems\" [class.disabled]=\"!selectedEvent\"></p-menubar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"page__table\">\r\n    <p-table\r\n      selectionMode=\"single\"\r\n      scrollHeight=\"calc(100vh - 28rem)\"\r\n      [scrollable]=\"true\"\r\n      [paginator]=\"false\"\r\n      [value]=\"events\"\r\n      [(selection)]=\"selectedEvent\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 5%\" class=\"text-center\">#</th>\r\n          <th style=\"width: 30%\">Event Name</th>\r\n          <th style=\"width: 25%\" class=\"text-center\">Employee Name</th>\r\n          <th\r\n            style=\"width: 20%\"\r\n            pSortableColumn=\"start\"\r\n            class=\"text-center\"\r\n          >\r\n            Event Start\r\n            <p-sortIcon field=\"start\">\r\n            </p-sortIcon>\r\n          </th>\r\n          <th\r\n            style=\"width: 20%\"\r\n            class=\"text-center\"\r\n            pSortableColumn=\"end\"\r\n          >\r\n            Event End\r\n            <p-sortIcon field=\"end\">\r\n            </p-sortIcon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-event let-i=\"rowIndex\">\r\n        <tr [pSelectableRow]=\"event\" [class.overlap]=\"event.isDatesColliding\">\r\n          <td style=\"width: 5%\" class=\"text-center\">{{ i + 1 }}</td>\r\n          <td style=\"width: 30%\">\r\n            <a\r\n              [routerLink]=\"'/crm/events/' + event?.id\"\r\n              target=\"_blank\"\r\n            >\r\n              {{ event.event_type?.name }}\r\n            </a>\r\n          </td>\r\n          <td style=\"width: 25%\" class=\"text-center\">\r\n            <ng-container *ngIf=\"event.employee.length === 0\">\r\n              Not Related\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"event.employee.length > 0\">\r\n              <div *ngFor=\"let employee of event.employee\">\r\n                {{ employee.first_name + \" \" + employee.last_name }}\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n          <td style=\"width: 20%\" class=\"text-center\">\r\n            {{ event.start | date: \"dd/MM/yyyy, HH:mm\" }}\r\n          </td>\r\n          <td style=\"width: 20%\" class=\"text-center\">\r\n            {{ event.end | date: \"dd/MM/yyyy, HH:mm\" }}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"8\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"'Accept'\"\r\n    [disabled]=\"disableEmployees()\"\r\n    (click)=\"onAccept()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CrmEmployeeService} from '../../services/crm-employee.service';\nimport {CRMEmployee} from '../../models/crm-employee';\n\n@Component({\n  selector: 'pek-crm-employee-picker',\n  templateUrl: './crm-employee-picker.component.html',\n  styleUrls: ['./crm-employee-picker.component.scss']\n})\nexport class CrmEmployeePickerComponent implements OnInit, OnDestroy {\n  @Input() currentEmployeeIds: number[] = [];\n  @Output() selectEmployees: EventEmitter<number[]> = new EventEmitter<number[]>();\n\n  isLoading = true;\n  employees: CRMEmployee[] = [];\n  selectedEmployees: CRMEmployee[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly crmEmployeeService: CrmEmployeeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.crmEmployeeService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(employees => {\n      this.employees = employees;\n      this.findEmployees();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentEmployeeIds' in changes) {\n      this.selectedEmployees = [];\n      this.findEmployees();\n    }\n  }\n\n  onSelectEmployees(employees: CRMEmployee[]) {\n    if (employees) {\n      this.selectEmployees.emit(employees.map(e => e.id));\n    } else {\n      this.selectEmployees.emit(null);\n    }\n  }\n\n  findEmployees() {\n    if (this.currentEmployeeIds.length > 0) {\n      this.currentEmployeeIds.forEach(id => {\n        const findEmployee = this.employees.find(t => t.id === id);\n\n        if (findEmployee) {\n          this.selectedEmployees.push(findEmployee);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"crm-employee-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"employees\"\n    [(ngModel)]=\"selectedEmployees\"\n    optionLabel=\"fullName\"\n    placeholder=\"Select Employees\"\n    (ngModelChange)=\"onSelectEmployees($event)\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {EventType} from '../../models/event-type';\nimport {EventTypesService} from '../../services/event-types.service';\nimport {QuerySearch} from '@shared/models/other';\n\n@Component({\n  selector: 'pek-crm-event-type-picker',\n  templateUrl: './crm-event-type-picker.component.html',\n  styleUrls: ['./crm-event-type-picker.component.scss']\n})\nexport class CrmEventTypePickerComponent implements OnInit {\n  @Output() selectEventType: EventEmitter<number> = new EventEmitter<number>();\n  @Input() currentEventTypeId: any;\n  @Input() filters: QuerySearch[] = [];\n  isLoading = true;\n  eventTypes: EventType[] = [];\n  selectedEventTypeId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly eventTypeService: EventTypesService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.filters.length > 0) {\n      this.eventTypeService.getByFilters(this.filters).pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(eventTypes => {\n        this.eventTypes = eventTypes;\n\n        if (this.currentEventTypeId) {\n          this.selectedEventTypeId = this.currentEventTypeId;\n        }\n\n        this.isLoading = false;\n      });\n    } else {\n      this.eventTypeService.get().pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(eventTypes => {\n        this.eventTypes = eventTypes;\n\n        if (this.currentEventTypeId) {\n          this.selectedEventTypeId = this.currentEventTypeId;\n        }\n\n        this.isLoading = false;\n      });\n    }\n  }\n\n  onSelectEventType() {\n    this.selectEventType.emit(this.selectedEventTypeId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"crm-event-type-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"eventTypes\"\n    placeholder=\"Select Event Type\"\n    [(ngModel)]=\"selectedEventTypeId\"\n    (ngModelChange)=\"onSelectEventType()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {CompanyCategory, CompanyCategoryModule} from '../models/company-category';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditCompanyCategoryComponent\n} from '../modals/create-edit-company-category/create-edit-company-category.component';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyCategoryService {\n\n  categories: CompanyCategory[];\n  modules: CompanyCategoryModule[];\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'company_categories/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: { name: string, value: any }[]): Observable<CompanyCategory[]> {\n    if (this.categories) {\n      return of(this.categories);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: CompanyCategory[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => {\n        const categories = response.data;\n        this.categories = categories;\n        return categories;\n      }));\n  }\n\n  create(category: Partial<CompanyCategory>): Observable<CompanyCategory> {\n    return this.httpClient.post<{ data: CompanyCategory }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(category: Partial<CompanyCategory>): Observable<CompanyCategory> {\n    return this.httpClient.put<{ data: CompanyCategory }>(this.API_URL + this.url + category.id + '/', category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getModules(query?: QuerySearch[]): Observable<CompanyCategoryModule[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: CompanyCategoryModule[] }>(this.API_URL + 'modules/' + queryParams).pipe(\n      map(response => {\n        const modules = response.data;\n        this.modules = modules;\n        return modules;\n      }));\n  }\n\n  delete(category: CompanyCategory): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + category.id + '/');\n  }\n\n  createEditWarehouseModal(type: ModalActionType, category?: CompanyCategory): Observable<CompanyCategory> {\n    return this.dialog\n      .open<CreateEditCompanyCategoryComponent>(CreateEditCompanyCategoryComponent, {\n        width: '35rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of, ReplaySubject, Subject} from 'rxjs';\r\nimport {AddEventModalType, Companies, Company} from '../models/company';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {CreateEditCompanyComponent} from '../modals/create-edit-company/create-edit-company.component';\r\nimport {\r\n  CreateEditLinkedCompanyComponent\r\n} from '../modals/create-edit-linked-company/create-edit-linked-company.component';\r\nimport {AddCompanyToEventComponent} from '../modals/add-company-to-event/add-company-to-event.component';\r\nimport {AddEventToCompanyComponent} from '../modals/add-event-to-company/add-event-to-company.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  shortCompanies: Partial<Company>[];\r\n\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'companies/';\r\n  shortsCompaniesResult: ReplaySubject<Partial<Company>[]> = new ReplaySubject<Partial<Company>[]>();\r\n  isLoadingShortCompanies = false;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Company[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Company[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<Companies> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Companies }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<Company> {\r\n    return this.httpClient.get<{ data: Company }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  getShorts(): Observable<Partial<Company>[]> {\r\n    if (this.isLoadingShortCompanies) {\r\n      return this.shortsCompaniesResult;\r\n    } else {\r\n      this.isLoadingShortCompanies = true;\r\n      return this.getShortsCompanies();\r\n    }\r\n  }\r\n\r\n  getShortsCompanies(query?: QuerySearch[]): Observable<Partial<Company>[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Partial<Company>[] }>(this.API_URL + this.url + 'get_short_companies_list/' + queryParams).pipe(\r\n      map(response => {\r\n        const shortCompanies = response.data;\r\n        this.shortsCompaniesResult.next(shortCompanies);\r\n        return shortCompanies;\r\n      }));\r\n  }\r\n\r\n  create(company: Partial<Company>): Observable<Company> {\r\n    return this.httpClient.post<{ data: Company }>(this.API_URL + this.url, company).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updatePartial(company: Partial<Company>): Observable<Company> {\r\n    return this.httpClient.patch<{ data: Company }>(this.API_URL + this.url + company.id + '/', company).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  deleteLinkedCompany(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + 'linked_companies/' + id + '/');\r\n  }\r\n\r\n  createEditLinkCompany(id: number, company: Partial<Company>): Observable<Company> {\r\n    return this.httpClient.post<{ data: Company }>(this.API_URL + this.url + id + '/link_company/', company).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createEditCompanyModal(type: ModalActionType, company?: Company): Observable<Company> {\r\n    return this.dialog\r\n      .open<CreateEditCompanyComponent>(CreateEditCompanyComponent, {\r\n        width: '45rem',\r\n        height: 'auto',\r\n        data: {type, company},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  createEditLinkedCompanyModal(companyId: number, type: ModalActionType, company?: Company): Observable<Company> {\r\n    return this.dialog\r\n      .open<CreateEditLinkedCompanyComponent>(CreateEditLinkedCompanyComponent, {\r\n        width: '45rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {companyId, type, company},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAddEventToCompanyModal(type: AddEventModalType, company: Company): Observable<any> {\r\n    return this.dialog\r\n      .open<AddEventToCompanyComponent>(AddEventToCompanyComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, company},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ContactPerson} from '@shared/models/contact-person';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  CreateEditContactPersonComponent\r\n} from '../modals/create-edit-contact-person/create-edit-contact-person.component';\r\nimport {\r\n  CreateEditLinkedContactComponent\r\n} from '../modals/create-edit-linked-contact/create-edit-linked-contact.component';\r\nimport {AddEventModalType, Company} from '../models/company';\r\nimport {AddEventToCompanyComponent} from '../modals/add-event-to-company/add-event-to-company.component';\r\nimport {\r\n  AddEventToContactPersonComponent\r\n} from '../modals/add-event-to-contact-person/add-event-to-contact-person.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactPersonService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'contact_persons/';\r\n\r\n  contactPersons: ContactPerson[];\r\n  query;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<ContactPerson[]> {\r\n    if (this.contactPersons) {\r\n      return of(this.contactPersons);\r\n    }\r\n    return this.getForce(query, true);\r\n  }\r\n\r\n  getForce(query?: QuerySearch[], saveCache = false): Observable<ContactPerson[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ContactPerson[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => {\r\n        const contactPersons = response.data.map(p => {\r\n          return {\r\n            ...p,\r\n            fullName: `${p.first_name} ${p.last_name}`\r\n          };\r\n        });\r\n        if (saveCache) {\r\n          this.contactPersons = contactPersons;\r\n        }\r\n        return contactPersons;\r\n      })\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<ContactPerson> {\r\n    return this.httpClient.get<{ data: ContactPerson }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(contactPerson: ContactPerson): Observable<ContactPerson> {\r\n    return this.httpClient.post<{ data: ContactPerson }>(this.API_URL + this.url, contactPerson).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  update(contactPerson: ContactPerson): Observable<ContactPerson> {\r\n    return this.httpClient.put<{ data: ContactPerson }>(this.API_URL + this.url + contactPerson.id + '/', contactPerson).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): any {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  linkContact(id: number, contactPerson: Partial<ContactPerson>): Observable<ContactPerson> {\r\n    return this.httpClient.post<{ data: ContactPerson }>(this.API_URL + this.url + id + '/link_contact/', contactPerson).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  deleteLinkedContact(contactPerson: ContactPerson): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + 'linked_contacts/' + contactPerson.id + '/');\r\n  }\r\n\r\n  openCreateEditLinkedContactModal(type: ModalActionType, person: ContactPerson, contactPerson?: ContactPerson) {\r\n    return this.dialog\r\n      .open<CreateEditLinkedContactComponent>(CreateEditLinkedContactComponent, {\r\n        width: '35rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, person, contactPerson},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  createEditContactPersonModal(companyId: number, type: ModalActionType, contactPerson?: ContactPerson): Observable<ContactPerson> {\r\n    return this.dialog\r\n      .open<CreateEditContactPersonComponent>(CreateEditContactPersonComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        data: {companyId, type, contactPerson},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAddEventToContactPersonModal(type: AddEventModalType, contactPerson: ContactPerson): Observable<any> {\r\n    return this.dialog\r\n      .open<AddEventToContactPersonComponent>(AddEventToContactPersonComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, contactPerson},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {CRMEmployee} from '../models/crm-employee';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {EventType} from '../models/event-type';\r\nimport {CreateEditEventTypeComponent} from '../modals/create-edit-event-type/create-edit-event-type.component';\r\nimport {CreateEditCrmEmployeeComponent} from '../modals/create-edit-crm-employee/create-edit-crm-employee.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrmEmployeeService {\r\n\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'employees/';\r\n\r\n  employees: CRMEmployee[];\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private dialog: MatDialog\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<CRMEmployee[]> {\r\n    // if (this.employees) {\r\n    //   return of(this.employees);\r\n    // }\r\n\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('query', query);\r\n\r\n    return this.httpClient.get<{ data: CRMEmployee[] }>(this.API_URL + this.url  + queryParams).pipe(\r\n      map(response => {\r\n        const employees = response.data.map(e => {\r\n          return {\r\n            ...e,\r\n            fullName: `${e.first_name} ${e.last_name}`\r\n          };\r\n        });\r\n        this.employees = employees;\r\n        return employees;\r\n      }));\r\n  }\r\n\r\n  getById(id): Observable<CRMEmployee> {\r\n    return this.httpClient\r\n      .get<{ data: CRMEmployee }>(this.API_URL + this.url + id + '/')\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  create(employee: Partial<CRMEmployee>): Observable<CRMEmployee> {\r\n    return this.httpClient.post<{ data: CRMEmployee }>(this.API_URL + this.url, employee).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  update(employee: Partial<CRMEmployee>): Observable<CRMEmployee> {\r\n    return this.httpClient.patch<{ data: CRMEmployee }>(this.API_URL + this.url + employee.id + '/', employee).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(employee: CRMEmployee): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + employee.id + '/');\r\n  }\r\n\r\n  createEditEmployeeModal(type: ModalActionType, employee?: CRMEmployee): Observable<CRMEmployee> {\r\n    return this.dialog\r\n      .open<CreateEditCrmEmployeeComponent>(CreateEditCrmEmployeeComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, employee},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {CrmPosition} from '../../business-trips/models/crm-position';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {CRMEmployee} from '../models/crm-employee';\r\nimport {\r\n  CreateEditCrmEmployeeComponent\r\n} from '../modals/create-edit-crm-employee/create-edit-crm-employee.component';\r\nimport {\r\n  CreateUpdateCrmPositionsComponent\r\n} from '../modals/create-update-crm-positions/create-update-crm-positions.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrmPositionsService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'positions/';\r\n\r\n  constructor(private httpClient: HttpClient, public dialog: MatDialog) {}\r\n  get(query?: QuerySearch[]): Observable<CrmPosition[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient\r\n      .get<{ data: CrmPosition[] }>(this.API_URL + this.url + qString)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getById(id): Observable<CrmPosition> {\r\n    return this.httpClient.get<{ data: CrmPosition }>(this.API_URL + this.url + id + '/').pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  create(entity) {\r\n    return this.httpClient\r\n      .post<{ data: CrmPosition }>(this.API_URL + this.url, entity)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  update(id, entity: CrmPosition) {\r\n    return this.httpClient.patch(this.API_URL + this.url + id + '/', entity);\r\n  }\r\n\r\n  delete(entity: CrmPosition) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n\r\n  createEditCrmPositionModal(type: ModalActionType, position?: CrmPosition) {\r\n    return this.dialog\r\n      .open<CreateUpdateCrmPositionsComponent>(CreateUpdateCrmPositionsComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, position},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {CreateEditEventTypeComponent} from '../modals/create-edit-event-type/create-edit-event-type.component';\r\nimport {EventType} from '../models/event-type';\r\nimport {\r\n  CreateEditExternalEventTypeComponent\r\n} from '../modals/create-edit-external-event-type/create-edit-external-event-type.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventTypesService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'event_types/';\r\n\r\n  eventTypes: EventType[];\r\n  externalEventTypes: EventType[];\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query: QuerySearch[] = []): Observable<EventType[]> {\r\n    if (this.eventTypes) {\r\n      return of(this.eventTypes);\r\n    }\r\n\r\n    query.push({name: 'is_inner', value: true});\r\n\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: EventType[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => {\r\n        const eventTypes = response.data;\r\n        this.eventTypes = eventTypes;\r\n        return eventTypes;\r\n      }));\r\n  }\r\n\r\n  getExternalEventTypes(query: QuerySearch[] = []): Observable<EventType[]> {\r\n    if (this.externalEventTypes) {\r\n      return of(this.externalEventTypes);\r\n    }\r\n\r\n    query.push({name: 'is_inner', value: false});\r\n\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: EventType[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => {\r\n        const eventTypes = response.data;\r\n        this.externalEventTypes = eventTypes;\r\n        return eventTypes;\r\n      }));\r\n  }\r\n\r\n  getByFilters(query?: QuerySearch[]): Observable<EventType[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: EventType[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n\r\n  create(eventType: EventType): Observable<EventType> {\r\n    return this.httpClient.post<{ data: EventType }>(this.API_URL + this.url, eventType).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  update(eventType: EventType): Observable<EventType> {\r\n    return this.httpClient.patch<{ data: EventType }>(this.API_URL + this.url + eventType.id + '/', eventType).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(eventType: EventType): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + eventType.id + '/');\r\n  }\r\n\r\n  addCalendarFromGoogle(eventType: Partial<EventType>): Observable<EventType> {\r\n    return this.httpClient.post<{ data }>(this.API_URL + this.url + 'add_calendar_from_google/', eventType).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createEditEventType(type: ModalActionType, eventType?: EventType): Observable<EventType> {\r\n    return this.dialog\r\n      .open<CreateEditEventTypeComponent>(CreateEditEventTypeComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, eventType},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  createEditExternalEventType(type: ModalActionType, eventType?: EventType): Observable<EventType> {\r\n    return this.dialog\r\n      .open<CreateEditExternalEventTypeComponent>(CreateEditExternalEventTypeComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {type, eventType},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {EventItem} from '../models/event-item';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '@env/environment';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {AddCompanyToEventComponent} from '../modals/add-company-to-event/add-company-to-event.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  AddContactPersonToEventComponent\r\n} from '../modals/add-contact-person-to-event/add-contact-person-to-event.component';\r\nimport {EditEmployeeEventDateComponent} from '../modals/edit-employee-event-date/edit-employee-event-date.component';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {CreateEditEventComponent} from '../modals/create-edit-event/create-edit-event.component';\r\nimport {AddEventModalType} from '../models/company';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventsListService {\r\n\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'events_list/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  getById(id): Observable<EventItem> {\r\n    return this.httpClient.get<{ data: EventItem }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<EventItem[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: EventItem[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getShorts(query?: QuerySearch[]): Observable<EventItem[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: EventItem[] }>(this.API_URL + this.url + 'get_short_events_list/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getByEventsDays(): Observable<any[]> {\r\n    return this.httpClient.get<{ data: any[] }>(this.API_URL + this.url + 'events_by_days/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(event: EventItem): Observable<EventItem> {\r\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url, event).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  addCompany(id: number, event: Partial<EventItem>[]): Observable<EventItem> {\r\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url + id + '/add_companies/', event).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  addContact(id: number, event: Partial<EventItem>[]): Observable<EventItem> {\r\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url + id + '/add_contacts/', event).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  changeEvent(id: number, event: EventItem): Observable<EventItem> {\r\n    return this.httpClient.patch<{ data: EventItem }>(this.API_URL + this.url + id + '/', event).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  createScheduleFromEvent(id: number, data: any): Observable<any> {\r\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + 'schedule_from_event/' + id + '/', data).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  openAddCompanyToEventModal(eventId: number): Observable<EventItem> {\r\n    return this.dialog\r\n      .open<AddCompanyToEventComponent>(AddCompanyToEventComponent, {\r\n        width: '35rem',\r\n        height: 'auto',\r\n        data: eventId,\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAddContactPersonToEventModal(eventId: number): Observable<EventItem> {\r\n    return this.dialog\r\n      .open<AddContactPersonToEventComponent>(AddContactPersonToEventComponent, {\r\n        width: '35rem',\r\n        height: 'auto',\r\n        data: eventId,\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openEditEmployeeEventDatesModal(employeeIds: number[], event: EventItem): Observable<{ start: Date, end: Date }> {\r\n    return this.dialog\r\n      .open<EditEmployeeEventDateComponent>(EditEmployeeEventDateComponent, {\r\n        width: '64rem',\r\n        height: 'auto',\r\n        data: {employeeIds, event},\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openCreateEventEventModal(modalType: ModalActionType,\r\n                            type: AddEventModalType,\r\n                            event?: EventItem,\r\n                            companyId?: number,\r\n                            isLinkedEvent?: boolean): Observable<EventItem> {\r\n    return this.dialog\r\n      .open<CreateEditEventComponent>(CreateEditEventComponent, {\r\n        width: '60rem',\r\n        height: 'auto',\r\n        data: {modalType, type, event, companyId, isLinkedEvent},\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\nimport {UserProfile} from '../models/user-profile';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../models/event-type';\nimport {CreateEditEventTypeComponent} from '../modals/create-edit-event-type/create-edit-event-type.component';\nimport {User} from '@shared/models/user';\nimport {CreateEditUserProfileComponent} from '../modals/create-edit-user-profile/create-edit-user-profile.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'user_profile/';\n\n  userProfiles: UserProfile[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private dialog: MatDialog\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<UserProfile[]> {\n    if (this.userProfiles) {\n      return of(this.userProfiles);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: UserProfile[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => {\n        const userProfile = response.data.map(p => {\n          return {\n            ...p,\n            fullName: `${p.first_name} ${p.last_name}`\n          }\n        });\n        this.userProfiles = userProfile;\n        return userProfile;\n      }));\n  }\n\n  create(userProfile): Observable<UserProfile> {\n    return this.httpClient.post<{ data: UserProfile }>(this.API_URL + this.url, userProfile).pipe(\n        map(response => response.data)\n      );\n  }\n\n  update(entity: UserProfile): Observable<UserProfile> {\n    return this.httpClient.put<{ data: UserProfile }>(this.API_URL + this.url + entity.id + '/', entity).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(entity: UserProfile): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\n  }\n\n  createEditUserProfileModel(type: ModalActionType, userProfile?: UserProfile): Observable<UserProfile> {\n    return this.dialog\n      .open<CreateEditUserProfileComponent>(CreateEditUserProfileComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, userProfile},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"not-found\">\n  <h1>Under Construction</h1>\n\n  <a\n    class=\"dashboard__button p-button-secondary\"\n    pButton\n    type=\"button\"\n    [label]=\"'Go Back'\"\n    routerLink=\"/\"\n  ></a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeliveryChainsRouting } from './delivery-chains.routing';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    NotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    DeliveryChainsRouting,\n    SharedModule\n  ]\n})\nexport class DeliveryChainsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  {path: '', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DeliveryChainsRouting { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-guide-button',\r\n  templateUrl: './guide-button.component.html',\r\n  styleUrls: ['./guide-button.component.scss']\r\n})\r\nexport class GuideButtonComponent implements OnInit {\r\n  @Input() btnStyle: 'primary' | 'secondary' | 'outline' = 'primary';\r\n  @Input() title: string;\r\n  @Input() routeUrl: string;\r\n  @Input() buttonsPosition: 'left' | 'right' | 'top' | 'bottom';\r\n  @Input() info: boolean;\r\n  @Input() disabled = false;\r\n  @Input() hideButtons = false;\r\n  @Output() navigate: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() getInfo: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  env = environment\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNavigate() {\r\n    if (this.routeUrl) {\r\n      this.navigate.emit(this.routeUrl);\r\n    }\r\n  }\r\n\r\n  onGetInfo() {\r\n    if (this.info) {\r\n      this.getInfo.emit();\r\n    }\r\n  }\r\n\r\n}\r\n","<button\n  class=\"guide-button\"\n  [class.guide-button_secondary]=\"btnStyle === 'secondary'\"\n  [class.guide-button_outline]=\"btnStyle === 'outline'\"\n  [class.guide-button_disabled]=\"disabled\"\n  [routerLinkActive]=\"routeUrl ? 'guide-button_active' : ''\"\n>\n  <span\n    [routerLink]=\"routeUrl\"\n    class=\"guide-button__inner\"\n  >\n    {{title}}\n  </span>\n  <div\n    *ngIf=\"!disabled && !hideButtons && btnStyle === 'primary'\"\n    class=\"guide-button__buttons\"\n    [class.guide-button__buttons_right]=\"buttonsPosition === 'right'\"\n    [class.guide-button__buttons_left]=\"buttonsPosition === 'left'\"\n    [class.guide-button__buttons_top]=\"buttonsPosition === 'top'\"\n    [class.guide-button__buttons_bottom]=\"buttonsPosition === 'bottom'\"\n  >\n    <button (click)=\"onGetInfo()\">?</button>\n    <button (click)=\"onNavigate()\">\n      <pek-in-icon></pek-in-icon>\n    </button>\n    <button>R</button>\n  </div>\n</button>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\nexport class GlossaryItem {\n  title: string;\n  description: string;\n  images?: string[];\n}\n\n@Component({\n  selector: 'pek-guide-glossary',\n  templateUrl: './guide-glossary.component.html',\n  styleUrls: ['./guide-glossary.component.scss']\n})\nexport class GuideGlossaryComponent implements OnInit {\n\n  searchTitle = '';\n\n  selectedItem: GlossaryItem = null;\n\n  glossary: GlossaryItem[] = [\n    {\n      title: 'Product structure',\n      images: ['1.png'],\n      description: 'Product structure represents a hierarchical structure of the product indicating the technological operations required for the production of the selected item. The hierarchy makes it possible to specify the sequence of production of a product - according to the hierarchy, it is impossible to get a parent element without having or producing a child.'\n    },\n    {\n      title: 'Production list',\n      images: ['2.png'],\n      description: 'A production list is an assembly sent to production, for which it is necessary to check the availability of the necessary items in the warehouse, send a request for the purchase of purchased items and prepare all available items on one locator, so that later, when production requests the necessary items for sub assemblies, quickly prepare them and put into production.'\n    },\n    {\n      title: 'Production list deficit',\n      images: ['3.png'],\n      description: 'If we have no required quantity of items on stock or the items is reserved for other production list that we have a production list deficit. This item will have status “deficit” in production plan till we get it on stock and reserve it for this production list.'\n    },\n    {\n      title: 'Actual quantity for production list',\n      images: ['4.png', '5.png'],\n      description: 'The quantity, available for this production list item in stock. It is necessary to put down the actual quantity when creating a new production list. Depend of availability we will see the status of items in production list and production plan.',\n    },\n    {\n      title: 'Free warehouse quantity',\n      images: ['6.png'],\n      description: 'Available warehouse quantity. After we set actual quantity for production list item this quantity is reserved for this production list and not available for reservation for another. Free warehouse quantity – stock quantity, that we can use for production list items.'\n    },\n    {\n      title: 'Warehouse reservation/reserved quantity',\n      description: 'After we set actual quantity, we reserve required quantity for production list from available warehouse quantity and can use this quantity only for manufacture of product, for which this quantity is reserved.'\n    },\n    {\n      title: 'Cancel actual quantity',\n      images: ['7.png'],\n      description: 'Cancellation of reservation of reserved for production list items and make them free, to use for other production list.'\n    },\n    {\n      title: 'Procurement auto request',\n      images: ['8.png'],\n      description: 'Request for procurement items, created automatically after setting of actual quantity for production list. Procurement manager will see a name of production list, formed this request. This request connected to this production list an production plan for this production list. In production plan for this item will be shown a status of procurement.'\n    },\n    {\n      title: 'Production requests',\n      images: ['9.png'],\n      description: 'Request to warehouse for parts, required to manufacture ordered to own production or outsourcing chain.'\n    },\n    {\n      title: 'Production plan',\n      images: ['10.png'],\n      description: 'Gantt style schedule for manufacturing. Include Structure of product with stock statuses, calendar, resource planing option, order creation option.'\n    },\n    {\n      title: 'General procurement',\n      images: ['11.png', '12.png'],\n      description: 'A procurement module, includes an option for all company expenses and procurement by any categories, that can be configured.'\n    },\n    {\n      title: 'Outsourcing procurement',\n      description: 'The procurement module, supports outsourcing chain procurement. Include all options, required for outsourcing supply chain.'\n    },\n    {\n      title: 'Production list procurement',\n      description: 'The procurement module, supports procurement chain for production list auto requests.'\n    },\n    {\n      title: 'Auxiliary invoice',\n      description: 'Service invoices, connected to material procurement invoices – delivery, custom e.t.c. and influencing to end cost of materials. Should be created inside of procurement chain for this procured materials.'\n    },\n    {\n      title: 'Procurement request',\n      images: ['13.png'],\n      description: 'Request to procurement items and materials. Can be auto for production list or manual for all other purposes – manufacture, tools, office e.t.c. List of procurement request will form procurement'\n    },\n    {\n      title: 'Purchased items/parts',\n      description: 'Type warehouse parts, that can be procured in market and don’t require additional manufacturing process. Like example bolts, nuts, steel pipes, motors, laptops.'\n    },\n    {\n      title: 'Manufactured parts/items',\n      description: 'Type of warehouse items, that required any manufacturing process or services – laser cutting, welding, painting.'\n    },\n    {\n      title: 'Assemblies',\n      description: 'Type of warehouse items, that include other items after manufacturing process – welding frames, screwed together parts.'\n    },\n    {\n      title: 'Procurement chain',\n      images: ['14.png'],\n      description: 'All required information and all procurement processes, required for procure purchased items, from request till payment, presented in one window.'\n    },\n    {\n      title: 'Outsourcing chain',\n      images: ['15.png'],\n      description: 'All required information and all procurement processes, required for procure outsourcing items, from request till payment, presented in one window.'\n    },\n    {\n      title: 'Sales chain',\n      description: 'All required information and all processes, required for sales, presented in one window.'\n    },\n    {\n      title: 'Delivery chain',\n      description: 'All required information and all processes, required for delivery products to customers, presented in one window.'\n    },\n    {\n      title: 'Shipment request',\n      description: 'List of products, required for preparationin warehouse for sending to customer, formed throw delivery chain.'\n    },\n    {\n      title: 'Tools/equipment requests',\n      images: ['16.png'],\n      description: 'Request to warehouse with required to prepare and bring to current user items from stock.'\n    },\n    {\n      title: 'Physical inventory',\n      description: 'The process of bringing the number of warehouse items up to date.'\n    },\n    {\n      title: 'Warehouse locator',\n      images: ['17.png'],\n      description: 'Storage place with specific coordinates.'\n    },\n    {\n      title: 'Isolator',\n      images: ['18.png'],\n      description: 'Specific place in warehouse with items, canceled by QC process and require special decision about next processing.'\n    },\n    {\n      title: 'Root assembly',\n      images: ['19.png'],\n      description: 'Finish assembly for current production plan.'\n    },\n    {\n      title: 'Subassembly',\n      images: ['20.png'],\n      description: 'Assembly, placed inside of other assembly.'\n    },\n    {\n      title: 'Parent assembly',\n      images: ['21.png'],\n      description: 'Assembly, consist other assembly inside themselves.'\n    },\n    {\n      title: 'Rework',\n      images: ['22.png'],\n      description: 'The process of repairing or additional manufacturing with order, that was sended back from QC process or from isolator.'\n    },\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.glossary.sort((a, b) => a.title.localeCompare(b.title));\n  }\n\n  openingImage() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open');\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        });\n      });\n    });\n  }\n\n  onSelectItem(item: GlossaryItem) {\n    if (this.selectedItem && this.selectedItem.title === item.title) {\n      this.selectedItem = null;\n      return;\n    }\n\n    this.selectedItem = item;\n    setTimeout(() => this.openingImage());\n  }\n}\n","<div class=\"guide-glossary\">\n  <div class=\"guide-glossary__row\">\n    <div class=\"guide-glossary__column-left\">\n      <input\n        [(ngModel)]=\"searchTitle\"\n        pInputText\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"Search...\"\n      />\n      <ul class=\"guide-glossary__list\">\n        <li\n          class=\"guide-glossary__item\"\n          [class.active]=\"selectedItem?.title === item.title\"\n          *ngFor=\"let item of glossary | glossarySearch: searchTitle\"\n          (click)=\"onSelectItem(item)\"\n        >\n          {{item.title}}\n        </li>\n      </ul>\n    </div>\n    <div class=\"guide-glossary__column-right\">\n      <div class=\"guide-glossary__box\">\n        <h2>{{selectedItem?.title || 'Choice Item'}}</h2>\n        <div class=\"guide-glossary__description\">\n          <ng-container *ngIf=\"selectedItem\">\n            <p>\n              {{selectedItem.description}}\n            </p>\n\n            <img *ngFor=\"let img of selectedItem.images\" [src]=\"'assets/images/glossary/' + img\">\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-confirmation-instruction',\n  templateUrl: './confirmation-instruction.component.html',\n  styleUrls: ['./confirmation-instruction.component.scss']\n})\nexport class ConfirmationInstructionComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open')\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        })\n      });\n    });\n  }\n\n}\n","<div class=\"confirmation-instruction\">\n  <h2>Confirmation Module Instruction</h2>\n  <p>This is where the <span>Confirmation Module Instruction</span> will be located. It is currently missing.</p>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-main-instruction',\n  templateUrl: './main-instruction.component.html',\n  styleUrls: ['./main-instruction.component.scss']\n})\nexport class MainInstructionComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open')\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        })\n      });\n    });\n  }\n\n}\n","<div class=\"main-instruction\">\n  <h2>MODULES AND CONNECTIONS</h2>\n\n  <p>\n    R-WAVE erp supports all business processes required for the operation of manufacturing and development companies.\n    All departments of the company are presented in the form of modules:\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/main/1.jpg\">\n  </p>\n\n  <h2>ADVANTAGES</h2>\n\n  <p>\n    The advantage of R-WAVE ERP is full cycle of manufacturing process. R-WAVE ERP contains and supports all the processes necessary for the production of the final product, from\n    the structure of the product, purchase, storage in a warehouse, and ending directly with production and subsequent sale\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/main/2.jpg\">\n  </p>\n\n  <p>\n    In R-WAVE ERP we use special concepts:<br>\n    -\tproduct structure<br>\n    -\tproduction list<br>\n    -\tproduction plan<br>\n    -\tprocurement chain\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/main/3.jpg\">\n  </p>\n\n  <p>\n    These special concepts allow you to organize an end-to-end production process for the final product.\n    The product structure defines the composition of the product, the sequence of assembly and required technologies.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/main/4.jpg\">\n    <img src=\"assets/images/instructions/main/3.jpg\">\n  </p>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-product-structure-instruction',\n  templateUrl: './product-structure-instruction.component.html',\n  styleUrls: ['./product-structure-instruction.component.scss']\n})\nexport class ProductStructureInstructionComponent implements OnInit, AfterViewInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open')\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        })\n      });\n    });\n  }\n\n\n}\n","<div class=\"product-structure-instruction\">\n  <h2>Product Structure Module Instruction</h2>\n\n  <p>\n    Product structure represents a hierarchical structure of the product indicating the technological operations\n    required for the production of the selected item.\n    The hierarchy makes it possible to specify the sequence of production of a product - according to the hierarchy, it\n    is impossible to get a parent element without having or producing a child.\n  </p>\n\n  <p>\n    In the products menu, all products are divided into categories.\n    To create a new structure, you must click the new product button, fill in the code, name and select a category\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/1.jpg\">\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/2.jpg\">\n  </p>\n\n  <p>\n    There are three types of positions in the structure<br>\n    - assemblies - positions of the structure, inside which other positions can be located<br>\n    - manufactured parts - items that need to be produced or ordered in outsourcing<br>\n    - purchased - purchased items\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/3.jpg\">\n  </p>\n\n  <p>\n    Options for the structure are presented in the menu\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/4.jpg\">\n  </p>\n\n  <p>\n    After creating a new product, you need to fill in the structure - create assemblies, fill them with subassemblies,\n    manufactured parts or purchased. To do this, select the level to which we want to add the position, select add item\n    from the menu, then select the position type.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/5.jpg\">\n  </p>\n\n  <p>Then we look for the necessary position according to the nomenclature or create a new one.</p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/6.jpg\">\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/7.jpg\">\n  </p>\n\n  <p>\n    If you need to change the parent of a position, you can use drag-n-drop\n  </p>\n\n  <p>\n    After creating a new assembly or manufactured part, you must specify the technologies required for the production of\n    this position, in the order in which it is necessary for production.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/8.jpg\">\n  </p>\n\n  <p>\n    If an existing position was selected, and not a new one was created, the technologies will be put down automatically\n    from the structure where this position was originally created. If an assembly has been selected, the structure of\n    this assembly will also be automatically pulled up.\n  </p>\n\n  <p>\n    It is also possible to import the product structure from SolidWorks. To do this, select the structure level from\n    which you want to import and follow the instructions ...\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/9.jpg\">\n  </p>\n\n  <p>\n    In order to send the selected structure to production, you need to select the assembly you want to produce, select\n    the make production list item in the menu, select the required quantity, and also select «group production plan» if\n    we want to produce the selected quantity in one production list\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/10.jpg\">\n  </p>\n\n  <p>\n    The list of technologies is formed in the technology menu. To create a new technology, you must click the new\n    technology button and fill in the required fields\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/11.jpg\">\n  </p>\n\n  <p>\n    The prefixes menu is intended for creating prefixes for the structure importer configuration. The prefix is an\n    indication that the position in the import file, the code of which begins with this prefix, is a manufactured part\n    or assembly\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/12.jpg\">\n  </p>\n\n  <p>\n    In the category menu, we create a list of categories for the stretch product\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/product-structure/13.jpg\">\n  </p>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-sales-instruction',\n  templateUrl: './sales-instruction.component.html',\n  styleUrls: ['./sales-instruction.component.scss']\n})\nexport class SalesInstructionComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open')\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        })\n      });\n    });\n  }\n\n}\n","<div class=\"sales-instruction\">\n  <h2>Sales Module Instruction</h2>\n  <p>This is where the <span>Sales Module Instruction</span> will be located. It is currently missing.</p>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-warehouse-instruction',\n  templateUrl: './warehouse-instruction.component.html',\n  styleUrls: ['./warehouse-instruction.component.scss']\n})\nexport class WarehouseInstructionComponent implements OnInit, AfterViewInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    const guide = document.querySelector('.guide');\n    const images = guide.querySelectorAll('img');\n\n    const imageBlock = guide.querySelector('.guide__image-box');\n\n    images.forEach(image => {\n      const idx = image.src.indexOf('/assets/');\n\n      image.addEventListener('click', () => {\n        imageBlock.innerHTML = '';\n        imageBlock.classList.add('guide__image-box_open');\n\n        const newImage = document.createElement('img');\n        newImage.src = image.src.slice(idx + 1);\n        imageBlock.appendChild(newImage);\n\n        imageBlock.querySelector('img').addEventListener('click', evt => {\n          evt.stopPropagation();\n        });\n      });\n    });\n  }\n\n}\n","<div class=\"warehouse-instruction\">\n  <h2>Warehouse Module Instruction</h2>\n\n  <h3>MENU ITEMS</h3>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/1.jpg\">\n  </p>\n\n  <p>\n    In this section, you can view the current state of the warehouse, and filter the available items by filters:<br>\n    • warehouse category<br>\n    • location<br>\n    • type of<br>\n    • product structure category (for the root nomenclature<br>\n    • search by name<br>\n    • search by code<br>\n    • search by description\n  </p>\n\n  <p>\n    You can also create a new nomenclature, where you first need to select the type of item to be created and then fill\n    in the required fields\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/2.jpg\">\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/3.jpg\">\n  </p>\n\n  <h3>QC-WAREHOUSE</h3>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/4.jpg\">\n  </p>\n\n  <p>\n    This section includes invoices and orders from own production that have passed QC. <br>\n    They are categorized\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/5.jpg\">\n  </p>\n\n  <p>\n    Open the necessary invoice or order for your production, select items, select the locator where you want to place\n    the selected item.\n    Locators that already have positions of this item are marked in blue. Within the same warehouse, we can only select\n    a locator, where position data is already located.\n  </p>\n\n  <h3>PRODUCTION LIST</h3>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/6.jpg\">\n  </p>\n\n  <p>\n    A production list is an assembly sent to production, for which it is necessary to check the availability of the\n    necessary items in the warehouse, send a request for the purchase of purchased items and prepare all available items\n    on one locator, so that later, when production requests the necessary items for sub assemblies, quickly prepare them\n    and put into production\n  </p>\n\n  <p>\n    It is necessary to put down the actual quantity when creating a new production list, as well as track the receipt of\n    items that were previously in deficit, and their transfer to the production list locator. Items that were previously\n    in deficit, but then received at the warehouse and became available, are marked in color<br>\n    red - available items that are not related to this production list (manually ordered to the warehouse) green - items\n    received at the warehouse, ordered directly through this production list or through the plan (auto request)<br>\n    If, when preparing a production list, we decide to use a ready-made assembly included in this production list, there\n    is no need to prepare the items included in this assembly.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/7.jpg\">\n  </p>\n\n  <h3>PRODUCTION REQUEST</h3>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/8.jpg\">\n  </p>\n\n  <p>\n    Production requests - requests from production for certain items needed to produce specific sub- assemblies of the\n    production list or to produce specific manufactured items at the moment\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/9.jpg\">\n  </p>\n\n  <p>\n    It is a list of required items, subassemblies or material, indicating the required quantity and location in the\n    warehouse\n  </p>\n\n  <p>\n    It is necessary to prepare, print out the form, sign the form yourself and at the production site, keep a copy for\n    yourself, complete the request, transfer the positions according to the list to production. It is possible to cancel\n    a production request if it was created by mistake.\n    it is possible to use scanning when searching for items in the warehouse\n  </p>\n\n  <h3>TOOL REQUEST</h3>\n\n  <p>\n    A list of tools or supplies requested by the employee for use or requested for the department. During processing,\n    they are moved to the employee's (department's) locator\n  </p>\n\n  <h3>WHERE USED</h3>\n\n  <p>\n    Filter to find which builds use the selected stock item\n  </p>\n\n  <h3>PHYSICAL INVENTORY</h3>\n\n  <p>\n    Allows you to make an inventory of the selected locators in order to bring the number in the erp system in line with\n    the real number\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/10.jpg\">\n  </p>\n\n  <p>\n    To create a new physical inventory, select the warehouses and shelves for which you need an inventory\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/11.jpg\">\n  </p>\n\n  <p>\n    After creation, a list of all positions recorded on the selected locators will be displayed.\n    It is necessary to bring the recorded quantity into conformity with the real one. To do this, you need to edit the\n    entered quantity field.\n    If during the inventory process it is necessary to inventory an item that is not in the list, you need to click the\n    add product button, find the required item, enter the quantity, select the locator to which we want to record it,\n    and enter the technology if it is a manufactured item or assembly.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/12.jpg\">\n  </p>\n\n  <p>\n    Also, if you need to change the position locator in the inventory list, you can do this by clicking the move product\n    button.\n    After the completion of the inventory, you must click the Complite button, after which all changes will be written\n    to the system\n  </p>\n\n  <h3>ISOLATOR</h3>\n\n  <h3>CONFIG MENU</h3>\n\n  <h3>Warehouses</h3>\n\n  <p>\n    It is possible to create the required number of warehouses - storage areas with their own structure locators.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/13.jpg\">\n  </p>\n\n  <p>\n    Each warehouse has locators — specific storage locations within the warehouse.\n    Each locator, in addition to the name and description, can have coordinates - a row, a column, a shelf, a place.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/14.jpg\">\n  </p>\n\n  <h3>Unit of measure</h3>\n\n  <p>\n    Units of measure to be used for warehouse categories\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/15.jpg\">\n  </p>\n\n  <h3>\n    Serial numbers type\n  </h3>\n\n  <p>\n    You can assign a serial number to a warehouse item. The assignment of a serial number occurs when completing an\n    invoice (purchase chains and chain outsourcing), ordering to your own production or when confirming production (a\n    serial number is assigned only to the root assembly)\n  </p>\n\n  <p>\n    In order for the item to have a serial number, you need to create a new type of serial number, in which you need to\n    fill in the prefix - the invariable part of the serial number, code - the part of the number that will increase by\n    one when creating a new one, and the suffix - the invariable part of the serial number.\n  </p>\n\n  <p>\n    <img src=\"assets/images/instructions/warehouse/16.jpg\">\n  </p>\n\n  <p>\n    And then select an item that will obey the created serial number assignment rule.\n  </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-outsourcing',\n  templateUrl: './guide-outsourcing.component.html',\n  styleUrls: ['./guide-outsourcing.component.scss']\n})\nexport class GuideOutsourcingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-outsourcing\">\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-ouFtsourcing__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating of outsourcing order\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Outsourcer\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed Supplier after lender confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Outsourcer request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Delivered Items\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of Outsourcer by tender\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourser\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-procurement',\n  templateUrl: './guide-procurement.component.html',\n  styleUrls: ['./guide-procurement.component.scss']\n})\nexport class GuideProcurementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-procurement\">\n  <div class=\"guide-procurement__col guide-procurement__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Procurement request for production list\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed Supplier after lender confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Manufacturing procurement\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Supplier request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Delivered Items\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of Supplier by tender\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-production',\n  templateUrl: './guide-production.component.html',\n  styleUrls: ['./guide-production.component.scss']\n})\nexport class GuideProductionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-production\">\n  <div class=\"guide-production__col guide-production__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production list deficit\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tool request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Rework all and rework item process\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Completed production order\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating order to Outsourcer\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tool request\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-sales',\n  templateUrl: './guide-sales.component.html',\n  styleUrls: ['./guide-sales.component.scss']\n})\nexport class GuideSalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-sales\">\n  <div class=\"guide-sales__col guide-sales__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Contact and events\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Marketing events\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span class=\"arrow\"></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Sales\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Sales events\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for creating a new production\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating a new delivery chain\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Contacts and events\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmations\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Delivery chain\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-guide-confirmation',\n  templateUrl: './guide-confirmation.component.html',\n  styleUrls: ['./guide-confirmation.component.scss']\n})\nexport class GuideConfirmationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-confirmation\">\n  <div class=\"guide-confirmation__col guide-confirmation__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Product Structure\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Sales\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Manufacturing procurement\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsoursing\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Purchasing\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-confirmation__col guide-confirmation__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"New nomenclature confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Payment confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Payment confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Payment confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Write off by physical inventory confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Reservation of assemblies with serial numbers confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Supplier tender confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-confirmation__col guide-confirmation__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmations\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-confirmation__col guide-confirmation__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creation of production list\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Payment process\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with production plan regarding reserved serial numbers\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed payment\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed Supplier after tender confirmation\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-confirmation__col guide-confirmation__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Payments\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Procurement\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-guide-warehouse',\n  templateUrl: './guide-warehouse.component.html',\n  styleUrls: ['./guide-warehouse.component.scss']\n})\nexport class GuideWarehouseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-warehouse\">\n  <div class=\"guide-warehouse__col guide-warehouse__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmations\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Delivery chain\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-warehouse__col guide-warehouse__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating production list\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"QC passed invoices and orders from own manufacture\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Sipment request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tools request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-warehouse__col guide-warehouse__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-warehouse__col guide-warehouse__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production list deficit\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Delivery process\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"QC passed item\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Physical inventory\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tool request\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Procurement request for production list\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-warehouse__col guide-warehouse__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"outline\"\n        [hideButtons]=\"true\"\n        title=\"Customer\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Manufacturing procurement\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {GuideComponent} from './guide/guide.component';\r\nimport {GuideButtonComponent} from './guide-button/guide-button.component';\r\nimport {GuideRouting} from './guide.routing';\r\nimport {GuideSalesComponent} from './guide-sales/guide-sales.component';\r\nimport {GuideOutsourcingComponent} from './guide-outsourcing/guide-outsourcing.component';\r\nimport {GuideProcurementComponent} from './guide-procurement/guide-procurement.component';\r\nimport {GuideProductionComponent} from './guide-production/guide-production.component';\nimport { SalesInstructionComponent } from './guide-instructions/sales-instruction/sales-instruction.component';\nimport { MainInstructionComponent } from './guide-instructions/main-instruction/main-instruction.component';\nimport { GuideWarehouseComponent } from './guide-schemes/guide-warehouse/guide-warehouse.component';\nimport { WarehouseInstructionComponent } from './guide-instructions/warehouse-instruction/warehouse-instruction.component';\nimport { GuideConfirmationComponent } from './guide-schemes/guide-confirmation/guide-confirmation.component';\nimport { ConfirmationInstructionComponent } from './guide-instructions/confirmation-instruction/confirmation-instruction.component';\nimport { ProductStructureInstructionComponent } from './guide-instructions/product-structure-instruction/product-structure-instruction.component';\nimport { GuideGlossaryComponent } from './guide-glossary/guide-glossary.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GuideComponent, GuideButtonComponent, GuideSalesComponent, GuideOutsourcingComponent, GuideProcurementComponent, GuideProductionComponent, SalesInstructionComponent, MainInstructionComponent, GuideWarehouseComponent, WarehouseInstructionComponent, GuideConfirmationComponent, ConfirmationInstructionComponent, ProductStructureInstructionComponent, GuideGlossaryComponent],\r\n  exports: [\r\n    GuideComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        GuideRouting,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class GuideModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GuideRouting { }\r\n","import {AfterViewInit, Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {environment} from '@env/environment';\r\n\r\nexport type GuideFlowType =\r\n  'all'\r\n  | 'qc'\r\n  | 'sales'\r\n  | 'outsource'\r\n  | 'procurement'\r\n  | 'production'\r\n  | 'warehouse'\r\n  | 'confirmation'\r\n  | 'product-structure';\r\n\r\nexport type GuideType = 'flow' | 'map' | 'glossary'\r\n\r\n@Component({\r\n  selector: 'app-guide',\r\n  templateUrl: './guide.component.html',\r\n  styleUrls: ['./guide.component.scss']\r\n})\r\nexport class GuideComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  guideType: GuideType = 'flow';\r\n\r\n  routerSub: Subscription;\r\n  @ViewChild('guidePanel') guidePanel: ElementRef;\r\n\r\n  guideTitle = 'Select a module or process to get more information';\r\n\r\n  guideFlowType: GuideFlowType = 'all';\r\n\r\n  showLorem = false;\r\n\r\n  zoom = 1;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly dialogRef: MatDialogRef<GuideComponent>,\r\n  ) {\r\n    this.routerSub = this.router.events.pipe(\r\n    ).subscribe(evt => {\r\n    });\r\n  }\r\n\r\n  changeRoute(url: string) {\r\n    this.choiceType(url);\r\n  }\r\n\r\n  goToLinkWindow(link: string) {\r\n    this.hideGuide();\r\n\r\n    setTimeout(() => {\r\n      window.open(environment.link_url + link.slice(1) + '?showGuide=true', '_self');\r\n    }, 400);\r\n  }\r\n\r\n  goToLink(link: string) {\r\n    this.hideGuide();\r\n\r\n    setTimeout(() => {\r\n      this.router.navigate([link]);\r\n      this.changeRoute(link);\r\n    }, 600);\r\n\r\n    setTimeout(() => {\r\n      this.openGuide();\r\n    }, 1500);\r\n  }\r\n\r\n  hideGuide() {\r\n    document.querySelector('.guide-modalbox').classList.add('guide-modalbox_hide');\r\n  }\r\n\r\n  openGuide() {\r\n    document.querySelector('.guide-modalbox').classList.remove('guide-modalbox_hide');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.choiceType(this.router.url);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.drag();\r\n  }\r\n\r\n  drag() {\r\n    const panel = this.guidePanel.nativeElement;\r\n    let isDown = false;\r\n    let startX;\r\n    let startY;\r\n    let scrollLeft;\r\n    let scrollTop;\r\n\r\n    panel.addEventListener('mousedown', (e) => {\r\n      isDown = true;\r\n      panel.style.cursor = 'grabbing';\r\n\r\n      startX = e.pageX - panel.offsetLeft;\r\n      startY = e.pageY - panel.offsetTop;\r\n\r\n      scrollLeft = panel.scrollLeft;\r\n      scrollTop = panel.scrollTop;\r\n    });\r\n    panel.addEventListener('mouseleave', () => {\r\n      isDown = false;\r\n      panel.style.cursor = 'grab';\r\n    });\r\n    panel.addEventListener('mouseup', () => {\r\n      isDown = false;\r\n      panel.style.cursor = 'grab';\r\n    });\r\n    panel.addEventListener('mousemove', (e) => {\r\n      if (!isDown) return;\r\n      e.preventDefault();\r\n      const x = e.pageX - panel.offsetLeft;\r\n      const y = e.pageY - panel.offsetTop;\r\n\r\n      const walkX = (x - startX) * 0.75;\r\n      const walkY = (y - startY) * 0.75;\r\n\r\n      panel.scrollLeft = scrollLeft - walkX;\r\n      panel.scrollTop = scrollTop - walkY;\r\n    });\r\n  }\r\n\r\n  choiceType(url: string) {\r\n    if (url.includes('quality-control')) {\r\n      this.guideFlowType = 'qc';\r\n      this.showLorem = true;\r\n    } else if (url.includes('sales')) {\r\n      this.guideFlowType = 'sales';\r\n    } else if (url.includes('outsource')) {\r\n      this.guideFlowType = 'outsource';\r\n    } else if (url.includes('procurement')) {\r\n      this.guideFlowType = 'procurement';\r\n    } else if (url.includes('production')) {\r\n      this.guideFlowType = 'production';\r\n    } else if (url.includes('confirmation')) {\r\n      this.guideFlowType = 'confirmation';\r\n    } else if (url.includes('warehouse')) {\r\n      this.guideFlowType = 'warehouse';\r\n    } else if (url.includes('product-structure')) {\r\n      this.guideFlowType = 'product-structure';\r\n    } else {\r\n      this.showLorem = false;\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routerSub.unsubscribe();\r\n  }\r\n\r\n  onBack() {\r\n    this.hideGuide();\r\n\r\n    setTimeout(() => {\r\n      this.guideFlowType = 'all';\r\n      this.router.navigate(['/dash']);\r\n    }, 600);\r\n\r\n    setTimeout(() => {\r\n      this.openGuide();\r\n    }, 1500);\r\n  }\r\n\r\n  plusScale() {\r\n    this.zoom += 0.1;\r\n  }\r\n\r\n  minusScale() {\r\n    this.zoom -= 0.1;\r\n  }\r\n\r\n  @HostListener('window:keydown.escape', ['$event'])\r\n  closeImageModalKeyDown() {\r\n    const imageBlock = document.querySelector('.guide__image-box');\r\n    if (imageBlock.classList.contains('guide__image-box_open')) {\r\n      imageBlock.classList.remove('guide__image-box_open');\r\n    }\r\n  }\r\n\r\n  closeImageModal() {\r\n    const imageBlock = document.querySelector('.guide__image-box');\r\n    imageBlock.classList.remove('guide__image-box_open');\r\n  }\r\n\r\n  onChoiceGuideType(type: GuideType) {\r\n    this.guideType = type;\r\n\r\n    if (type === 'flow') {\r\n      setTimeout(() => this.drag());\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"guide\">\r\n  <ng-container *ngIf=\"guideType === 'flow'\">\r\n    <div\r\n      #guidePanel\r\n      class=\"guide__panel\"\r\n      [style.paddingTop]=\"guideFlowType === 'all' || guideFlowType === 'product-structure' ? zoom * 24 + 'rem' : 0\"\r\n      [ngSwitch]=\"guideFlowType\"\r\n      [style.zoom]=\"zoom\"\r\n    >\r\n\r\n      <div class=\"guide__box\" *ngSwitchCase=\"'all'\">\r\n        <ng-container *ngTemplateOutlet=\"main\"></ng-container>\r\n      </div>\r\n\r\n      <div class=\"guide__box\" *ngSwitchCase=\"'product-structure'\">\r\n        <ng-container *ngTemplateOutlet=\"main\"></ng-container>\r\n      </div>\r\n\r\n      <div class=\"guide__box guide__qc\" *ngSwitchCase=\"'qc'\">\r\n        <div class=\"guide__qc-box guide__qc-box_1\">\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_1\">\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Manufacturing Procurement\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Outsourcing\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_2\">\r\n            <div class=\"guide__button guide__button_disabled guide__button_arrow-right\">\r\n              <pek-guide-button\r\n                btnStyle=\"secondary\"\r\n                [disabled]=\"true\"\r\n                title=\"Completed Procurement Invoice\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_3\">\r\n            <div class=\"guide__button guide__button_qc-main\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                title=\"QC procurement invoices\"\r\n              ></pek-guide-button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_4\">\r\n            <div class=\"guide__button guide__button_1\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"Cancellation\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_2\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"QC passed\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_3\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"Isolator\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_5\">\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Outsourcing\"\r\n              ></pek-guide-button>\r\n              <div>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Warehouse\"\r\n              ></pek-guide-button>\r\n              <div>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_6\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Manufacturing Procurement\"\r\n            ></pek-guide-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-box\">\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_7\">\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Production\"\r\n              ></pek-guide-button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_8\">\r\n            <div class=\"guide__button guide__button_disabled guide__button_arrow-right\">\r\n              <pek-guide-button\r\n                btnStyle=\"secondary\"\r\n                [disabled]=\"true\"\r\n                title=\"Completed production order\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_9\">\r\n            <div class=\"guide__button guide__button_qc-main\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                title=\"QC our manufacturing\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_10\">\r\n\r\n            <div class=\"guide__button guide__button_1\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"Rework All\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_2\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"Rework Item\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_3\">\r\n              <pek-guide-button\r\n                [hideButtons]=\"true\"\r\n                btnStyle=\"secondary\"\r\n                title=\"QC passed\"\r\n              ></pek-guide-button>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__qc-col guide__qc-col_11\">\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Production\"\r\n              ></pek-guide-button>\r\n              <div>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"guide__button guide__button_disabled\">\r\n              <pek-guide-button\r\n                [disabled]=\"true\"\r\n                title=\"Warehouse\"\r\n              ></pek-guide-button>\r\n              <div>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div *ngSwitchCase=\"'sales'\">\r\n        <app-guide-sales></app-guide-sales>\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'outsource'\">\r\n        <app-guide-outsourcing></app-guide-outsourcing>\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'procurement'\">\r\n        <app-guide-procurement></app-guide-procurement>\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'production'\">\r\n        <app-guide-production></app-guide-production>\r\n      </div>\r\n\r\n      <ng-container *ngSwitchCase=\"'warehouse'\">\r\n        <pek-guide-warehouse></pek-guide-warehouse>\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchCase=\"'confirmation'\">\r\n        <pek-guide-confirmation></pek-guide-confirmation>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"guide__instruction\">\r\n      <ng-container [ngSwitch]=\"guideFlowType\">\r\n        <ng-container *ngSwitchCase=\"'all'\">\r\n          <pek-main-instruction></pek-main-instruction>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'sales'\">\r\n          <pek-sales-instruction></pek-sales-instruction>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'warehouse'\">\r\n          <pek-warehouse-instruction></pek-warehouse-instruction>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'confirmation'\">\r\n          <pek-confirmation-instruction></pek-confirmation-instruction>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'product-structure'\">\r\n          <pek-product-structure-instruction></pek-product-structure-instruction>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"guideType === 'map'\">\r\n    <div class=\"guide__map\">\r\n      <h2>Under Construction</h2>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"guideType === 'glossary'\">\r\n    <pek-guide-glossary></pek-guide-glossary>\r\n  </ng-container>\r\n\r\n  <div class=\"guide__image-box\" (click)=\"closeImageModal()\"></div>\r\n  <!--  <button-->\r\n  <!--    pButton-->\r\n  <!--    *ngIf=\"data.type=='writeOff'\"-->\r\n  <!--    type=\"button\"-->\r\n  <!--    class=\"p-button-success\"-->\r\n  <!--    [label]=\"'Write Off'\"-->\r\n  <!--    (click)=\"writeOff()\"-->\r\n  <!--  ></button>-->\r\n\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-danger guide__close\"\r\n    label=\"Close Business guide\"\r\n    icon=\"pi pi-times\"\r\n    (click)=\"onClose()\"\r\n  >\r\n  </button>\r\n\r\n  <button\r\n    pButton\r\n    label=\"Back\"\r\n    class=\"guide__back mr-2\"\r\n    *ngIf=\"guideFlowType !== 'all' && guideType === 'flow'\"\r\n    (click)=\"onBack()\"\r\n    icon=\"pi pi-arrow-left\"\r\n  ></button>\r\n\r\n  <div class=\"guide__header\">\r\n    <ng-container *ngIf=\"guideType === 'flow'\">\r\n      <button\r\n        class=\"mr-2\"\r\n        (click)=\"plusScale()\"\r\n        pButton\r\n        label=\"+\"\r\n        [disabled]=\"zoom >= 1.3\">\r\n      </button>\r\n      <button\r\n        pButton\r\n        label=\"-\"\r\n        class=\"mr-3\"\r\n        (click)=\"minusScale()\"\r\n        [disabled]=\"zoom <= 0.8\"\r\n      ></button>\r\n    </ng-container>\r\n\r\n    <button\r\n      pButton\r\n      [disabled]=\"guideType === 'flow'\"\r\n      (click)=\"onChoiceGuideType('flow')\"\r\n      label=\"Business Flow\"\r\n      icon=\"pi pi-box\"\r\n    ></button>\r\n    <button\r\n      pButton\r\n      [disabled]=\"guideType === 'map'\"\r\n      class=\"ml-2\"\r\n      (click)=\"onChoiceGuideType('map')\"\r\n      icon=\"pi pi-map\"\r\n      label=\"Business Processes Maps\"\r\n    ></button>\r\n    <button\r\n      [disabled]=\"guideType === 'glossary'\"\r\n      pButton\r\n      class=\"ml-2\"\r\n      icon=\"pi pi-book\"\r\n      (click)=\"onChoiceGuideType('glossary')\"\r\n      label=\"Glossary\"\r\n    ></button>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #main>\r\n  <div class=\"guide__col guide__col_1\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Product Structure\"\r\n        routeUrl=\"product-structure/products\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Nomenclature Confirmation\"\r\n        routeUrl=\"/confirmation/nomenclature\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Business trips\"\r\n        routeUrl=\"/business-trips/trips\"\r\n        (navigate)=\"goToLink($event)\"\r\n        buttonsPosition=\"top\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_2\">\r\n    <div class=\"guide__button guide__button_arrow-right\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Creating structure of product\"\r\n        routeUrl=\"/dash/product-structure/products\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Sales Chain Creating\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        title=\"Contacts and Events\"\r\n        routeUrl=\"/crm/business-partners\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Marketing and Sales Events\"\r\n      ></pek-guide-button>\r\n      <span class=\"top\"></span>\r\n      <span class=\"bottom\"></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Customer\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Correspondents\"\r\n        routeUrl=\"/correspondents/incoming-correspondent\"\r\n        (navigate)=\"goToLink($event)\"\r\n        buttonsPosition=\"top\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_3\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        [hideButtons]=\"true\"\r\n        btnStyle=\"secondary\"\r\n        title=\"Manufacturing parts in advance\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Sales\"\r\n        routeUrl=\"/sales/sales-chains\"\r\n        (navigate)=\"goToLink($event)\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Creation of delivery chain\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Delivery chain\"\r\n        buttonsPosition=\"right\"\r\n        routeUrl=\"/dash/delivery-chains\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Shipment request\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        routeUrl=\"/warehouse/items\"\r\n        title=\"Warehouse\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Delivery process\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Customer\"\r\n        buttonsPosition=\"right\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"ERP Statistics\"\r\n        routeUrl=\"/statistics\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_4\">\r\n    <div class=\"guide__button guide__button_arrow-right\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Production request\"\r\n        routeUrl=\"/dash/warehouse/requests\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_5\">\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        routeUrl=\"/product-structure/products\"-->\r\n    <!--        (navigate)=\"goToLink($event)\"-->\r\n    <!--        title=\"Product structure\"-->\r\n    <!--        buttonsPosition=\"top\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Manufacturing parts in advance\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        buttonsPosition=\"left\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Confirmation payments\"\r\n        buttonsPosition=\"left\"\r\n        routeUrl=\"/dash/confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Payments\"\r\n        routeUrl=\"/dash/payments\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        buttonsPosition=\"left\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_6\">\r\n    <div class=\"guide__button guide__button_arrow-right\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Creating Production list\"\r\n        routeUrl=\"/dash/sales/lists\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-left\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        routeUrl=\"/dash/confirmation\"\r\n        title=\"Payments confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        routeUrl=\"/dash/confirmation\"\r\n        title=\"Tender\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"top\"\r\n        btnStyle=\"primary\"\r\n        routeUrl=\"/dash/confirmation\"\r\n        title=\"Confirmation\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        routeUrl=\"/dash/confirmation\"\r\n        title=\"Tender\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        routeUrl=\"/dash/confirmation\"\r\n        title=\"Payment confirmation\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_7\">\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Warehouse\"\r\n        routeUrl=\"/warehouse/items\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Procurement request\"\r\n        routeUrl=\"/dash/procurement/request-creation\"\r\n        buttonsPosition=\"left\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Manufacturing procurement\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        routeUrl=\"/dash/procurement/orders\"\r\n        buttonsPosition=\"left\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Procurement\"\r\n        buttonsPosition=\"left\"\r\n      ></pek-guide-button>\r\n      <span class=\"top\"></span>\r\n      <span class=\"bottom\"></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Supplier\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Procurement\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n      <span class=\"top\"></span>\r\n      <span class=\"bottom\"></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        routeUrl=\"/dash/purchasing/orders\"\r\n        title=\"General Procurement\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        buttonsPosition=\"left\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Manual procurement request\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Employees\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"primary\"-->\r\n    <!--        title=\"Instruments/ tools/ equipment\"-->\r\n    <!--        buttonsPosition=\"left\"-->\r\n    <!--        [hideButtons]=\"true\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n  </div>\r\n  <div class=\"guide__col guide__col_8\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Schedule Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-right\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\" Production list deficit\"\r\n        routeUrl=\"/dash/warehouse/lists\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <!--        <button-->\r\n    <!--          class=\"guide__button guide__button_secondary guide__button_delivery\"-->\r\n    <!--          routerLinkActive=\"guide__button_active\"-->\r\n    <!--        >-->\r\n    <!--          Delivery items (?)-->\r\n    <!--          <span></span>-->\r\n    <!--          <span></span>-->\r\n    <!--          <span></span>-->\r\n    <!--          <span></span>-->\r\n    <!--          <span></span>-->\r\n\r\n    <!--          <div class=\"guide__buttons guide__buttons_top\">-->\r\n    <!--            <button>?</button>-->\r\n    <!--            <button>-->\r\n    <!--              <app-in-icon></app-in-icon>-->\r\n    <!--            </button>-->\r\n    <!--            <button>R</button>-->\r\n    <!--          </div>-->\r\n    <!--        </button>-->\r\n\r\n    <div class=\"guide__button guide__button_delivery\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Delivery items\"\r\n        routeUrl=\"test\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_rework\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Rework\"\r\n        routeUrl=\"test\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Delivered items\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Tool request\"\r\n        buttonsPosition=\"left\"\r\n        [hideButtons]=\"true\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        title=\"Instruments/ tools/ equipment\"\r\n        buttonsPosition=\"top\"\r\n        routeUrl=\"/dash/instruments/instruments-and-tools\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"guide__col guide__col_9\">\r\n    <!--        <button-->\r\n    <!--          class=\"guide__button\"-->\r\n    <!--          routerLinkActive=\"guide__button_active\"-->\r\n    <!--        >-->\r\n    <!--          Warehouse-->\r\n    <!--          <div class=\"guide__buttons guide__buttons_top\">-->\r\n    <!--            <button>?</button>-->\r\n    <!--            <button routerLink=\"/dash/warehouse/products\">-->\r\n    <!--              <app-in-icon></app-in-icon>-->\r\n    <!--            </button>-->\r\n    <!--            <button>R</button>-->\r\n    <!--          </div>-->\r\n    <!--        </button>-->\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Warehouse\"\r\n        routeUrl=\"/warehouse/items\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Production request\"\r\n        routeUrl=\"/dash/warehouse/requests\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <span class=\"top\"></span>\r\n      <span class=\"bottom\"></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Production\"\r\n        routeUrl=\"/dash/production/plan\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Order to our manufacture\"\r\n        routeUrl=\"/dash/production/orders\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Production\"\r\n        routeUrl=\"/dash/production/plan\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Manufactured order\"\r\n        routeUrl=\"/dash/production/orders\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"QC\"\r\n        buttonsPosition=\"right\"\r\n        (getInfo)=\"showLorem = true\"\r\n        [info]=\"true\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"QC passed\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Warehouse\"\r\n        routeUrl=\"/warehouse/items\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"guide__col guide__col_10\">\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Declined Payment\"\r\n        buttonsPosition=\"top\"\r\n      >\r\n      </pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-right\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Outsourcing orders\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Rework order\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-left-bottom-big\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"QC not passed\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Return to outsourcer\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"primary\"\r\n        title=\"Manufacturing procurement\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        routeUrl=\"/dash/procurement/orders\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Delivered Items\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Outsourcer\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div class=\"rma\">\r\n        RMA\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"QC not passed\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        buttonsPosition=\"bottom\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"QC Passed\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"guide__col guide__col_11\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Payments\"\r\n        routeUrl=\"/dash/payments\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button guide__button_arrow-top\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Confirmed payment\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Confirmation\"\r\n        buttonsPosition=\"right\"\r\n        routeUrl=\"/confirmation\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button guide__button_arrow-top\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Payment confirmation\"\r\n        routeUrl=\"/dash/confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        title=\"Outsourcing\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom-left-big\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Outsorsed parts\"\r\n        routeUrl=\"test\"\r\n        buttonsPosition=\"right\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Supplier\"\r\n        routeUrl=\"test\"\r\n        buttonsPosition=\"right\"\r\n      ></pek-guide-button>\r\n\r\n      <div class=\"rma\">\r\n        RMA\r\n        <span></span>\r\n      </div>\r\n\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--    <div class=\"guide__button guide__button_delivered-items\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Delivered items\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--      ></pek-guide-button>-->\r\n\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Warehouse isolator\"-->\r\n    <!--        routeUrl=\"/warehouse/isolator\"-->\r\n    <!--        buttonsPosition=\"bottom\"-->\r\n    <!--        (navigate)=\"goToLink($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Return to procurement\"-->\r\n    <!--        routeUrl=\"/dash/warehouse/insulator\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Manufacturing procurement\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        routeUrl=\"/dash/procurement/orders\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Delivered Items\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"QC\"-->\r\n    <!--        routeUrl=\"/dash/quality-control/invoices\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"QC passed\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Warehouse\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        routeUrl=\"/warehouse/items\"-->\r\n    <!--        (navigate)=\"goToLink($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n  </div>\r\n  <div class=\"guide__col guide__col_12\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"top\"\r\n        btnStyle=\"primary\"\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"secondary\"\r\n        title=\"Tender\"\r\n        routeUrl=\"/confirmation\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-right-left\">\r\n      <pek-guide-button\r\n        [btnStyle]=\"'secondary'\"\r\n        title=\"Outsourcing\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span class=\"left\"></span>\r\n      <span class=\"right\"></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"primary\"\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-top\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"secondary\"\r\n        title=\"Rework Request\"\r\n        routeUrl=\"/dash/confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"primary\"\r\n        title=\"Warehouse Isolator\"\r\n        routeUrl=\"/warehouse/isolator\"\r\n        (navigate)=\"goToLink($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"secondary\"\r\n        title=\"Return to procurement\"\r\n        routeUrl=\"/dash/confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"primary\"\r\n        title=\"Manufacturing / General procurement\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n        routeUrl=\"/dash/procurement/orders\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"secondary\"\r\n        title=\"Delivered items\"\r\n        routeUrl=\"/dash/confirmation\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"right\"\r\n        btnStyle=\"primary\"\r\n        title=\"QC\"\r\n        routeUrl=\"/dash/quality-control/invoices\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        [btnStyle]=\"'secondary'\"-->\r\n    <!--        title=\"Disasembling request\"-->\r\n    <!--        routeUrl=\"/dash/outsource/outsource-chain\"-->\r\n    <!--        buttonsPosition=\"top\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        buttonsPosition=\"top\"-->\r\n    <!--        btnStyle=\"primary\"-->\r\n    <!--        title=\"Confirmation\"-->\r\n    <!--        routeUrl=\"/dash/confirmation\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        [btnStyle]=\"'secondary'\"-->\r\n    <!--        title=\"Disasembled items\"-->\r\n    <!--        buttonsPosition=\"top\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        [btnStyle]=\"'secondary'\"-->\r\n    <!--        title=\"Write off request\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        btnStyle=\"primary\"-->\r\n    <!--        title=\"Confirmation\"-->\r\n    <!--        routeUrl=\"/dash/confirmation\"-->\r\n    <!--      ></pek-guide-button>-->\r\n\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        [btnStyle]=\"'secondary'\"-->\r\n    <!--        title=\"Write off\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        [btnStyle]=\"'outline'\"-->\r\n    <!--        title=\"Write off\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Write off\"-->\r\n    <!--        routeUrl=\"/confirmation/write-off\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLink($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Disassembling\"-->\r\n    <!--        buttonsPosition=\"right\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n\r\n    <!--      <div>-->\r\n    <!--        <span></span>-->\r\n    <!--        <span></span>-->\r\n    <!--      </div>-->\r\n    <!--    </div>-->\r\n  </div>\r\n\r\n  <div class=\"guide__col guide__col_13\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"Outsourcer\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Disassembling request\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation/nomenclature\"\r\n        (navigate)=\"goToLink($event)\"\r\n        buttonsPosition=\"top\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Disassembled items\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Purchasing\"-->\r\n    <!--        buttonsPosition=\"left\"-->\r\n    <!--        routeUrl=\"/dash/purchasing/orders\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Payment confirmation\"-->\r\n    <!--        routeUrl=\"/dash/confirmation\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Confirmation\"-->\r\n    <!--        buttonsPosition=\"left\"-->\r\n    <!--        routeUrl=\"/confirmation\"-->\r\n    <!--        (navigate)=\"goToLink($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n    <!--    <div class=\"guide__button guide__button_arrow-bottom\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Confirmed payment\"-->\r\n    <!--        routeUrl=\"/dash/confirmation\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span></span>-->\r\n    <!--    </div>-->\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        title=\"Payments\"-->\r\n    <!--        buttonsPosition=\"left\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--        routeUrl=\"/dash/payments\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n    <!--  </div>-->\r\n\r\n    <!--  <div class=\"guide__col guide__col_14\">-->\r\n    <!--    <div class=\"guide__button guide__button_arrow-right-left\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"secondary\"-->\r\n    <!--        title=\"Purchasing\"-->\r\n    <!--        routeUrl=\"/dash/purchasing/orders\"-->\r\n    <!--        (navigate)=\"goToLinkWindow($event)\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--      <span class=\"left\"></span>-->\r\n    <!--      <span class=\"right\"></span>-->\r\n    <!--    </div>-->\r\n    <!--  </div>-->\r\n\r\n    <!--  <div class=\"guide__col guide__col_15\">-->\r\n    <!--    <div class=\"guide__button\">-->\r\n    <!--      <pek-guide-button-->\r\n    <!--        btnStyle=\"outline\"-->\r\n    <!--        title=\"Supplier\"-->\r\n    <!--        buttonsPosition=\"bottom\"-->\r\n    <!--        routeUrl=\"test\"-->\r\n    <!--      ></pek-guide-button>-->\r\n    <!--    </div>-->\r\n    <!--  </div>-->\r\n  </div>\r\n  <div class=\"guide__col guide__col_14\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Write off request\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"primary\"\r\n        title=\"Confirmation\"\r\n        routeUrl=\"/confirmation/nomenclature\"\r\n        (navigate)=\"goToLink($event)\"\r\n        buttonsPosition=\"top\"\r\n      ></pek-guide-button>\r\n    </div>\r\n\r\n    <div class=\"guide__button guide__button_arrow-bottom\">\r\n      <pek-guide-button\r\n        btnStyle=\"secondary\"\r\n        title=\"Write off\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <span></span>\r\n    </div>\r\n\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        btnStyle=\"outline\"\r\n        title=\"write off\"\r\n        routeUrl=\"/dash/outsource/outsource-chain\"\r\n        buttonsPosition=\"top\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"guide__col guide__col_reports\">\r\n    <div class=\"guide__button\">\r\n      <pek-guide-button\r\n        buttonsPosition=\"top\"\r\n        btnStyle=\"primary\"\r\n        title=\"Reports\"\r\n        routeUrl=\"/dash/accounting/cost-reports\"\r\n        (navigate)=\"goToLinkWindow($event)\"\r\n      ></pek-guide-button>\r\n      <div>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NavigationLink} from '../../navigation-route';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'pek-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss', './header.mobile.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() module: string;\r\n  @Input() routes: NavigationLink[];\r\n  @Input() settingsRoutes: NavigationLink[];\r\n\r\n  isShowMobileNav = false;\r\n  isShowSettings: boolean;\r\n  isShowSwitcher: boolean;\r\n\r\n  settingRouters = [\r\n    '/warehouse/measure',\r\n    '/warehouse/warehouses',\r\n    '/warehouse/serial-types',\r\n    '/warehouse/isolator',\r\n    '/warehouse/categories',\r\n    '/procurement/services',\r\n    '/procurement/statuses',\r\n    '/production/employees',\r\n    '/production/positions',\r\n    '/production/machines',\r\n    '/production/instruments-tools',\r\n    '/production/areas',\r\n    '/production/tool-orders',\r\n    '/accounting/currencies',\r\n    '/accounting/accounting-services',\r\n    '/accounting/filters',\r\n    '/purchasing/categories',\r\n    '/purchasing/statuses',\r\n    '/product-structure/technologies',\r\n    '/product-structure/prefixes',\r\n    '/quality-control/protocols',\r\n    '/crm/company-categories',\r\n    '/crm/event-types',\r\n    '/crm/employees',\r\n    '/crm/external-events',\r\n    '/crm/users-profiles',\r\n    '/sales/statuses',\r\n    '/sales/regions',\r\n    '/business-trips/vehicles',\r\n    '/business-trips/expenses',\r\n    '/correspondents/outgoing-categories',\r\n    '/correspondents/incoming-categories',\r\n    '/outsourcing/statuses',\r\n  ];\r\n\r\n  settingModules = [\r\n    '/warehouse',\r\n    '/procurement/',\r\n    '/production/',\r\n    '/accounting/',\r\n    '/purchasing/',\r\n    '/product-structure/',\r\n    '/quality-control/',\r\n    '/crm/',\r\n    '/sales/',\r\n    '/outsourcing/',\r\n    '/business-trips/',\r\n    '/correspondents/',\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n    router.events.forEach(event => {\r\n      if (event instanceof NavigationStart) {\r\n        this.closeMobileMenu();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLinks();\r\n  }\r\n\r\n  getLinks() {\r\n    const routerLink = this.router.url;\r\n    this.isShowSettings = this.settingRouters.some(route => routerLink.includes(route));\r\n    this.isShowSwitcher = this.settingModules.some(module => routerLink.includes(module));\r\n  }\r\n\r\n  toggleVisibleSettingMenu() {\r\n    this.isShowSettings = !this.isShowSettings;\r\n  }\r\n\r\n  openMobileMenu() {\r\n    this.isShowMobileNav = true;\r\n    this.getLinks();\r\n    document.body.style.overflow = 'hidden';\r\n  }\r\n\r\n  closeMobileMenu() {\r\n    this.isShowMobileNav = false;\r\n    document.body.style.overflow = '';\r\n  }\r\n\r\n  onOpenBusinessGuide() {\r\n    this.modalService.showBusinessGuide();\r\n  }\r\n}\r\n","<div\n  class=\"layout-header\"\n  [class.layout-header_open]=\"isShowMobileNav\"\n>\n  <pek-logo [module]=\"module\"></pek-logo>\n  <div\n    class=\"layout-navigation\"\n    [class.layout-navigation_wh]=\"module === 'Warehouse'\"\n  >\n    <ul class=\"layout-navigation__list\">\n      <li\n        *ngFor=\"let route of routes\"\n        class=\"layout-navigation__item\"\n      >\n        <a\n          [routerLink]=\"route.commands\"\n          routerLinkActive=\"active\"\n        >\n          {{route.label}}\n        </a>\n      </li>\n\n      <li\n        *ngFor=\"let route of settingsRoutes\"\n        class=\"layout-navigation__item layout-navigation__item_settings\"\n        [class.layout-navigation__item_settings-show]=\"isShowSettings\"\n      >\n        <a\n          [routerLink]=\"route.commands\"\n          routerLinkActive=\"active\"\n        >\n          {{route.label}}\n        </a>\n      </li>\n    </ul>\n  </div>\n\n  <button class=\"show-navigation-button\" (click)=\"openMobileMenu()\">\n    <i class=\"pi pi-bars\"></i>\n  </button>\n\n  <button class=\"close-navigation-button\" (click)=\"closeMobileMenu()\">\n    <i class=\"pi pi-times\"></i>\n  </button>\n\n  <div class=\"actions ml-auto\">\n    <div class=\"toggle mr-3\" *ngIf=\"isShowSwitcher\">\n    <span (click)=\"toggleVisibleSettingMenu()\">\n      {{isShowSettings ? 'Hide' : 'Show'}} settings menu\n    </span>\n      <p-inputSwitch title=\"Show Settings Menu\" [(ngModel)]=\"isShowSettings\"></p-inputSwitch>\n    </div>\n    <button\n      (click)=\"onOpenBusinessGuide()\"\n      class=\"guide-button\"\n    >\n      <i class=\"pi pi-book\"></i>\n      Business Guide\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout\">\n  <div class=\"layout__content\">\n    <div class=\"layout__inner\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent implements OnInit {\n  @Input() module: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"logo\">\n  <a class=\"logo__link\" routerLink=\"/\">\n    <span class=\"logo__text\">R-WAVE-ERP</span>\n    <span class=\"logo__module\">{{module}}</span>\n  </a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {RouterModule} from '@angular/router';\nimport { LogoComponent } from './components/logo/logo.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {SharedModule} from '@shared/shared.module';\nimport {InputSwitchModule} from 'primeng/inputswitch';\n\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    HeaderComponent,\n    LogoComponent,\n  ],\n  exports: [\n    LogoComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    SharedModule,\n    InputSwitchModule,\n  ]\n})\nexport class LayoutModule { }\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {BehaviorSubject, iif, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {Router} from '@angular/router';\nimport {Technology} from '../../../product-structure/models/technology';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-outsourcing-chain-creation-list',\n  templateUrl: './outsourcing-chain-creation-list.component.html',\n  styleUrls: ['./outsourcing-chain-creation-list.component.scss']\n})\nexport class OutsourcingChainCreationListComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isCanOrder = false;\n  isCanAddOrder = false;\n\n  isShowAll = false;\n\n  statuses = [\n    {label: 'ORDERED', value: 'ordered'},\n    {label: 'NOT ORDERED', value: 'not_ordered'},\n    {label: 'PARTLY ORDERED', value: 'partially_ordered'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    nomenclature__name: [null],\n    nomenclature__code: [null],\n    request_date: [null],\n    technologies_ids: [null],\n    status: ['not_ordered']\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProducts: OrderProduct[] = [];\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n\n  orderProducts$: Observable<OrderProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n          !this.isShowAll,\n        this.orderProductService.getGroupedOutsourceForPagination(this.query).pipe(\n          tap(response => this.productsCount = response.count),\n          map(response => response.results.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          })),\n        ),\n        this.orderProductService.getGroupedOutsource(this.query).pipe(\n          tap(products => this.productsCount = products.length),\n          map(products => products.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          }))\n        )\n      ),\n    ),\n    map(products =>\n      products.map(product => {\n        // @ts-ignore\n        product.id = product.request_id;\n        return product;\n      })\n    ),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n    private readonly orderService: OrderService,\n    private readonly modalService: ModalService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setProductStatus(product: OrderProduct) {\n    let status: string;\n\n    if (product.ordered_quantity >= product.initial_quantity) {\n      status = 'A0';\n    } else if (product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0) {\n      status = 'A1';\n    } else {\n      status = 'A2';\n    }\n\n    return status;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProducts = [];\n\n    this.onCheckOrder();\n    this.onCheckAddOrder();\n    this.getIsCleanUnnecessary();\n    this.getIsDeleted();\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true},);\n    }\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value !== null) {\n\n        if (this.searchForm.controls[key].value instanceof Date) {\n          this.query.push({\n            name: key,\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\n          });\n        } else {\n          this.query.push({\n            name: key,\n            value: this.searchForm.controls[key].value\n          });\n        }\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  getSmallDescription(description: string) {\n    if (description && description?.length > 40) return description.substring(0, 40) + '...';\n    else return description;\n  }\n\n  onCheckOrder() {\n    this.isCanOrder = true;\n\n    this.selectedProducts.forEach(element => {\n      if (element.ordered_quantity >= element.initial_quantity) {\n        this.isCanOrder = false;\n      }\n    });\n\n    if (this.selectedProducts.length === 0) {\n      this.isCanOrder = false;\n    }\n  }\n\n  onCheckAddOrder() {\n    this.isCanAddOrder = this.selectedProducts.every(node => node.status !== 'A0');\n  }\n\n  getIsCleanUnnecessary() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A1');\n    }\n  }\n\n  getIsDeleted() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A2');\n    }\n  }\n\n  onCloseOrders() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const partlyOrderedProducts = this.selectedProducts.filter(n => n.status === 'A1');\n\n        if (partlyOrderedProducts.length > 0) {\n\n          this.selectedProducts = [];\n          this.orderProductService.closeOrders(partlyOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onDeleteOrders() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        const notOrderedProducts = this.selectedProducts.filter(n => n.status === 'A2');\n\n        if (notOrderedProducts.length > 0) {\n          this.selectedProducts = [];\n          this.orderProductService.deleteSeveral(notOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onCreateChain() {\n    this.orderService.openCreateChainModal(this.selectedProducts, 'outsourcing').subscribe(order => {\n      if (order) {\n        this.router.navigate(['/outsourcing/chains/order', order.id]);\n      }\n    });\n  }\n\n  onAddProductsToChain() {\n    this.orderService.openAddProductsToChainModal(this.selectedProducts, 'outsourcing').subscribe(order => {\n      if (order) {\n        this.search$.next();\n      }\n    });\n  }\n\n  onSelectTechnologies(technologies: Technology[]) {\n    this.searchForm.get('technologies_ids').patchValue(technologies?.map(t => t.id)?.join(',') || null);\n    this.search$.next();\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n\n    if (!this.isShowAll) {\n      this.currentPage = 1;\n    }\n\n    this.search$.next();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'outsourcing'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Outsourcing Chain Creation</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        [disabled]=\"!selectedProducts || !isCanOrder\"\n        class=\"ml-auto mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Create Outsourcing Chain\"\n        (click)=\"onCreateChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Add To Outsourcing Chain\"\n        (click)=\"onAddProductsToChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsCleanUnnecessary()\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-check\"\n        label=\"Close Order\"\n        (click)=\"onCloseOrders()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsDeleted()\"\n        class=\"p-button-danger\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-times\"\n        label=\"Delete Order\"\n        (click)=\"onDeleteOrders()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form\n      [formGroup]=\"searchForm\"\n      class=\"form mb-3\"\n    >\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              pInputText\n              formControlName=\"nomenclature__name\"\n              (ngModelChange)=\"name$.next()\"\n            >\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Code</label>\n            <input\n              type=\"text\"\n              pInputText\n              formControlName=\"nomenclature__code\"\n              (ngModelChange)=\"code$.next()\"\n            >\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Technologies</label>\n            <pek-multi-technology-picker\n              (selectTechnologies)=\"onSelectTechnologies($event)\"></pek-multi-technology-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Date</label>\n            <p-calendar\n              formControlName=\"request_date\"\n              dataType=\"date\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              [readonlyInput]=\"true\"\n              (ngModelChange)=\"search$.next()\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <p-dropdown\n              [options]=\"statuses\"\n              formControlName=\"status\"\n              optionValue=\"value\"\n              [showClear]=\"true\"\n              placeholder=\"Choose Status\"\n              (ngModelChange)=\"search$.next()\"\n            ></p-dropdown>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        selectionMode=\"multiple\"\n        [rows]=\"10\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 24.25rem)\"\n        [value]=\"orderProducts$ | async\"\n        [(selection)]=\"selectedProducts\"\n        (selectionChange)=\"onCheckOrder(); onCheckAddOrder();\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 3%\">#</th>\n            <th style=\"width: 11%\">Code</th>\n            <th style=\"width: 10%\" pSortableColumn=\"nomenclature.name\">Name</th>\n            <th style=\"width: 5%\" class=\"text-center\">Request Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">Ordered Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\n            <th style=\"width: 10%\">Description</th>\n            <th style=\"width: 6%\" class=\"text-center\">Date</th>\n            <th style=\"width: 5%\" class=\"text-center\">Request Type</th>\n            <th style=\"width: 7%\" class=\"text-center\">Free Ordered Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">Chains</th>\n            <th style=\"width: 11%\">Root Lists</th>\n            <th style=\"width: 10%\">Production Lists</th>\n            <th style=\"width: 7%\" class=\"text-center\">Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"product\">\n            <td style=\"width: 3%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 11%\">{{product.nomenclature.code}}</td>\n            <td style=\"width: 10%\">{{product.nomenclature.name}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.initial_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.ordered_quantity}}</td>\n            <td\n              style=\"width: 5%\"\n              class=\"text-center\">{{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\n            </td>\n            <td style=\"width: 10%\">\n              <div class=\"word-break\">\n                {{getSmallDescription(product.nomenclature.description)}}\n              </div>\n            </td>\n            <td style=\"width: 6%\" class=\"text-center\">{{product.request_date|date:'dd/MM/yyyy'}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">\n              <ng-container *ngIf=\"product.request_type==1\">Auto</ng-container>\n              <ng-container *ngIf=\"product.request_type==0\">Manual</ng-container>\n            </td>\n            <td style=\"width: 7%\" class=\"text-center\">{{product.free_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">\n              <ng-container *ngFor=\"let order of product.orders; let idx = index;\">\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 1\"\n                   [routerLink]=\"['/dash/procurement/orders/products',order.id]\">\n                  {{order.id}}</a>\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 2\"\n                   [routerLink]=\"['/dash/outsource/outsource-chain/products', order.id]\">\n                  {{order.id}}<span *ngIf=\"idx !== product.orders.length - 1\">,</span>\n                </a>\n              </ng-container>\n            </td>\n            <td style=\"width: 11%\">\n              <ng-container *ngFor=\"let list of product.root_production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.root_production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td style=\"width: 10%\">\n              <ng-container *ngFor=\"let list of product.production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td style=\"width: 7%\" class=\"text-center\">\n              <ng-container *ngIf=\"product.ordered_quantity>=product.initial_quantity\"><span\n                class=\"badge badge_success\">ORDERED</span></ng-container>\n              <ng-container\n                *ngIf=\"product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0\">\n                <span class=\"badge badge_warning\">PARTLY ORDERED </span>\n              </ng-container>\n              <ng-container *ngIf=\"product.ordered_quantity==0\"><span class=\"badge badge_danger\">NOT\n                                        ORDERED</span></ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n      <div\n        *ngIf=\"!isShowAll\"\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n        <p-button\n          (click)=\"onShowAll(true)\"\n          class=\"paginator-all\"\n          type=\"button\"\n          styleClass=\"p-button-text\"\n        >\n          All\n        </p-button>\n      </div>\n    </div>\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {Router} from '@angular/router';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {ListProduct} from '../../../warehouse/models/list-product';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {BehaviorSubject, switchMap} from 'rxjs';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {OrderStatusesTableComponent} from '@shared/components/order-statuses-table/order-statuses-table.component';\r\nimport {Table} from 'primeng/table';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-outsourcing-chains',\r\n  templateUrl: './outsourcing-chains.component.html',\r\n  styleUrls: ['./outsourcing-chains.component.scss']\r\n})\r\nexport class OutsourcingChainsComponent implements OnInit {\r\n  @ViewChild('dt') dt: Table;\r\n  @ViewChild(OrderStatusesTableComponent)\r\n  orderStatusTableComponent: OrderStatusesTableComponent;\r\n  firstPage: number = 0;\r\n  isCreating = false;\r\n\r\n  isShowStatuses = false;\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Chain',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToOderPage()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveChain()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  finalStatusSelected = false;\r\n\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    contains_nomenclature: [null],\r\n    supplier: [null],\r\n    order_root_list_id: [null],\r\n    active_status__in: [null],\r\n    created_after: [null],\r\n    created_before: [null],\r\n    contains_declined_payment: [null],\r\n  });\r\n\r\n  orders: Order[] = [];\r\n  selectedOrder: Order;\r\n\r\n  isLoading = false;\r\n  isHideFilters = false;\r\n\r\n  nomenclaturesList: Nomenclature[] = [];\r\n  rootLists: any[] = [];\r\n\r\n  query: QuerySearch[] = [];\r\n\r\n  tableScrollHeight = '29.625rem';\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly orderService: OrderService,\r\n    private readonly router: Router,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.search$.pipe(\r\n      tap(() => this.prepareForSearch()),\r\n      switchMap(() => this.orderService.get(this.query)),\r\n      map(orders => this.orderService.modifyOrders(orders)),\r\n      tap(orders => this.orders = orders),\r\n      tap(() => this.generateNomenclaturesListAndRootLists()),\r\n      tap(() => this.collectOrderedProductsTechnologies()),\r\n      tap(() => this.isLoading = false),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n  }\r\n\r\n  generateNomenclaturesListAndRootLists() {\r\n    this.orders.forEach(order => {\r\n      if (order.activeStatusDate) {\r\n        order.activeStatusDate = new Date(order.activeStatusDate);\r\n      }\r\n\r\n      order.order_products.forEach(orderProduct => {\r\n        if (!this.nomenclaturesList.includes(orderProduct.nomenclature)) {\r\n          this.nomenclaturesList.push(orderProduct.nomenclature);\r\n        }\r\n      });\r\n\r\n      order.root_production_list_products.forEach(root => this.rootLists.push(root));\r\n\r\n      this.rootLists = this.rootLists.map(root => {\r\n        return {\r\n          ...root,\r\n          fullName: `(${root.id}) ${root.nomenclature.code}~${root.nomenclature.name}`\r\n        };\r\n      });\r\n    });\r\n\r\n    this.nomenclaturesList = this.adapterService.removeDuplicates(this.nomenclaturesList, x => x.id);\r\n    this.rootLists = this.adapterService.removeDuplicates(this.rootLists, x => x.id);\r\n\r\n    this.nomenclaturesList.sort((a, b) => {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name > b.name) return 1;\r\n      return 0;\r\n    });\r\n\r\n    this.rootLists.sort((a, b) => {\r\n      if (a.fullName < b.fullName) return -1;\r\n      if (a.fullName > b.fullName) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  collectOrderedProductsTechnologies() {\r\n    this.orders.forEach(order => {\r\n      order.ordered_products_unique_technologies = [];\r\n      order.order_products?.forEach(product => {\r\n        const needToAdd = order.ordered_products_unique_technologies.findIndex(tech => tech.id === product?.current_technology.id) < 0;\r\n        if (needToAdd) {\r\n          order.ordered_products_unique_technologies.push(product?.current_technology);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\r\n    const lists: { list: ListProduct, count?: number }[] = [];\r\n    rootLists.forEach((res: ListProduct) => {\r\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\r\n      if (found) {\r\n        found.count++;\r\n      } else {\r\n        lists.push({list: res, count: 1});\r\n      }\r\n    });\r\n    return lists;\r\n  }\r\n\r\n  private onGoToOderPage() {\r\n    window.open('/outsourcing/chains/order/' + this.selectedOrder?.id, '_blank');\r\n  }\r\n\r\n  onRemoveChain() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderService.delete(this.selectedOrder.id).subscribe(() => {\r\n          this.orders = this.orders.filter(x => x.id !== this.selectedOrder.id);\r\n          this.selectedOrder = null;\r\n\r\n          setTimeout(() => {\r\n            this.orderStatusTableComponent?.renderDates({first: this.firstPage});\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateChain() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isCreating = true;\r\n        this.orderService.create({accounting_type: 2, can_select_supplier: true}).subscribe(order => {\r\n          this.isCreating = false;\r\n          this.router.navigate(['/outsourcing/chains/order/', order.id]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedOrder = null;\r\n    this.orders = [];\r\n\r\n    this.query = [\r\n      {name: 'accounting_type', value: 2},\r\n      {name: 'exclude_with_active_final_status', value: !this.finalStatusSelected}\r\n    ];\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.firstPage = 0;\r\n    this.orderStatusTableComponent?.renderDates({first: 0});\r\n    this.orders = this.orders.map(o => o);\r\n  }\r\n\r\n  onSelectCompany(id: number) {\r\n    this.searchForm.get('supplier').patchValue(id);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectStatuses(ids: number[]) {\r\n    this.searchForm.get('active_status__in').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onToggleStatuses() {\r\n    this.isShowStatuses = !this.isShowStatuses;\r\n  }\r\n\r\n  onChangePage(page: number) {\r\n    this.firstPage = page;\r\n  }\r\n\r\n  onPage(evt: any) {\r\n    this.orderStatusTableComponent.renderDates(evt);\r\n  }\r\n\r\n  onSelectOrder() {\r\n    this.orderStatusTableComponent.selectedOrder = this.selectedOrder;\r\n  }\r\n\r\n  onSelectionOrder(order: Order) {\r\n    this.selectedOrder = order;\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.dt.paginator = value;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'outsourcing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Outsourcing Chains</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        (click)=\"onCreateChain()\"\r\n        pButton\r\n        [loading]=\"isCreating\"\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"Create Outsource Chain\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n\r\n    <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\r\n      <div class=\"filters-visibility__header\">\r\n        <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n      </div>\r\n\r\n      <button\r\n        class=\"icon pi\"\r\n        [class.pi-angle-double-up]=\"!isHideFilters\"\r\n        [class.pi-angle-double-down]=\"isHideFilters\"\r\n      ></button>\r\n\r\n      <form\r\n        [formGroup]=\"searchForm\"\r\n        class=\"form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Nomenclature</label>\r\n              <p-dropdown\r\n                [filter]=\"true\"\r\n                [showClear]=\"true\"\r\n                [options]=\"nomenclaturesList\"\r\n                formControlName=\"contains_nomenclature\"\r\n                optionValue=\"id\"\r\n                optionLabel=\"name\"\r\n                placeholder=\"No Nomenclature Selected\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Root List</label>\r\n              <p-dropdown\r\n                [filter]=\"true\"\r\n                [showClear]=\"true\"\r\n                [options]=\"rootLists\"\r\n                formControlName=\"order_root_list_id\"\r\n                (ngModelChange)=\"search$.next()\"\r\n                optionValue=\"list.id\"\r\n                optionLabel=\"fullName\"\r\n                placeholder=\"No List Selected\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Status</label>\r\n              <pek-multi-statuses-picker\r\n                (selectStatuses)=\"onSelectStatuses($event)\"\r\n                (isFinalStatusSelected)=\"finalStatusSelected = $event\"\r\n                [accountingType]=\"2\"\r\n              ></pek-multi-statuses-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>From</label>\r\n              <p-calendar\r\n                formControlName=\"created_after\"\r\n                dataType=\"date\"\r\n                [showButtonBar]=\"true\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              >\r\n              </p-calendar>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>To</label>\r\n              <p-calendar\r\n                dataType=\"date\"\r\n                formControlName=\"created_before\"\r\n                [showButtonBar]=\"true\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              >\r\n              </p-calendar>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group form-group_checkbox\">\r\n              <label>Declined</label>\r\n              <p-triStateCheckbox\r\n                formControlName=\"contains_declined_payment\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              ></p-triStateCheckbox>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"page__table\">\r\n        <div [ngClass]=\"{'d-none': !isShowStatuses}\">\r\n          <pek-order-statuses-table\r\n            [orders]=\"orders\"\r\n            [isLoading]=\"isLoading\"\r\n            (changePage)=\"onChangePage($event)\"\r\n            (selectOrder)=\"onSelectionOrder($event)\"\r\n          ></pek-order-statuses-table>\r\n        </div>\r\n\r\n        <div [ngClass]=\"{'d-none': isShowStatuses}\">\r\n          <p-table\r\n            #dt\r\n            selectionMode=\"single\"\r\n            [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n            [scrollable]=\"true\"\r\n            dataKey=\"id\"\r\n            [(first)]=\"firstPage\"\r\n            [paginator]=\"orders.length > 0\"\r\n            [rows]=\"10\"\r\n            [(selection)]=\"selectedOrder\"\r\n            [value]=\"orders\"\r\n            (onPage)=\"onPage($event)\"\r\n            (selectionChange)=\"onSelectOrder()\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th class=\"text-center\" style=\"width: 3%;\">#</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Date</th>\r\n                <th class=\"text-center\" style=\"width: 7%;\">Order ID</th>\r\n                <th class=\"text-center\" style=\"width: 15%;\">Supplier</th>\r\n                <th class=\"text-center\" style=\"width: 15%;\">Technologies</th>\r\n                <th style=\"width: 15%;\">Comment</th>\r\n                <th style=\"width: 15%;\">Root Lists</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Status</th>\r\n                <th class=\"text-center\" style=\"width: 10%;\">Completion</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"order\">\r\n                <td class=\"text-center\" style=\"width: 3%;\">{{i + 1}}</td>\r\n                <td class=\"text-center\" style=\"width: 10%;\">{{order.created | date:'dd/MM/yyyy'}}</td>\r\n                <td class=\"text-center\" style=\"width: 7%;\">{{order.id}}</td>\r\n                <td class=\"text-center\" style=\"width: 15%;\">{{order.supplier?.name}}</td>\r\n                <td class=\"text-center\" style=\"width: 15%;\">\r\n                  <span *ngFor=\"let tech of order.ordered_products_unique_technologies; let last=last\">\r\n                    {{tech.name}}<span *ngIf=\"!last\">,</span>\r\n                  </span>\r\n<!--                  {{order.supplier?.supplier_nomenclature}}-->\r\n                </td>\r\n                <td style=\"width: 15%;\">\r\n                  <div class=\"word-break\">\r\n                    {{order.comment}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 15%;\">\r\n                  <div class=\"word-break\"\r\n                       *ngFor=\"let item of getRootLists(order.root_production_list_products); let idx = index\">\r\n                    {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\r\n                  </div>\r\n                </td>\r\n                <td class=\"text-center\" style=\"width: 10%;\">{{order.status?.value}}</td>\r\n                <td class=\"text-center\" style=\"width: 10%;\">{{order?.activeStatusDate | date: 'dd/MM/yyyy'}}</td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                  <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"onShowAll(false)\"\r\n                styleClass=\"p-button-text\"\r\n              >\r\n                All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n          <div *ngIf=\"!dt.paginator && !isLoading && orders.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"onShowAll(true)\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #actionButtons>\r\n  <div class=\"action-buttons\">\r\n    <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedOrder\"></p-menubar>\r\n    <button\r\n      class=\"ml-2\"\r\n      pButton\r\n      type=\"button\"\r\n      icon=\"pi pi-table\"\r\n      [label]=\"(isShowStatuses ? 'Close' : 'Open') +  ' Order Statuses'\"\r\n      (click)=\"onToggleStatuses()\"\r\n    ></button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-outsourcing-layout',\n  templateUrl: './outsourcing-layout.component.html',\n  styleUrls: ['./outsourcing-layout.component.scss']\n})\nexport class OutsourcingLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Assembly & Manufactured Requests', commands: ['requests']},\n    {label: 'Outsourcing Chain Creation', commands: ['order-products']},\n    {label: 'Outsourcing Chains', commands: ['chains']},\n  ];\n\n  settingsRoutes: NavigationLink[] = [\n    {label: 'Order Statuses', commands: ['statuses']},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Outsourcing'\"\n  [routes]=\"routes\"\n  [settingsRoutes]=\"settingsRoutes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-outsourcing-order-page',\n  templateUrl: './outsourcing-order-page.component.html',\n  styleUrls: ['./outsourcing-order-page.component.scss']\n})\nexport class OutsourcingOrderPageComponent implements OnInit {\n\n  orderId: number;\n  isOrderLoading = true;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly orderService: OrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.orderId = +id),\n    ).subscribe()\n  }\n\n  openOrderFiles() {\n    this.orderService.filesModal$.next();\n  }\n\n  editOrder() {\n    this.orderService.editOrderModal$.next()\n  }\n\n  loaded() {\n    this.isOrderLoading = false;\n  }\n\n}\n","<div class=\"procurement-order-page\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'outsourcing'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order {{orderId}}</h1>\n      </div>\n      <div class=\"page__tools\">\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-file\"\n          label=\"Order Files\"\n          class=\"mr-2\"\n          (click)=\"openOrderFiles()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-pencil\"\n          label=\"Lead Date & Status\"\n          (click)=\"editOrder()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <pek-order-page\n      (loaded)=\"loaded()\"\n      [orderId]=\"orderId\"\n      [orderType]=\"'outsourcing'\"\n    ></pek-order-page>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-outsourcing-order-statuses',\n  templateUrl: './outsourcing-order-statuses.component.html',\n  styleUrls: ['./outsourcing-order-statuses.component.scss']\n})\nexport class OutsourcingOrderStatusesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"procurement-order-statuses\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'outsourcing'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order Statuses</h1>\n      </div>\n      <div class=\"page__tools\">\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <h2 class=\"mb-4\">Manual Statuses</h2>\n\n    <div class=\"page__card mb-4\">\n      <pek-order-statuses [statusType]=\"2\"></pek-order-statuses>\n    </div>\n\n    <h2 class=\"mb-4\">Automatic Statuses</h2>\n\n    <div class=\"page__card\">\n      <pek-order-statuses [statusType]=\"2\" [isAutoStatus]=\"true\"></pek-order-statuses>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {BehaviorSubject, iif, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {Technology} from '../../../product-structure/models/technology';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-outsourcing-requests',\n  templateUrl: './outsourcing-requests.component.html',\n  styleUrls: ['./outsourcing-requests.component.scss']\n})\nexport class OutsourcingRequestsComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  statuses = [\n    {label: 'ORDERED', value: 'ordered'},\n    {label: 'NOT ORDERED', value: 'not_ordered'},\n    {label: 'PARTLY ORDERED', value: 'partially_ordered'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    nomenclature__name: [null],\n    nomenclature__code: [null],\n    request_date: [null],\n    technologies_ids: [null],\n    status: ['not_ordered']\n  });\n\n  isStartFirstPage = false;\n  isShowAll = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProducts: OrderProduct[] = [];\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n\n  orderProducts$: Observable<OrderProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n          !this.isShowAll,\n        this.orderProductService.getGroupedOutsourceForPagination(this.query).pipe(\n          tap(response => this.productsCount = response.count),\n          map(response => response.results.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          })),\n        ),\n        this.orderProductService.getGroupedOutsource(this.query).pipe(\n          tap(products => this.productsCount = products.length),\n          map(products => products.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          }))\n        )\n      ),\n    ),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderProductService: OrderProductService,\n    private readonly orderService: OrderService,\n    private readonly adapterService: AdapterService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setProductStatus(product: OrderProduct) {\n    let status: string;\n\n    if (product.ordered_quantity >= product.initial_quantity) {\n      status = 'A0';\n    } else if (product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0) {\n      status = 'A1';\n    } else {\n      status = 'A2';\n    }\n\n    return status;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProducts = [];\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true},)\n    }\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value !== null) {\n\n        if (this.searchForm.controls[key].value instanceof Date) {\n          this.query.push({\n            name: key,\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\n          });\n        } else {\n          this.query.push({\n            name: key,\n            value: this.searchForm.controls[key].value\n          });\n        }\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  getSmallDescription(description: string) {\n    if (description && description?.length > 40) return description.substring(0, 40) + '...';\n    else return description;\n  }\n\n  onCreateRequest() {\n    this.orderProductService.openAddOutsourcingRequestModal(null).subscribe(products => {\n      if (products) {\n        this.search$.next();\n      }\n    });\n  }\n\n  onSelectTechnologies(technologies: Technology[]) {\n    this.searchForm.get('technologies_ids').patchValue(technologies?.map(t => t.id)?.join(',') || null);\n    this.search$.next();\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n\n    if (!this.isShowAll) {\n      this.currentPage = 1\n    }\n\n    this.search$.next()\n  }\n}\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'outsourcing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Assembly & Manufactured Requests</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"New Request\"\r\n        (click)=\"onCreateRequest()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form mb-3\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"nomenclature__name\"\r\n              (ngModelChange)=\"name$.next()\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Code</label>\r\n            <input\r\n              type=\"text\"\r\n              pInputText\r\n              formControlName=\"nomenclature__code\"\r\n              (ngModelChange)=\"code$.next()\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Technologies</label>\r\n            <pek-multi-technology-picker (selectTechnologies)=\"onSelectTechnologies($event)\"></pek-multi-technology-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Date</label>\r\n            <p-calendar\r\n              formControlName=\"request_date\"\r\n              dataType=\"date\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"search$.next()\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Status</label>\r\n            <p-dropdown\r\n              [options]=\"statuses\"\r\n              formControlName=\"status\"\r\n              optionValue=\"value\"\r\n              [showClear]=\"true\"\r\n              placeholder=\"Choose Status\"\r\n              (ngModelChange)=\"search$.next()\"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"table-pagination-preloader\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"multiple\"\r\n        [rows]=\"10\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"calc(100vh - 24.25rem)\"\r\n        [value]=\"orderProducts$ | async\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 3%\">#</th>\r\n            <th style=\"width: 11%\">Code</th>\r\n            <th style=\"width: 10%\" pSortableColumn=\"nomenclature.name\">Name</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">Request Quantity</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">Ordered Quantity</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\">Description</th>\r\n            <th style=\"width: 6%\" class=\"text-center\">Date</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">Request Type</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Free Ordered Quantity</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">Chains</th>\r\n            <th style=\"width: 11%\">Root Lists</th>\r\n            <th style=\"width: 10%\">Production Lists</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\r\n            <td style=\"width: 11%\">{{product.nomenclature.code}}</td>\r\n            <td style=\"width: 10%\">{{product.nomenclature.name}}</td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{product.initial_quantity}}</td>\r\n            <td style=\"width: 5%\" class=\"text-center\">{{product.ordered_quantity}}</td>\r\n            <td\r\n              style=\"width: 5%\" class=\"text-center\">{{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\">\r\n              <div class=\"word-break\">\r\n                {{getSmallDescription(product.nomenclature.description)}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 6%\" class=\"text-center\">{{product.request_date|date:'dd/MM/yyyy'}}</td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              <ng-container *ngIf=\"product.request_type==1\">Auto</ng-container>\r\n              <ng-container *ngIf=\"product.request_type==0\">Manual</ng-container>\r\n            </td>\r\n            <td style=\"width: 7%\" class=\"text-center\">{{product.free_quantity}}</td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              <ng-container *ngFor=\"let order of product.orders; let idx = index;\">\r\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 1\"\r\n                   [routerLink]=\"['/dash/procurement/orders/products',order.id]\">\r\n                  {{order.id}}</a>\r\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 2\"\r\n                   [routerLink]=\"['/dash/outsource/outsource-chain/products', order.id]\">\r\n                  {{order.id}}<span *ngIf=\"idx !== product.orders.length - 1\">,</span>\r\n                </a>\r\n              </ng-container>\r\n            </td>\r\n            <td style=\"width: 11%\">\r\n              <ng-container *ngFor=\"let list of product.root_production_list_products; let idx = index\">\r\n                {{list}}<span *ngIf=\"idx !== product.root_production_list_products.length - 1\">,</span>\r\n              </ng-container>\r\n            </td>\r\n            <td style=\"width: 10%\">\r\n              <ng-container *ngFor=\"let list of product.production_list_products; let idx = index\">\r\n                {{list}}<span *ngIf=\"idx !== product.production_list_products.length - 1\">,</span>\r\n              </ng-container>\r\n            </td>\r\n            <td style=\"width: 7%\" class=\"text-center\">\r\n              <ng-container *ngIf=\"product.ordered_quantity>=product.initial_quantity\"><span\r\n                class=\"badge badge_success\">ORDERED</span></ng-container>\r\n              <ng-container\r\n                *ngIf=\"product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0\">\r\n                <span class=\"badge badge_warning\">PARTLY ORDERED </span>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"product.ordered_quantity==0\"><span class=\"badge badge_danger\">NOT\r\n                                        ORDERED</span></ng-container>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n      </div>\r\n      <div\r\n        *ngIf=\"!isShowAll\"\r\n        class=\"paginator-wrapper\"\r\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\r\n      >\r\n        <p-paginator\r\n          #paginator\r\n          [rows]=\"10\"\r\n          [totalRecords]=\"productsCount\"\r\n          (onPageChange)=\"paginate($event)\"\r\n        >\r\n        </p-paginator>\r\n        <p-button\r\n          (click)=\"onShowAll(true)\"\r\n          class=\"paginator-all\"\r\n          type=\"button\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          All\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"onShowAll(false)\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, finalize, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Category} from '../../../product-structure/models/category';\nimport {RequestService} from '../../../warehouse/services/request.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-add-material-to-order',\n  templateUrl: './add-material-to-order.component.html',\n  styleUrls: ['./add-material-to-order.component.scss']\n})\nexport class AddMaterialToOrderComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isSaving = false;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [null],\n    code: [null],\n    root_categories: [null],\n    category: [null],\n    type: ['0']\n  });\n\n  createForm: FormGroup = this.fb.group({\n    required_quantity: [0, [Validators.required, Validators.min(1)]],\n    for_order_product: [null, Validators.required],\n    material_nomenclature: [null, Validators.required],\n    technology: [null]\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProduct: Nomenclature;\n\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  products$: Observable<Nomenclature[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.nomenclatureService.getForPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly adapterService: AdapterService,\n    private readonly requestService: RequestService,\n    private dialogRef: MatDialogRef<AddMaterialToOrderComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { productId: number }\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm.get('for_order_product').patchValue(this.data.productId)\n\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    this.createForm.get('required_quantity').patchValue(null);\n    this.createForm.get('technology').patchValue(null);\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'paginated', value: true},\n      {name: 'page', value: this.currentPage},\n    ];\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value) {\n        this.query.push({\n          name: key,\n          value: this.searchForm.controls[key].value\n        });\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onSelectCategory(category: Category) {\n    this.searchForm.get('category').patchValue(category?.name || null);\n    this.search$.next();\n  }\n\n  clearCreatForm() {\n    this.createForm.get('required_quantity').patchValue(0);\n  }\n\n  onSelectProduct() {\n    this.createForm.get('material_nomenclature').patchValue(this.selectedProduct?.id || null);\n  }\n\n  onAddMaterial() {\n    this.isSaving = true;\n\n    this.requestService.create(this.createForm.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => {\n      this.dialogRef.close(true)\n    })\n  }\n\n  onSelectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.search$.next();\n  }\n\n  onSelectRootCategories(ids: string) {\n    this.searchForm.get('root_categories').patchValue(ids ?? null)\n    this.search$.next();\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Material To Order product item\n  </h2>\n\n  <p>\n    Please Search the Item from catalogue and select item for product item\n  </p>\n</div>\n\n<div class=\"add-order-product-to-order__row\">\n  <div class=\"add-order-product-to-order__column-left\">\n    <pek-categories-tree-picker (categorySelected)=\"onSelectCategory($event)\"></pek-categories-tree-picker>\n  </div>\n  <div class=\"add-order-product-to-order__column-right\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Type</label>\n            <pek-nomenclature-type-picker\n              [currentNomenclatureType]=\"searchForm.get('type').value\"\n              (choiceNomenclatureType)=\"onSelectNomenclatureType($event)\"\n            ></pek-nomenclature-type-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Root Categories</label>\n            <pek-multi-product-structure-categories-picker\n              (choiceCategories)=\"onSelectRootCategories($event)\"\n            ></pek-multi-product-structure-categories-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              pInputText\n              formControlName=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"name\"\n              (ngModelChange)=\"name$.next()\"\n            />\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label for=\"code\">Code</label>\n            <input\n              pInputText\n              formControlName=\"code\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"code\"\n              (ngModelChange)=\"code$.next()\"\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <mat-dialog-content>\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          dataKey=\"id\"\n          rowExpandMode=\"single\"\n          [rows]=\"10\"\n          [value]=\"products$ | async\"\n          [(selection)]=\"selectedProduct\"\n          (selectionChange)=\"onSelectProduct()\"\n          (onRowExpand)=\"clearCreatForm()\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 5%\" class=\"text-center\">#</th>\n              <th style=\"width: 25%\">Code</th>\n              <th style=\"width: 25%\">Name</th>\n              <th style=\"width: 30%\">Description</th>\n              <th style=\"width: 15%\" class=\"text-center\">UOM</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n            <tr\n              [pSelectableRow]=\"product\"\n              [pRowToggler]=\"product\"\n              [pSelectableRowDisabled]=\"product.approved === '0' && product.type === '0'\"\n              [pRowTogglerDisabled]=\"product.approved === '0' && product.type === '0'\"\n            >\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 25%\">\n                {{ product.code }}\n              </td>\n              <td style=\"width: 25%\">\n                  <span\n                    *ngIf=\"product.approved === '0' && product.type === '0'\"\n                    class=\"badge badge_warning\"\n                    style=\"margin-right: 0.25rem\"\n                  >\n                    NEW\n                  </span>\n                {{ product.name }}\n              </td>\n              <td class=\"word-break\" style=\"width: 30%\">{{product.description}}</td>\n              <td class=\"text-center\" style=\"width: 15%\">\n                {{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs'}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"rowexpansion\" let-product>\n            <tr>\n              <td colspan=\"5\">\n                <form [formGroup]=\"createForm\">\n                  <div class=\"row\">\n                    <div class=\"col-6\" [class.col-12]=\"selectedProduct?.type === '0'\">\n                      <div class=\"form-group\">\n                        <label>Quantity*</label>\n                        <input\n                          pInputText\n                          formControlName=\"required_quantity\"\n                          min=\"1\"\n                          class=\"form-control\"\n                          type=\"number\"\n                        >\n                      </div>\n                    </div>\n                    <div class=\"col-6\" *ngIf=\"selectedProduct?.type !== '0'\">\n                      <div class=\"form-group\">\n                        <label>Technology*</label>\n                        <p-dropdown\n                          [showClear]=\"true\"\n                          *ngIf=\"product.technologies.length > 0\"\n                          [autoDisplayFirst]=\"false\"\n                          [options]=\"product.technologies\"\n                          formControlName=\"technology\"\n                          placeholder=\"Technology\"\n                          optionLabel=\"name\"\n                          optionValue=\"id\"\n                        >\n                        </p-dropdown>\n                        <div class=\"text-danger\" *ngIf=\"product.technologies.length === 0\">No technology to select from\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </mat-dialog-content>\n      <div\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Add\"\n    [disabled]=\"createForm.invalid || (this.selectedProduct?.type !== '0' && !this.createForm.get('technology').value)\"\n    [loading]=\"isSaving\"\n    (click)=\"onAddMaterial()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderSupplierService} from '../../../confirmation/services/order-supplier.service';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-add-supplier-to-order',\n  templateUrl: './add-supplier-to-order.component.html',\n  styleUrls: ['./add-supplier-to-order.component.scss']\n})\nexport class AddSupplierToOrderComponent implements OnInit {\n  isLoading = true;\n  companies: Partial<Company>[] = [];\n\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    list_id: [null, Validators.required],\n    supplier_id: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyService: CompanyService,\n    private dialogRef: MatDialogRef<AddSupplierToOrderComponent>,\n    private readonly orderSupplierService: OrderSupplierService,\n    @Inject(MAT_DIALOG_DATA) public data: { id: number }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('list_id').patchValue(this.data.id);\n    this.getCompanies();\n  }\n\n  getCompanies() {\n    this.companyService.getShortsCompanies([{\n      name: 'categories', value: 1\n    }]).subscribe(companies => {\n      this.companies = companies;\n      this.isLoading = false;\n    });\n  }\n\n  onAdd() {\n    this.isSaving = true;\n    this.orderSupplierService.addSupplierToOrder(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(company => this.dialogRef.close(company));\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">Add Supplier to Order</h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Supplier*</label>\n        <p-dropdown\n          *ngIf=\"!isLoading else spinner\"\n          [filter]=\"true\"\n          [options]=\"companies\"\n          placeholder=\"Select Company\"\n          formControlName=\"supplier_id\"\n          optionLabel=\"name\"\n          optionValue=\"id\"\n          [showClear]=\"true\"\n        >\n        </p-dropdown>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid\"\n      [label]=\"'Add'\"\n      (click)=\"onAdd()\"\n    ></button>\n</mat-dialog-actions>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {QuerySearch} from '@shared/models/other';\nimport {Nomenclature} from '@shared/models/nomenclature';\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, finalize, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {Paginator} from 'primeng/paginator';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-create-outsourcing-request',\n  templateUrl: './create-outsourcing-request.component.html',\n  styleUrls: ['./create-outsourcing-request.component.scss']\n})\nexport class CreateOutsourcingRequestComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  nomenclatureFilterTypes = [\n    {name: 'Manufactured', value: '2'},\n    {name: 'Assembly', value: '1'}\n  ];\n\n  isSaving = false;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    type: ['2'],\n  });\n\n  createForm: FormGroup = this.fb.group({\n    current_technology: [null, Validators.required],\n    quantity: [0, [Validators.required, Validators.min(1)]],\n    order: [null],\n    nomenclature: [null, Validators.required],\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProduct: Nomenclature;\n\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  products$: Observable<Nomenclature[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.nomenclatureService.getForPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n    private dialogRef: MatDialogRef<CreateOutsourcingRequestComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { orderId: number }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.createForm.get('order').patchValue(this.data.orderId);\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    this.createForm.get('quantity').patchValue(null);\n    this.createForm.get('current_technology').patchValue(null);\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'paginated', value: true},\n      {name: 'page', value: this.currentPage},\n    ];\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value) {\n        this.query.push({\n          name: key,\n          value: this.searchForm.controls[key].value\n        });\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onSelectProduct() {\n    this.createForm.get('nomenclature').patchValue(this.selectedProduct?.id || null);\n  }\n\n  clearCreatForm() {\n    this.createForm.get('quantity').patchValue(0);\n    this.createForm.get('current_technology').patchValue(null);\n  }\n\n  onAddProduct() {\n    this.isSaving = true;\n    this.orderProductService.create(this.createForm.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(order => {\n      this.dialogRef.close(order);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <ng-container *ngIf=\"!data.orderId\">\n    <h2 class=\"modal-header__title\">Add a New Item To Request</h2>\n    <p>Please Search the Item from catalogue and select items for request</p>\n  </ng-container>\n\n  <ng-container *ngIf=\"data.orderId\">\n    <h2 class=\"modal-header__title\">Add A New Item To Order</h2>\n  </ng-container>\n</div>\n\n<form [formGroup]=\"searchForm\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label>Type</label>\n        <p-dropdown\n          formControlName=\"type\"\n          [options]=\"nomenclatureFilterTypes\"\n          placeholder=\"Type\"\n          optionLabel=\"name\"\n          optionValue=\"value\"\n          (ngModelChange)=\"search$.next()\"\n        >\n        </p-dropdown>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          pInputText\n          formControlName=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"name\"\n          (ngModelChange)=\"name$.next()\"\n        />\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"form-group\">\n        <label for=\"code\">Code</label>\n        <input\n          pInputText\n          formControlName=\"code\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"code\"\n          (ngModelChange)=\"code$.next()\"\n        />\n      </div>\n    </div>\n  </div>\n</form>\n\n<div class=\"table-pagination-preloader\">\n  <mat-dialog-content>\n    <p-table\n      #dt\n      selectionMode=\"single\"\n      dataKey=\"id\"\n      rowExpandMode=\"single\"\n      [rows]=\"10\"\n      [value]=\"products$ | async\"\n      [(selection)]=\"selectedProduct\"\n      (selectionChange)=\"onSelectProduct()\"\n      (onRowExpand)=\"clearCreatForm()\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th style=\"width: 5%\" class=\"text-center\">#</th>\n          <th style=\"width: 25%\">Code</th>\n          <th style=\"width: 25%\">Name</th>\n          <th style=\"width: 30%\">Description</th>\n          <th style=\"width: 15%\" class=\"text-center\">UOM</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n        <tr\n          [pSelectableRow]=\"product\"\n          [pRowToggler]=\"product\"\n          [pSelectableRowDisabled]=\"product.approved === '0' && product.type === '0'\"\n          [pRowTogglerDisabled]=\"product.approved === '0' && product.type === '0'\"\n        >\n          <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n          <td style=\"width: 25%\">\n            {{ product.code }}\n          </td>\n          <td style=\"width: 25%\">\n                  <span\n                    *ngIf=\"product.approved === '0' && product.type === '0'\"\n                    class=\"badge badge_warning\"\n                    style=\"margin-right: 0.25rem\"\n                  >\n                    NEW\n                  </span>\n            {{ product.name }}\n          </td>\n          <td class=\"word-break\" style=\"width: 30%\">{{product.description}}</td>\n          <td class=\"text-center\" style=\"width: 15%\">\n            {{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs'}}\n          </td>\n      </ng-template>\n      <ng-template pTemplate=\"rowexpansion\" let-product>\n        <tr>\n          <td colspan=\"5\">\n            <form [formGroup]=\"createForm\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                    <label>Quantity*</label>\n                    <input\n                      pInputText\n                      formControlName=\"quantity\"\n                      min=\"1\"\n                      class=\"form-control\"\n                      type=\"number\"\n                    >\n                  </div>\n                </div>\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                    <label>Technology*</label>\n                    <p-dropdown\n                      [showClear]=\"true\"\n                      *ngIf=\"product.technologies.length > 0\"\n                      [autoDisplayFirst]=\"false\"\n                      [options]=\"product.technologies\"\n                      formControlName=\"current_technology\"\n                      placeholder=\"Technology\"\n                      optionLabel=\"name\"\n                      optionValue=\"id\"\n                    >\n                    </p-dropdown>\n                    <div class=\"text-danger\" *ngIf=\"product.technologies.length === 0\">No technology to select from\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n    </div>\n  </mat-dialog-content>\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <div\n    class=\"paginator-wrapper\"\n    [class.paginator-wrapper_hide]=\"productsCount === 0\"\n  >\n    <p-paginator\n      #paginator\n      [rows]=\"10\"\n      [totalRecords]=\"productsCount\"\n      (onPageChange)=\"paginate($event)\"\n    >\n    </p-paginator>\n  </div>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Add\"\n    [disabled]=\"createForm.invalid\"\n    [loading]=\"isSaving\"\n    (click)=\"onAddProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderSupplier} from '../../../confirmation/models/order-supplier';\nimport {OrderSupplierService} from '../../../confirmation/services/order-supplier.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-edit-order-supplier',\n  templateUrl: './edit-order-supplier.component.html',\n  styleUrls: ['./edit-order-supplier.component.scss']\n})\nexport class EditOrderSupplierComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    price: [0],\n    comment: [''],\n    delivery_date: [null],\n  });\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<EditOrderSupplierComponent>,\n    private readonly orderSupplierService: OrderSupplierService,\n    private readonly adapterService: AdapterService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { orderSupplier: OrderSupplier }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.patchValue(this.data.orderSupplier);\n    this.form.get('delivery_date').patchValue(new Date(this.data.orderSupplier.delivery_date));\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    const send = {\n      id: this.data.orderSupplier.id,\n      price: this.form.get('price').value,\n      comment: this.form.get('comment').value,\n      delivery_date: this.adapterService.dateAdapter(this.form.get('delivery_date').value),\n    };\n\n    this.orderSupplierService.updateSupplier(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(updateSupplier => {\n      this.dialogRef.close(updateSupplier);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">Add Supplier to Order</h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"price\">Price</label>\n          <input type=\"number\" id=\"price\" pInputText formControlName=\"price\">\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label>Delivery Date</label>\n          <p-calendar\n            [firstDayOfWeek]=\"1\"\n            [showButtonBar]=\"true\"\n            formControlName=\"delivery_date\"\n            inputId=\"basic\"\n            dateFormat=\"dd/mm/yy\"\n            [readonlyInput]=\"true\"\n          ></p-calendar>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <label for=\"comment\">Comment*</label>\n          <textarea id=\"comment\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"comment\"></textarea>\n        </div>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    [label]=\"'Edit'\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {WarehouseProduct, WarehouseProducts} from '../../../warehouse/models/warehouse-product';\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Category} from '../../../product-structure/models/category';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-search-product-in-warehouse',\n  templateUrl: './search-product-in-warehouse.component.html',\n  styleUrls: ['./search-product-in-warehouse.component.scss']\n})\nexport class SearchProductInWarehouseComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    warehouse: [null],\n    locator: [null],\n    type: [null],\n    category: [null],\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProduct: WarehouseProduct;\n\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  products$: Observable<WarehouseProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.warehouseProductService.getGroupedPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    map(products => products.map((product, index) => {\n      product.uid = index;\n      if (typeof product.nomenclature !== 'number') {\n        // @ts-ignore\n        product.uom = product.nomenclature?.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs';\n      }\n      return product\n    })),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  )\n\n  constructor(\n    private readonly warehouseProductService: WarehouseProductService,\n    private readonly adapterService: AdapterService,\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<SearchProductInWarehouseComponent>,\n  ) { }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'paginated', value: true},\n      {name: 'page', value: this.currentPage},\n      {name: 'at_area', value: false},\n    ];\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value) {\n        this.query.push({\n          name: key,\n          value: this.searchForm.controls[key].value\n        });\n      }\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onSelectCategory(category: Category) {\n    this.searchForm.get('category').patchValue(category?.id || null);\n    this.search$.next();\n  }\n\n  onPickProduct() {\n    this.dialogRef.close(this.selectedProduct)\n  }\n\n  onSelectWarehouse(id: number) {\n    this.searchForm.get('warehouse').patchValue(id);\n    this.searchForm.get('locator').patchValue(null);\n    this.search$.next()\n  }\n\n  onSelectLocator(id: number) {\n    this.searchForm.get('locator').patchValue(id);\n    this.search$.next();\n  }\n\n  onSelectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.search$.next()\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Search in Warehouse\n  </h2>\n</div>\n\n<div class=\"search-product-in-warehouse__row\">\n  <div class=\"search-product-in-warehouse__column-left\">\n    <pek-categories-tree-picker (categorySelected)=\"onSelectCategory($event)\"></pek-categories-tree-picker>\n  </div>\n  <div class=\"search-product-in-warehouse__column-right\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              pInputText\n              formControlName=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"name\"\n              (ngModelChange)=\"name$.next()\"\n            />\n          </div>\n        </div>\n        <div class=\"col-2\">\n          <div class=\"form-group\">\n            <label for=\"code\">Code</label>\n            <input\n              pInputText\n              formControlName=\"code\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"code\"\n              (ngModelChange)=\"code$.next()\"\n            />\n          </div>\n        </div>\n        <div class=\"col-2\">\n          <div class=\"form-group\">\n            <label>Warehouses</label>\n            <pek-warehouse-picker\n              (selectWarehouse)=\"onSelectWarehouse($event)\"\n            ></pek-warehouse-picker>\n          </div>\n        </div>\n        <div class=\"col-2\">\n          <div class=\"form-group\">\n            <label>Locator</label>\n            <pek-locator-picker\n              (selectLocator)=\"onSelectLocator($event)\"\n              [warehouseId]=\"searchForm.get('warehouse').value\"\n              [isAllLocators]=\"false\"\n              [isDisabled]=\"true\"\n            ></pek-locator-picker>\n          </div>\n        </div>\n        <div class=\"col-2\">\n          <div class=\"form-group\">\n            <label>Type</label>\n            <pek-nomenclature-type-picker\n              (choiceNomenclatureType)=\"onSelectNomenclatureType($event)\"\n            ></pek-nomenclature-type-picker>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <mat-dialog-content>\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          dataKey=\"id\"\n          [rows]=\"10\"\n          [value]=\"products$ | async\"\n          [(selection)]=\"selectedProduct\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n              <th style=\"width: 17%\">Code</th>\n              <th style=\"width: 18%\">Name</th>\n              <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\n              <th style=\"width: 10%\" class=\"text-center\">UOM</th>\n              <th style=\"width: 13%\" class=\"text-center\">Category</th>\n              <th style=\"width: 12%\" class=\"text-center\">Warehouse</th>\n              <th style=\"width: 15%\">Locator</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n            <tr [pSelectableRow]=\"product\">\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 17%\">{{product.nomenclature ? product.nomenclature?.code : product.code}}</td>\n              <td style=\"width: 18%\">{{product.nomenclature ? product.nomenclature?.name : product.name}}</td>\n              <td style=\"width: 10%\" class=\"text-center\">\n                <span *ngIf=\"product?.total_locator_quantity\">{{product.total_locator_quantity}}</span>\n              </td>\n              <td style=\"width: 10%\" class=\"text-center\">\n                {{product.uom}}\n              </td>\n              <td style=\"width: 13%\" class=\"text-center\">\n                {{product.nomenclature ? product.nomenclature?.category?.name : product.category?.name}}\n              </td>\n              <td style=\"width: 12%\" class=\"text-center\">\n                <ng-container *ngIf=\"product.locator\">{{product.locator.warehouse.name}}\n                </ng-container>\n              </td>\n              <td style=\"width: 15%\">\n                <ng-container *ngIf=\"product.locator\">{{product.locator.name}}</ng-container>\n                <span class=\"d-block\" *ngIf=\"product.locator\"> R: {{product.locator.row}} Col:\n                  {{product.locator.column}} Sh: {{product.locator.shelf}} Pl:\n                  {{product.locator.place}}</span>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </mat-dialog-content>\n      <div\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Add\"\n    [disabled]=\"!selectedProduct\"\n    (click)=\"onPickProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutsourcingRouting } from './outsourcing.routing';\nimport { OutsourcingLayoutComponent } from './components/outsourcing-layout/outsourcing-layout.component';\nimport { OutsourcingChainsComponent } from './components/outsourcing-chains/outsourcing-chains.component';\nimport { OutsourcingOrderStatusesComponent } from './components/outsourcing-order-statuses/outsourcing-order-statuses.component';\nimport {LayoutModule} from '../layout/layout.module';\nimport { OutsourcingOrderPageComponent } from './components/outsourcing-order-page/outsourcing-order-page.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { AddSupplierToOrderComponent } from './modals/add-supplier-to-order/add-supplier-to-order.component';\nimport { EditOrderSupplierComponent } from './modals/edit-order-supplier/edit-order-supplier.component';\nimport { OutsourcingChainCreationListComponent } from './components/outsourcing-chain-creation-list/outsourcing-chain-creation-list.component';\nimport { OutsourcingRequestsComponent } from './components/outsourcing-requests/outsourcing-requests.component';\nimport { CreateOutsourcingRequestComponent } from './modals/create-outsourcing-request/create-outsourcing-request.component';\nimport {TriStateCheckboxModule} from 'primeng/tristatecheckbox';\nimport { SearchProductInWarehouseComponent } from './modals/search-product-in-warehouse/search-product-in-warehouse.component';\nimport { AddMaterialToOrderComponent } from './modals/add-material-to-order/add-material-to-order.component';\n\n\n@NgModule({\n  declarations: [\n    OutsourcingLayoutComponent,\n    OutsourcingChainsComponent,\n    OutsourcingOrderStatusesComponent,\n    OutsourcingOrderPageComponent,\n    AddSupplierToOrderComponent,\n    EditOrderSupplierComponent,\n    OutsourcingChainCreationListComponent,\n    OutsourcingRequestsComponent,\n    CreateOutsourcingRequestComponent,\n    SearchProductInWarehouseComponent,\n    AddMaterialToOrderComponent\n  ],\n  imports: [\n    CommonModule,\n    OutsourcingRouting,\n    SharedModule,\n    LayoutModule,\n    TriStateCheckboxModule,\n  ]\n})\nexport class OutsourcingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ProcurementLayoutComponent} from '../procurement/components/procurement-layout/procurement-layout.component';\nimport {ProcurementChainsComponent} from '../procurement/components/procurement-chains/procurement-chains.component';\nimport {\n  ProcurementOrderPageComponent\n} from '../procurement/components/procurement-order-page/procurement-order-page.component';\nimport {\n  AuxiliaryInvoicesTypesListComponent\n} from '../procurement/components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component';\nimport {\n  ProcurementChainCreationListComponent\n} from '../procurement/components/procurement-chain-creation-list/procurement-chain-creation-list.component';\nimport {\n  ProcurementOrderStatusesComponent\n} from '../procurement/components/procurement-order-statuses/procurement-order-statuses.component';\nimport {OutsourcingLayoutComponent} from './components/outsourcing-layout/outsourcing-layout.component';\nimport {OutsourcingChainsComponent} from './components/outsourcing-chains/outsourcing-chains.component';\nimport {OutsourcingOrderPageComponent} from './components/outsourcing-order-page/outsourcing-order-page.component';\nimport {\n  OutsourcingOrderStatusesComponent\n} from './components/outsourcing-order-statuses/outsourcing-order-statuses.component';\nimport {\n  OutsourcingChainCreationListComponent\n} from './components/outsourcing-chain-creation-list/outsourcing-chain-creation-list.component';\nimport {OutsourcingRequestsComponent} from './components/outsourcing-requests/outsourcing-requests.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OutsourcingLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'chains', pathMatch: 'full'},\n      {\n        path: 'chains',\n        children: [\n          {path: '', title: 'Outsourcing Chains', component: OutsourcingChainsComponent},\n          {path: 'order/:id', title: 'Outsourcing Order', component: OutsourcingOrderPageComponent},\n        ]\n      },\n      {path: 'order-products', title: 'Outsourcing Chain Creation', component: OutsourcingChainCreationListComponent},\n      {path: 'statuses', title: 'Order Statuses', component: OutsourcingOrderStatusesComponent},\n      {path: 'requests', title: 'Assembly & Manufactured Requests', component: OutsourcingRequestsComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OutsourcingRouting { }\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {Subject, takeUntil} from \"rxjs\";\r\nimport {Payment} from \"../../models/payment\";\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {AdapterService} from \"@shared/services/adapter.service\";\r\nimport {PaymentService} from \"../../services/payment.service\";\r\nimport {MenuItem} from \"primeng/api\";\r\nimport {ModalService} from \"@shared/services/modal.service\";\r\n\r\n@Component({\r\n  selector: 'pek-delivery-payment-list',\r\n  templateUrl: './delivery-payment-list.component.html',\r\n  styleUrls: ['./delivery-payment-list.component.scss']\r\n})\r\nexport class DeliveryPaymentListComponent implements OnInit {\r\n\r\n  private destroy$ = new Subject();\r\n  isLoading = true;\r\n  payments: Payment[] = []; //delivery\r\n  todayDate = new Date()\r\n  selectedPayment: Payment;\r\n  statusPayment = ['DECLINED', 'PAID', 'CONFIRMED', 'WAITING'];\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Payment',\r\n    items: [\r\n      {\r\n        label: 'Pay',\r\n        icon: 'pi pi-check',\r\n        command: () => this\r\n        // disabled: true\r\n      },\r\n      {\r\n        label: 'Go to Order',\r\n        icon: 'pi pi-angle-double-right',\r\n        command: () => this\r\n      },\r\n      {\r\n        label: 'Go to Invoice',\r\n        icon: 'pi pi-angle-double-right',\r\n        command: () => this\r\n      },\r\n      {\r\n        label: 'Files',\r\n        icon: 'pi pi-file',\r\n        command: () => this\r\n      },\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this\r\n      }\r\n    ]\r\n  }];\r\n\r\n  query: QuerySearch[] = [\r\n    {\r\n      name: 'payment_date_after',\r\n      value: this.adapterService.dateAdapter(new Date(this.todayDate.setMonth(this.todayDate.getMonth() - 1)))\r\n    },\r\n    {\r\n      name: 'payment_date_before',\r\n      value: this.adapterService.dateAdapter(new Date())\r\n    },\r\n    {\r\n      name: 'for_delivery',\r\n      value: true\r\n    }\r\n  ]\r\n\r\n  searchDeliveryForm: FormGroup = this.fb.group({\r\n    supplier: [null],\r\n    payment_date_after: [new Date(this.todayDate.setMonth(this.todayDate.getMonth() - 1))],\r\n    payment_date_before: [new Date()],\r\n    accounting_type: [null],\r\n    material_or_service: [null],\r\n    purchase_categories: [null],\r\n    status: [null]\r\n  })\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private adapterService: AdapterService,\r\n    private paymentService: PaymentService,\r\n    private modalService: ModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPayments()\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.get(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(payments => {\r\n      this.payments = payments\r\n      this.payments.forEach(p => p.payment_date = new Date(p.payment_date))\r\n      this.isLoading = false\r\n    });\r\n  }\r\n\r\n  selectedCompany(id: number) {\r\n    this.searchDeliveryForm.get('supplier').patchValue(id);\r\n    this.searchPayments()\r\n  }\r\n\r\n  searchPayments() {\r\n    this.isLoading = true;\r\n    this.destroy$.next(true);\r\n    this.payments = []\r\n    this.selectedPayment = null\r\n    this.query = [\r\n      {\r\n        name: 'for_delivery',\r\n        value: true\r\n      }\r\n    ]\r\n\r\n    if (this.searchDeliveryForm.get('supplier').value) {\r\n      this.query.push({\r\n        name: 'supplier',\r\n        value: this.searchDeliveryForm.get('supplier').value\r\n      })\r\n    }\r\n\r\n    if (this.searchDeliveryForm.get('payment_date_after').value) {\r\n      this.query.push({\r\n        name: 'payment_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchDeliveryForm.get('payment_date_after').value)\r\n      })\r\n    }\r\n\r\n    if (this.searchDeliveryForm.get('payment_date_before').value) {\r\n      this.query.push({\r\n        name: 'payment_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchDeliveryForm.get('payment_date_before').value)\r\n      })\r\n    }\r\n    if (this.searchDeliveryForm.get('status').value) {\r\n      this.query.push({\r\n        name: 'status',\r\n        value: this.searchDeliveryForm.get('status').value\r\n      })\r\n    }\r\n    this.getPayments()\r\n  }\r\n\r\n  onSelectPayment() {\r\n    if (this.selectedPayment) {\r\n      this.menuItems[0].items[0].disabled = this.selectedPayment.status !== 'CONFIRMED'\r\n    }\r\n    if (this.selectedPayment) {\r\n      this.menuItems[0].items[2].disabled = this.selectedPayment.status === 'PAID'\r\n    }\r\n  }\r\n\r\n  onCreate() {\r\n    this.paymentService.openCreateEditPaymentForm('create').subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments()\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'sales'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Delivery Payments</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"New Payment\"\r\n        (click)=\"onCreate()\"\r\n        [disabled]=true\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n\r\n    <div class=\"page__table\">\r\n      <form\r\n        [formGroup]=\"searchDeliveryForm\"\r\n        class=\"form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Supplier</label>\r\n              <pek-company-picker\r\n                [currentCompanyId]=\"searchDeliveryForm.get('supplier').value\"\r\n                (selectCompany)=\"selectedCompany($event)\"\r\n              >\r\n              </pek-company-picker>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>From</label>\r\n              <p-calendar\r\n                formControlName=\"payment_date_after\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n                (ngModelChange)=\"searchPayments()\"\r\n              >\r\n              </p-calendar>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>To</label>\r\n              <p-calendar\r\n                formControlName=\"payment_date_before\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n                (ngModelChange)=\"searchPayments()\"\r\n              >\r\n              </p-calendar>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Status</label>\r\n              <p-dropdown\r\n                formControlName=\"status\"\r\n                (ngModelChange)=\"searchPayments()\"\r\n                [options]=\"statusPayment\"\r\n                [showClear]=\"true\"\r\n                placeholder=\"Choose Status\"\r\n              >\r\n              </p-dropdown>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"payments.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedPayment\"\r\n        [value]=\"payments\"\r\n        (selectionChange)=\"onSelectPayment()\"\r\n      >\r\n<!--        <ng-template pTemplate=\"caption\">-->\r\n<!--          <div class=\"d-flex buttons\">-->\r\n<!--            <p-menubar-->\r\n<!--              class=\"ml-auto\"-->\r\n<!--              [model]=\"menuItems\"-->\r\n<!--              [class.disabled]=\"!selectedPayment\"-->\r\n<!--            ></p-menubar>-->\r\n<!--          </div>-->\r\n<!--        </ng-template>-->\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 4%\">#</th>\r\n            <th style=\"width: 10%\">Payment ID</th>\r\n            <th style=\"width: 10%\">Date</th>\r\n            <th style=\"width: 14%\">Customer</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Delivery Chain ID</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Status</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">% Paid</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"payment\">\r\n            <td class=\"text-center\" style=\"width: 4%\">{{i + 1}}</td>\r\n            <td style=\"width: 10%\">{{payment.id}}</td>\r\n            <td style=\"width: 10%\">{{payment.payment_date | date:'dd/MM/yyyy'}}</td>\r\n            <td style=\"width: 14%\">\r\n              {{payment.delivery_chain.customer.name}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <div *ngFor=\"let invoice of payment.invoices\">\r\n                {{invoice.self_serial_number}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{payment.delivery_chain.serial_number}}\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              <div\r\n                [ngClass]=\"{\r\n                    'text-primary': payment.status==='PAID',\r\n                    'text-warning': payment.status==='WAITING'\r\n                }\"\r\n              >\r\n                {{payment.status}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              {{payment.amount / payment.total | percent:'2.2-2'}}\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && payments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {NavigationLink} from \"../../../layout/navigation-route\";\r\n\r\n@Component({\r\n  selector: 'pek-payment-layout',\r\n  templateUrl: './payment-layout.component.html',\r\n  styleUrls: ['./payment-layout.component.scss']\r\n})\r\nexport class PaymentLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Payments', commands: ['payments']},\r\n    {label: 'Delivery', commands: ['delivery']}\r\n  ]\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<pek-header\r\n  [module]=\"'Payments'\"\r\n  [routes]=\"routes\"\r\n  [style.color]=\"'fff'\"\r\n  >\r\n</pek-header>\r\n<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Payment} from '../../models/payment';\r\nimport {ServiceInvoicePaymentService} from '../../services/service-invoice-payment.service';\r\nimport {ServiceInvoicePayment} from '../../models/service-invoice-payment';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {environment} from '@env/environment';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {Order} from '../../../procurement/models/order';\r\n\r\n\r\n@Component({\r\n  selector: 'pek-payment-lists',\r\n  templateUrl: './payment-lists.component.html',\r\n  styleUrls: ['./payment-lists.component.scss']\r\n})\r\nexport class PaymentListsComponent implements OnInit {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Payment',\r\n    items: [\r\n      {\r\n        label: 'Pay',\r\n        icon: 'pi pi-check',\r\n        command: () => this.onPayPayment(),\r\n        disabled: true\r\n      },\r\n      {\r\n        label: 'Files',\r\n        icon: 'pi pi-file',\r\n        command: () => this.onShowFilesPayment()\r\n      },\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditPayment()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemovePayment()\r\n      }\r\n    ]\r\n  }];\r\n  menuItemsAux: MenuItem[] = [{\r\n    label: 'Selected Auxiliary Payment',\r\n    items: [\r\n      {\r\n        label: 'Pay',\r\n        icon: 'pi pi-check',\r\n        command: () => this.onPayAuxiliaryPayment(),\r\n        disabled: true\r\n      },\r\n      {\r\n        label: 'File',\r\n        icon: 'pi pi-file',\r\n        command: () => this.onShowFilesAuxiliaryPayments()\r\n      },\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEdit()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemovePaymentAuxiliary()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  payments: Payment[] = [];\r\n  servicePayments: ServiceInvoicePayment[] = [];\r\n\r\n  isLoadingPayments = true;\r\n  isLoadingAuxPayments = true;\r\n\r\n  statusPayment = ['DECLINED', 'PAID', 'CONFIRMED', 'WAITING'];\r\n\r\n  selectedPayment: Payment;\r\n  selectedServicePayment: ServiceInvoicePayment;\r\n  tabIndex = 0;\r\n  todayDate = new Date();\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  paymentsQuery: QuerySearch[] = [\r\n    {\r\n      name: 'payment_date_after',\r\n      value: this.adapterService.dateAdapter(new Date(this.todayDate.setMonth(this.todayDate.getMonth() - 1)))\r\n    },\r\n    {\r\n      name: 'payment_date_before',\r\n      value: this.adapterService.dateAdapter(new Date())\r\n    },\r\n    {\r\n      name: 'for_delivery',\r\n      value: false\r\n    }\r\n  ];\r\n\r\n  auxiliaryPaymentsQuery: QuerySearch[] = [\r\n    {\r\n      name: 'payment_date_after',\r\n      value: this.adapterService.dateAdapter(new Date(this.todayDate.setMonth(this.todayDate.getMonth())))\r\n    },\r\n    {\r\n      name: 'payment_date_before',\r\n      value: this.adapterService.dateAdapter(new Date())\r\n    },\r\n    {\r\n      name: 'for_delivery',\r\n      value: false\r\n    }\r\n  ];\r\n\r\n  searchPaymentsForm: FormGroup = this.fb.group({\r\n    supplier: [null],\r\n    payment_date_after: [new Date(this.todayDate.setMonth(this.todayDate.getMonth()))],\r\n    payment_date_before: [new Date()],\r\n    accounting_type: [null],\r\n    material_or_service: [null],\r\n    purchase_categories: [null],\r\n    status: [null]\r\n  });\r\n\r\n  searchPaymentsAuxiliaryForm: FormGroup = this.fb.group({\r\n    supplier: [null],\r\n    payment_date_after: [new Date(this.todayDate.setMonth(this.todayDate.getMonth()))],\r\n    payment_date_before: [new Date()],\r\n    accounting_type: [null],\r\n    material_or_service: [null],\r\n    purchase_categories: [null],\r\n    status: [null]\r\n  });\r\n\r\n  constructor(\r\n    private paymentService: PaymentService,\r\n    private modalService: ModalService,\r\n    private serviceInvoicePaymentService: ServiceInvoicePaymentService,\r\n    private adapterService: AdapterService,\r\n    private readonly fb: FormBuilder,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPayments();\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.get(this.paymentsQuery).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(payments => {\r\n      this.payments = payments;\r\n      this.payments.forEach(p => p.payment_date = new Date(p.payment_date));\r\n      this.isLoadingPayments = false;\r\n    });\r\n  }\r\n\r\n  getServiceInvoicePayments() {\r\n    this.serviceInvoicePaymentService.get(this.auxiliaryPaymentsQuery).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(payments => {\r\n      this.servicePayments = payments;\r\n      this.servicePayments.forEach(p => p.payment_date = new Date(p.payment_date));\r\n      this.isLoadingAuxPayments = false;\r\n    });\r\n  }\r\n\r\n  getAllPayments() {\r\n    this.getPayments();\r\n    this.getServiceInvoicePayments();\r\n  }\r\n\r\n  createPayment() {\r\n    this.paymentService.openCreateEditPaymentForm('create').subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreate() {\r\n    if (this.tabIndex === 0) {\r\n      this.createPayment();\r\n    } else {\r\n      this.createServicePayment();\r\n    }\r\n  }\r\n\r\n  onEdit() {\r\n    if (this.tabIndex === 0) {\r\n      this.onEditPayment();\r\n    } else {\r\n      this.onEditPaymentAuxiliary();\r\n    }\r\n  }\r\n\r\n  onEditPayment() {\r\n    this.paymentService.openCreateEditPaymentForm('edit', this.selectedPayment).subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditPaymentAuxiliary() {\r\n    this.serviceInvoicePaymentService.openCreateEditServicePaymentForm('edit', this.selectedServicePayment).subscribe(payment => {\r\n      if (payment) {\r\n        this.getServiceInvoicePayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemovePayment() {\r\n    this.modalService.confirm('danger').subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.paymentService.delete(this.selectedPayment).subscribe(() => {\r\n          this.payments = this.payments.filter(p => p.id != this.selectedPayment.id);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemovePaymentAuxiliary() {\r\n    this.modalService.confirm('danger').subscribe((confirm) => {\r\n      if (confirm) {\r\n        this.serviceInvoicePaymentService.delete(this.selectedServicePayment.id).subscribe(() => {\r\n          this.servicePayments = this.servicePayments.filter(p => p.id != this.selectedServicePayment.id);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createServicePayment() {\r\n    this.serviceInvoicePaymentService.openCreateEditServicePaymentForm('create', null).subscribe(paymentService => {\r\n      console.log(paymentService);\r\n      if (paymentService) {\r\n        this.getServiceInvoicePayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPayPayment() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.paymentService.pay(\r\n          {\r\n            id: this.selectedPayment.id,\r\n            is_paid: true\r\n          }).subscribe(payment => {\r\n          if (payment) {\r\n            this.searchPayments();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onPayAuxiliaryPayment() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.serviceInvoicePaymentService.pay(\r\n          {\r\n            id: this.selectedServicePayment.id,\r\n            is_paid: true\r\n          }).subscribe(payment => {\r\n          if (payment) {\r\n            this.searchAuxiliaryPayments();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowFilesPayment() {\r\n    this.paymentService.showPaymentFiles(this.selectedPayment.id).subscribe();\r\n  }\r\n\r\n  onShowFilesAuxiliaryPayments() {\r\n    this.serviceInvoicePaymentService.showAuxiliaryPaymentFiles(this.selectedServicePayment.id).subscribe();\r\n  }\r\n\r\n  searchPayments() {\r\n    this.isLoadingPayments = true;\r\n    this.destroy$.next(true);\r\n    this.payments = [];\r\n    this.selectedPayment = null;\r\n    this.paymentsQuery = [\r\n      {\r\n        name: 'for_delivery',\r\n        value: false\r\n      }\r\n    ];\r\n\r\n    console.log(this.searchPaymentsForm.get('status').value);\r\n\r\n    if (this.searchPaymentsForm.get('supplier').value) {\r\n      this.paymentsQuery.push({\r\n        name: 'supplier',\r\n        value: this.searchPaymentsForm.get('supplier').value\r\n      });\r\n    }\r\n\r\n    if (this.searchPaymentsForm.get('payment_date_after').value) {\r\n      this.paymentsQuery.push({\r\n        name: 'payment_date_after',\r\n        value: this.adapterService.dateAdapter(this.searchPaymentsForm.get('payment_date_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchPaymentsForm.get('payment_date_before').value) {\r\n      this.paymentsQuery.push({\r\n        name: 'payment_date_before',\r\n        value: this.adapterService.dateAdapter(this.searchPaymentsForm.get('payment_date_before').value)\r\n      });\r\n    }\r\n    if (this.searchPaymentsForm.get('status').value) {\r\n      this.paymentsQuery.push({\r\n        name: 'status',\r\n        value: this.searchPaymentsForm.get('status').value\r\n      });\r\n    }\r\n    this.getPayments();\r\n  }\r\n\r\n  selectedCompany(id: number) {\r\n    this.searchPaymentsForm.get('supplier').patchValue(id);\r\n    this.searchPayments();\r\n  }\r\n\r\n  selectedAuxPaymentCompany(id: number) {\r\n    this.searchPaymentsAuxiliaryForm.get('supplier').patchValue(id);\r\n    this.searchAuxiliaryPayments();\r\n  }\r\n\r\n  searchAuxiliaryPayments() {\r\n    this.isLoadingAuxPayments = true;\r\n    this.destroy$.next(true);\r\n    this.servicePayments = [];\r\n    this.selectedServicePayment = null;\r\n    this.auxiliaryPaymentsQuery = [\r\n      {\r\n        name: 'for_delivery',\r\n        value: false\r\n      }\r\n    ];\r\n\r\n    if (this.searchPaymentsAuxiliaryForm.get('supplier').value) {\r\n      this.auxiliaryPaymentsQuery.push({\r\n        name: 'supplier',\r\n        value: this.searchPaymentsAuxiliaryForm.get('supplier').value\r\n      });\r\n    }\r\n    if (this.searchPaymentsAuxiliaryForm.get('payment_date_after').value) {\r\n      this.auxiliaryPaymentsQuery.push(\r\n        {\r\n          name: 'payment_date_after',\r\n          value: this.adapterService.dateAdapter(this.searchPaymentsForm.get('payment_date_after').value)\r\n        }\r\n      );\r\n    }\r\n    if (this.searchPaymentsAuxiliaryForm.get('payment_date_before').value) {\r\n      this.auxiliaryPaymentsQuery.push(\r\n        {\r\n          name: 'payment_date_before',\r\n          value: this.adapterService.dateAdapter(this.searchPaymentsForm.get('payment_date_before').value)\r\n        }\r\n      );\r\n    }\r\n    if (this.searchPaymentsAuxiliaryForm.get('status').value && this.searchPaymentsAuxiliaryForm.get('status').value !== 'All') {\r\n      this.auxiliaryPaymentsQuery.push(\r\n        {\r\n          name: 'status',\r\n          value: this.searchPaymentsAuxiliaryForm.get('status').value\r\n        }\r\n      );\r\n    }\r\n    this.getServiceInvoicePayments();\r\n  }\r\n\r\n  onSelectPayment() {\r\n    if (this.selectedPayment) {\r\n      this.menuItems[0].items[0].disabled = this.selectedPayment.status !== 'CONFIRMED';\r\n      this.menuItems[0].items[3].disabled = this.selectedPayment.status === 'PAID';\r\n    }\r\n  }\r\n\r\n  onSelectAuxiliaryPayment() {\r\n    if (this.selectedServicePayment) {\r\n      this.menuItemsAux[0].items[0].disabled = this.selectedServicePayment.status !== 'CONFIRMED';\r\n      this.menuItemsAux[0].items[3].disabled = this.selectedServicePayment.status === 'PAID';\r\n    }\r\n  }\r\n\r\n  goToPaymentOrder() {\r\n    if (this.selectedPayment.invoices[0].order.accounting_type === 1) {\r\n      window.open(`${this.link}procurement/orders/products/` + this.selectedPayment.invoices[0].order.id);\r\n    }\r\n\r\n    if (this.selectedPayment.invoices[0].order.accounting_type === 2) {\r\n      window.open(`${this.link}outsource/outsource-chain/products/` + this.selectedPayment.invoices[0].order.id);\r\n    }\r\n  }\r\n\r\n  goToPaymentInvoice() {\r\n    window.open(`${this.link}accounting/invoices/products/` + this.selectedPayment.invoices[0].id);\r\n  }\r\n\r\n  goToServicePaymentInvoice() {\r\n    window.open(`${this.link}accounting/invoices/service-invoice/` + this.selectedServicePayment.service_invoices[0].id);\r\n  }\r\n\r\n  goToServicePaymentOrder() {\r\n    if (this.selectedServicePayment.service_invoices[0].order.accounting_type === 1) {\r\n      window.open(`${this.link}procurement/orders/products/` + this.selectedServicePayment.service_invoices[0].order.id);\r\n    }\r\n\r\n    if (this.selectedServicePayment.service_invoices[0].order.accounting_type === 2) {\r\n      window.open(`${this.link}outsource/outsource-chain/products/` + this.selectedServicePayment.service_invoices[0].order.id);\r\n    }\r\n  }\r\n\r\n  goToLinkPaymentInvoice(invoice: Invoice) {\r\n    window.open(`${this.link}accounting/invoices/products/` + invoice.id);\r\n  }\r\n\r\n  goToLinkServicePaymentInvoice(invoice: Invoice) {\r\n    window.open(`${this.link}accounting/invoices/service-invoice/` + invoice.id);\r\n  }\r\n\r\n  goToLinkPaymentOrder(order: Order) {\r\n    if (order.accounting_type === 1) {\r\n      window.open(`${this.link}procurement/orders/products/` + order.id);\r\n    }\r\n\r\n    if (order.accounting_type === 2) {\r\n      window.open(`${this.link}outsource/outsource-chain/products/` + order.id);\r\n    }\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'sales'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Payments</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        [label]=\"tabIndex === 0 ? 'New Payment' : 'New Auxiliary Payment'\"\r\n        (click)=\"onCreate()\"\r\n      >\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"page__content\">\r\n\r\n    <p-tabView class=\"custom-tabs\" [(activeIndex)]=\"tabIndex\">\r\n      <p-tabPanel header=\"Payments\" [selected]=\"true\">\r\n        <div class=\"page__table\">\r\n          <form\r\n            [formGroup]=\"searchPaymentsForm\"\r\n            class=\"form mb-3\"\r\n          >\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Supplier</label>\r\n                  <pek-company-picker\r\n                    [currentCompanyId]=\"searchPaymentsForm.get('supplier').value\"\r\n                    (selectCompany)=\"selectedCompany($event)\"\r\n                  >\r\n                  </pek-company-picker>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>From</label>\r\n                  <p-calendar\r\n                    formControlName=\"payment_date_after\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"searchPayments()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>To</label>\r\n                  <p-calendar\r\n                    formControlName=\"payment_date_before\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"searchPayments()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Status</label>\r\n                  <p-dropdown\r\n                    formControlName=\"status\"\r\n                    (ngModelChange)=\"searchPayments()\"\r\n                    [options]=\"statusPayment\"\r\n                    [showClear]=\"true\"\r\n                    placeholder=\"Choose Status\"\r\n                  >\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </form>\r\n          <p-table\r\n            #dt\r\n            selectionMode=\"single\"\r\n            scrollHeight=\"calc(100vh - 28.25rem)\"\r\n            [scrollable]=\"true\"\r\n            [paginator]=\"payments.length > 0\"\r\n            [rows]=\"10\"\r\n            [(selection)]=\"selectedPayment\"\r\n            [value]=\"payments\"\r\n            (selectionChange)=\"onSelectPayment()\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex buttons align-items-center\">\r\n                <p class=\"subtitle\" *ngIf=\"!selectedPayment\">Choose the Payment to edit</p>\r\n                <button\r\n                  class=\"ml-auto mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-angle-double-right\"\r\n                  label=\"Invoice\"\r\n                  (click)=\"goToPaymentInvoice()\"\r\n                  [disabled]=\"!selectedPayment || selectedPayment?.invoices?.length !== 1\"\r\n                >\r\n                </button>\r\n                <button\r\n                  class=\"mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi pi-angle-double-right\"\r\n                  label=\"Order\"\r\n                  (click)=\"goToPaymentOrder()\"\r\n                  [disabled]=\"!selectedPayment || selectedPayment?.invoices?.length !== 1\"\r\n                >\r\n                </button>\r\n                <p-menubar\r\n                  [model]=\"menuItems\"\r\n                  [class.disabled]=\"!selectedPayment\"\r\n                ></p-menubar>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th class=\"text-center\" style=\"width: 4%\">#</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Payment ID</th>\r\n                <th style=\"width: 10%\">Date</th>\r\n                <th style=\"width: 16%\">Supplier</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Converted Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Root list</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"payment\">\r\n                <td class=\"text-center\" style=\"width: 4%\">{{i + 1}}</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.id}}</td>\r\n                <td style=\"width: 10%\">\r\n                  <div class=\"payment-paperclip\">\r\n                    {{payment.payment_date | date:'dd/MM/yyyy'}}\r\n                    <i *ngIf=\"payment.related_files\" class=\"pi pi-paperclip\"></i>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 16%\">\r\n                  <div *ngFor=\"let invoice of payment.invoices\">\r\n                    <div class=\"word-break\">{{invoice.supplier.name}}</div>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.invoices\">\r\n                    <a (click)=\"goToLinkPaymentInvoice(invoice)\">{{invoice.self_serial_number}}</a>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.amount | moneyFormat}} €</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.invoices\">\r\n                    <a (click)=\"goToLinkPaymentOrder(invoice.order)\">{{invoice.order.id}}</a>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div\r\n                    [ngClass]=\"{\r\n                    'text-primary': payment.status==='PAID',\r\n                    'text-success': payment.status==='CONFIRMED',\r\n                    'text-danger': payment.status==='DECLINED',\r\n                    'text-warning': payment.status==='WAITING'\r\n                }\"\r\n                  >\r\n                    {{payment.status}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.invoices; let idx = index\">\r\n                    <span *ngFor=\"let root of invoice.order.root_production_list_products\">\r\n                      {{root.nomenclature.name}}<i\r\n                      *ngIf=\"idx !== invoice.order.root_production_list_products.length - 1\">,</i>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n                  <i *ngIf=\"isLoadingPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingPayments\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"dt.paginator=false\"\r\n                styleClass=\"p-button-text\"\r\n              >All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n        <div *ngIf=\"!dt.paginator && !isLoadingPayments && payments.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=true\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </p-tabPanel>\r\n\r\n      <p-tabPanel header=\"Auxiliary Invoice Payments\">\r\n        <div class=\"page__table\">\r\n          <form\r\n            [formGroup]=\"searchPaymentsAuxiliaryForm\"\r\n            class=\"form mb-3\"\r\n          >\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Supplier</label>\r\n                  <pek-company-picker\r\n                    [currentCompanyId]=\"searchPaymentsAuxiliaryForm.get('supplier').value\"\r\n                    (selectCompany)=\"selectedAuxPaymentCompany($event)\"\r\n                  >\r\n                  </pek-company-picker>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>From</label>\r\n                  <p-calendar\r\n                    formControlName=\"payment_date_after\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"searchAuxiliaryPayments()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>To</label>\r\n                  <p-calendar\r\n                    formControlName=\"payment_date_before\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"searchAuxiliaryPayments()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Status</label>\r\n                  <p-dropdown\r\n                    formControlName=\"status\"\r\n                    (ngModelChange)=\"searchAuxiliaryPayments()\"\r\n                    [options]=\"statusPayment\"\r\n                    [showClear]=\"true\"\r\n                    placeholder=\"Choose Status\"\r\n                  >\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </form>\r\n\r\n          <p-table\r\n            #st\r\n            selectionMode=\"single\"\r\n            scrollHeight=\"calc(100vh - 28.25rem)\"\r\n            [scrollable]=\"true\"\r\n            [paginator]=\"servicePayments.length > 0\"\r\n            [rows]=\"10\"\r\n            [(selection)]=\"selectedServicePayment\"\r\n            [value]=\"servicePayments\"\r\n            (selectionChange)=\"onSelectAuxiliaryPayment()\"\r\n          >\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"d-flex buttons align-items-center\">\r\n                <p class=\"subtitle\" *ngIf=\"!selectedServicePayment\">Choose the Auxiliary Payment to edit</p>\r\n                <button\r\n                  class=\"ml-auto mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi-angle-double-right\"\r\n                  label=\"Invoice\"\r\n                  (click)=\"goToServicePaymentInvoice()\"\r\n                  [disabled]=\"!selectedServicePayment || selectedServicePayment?.service_invoices?.length !== 1\"\r\n                >\r\n                </button>\r\n                <button\r\n                  class=\"mr-2\"\r\n                  pButton\r\n                  type=\"button\"\r\n                  icon=\"pi pi pi-angle-double-right\"\r\n                  label=\"Order\"\r\n                  (click)=\"goToServicePaymentOrder()\"\r\n                  [disabled]=\"!selectedServicePayment || selectedServicePayment?.service_invoices?.length !== 1\"\r\n                ></button>\r\n                <p-menubar\r\n                  [model]=\"menuItemsAux\"\r\n                  [class.disabled]=\"!selectedServicePayment\"\r\n                ></p-menubar>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th class=\"text-center\" style=\"width: 4%\">#</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Payment ID</th>\r\n                <th style=\"width: 10%\">Date</th>\r\n                <th style=\"width: 16%\">Supplier</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Converted Amount</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Root list</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"payment\">\r\n                <td class=\"text-center\" style=\"width: 4%\">{{i + 1}}</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.id}}</td>\r\n                <td style=\"width: 10%\">\r\n                  <div class=\"payment-paperclip\">\r\n                    {{payment.payment_date | date:'dd/MM/yyyy'}}\r\n                    <i *ngIf=\"payment.related_files\" class=\"pi pi-paperclip\"></i>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 16%\">\r\n                  <div *ngFor=\"let invoice of payment.service_invoices\">\r\n                    <div class=\"word-break\">{{invoice.supplier.name}}</div>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.service_invoices\">\r\n                    <a (click)=\"goToLinkServicePaymentInvoice(invoice)\">{{invoice.self_serial_number}}</a>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.amount | moneyFormat}} €</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.service_invoices\">\r\n                    <a (click)=\"goToLinkPaymentOrder(invoice.order)\">{{invoice.order.id}}</a>\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div\r\n                    [ngClass]=\"{\r\n                    'text-primary': payment.status==='PAID',\r\n                    'text-success': payment.status==='CONFIRMED',\r\n                    'text-danger': payment.status==='DECLINED',\r\n                    'text-warning': payment.status==='WAITING'\r\n                }\"\r\n                  >\r\n                    {{payment.status}}\r\n                  </div>\r\n                </td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <div *ngFor=\"let invoice of payment.service_invoices\">\r\n                    <span *ngFor=\"let root of invoice.order.root_production_list_products; let idx = index\">\r\n                      {{root.nomenclature.name}}<i\r\n                      *ngIf=\"idx !== invoice.order.root_production_list_products.length - 1\">,</i>\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n                  <i *ngIf=\"isLoadingAuxPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoadingAuxPayments\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"st.paginator=false\"\r\n                styleClass=\"p-button-text\"\r\n              >All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n        <div *ngIf=\"!st.paginator && !isLoadingAuxPayments && payments.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"st.paginator=true\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {Payment} from '../../models/payment';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Company} from '../../../crm/models/company';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {PaymentService} from '../../services/payment.service';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-payment-form',\r\n  templateUrl: './create-edit-payment-form.component.html',\r\n  styleUrls: ['./create-edit-payment-form.component.scss']\r\n})\r\nexport class CreateEditPaymentFormComponent implements OnInit {\r\n  isDisabledCompanyPicker = false;\r\n  isLoading = false;\r\n\r\n  form = this.fb.group({\r\n    supplier: [<number>null, Validators.required],\r\n    invoices: [<number[]>[], Validators.required],\r\n    amount: [<number>0, [Validators.required, Validators.min(0)]],\r\n    converted_amount: [0],\r\n    exchange_rate: [1, Validators.required],\r\n    payment_date: ['', Validators.required],\r\n    accountant_number: ['', Validators.required],\r\n  });\r\n  isSaving = false;\r\n  invoices: Invoice[] = [];\r\n  amount: number = 0;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CreateEditPaymentFormComponent>,\r\n    private readonly adapterService: AdapterService,\r\n    private invoiceService: InvoiceService,\r\n    private paymentService: PaymentService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, payment: Payment, companyId: number, orderId: number }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.get('converted_amount').disable();\r\n\r\n    if (this.data.type === 'create')\r\n      this.form.get('invoices').disable();\r\n\r\n    if (this.data.type === 'edit') {\r\n      this.form.patchValue(<any>this.data.payment);\r\n      this.form.addControl('id' as any, this.fb.control(this.data.payment.id));\r\n      this.form.get('supplier').patchValue(this.data.payment.invoices[0].supplier.id);\r\n      const ids = this.data.payment.invoices.map(i => i.id);\r\n      this.form.get('invoices').patchValue(ids);\r\n      this.invoices = [...this.data.payment.invoices];\r\n      this.form.get('invoices').disable();\r\n      this.amount = this.data.payment.amount;\r\n      this.form.get('payment_date').patchValue(<any>new Date(this.data.payment.payment_date));\r\n    }\r\n\r\n    if (this.data.companyId) {\r\n      this.form.get('supplier').patchValue(this.data.companyId);\r\n      this.onSelectCompany({id: this.data.companyId});\r\n      this.isDisabledCompanyPicker = true;\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createPayment();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editPayment();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createPayment() {\r\n    const send = this.form.value;\r\n    send.payment_date = this.adapterService.dateAdapter(new Date(send.payment_date));\r\n\r\n    this.paymentService.create(send).subscribe({\r\n      next: payment => this.dialogRef.close(payment),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editPayment() {\r\n    const send = this.form.value;\r\n    send.payment_date = this.adapterService.dateAdapter(new Date(send.payment_date));\r\n    this.paymentService.update(send).subscribe({\r\n      next: payment => this.dialogRef.close(payment),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  onSelectCompany(company: Partial<Company>) {\r\n    if (company) {\r\n      this.form.get('supplier').patchValue(company.id);\r\n      this.form.get('invoices').enable();\r\n      this.getInvoicesByCompany();\r\n    } else {\r\n      this.form.get('supplier').patchValue(null);\r\n      this.form.get('invoices').disable();\r\n    }\r\n    this.form.get('invoices').patchValue([]);\r\n    this.invoices = [];\r\n  }\r\n\r\n  private getInvoicesByCompany() {\r\n    this.isLoading = true;\r\n    const query = [{\r\n      name: 'supplier',\r\n      value: this.form.get('supplier').value\r\n    }];\r\n\r\n    if (this.data.orderId) {\r\n      query.push({name: 'order', value: this.data.orderId});\r\n    }\r\n\r\n    this.invoiceService.get(query).subscribe(invoices => {\r\n      this.invoices = invoices;\r\n      invoices.forEach(i => {\r\n        if (i.is_proforma) {\r\n          i.label = i.self_proforma_serial_number + ` (price ${i.total_price_converted} €)`;\r\n        } else {\r\n          i.label = i.self_serial_number + ' (Invoice)' + ` (price: ${i.total_price_converted} €)`;\r\n        }\r\n      });\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  roundValue(value) {\r\n    return Math.round(value * Math.pow(10, 2)) / Math.pow(10, 2);\r\n  }\r\n\r\n  countSum() {\r\n    const ids = this.form.get('invoices').value as number[];\r\n    let sum = 0;\r\n\r\n    if (ids.length > 0) {\r\n      ids.forEach(id => {\r\n        const findInvoice = this.invoices.find(inv => inv.id === id);\r\n        if (findInvoice) {\r\n          sum += findInvoice.total_price_converted;\r\n        }\r\n      });\r\n      const exchangeNum = this.form.get('exchange_rate').value;\r\n      if (exchangeNum < 0) {\r\n        const num = 1;\r\n        this.form.get('exchange_rate').patchValue(num);\r\n      }\r\n    }\r\n\r\n    if (this.data.type === 'create') {\r\n      this.form.get('converted_amount').patchValue(this.form.get('exchange_rate').value * sum);\r\n      this.form.get('amount').patchValue(sum);\r\n      sum = this.roundValue(sum);\r\n    } else {\r\n      this.form.get('converted_amount').patchValue(this.form.get('exchange_rate').value * +this.amount);\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Payment\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Supplier*</label>\r\n      <pek-company-picker\r\n        [currentCompanyId]=\"form.get('supplier').value\"\r\n        (selectCompanyFull)=\"onSelectCompany($event)\"\r\n        [isDisabled]=\"data.type === 'edit' || isDisabledCompanyPicker\"\r\n      >\r\n      </pek-company-picker>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Invoice*</label>\r\n      <ng-container *ngIf=\"!isLoading; else spinner\">\r\n        <ng-container *ngIf=\"data.type === 'create'\">\r\n          <p-multiSelect\r\n            formControlName=\"invoices\"\r\n            class=\"disabled\"\r\n            placeholder=\"Choose Invoice\"\r\n            [options]=\"invoices\"\r\n            optionValue=\"id\"\r\n            optionLabel=\"label\"\r\n            (onChange)=\"countSum()\"\r\n          >\r\n          </p-multiSelect>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"data.type === 'edit'\">\r\n          <p-multiSelect\r\n            formControlName=\"invoices\"\r\n            class=\"disabled\"\r\n            placeholder=\"Choose Invoice\"\r\n            [options]=\"invoices\"\r\n            optionValue=\"id\"\r\n            optionLabel=\"self_serial_number\"\r\n            (onChange)=\"countSum()\"\r\n          >\r\n          </p-multiSelect>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Payment Amount*</label>\r\n      <input\r\n        class=\"p-inputtext\"\r\n        formControlName=\"amount\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Converted Payment Amount</label>\r\n      <input\r\n        class=\"p-inputtext disabled\"\r\n        formControlName=\"converted_amount\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exchange Rate*</label>\r\n      <input\r\n        class=\"p-inputtext\"\r\n        formControlName=\"exchange_rate\"\r\n        (ngModelChange)=\"countSum()\"\r\n        type=\"number\"\r\n      >\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Date*</label>\r\n          <p-calendar\r\n            formControlName=\"payment_date\"\r\n            dateFormat=\"dd/mm/yy\"\r\n            [readonlyInput]=\"true\"\r\n          >\r\n          </p-calendar>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Accountant Number*</label>\r\n          <input class=\"p-inputtext\" formControlName=\"accountant_number\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {PaymentService} from '../../services/payment.service';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {Payment} from '../../models/payment';\r\nimport {CreateEditPaymentFormComponent} from '../create-edit-payment-form/create-edit-payment-form.component';\r\nimport {Company} from '../../../crm/models/company';\r\nimport {ServiceInvoicePaymentService} from '../../services/service-invoice-payment.service';\r\nimport {ServiceInvoiceService} from '@shared/services/service-invoice.service';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-service-payment-form',\r\n  templateUrl: './create-edit-service-payment-form.component.html',\r\n  styleUrls: ['./create-edit-service-payment-form.component.scss']\r\n})\r\nexport class CreateEditServicePaymentFormComponent implements OnInit {\r\n  isDisabledCompanyPicker = false;\r\n  isLoading = false;\r\n\r\n  form = this.fb.group({\r\n    supplier: [<number>null, Validators.required],\r\n    service_invoices: [<number[]>[], Validators.required],\r\n    amount: [<number>0, [Validators.required, Validators.min(0)]],\r\n    converted_amount: [0],\r\n    exchange_rate: [1, Validators.required],\r\n    payment_date: [<Date | string>'', Validators.required],\r\n    accountant_number: ['', Validators.required],\r\n  });\r\n  isSaving = false;\r\n  serviceInvoices: Invoice[] = [];\r\n  amount: number = 0;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<CreateEditPaymentFormComponent>,\r\n    private readonly adapterService: AdapterService,\r\n    private invoiceService: InvoiceService,\r\n    private paymentService: PaymentService,\r\n    private serviceInvoicePaymentService: ServiceInvoicePaymentService,\r\n    private serviceInvoice: ServiceInvoiceService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, payment: Payment, companyId: number, orderId?: number }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.get('converted_amount').disable();\r\n\r\n    if (this.data.type === 'create')\r\n      this.form.get('service_invoices').disable();\r\n\r\n    if (this.data.type === 'edit') {\r\n      this.form.patchValue(<any>this.data.payment);\r\n      this.form.addControl('id' as any, this.fb.control(this.data.payment.id));\r\n      this.form.get('supplier').patchValue(this.data.payment.service_invoices[0].supplier.id);\r\n      const ids = this.data.payment.service_invoices.map(i => i.id);\r\n      this.form.get('service_invoices').patchValue(ids);\r\n      this.serviceInvoices = [...this.data.payment.service_invoices];\r\n      this.form.get('payment_date').patchValue(new Date(this.data.payment.payment_date));\r\n      this.form.get('service_invoices').disable();\r\n      this.amount = this.data.payment.amount;\r\n    }\r\n\r\n    if (this.data.companyId) {\r\n      this.form.get('supplier').patchValue(this.data.companyId);\r\n      this.onSelectCompany({id: this.data.companyId});\r\n      this.isDisabledCompanyPicker = true;\r\n    }\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createPayment();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editPayment();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  createPayment() {\r\n    const send = this.form.value;\r\n    send.payment_date = this.adapterService.dateAdapter(new Date(send.payment_date));\r\n    this.serviceInvoicePaymentService.create(send).subscribe({\r\n      next: payment => this.dialogRef.close(payment),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editPayment() {\r\n    const send = this.form.value;\r\n    send.payment_date = this.adapterService.dateAdapter(new Date(send.payment_date));\r\n    this.serviceInvoicePaymentService.update(send).subscribe({\r\n      next: payment => this.dialogRef.close(payment),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  onSelectCompany(company: Partial<Company>) {\r\n    if (company) {\r\n      this.form.get('supplier').patchValue(company.id);\r\n      this.form.get('service_invoices').enable();\r\n      this.getInvoicesByCompany();\r\n    } else {\r\n      this.form.get('supplier').patchValue(null);\r\n      this.form.get('service_invoices').disable();\r\n    }\r\n    this.form.get('service_invoices').patchValue([]);\r\n    this.serviceInvoices = [];\r\n  }\r\n\r\n  getInvoicesByCompany() {\r\n    this.isLoading = true;\r\n    const query = [\r\n      {name: 'completed', value: true},\r\n      {name: 'supplier', value: this.form.get('supplier').value},\r\n    ];\r\n\r\n    if (this.data.orderId) {\r\n      query.push({name: 'order', value: this.data.orderId});\r\n    }\r\n\r\n    this.serviceInvoice.get(query).subscribe(invoices => {\r\n      this.serviceInvoices = invoices;\r\n      invoices.forEach(i => {\r\n        if (i.is_proforma) {\r\n          i.label = i.self_proforma_serial_number + ` (price ${i.total_price_converted} €)`;\r\n        } else {\r\n          i.label = i.self_serial_number + ' (Invoice)' + ` (price: ${i.total_price_converted} €)`;\r\n        }\r\n      });\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  roundValue(value) {\r\n    return Math.round(value * Math.pow(10, 2)) / Math.pow(10, 2);\r\n  }\r\n\r\n  countSum() {\r\n    const ids = this.form.get('service_invoices').value as number[];\r\n    let sum = 0;\r\n    console.log(sum);\r\n    if (ids.length > 0) {\r\n      ids.forEach(id => {\r\n        const findInvoice = this.serviceInvoices.find(inv => inv.id === id);\r\n        if (findInvoice) {\r\n          sum += findInvoice.total_price_converted;\r\n        }\r\n      });\r\n      const exchangeNum = this.form.get('exchange_rate').value;\r\n      if (exchangeNum < 0) {\r\n        const num = 1;\r\n        this.form.get('exchange_rate').patchValue(num);\r\n      }\r\n    }\r\n\r\n    if (this.data.type === 'create') {\r\n      this.form.get('converted_amount').patchValue(this.form.get('exchange_rate').value * sum);\r\n      this.form.get('amount').patchValue(sum);\r\n      sum = this.roundValue(sum);\r\n    } else {\r\n      this.form.get('converted_amount').patchValue(this.form.get('exchange_rate').value * +this.amount);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    {{data.type}} Auxiliary Payment\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Supplier*</label>\r\n      <pek-company-picker\r\n        [currentCompanyId]=\"form.get('supplier').value\"\r\n        (selectCompanyFull)=\"onSelectCompany($event)\"\r\n        [isDisabled]=\"data.type === 'edit' || isDisabledCompanyPicker\"\r\n      >\r\n      </pek-company-picker>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Invoice*</label>\r\n      <ng-container *ngIf=\"!isLoading; else spinner\">\r\n        <ng-container *ngIf=\"data.type === 'create'\">\r\n          <p-multiSelect\r\n            formControlName=\"service_invoices\"\r\n            class=\"disabled\"\r\n            placeholder=\"Choose Invoice\"\r\n            [options]=\"serviceInvoices\"\r\n            optionValue=\"id\"\r\n            optionLabel=\"label\"\r\n            (onChange)=\"countSum()\"\r\n          >\r\n          </p-multiSelect>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"data.type === 'edit'\">\r\n          <p-multiSelect\r\n            formControlName=\"service_invoices\"\r\n            class=\"disabled\"\r\n            placeholder=\"Choose Invoice\"\r\n            [options]=\"serviceInvoices\"\r\n            optionValue=\"id\"\r\n            optionLabel=\"self_serial_number\"\r\n            (onChange)=\"countSum()\"\r\n          >\r\n          </p-multiSelect>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Payment Amount*</label>\r\n      <input\r\n        class=\"p-inputtext\"\r\n        formControlName=\"amount\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Converted Payment Amount</label>\r\n      <input\r\n        class=\"p-inputtext disabled\"\r\n        formControlName=\"converted_amount\"\r\n      >\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Exchange Rate*</label>\r\n      <input\r\n        class=\"p-inputtext\"\r\n        formControlName=\"exchange_rate\"\r\n        (ngModelChange)=\"countSum()\"\r\n        type=\"number\"\r\n      >\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Date*</label>\r\n          <p-calendar\r\n            formControlName=\"payment_date\"\r\n            dateFormat=\"dd/mm/yy\"\r\n            [readonlyInput]=\"true\"\r\n          >\r\n          </p-calendar>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n          <label>Accountant Number*</label>\r\n          <input class=\"p-inputtext\" formControlName=\"accountant_number\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    [label]=\"data.type\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {ProductFile} from \"../../../product-structure/models/product\";\r\nimport {PaymentService} from \"../../services/payment.service\";\r\nimport {AdapterService} from \"@shared/services/adapter.service\";\r\nimport {ModalService} from \"@shared/services/modal.service\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {finalize} from \"rxjs\";\r\nimport {PaymentFile} from \"../../models/payment\";\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-payment-file-form',\r\n  templateUrl: './payment-file-form.component.html',\r\n  styleUrls: ['./payment-file-form.component.scss']\r\n})\r\nexport class PaymentFileFormComponent implements OnInit {\r\n  readonly deletion = new Set<number>();\r\n  readonly addition = new Set<number>();\r\n\r\n  uploadFiles: File[] = [];\r\n  files: PaymentFile[] = []\r\n  isLoading = true;\r\n  isPending = false;\r\n  link = environment.image_path;\r\n\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<PaymentFileFormComponent>,\r\n    private paymentService: PaymentService,\r\n    private adapterService: AdapterService,\r\n    private modalService: ModalService,\r\n    @Inject(MAT_DIALOG_DATA) public paymentId: number\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFiles()\r\n  }\r\n\r\n  getFiles() {\r\n    this.paymentService.getPaymentFiles(this.paymentId).subscribe(files => {\r\n      this.files = files;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getFileName(file: string) {\r\n    let name = file.split('/');\r\n    return name[name.length - 1];\r\n  }\r\n\r\n  onSelectFiles(files: File[]) {\r\n    this.uploadFiles = files;\r\n  }\r\n\r\n\r\n  onDownloadFile(file: PaymentFile) {\r\n    this.addition.add(file.id);\r\n    this.paymentService.downloadPaymentFile(file.id).subscribe(response => {\r\n      const filename = this.getFileName(file.file);\r\n      this.adapterService.downloadFile(filename, response);\r\n      this.addition.clear();\r\n    });\r\n  }\r\n\r\n  onRemoveFile(id: number) {\r\n    this.modalService.confirm('danger').subscribe(confirm =>{\r\n      if (confirm) {\r\n        this.deletion.add(id)\r\n\r\n        this.paymentService.removePaymentFile(id).subscribe(() => {\r\n          const index = this.files.findIndex(f => f.id === id)\r\n          this.files.splice(index, 1)\r\n          this.deletion.clear()\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUploadFiles() {\r\n    this.isPending = true;\r\n    this.paymentService.severalUploadFiles(this.paymentId, this.uploadFiles)\r\n      .pipe(\r\n        finalize(() => this.isPending = false)\r\n      )\r\n      .subscribe(files => this.dialogRef.close(files));\r\n  }\r\n\r\n  fileAdded(file: File) {\r\n    this.uploadFiles.push(file);\r\n  }\r\n}\r\n","<div pekPasteScreenImage (imageAdded)=\"fileAdded($event)\">\r\n  <div class=\"modal-header\">\r\n    <h2 class=\"modal-header__title\">\r\n      Payment Files\r\n    </h2>\r\n  </div>\r\n\r\n  <mat-dialog-content >\r\n    <pek-upload-file\r\n      [uploadFiles]=\"uploadFiles\"\r\n      [multiple]=\"true\"\r\n      (selectFile)=\"onSelectFiles($event)\"\r\n    ></pek-upload-file>\r\n\r\n    <div class=\"product-files\">\r\n      <h3 class=\"product-files__caption\">Uploaded Files</h3>\r\n      <p-table\r\n        selectionMode=\"single\"\r\n        [value]=\"files\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 75%\">Name</th>\r\n            <th style=\"width: 20%\">Download</th>\r\n          </tr>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 75%\" class=\"word-break\">\r\n              <a [href]=\"link + file.file\">\r\n                {{getFileName(file.file)}}\r\n              </a>\r\n            </td>\r\n            <td style=\"width: 20%\">\r\n              <div class=\"d-flex\">\r\n                <button\r\n                  pButton\r\n                  (click)=\"onDownloadFile(file)\"\r\n                  [loading]=\"addition.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\r\n                  icon=\"pi pi-download\"\r\n                ></button>\r\n                <button\r\n                  pButton\r\n                  (click)=\"onRemoveFile(file.id)\"\r\n                  [loading]=\"deletion.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\r\n                  icon=\"pi pi-trash\"\r\n                ></button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-2\" [attr.colspan]=\"3\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n\r\n  <mat-dialog-actions class=\"justify-content-between\">\r\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      label=\"Upload\"\r\n      [loading]=\"isPending\"\r\n      [disabled]=\"uploadFiles.length === 0\"\r\n      (click)=\"onUploadFiles()\"\r\n    ></button>\r\n  </mat-dialog-actions>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {AdapterService} from \"@shared/services/adapter.service\";\r\nimport {ModalService} from \"@shared/services/modal.service\";\r\nimport {ServiceInvoicePayment, ServiceInvoicePaymentFile} from \"../../models/service-invoice-payment\";\r\nimport {ServiceInvoicePaymentService} from \"../../services/service-invoice-payment.service\";\r\nimport {finalize} from \"rxjs\";\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-service-payment-file-form',\r\n  templateUrl: './service-payment-file-form.component.html',\r\n  styleUrls: ['./service-payment-file-form.component.scss']\r\n})\r\nexport class ServicePaymentFileFormComponent implements OnInit {\r\n  readonly deletion = new Set<number>();\r\n  readonly addition = new Set<number>();\r\n\r\n  uploadFiles: File[] = [];\r\n  files: ServiceInvoicePaymentFile[] = []\r\n  isLoading = true;\r\n  isPending = false;\r\n  link = environment.image_path;\r\n\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<ServicePaymentFileFormComponent>,\r\n    private serviceInvoicePaymentService: ServiceInvoicePaymentService,\r\n    private adapterService: AdapterService,\r\n    private modalService: ModalService,\r\n    @Inject(MAT_DIALOG_DATA) public paymentId: number) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.paymentId)\r\n    this.getFiles()\r\n  }\r\n\r\n  getFiles() {\r\n\r\n    this.serviceInvoicePaymentService.getAuxiliaryPaymentFiles(this.paymentId).subscribe(files => {\r\n      console.log(`Files`,files)\r\n      this.files = files;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getFileName(file: string) {\r\n    let name = file.split('/');\r\n    return name[name.length - 1];\r\n  }\r\n\r\n  onSelectFiles(files: File[]) {\r\n    this.uploadFiles = files\r\n  }\r\n\r\n  onDownloadFile(file: ServiceInvoicePaymentFile) {\r\n    this.addition.add(file.id)\r\n    this.serviceInvoicePaymentService.downloadAuxiliaryPaymentFile(file.id).subscribe(response => {\r\n      const fileName = this.getFileName(file.file)\r\n      this.adapterService.downloadFile(fileName, response)\r\n      this.addition.clear()\r\n    })\r\n  }\r\n\r\n  onRemoveFile(id: number) {\r\n    this.modalService.confirm('danger').subscribe(confirm =>{\r\n      if (confirm) {\r\n        this.deletion.add(id)\r\n\r\n        this.serviceInvoicePaymentService.removeAuxiliaryPaymentFile(id).subscribe(() => {\r\n          const index = this.files.findIndex(f => f.id === id)\r\n          this.files.splice(index, 1)\r\n          this.deletion.clear()\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUploadFiles() {\r\n    this.isPending = true;\r\n    this.serviceInvoicePaymentService.severalUploadFiles(this.paymentId, this.uploadFiles)\r\n      .pipe(\r\n        finalize(() => this.isPending = false)\r\n      )\r\n      .subscribe(files => this.dialogRef.close(files));\r\n  }\r\n\r\n  fileAdded(file: File) {\r\n    this.uploadFiles.push(file);\r\n  }\r\n}\r\n","<div pekPasteScreenImage (imageAdded)=\"fileAdded($event)\">\r\n  <div class=\"modal-header\">\r\n    <h2 class=\"modal-header__title\">\r\n      Auxiliary Payment Files\r\n    </h2>\r\n  </div>\r\n\r\n  <mat-dialog-content>\r\n    <pek-upload-file\r\n      [uploadFiles]=\"uploadFiles\"\r\n      [multiple]=\"true\"\r\n      (selectFile)=\"onSelectFiles($event)\"\r\n    ></pek-upload-file>\r\n\r\n    <div class=\"product-files\">\r\n      <h3 class=\"product-files__caption\">Uploaded Files</h3>\r\n      <p-table\r\n        selectionMode=\"single\"\r\n        [value]=\"files\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 75%\">Name</th>\r\n            <th style=\"width: 20%\">Download</th>\r\n          </tr>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 75%\" class=\"word-break\">\r\n              <a [href]=\"link + file.file\">\r\n                {{getFileName(file.file)}}\r\n              </a>\r\n            </td>\r\n            <td style=\"width: 20%\">\r\n              <div class=\"d-flex\">\r\n                <button\r\n                  pButton\r\n                  (click)=\"onDownloadFile(file)\"\r\n                  [loading]=\"addition.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\r\n                  icon=\"pi pi-download\"\r\n                ></button>\r\n                <button\r\n                  pButton\r\n                  (click)=\"onRemoveFile(file.id)\"\r\n                  [loading]=\"deletion.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\r\n                  icon=\"pi pi-trash\"\r\n                ></button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-2\" [attr.colspan]=\"3\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </mat-dialog-content>\r\n\r\n\r\n  <mat-dialog-actions class=\"justify-content-between\">\r\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      label=\"Upload\"\r\n      [loading]=\"isPending\"\r\n      [disabled]=\"uploadFiles.length === 0\"\r\n      (click)=\"onUploadFiles()\"\r\n    ></button>\r\n  </mat-dialog-actions>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PaymentListsComponent } from './components/payment-lists/payment-lists.component';\r\nimport { PaymentLayoutComponent } from './components/payment-layout/payment-layout.component';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {LayoutModule} from \"../layout/layout.module\";\r\nimport {PaymentsRouting} from \"./payments.routing\";\r\nimport {SharedModule} from \"@shared/shared.module\";\r\nimport { CreateEditPaymentFormComponent } from './modals/create-edit-payment-form/create-edit-payment-form.component';\r\nimport {MultiSelectModule} from \"primeng/multiselect\";\r\nimport { CreateEditServicePaymentFormComponent } from './modals/create-edit-service-payment-form/create-edit-service-payment-form.component';\r\nimport { PaymentFileFormComponent } from './modals/payment-file-form/payment-file-form.component';\r\nimport { ServicePaymentFileFormComponent } from './modals/service-payment-file-form/service-payment-file-form.component';\r\nimport { DeliveryPaymentListComponent } from './components/delivery-payment-list/delivery-payment-list.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PaymentListsComponent,\r\n    PaymentLayoutComponent,\r\n    CreateEditPaymentFormComponent,\r\n    CreateEditServicePaymentFormComponent,\r\n    PaymentFileFormComponent,\r\n    ServicePaymentFileFormComponent,\r\n    DeliveryPaymentListComponent,\r\n\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        LayoutModule,\r\n        PaymentsRouting,\r\n        SharedModule,\r\n        MultiSelectModule\r\n    ]\r\n})\r\nexport class PaymentsModule { }\r\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {PaymentLayoutComponent} from \"./components/payment-layout/payment-layout.component\";\r\nimport {PaymentListsComponent} from \"./components/payment-lists/payment-lists.component\";\r\nimport {DeliveryPaymentListComponent} from \"./components/delivery-payment-list/delivery-payment-list.component\";\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: PaymentLayoutComponent, children: [\r\n    {path: 'payments', component: PaymentListsComponent},\r\n    {path: 'delivery', component: DeliveryPaymentListComponent},\r\n    {path: '', redirectTo: 'payments', pathMatch: 'full'},\r\n    //{path: '**', redirectTo: '', pathMatch: 'full'},\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsRouting {\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {forkJoin, Observable, of} from 'rxjs';\r\nimport {environment} from \"@env/environment\";\r\nimport {Payment, PaymentFile} from \"../models/payment\";\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {QuerySearch} from \"@shared/models/other\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {CreateEditPaymentFormComponent} from \"../modals/create-edit-payment-form/create-edit-payment-form.component\";\r\nimport {PaymentFileFormComponent} from \"../modals/payment-file-form/payment-file-form.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'payments/';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Payment[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.http.get<{ data: Payment[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  create(payment: any): Observable<Payment> {\r\n    return this.http.post<{ data: Payment }>(this.API_URL + this.url, payment).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  update(payment: any): Observable<Payment> {\r\n    return this.http.patch<{ data: Payment }>(this.API_URL + this.url + `${payment.id}/`, payment).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(payment: Payment): Observable<any> {\r\n    return this.http.delete(this.API_URL + this.url + `${payment.id}/`)\r\n  };\r\n\r\n  pay(payment: any): Observable<Payment> {\r\n    return this.http.patch<{ data: Payment }>(this.API_URL + this.url + `${payment.id}/`, payment).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  downloadPaymentFile(fileId: number): Observable<Blob> {\r\n    return this.http.get(this.API_URL + `payment_file_download/${fileId}/`, {responseType: 'blob'})\r\n  }\r\n\r\n  removePaymentFile(fileId: number): Observable<any> {\r\n    return this.http.post(this.API_URL + `payment_file_delete/${fileId}/`, null)\r\n  }\r\n\r\n  getPaymentFiles(paymentId: number): Observable<PaymentFile[]> {\r\n    return this.http.get<{data: PaymentFile[]}>(this.API_URL + `payment_files/${paymentId}/`).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  getConfirmationPayments(): Observable<Payment[]> {\r\n    return this.http.get<{ data: Payment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\r\n      map(response => response.data));\r\n  }\r\n\r\n  severalConfirm(ids: number[]): Observable<any[]> {\r\n    return forkJoin(...ids.map(id => this.http.post<{ data: Payment }>(this.API_URL + this.url + `confirm/${id}/`, null).pipe(\r\n      catchError(() => of(null)),\r\n    )));\r\n  }\r\n\r\n  severalDecline(ids: number[]): Observable<any[]> {\r\n    return forkJoin(...ids.map(id => this.http.post<{ data: Payment }>(this.API_URL + this.url + `decline/${id}/`, null).pipe(\r\n      catchError(() => of(null)),\r\n    )));\r\n  }\r\n\r\n  getLimit(): Observable<{ id: number; value: string }[]> {\r\n    return this.http.get<{ data: { id: number; value: string }[] }>(this.API_URL + 'maximum_confirmed_payment_amount/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  setLimit(limit: { id: number, value: string }): Observable<any> {\r\n    return this.http.patch(this.API_URL + 'maximum_confirmed_payment_amount/' + limit.id + '/', limit);\r\n  }\r\n\r\n  severalUploadFiles(paymentId: number, files: File[]): Observable<PaymentFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData()\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData)\r\n    })\r\n    return forkJoin(...arrayFormData.map(formData => this.http.post<{data: PaymentFile}>(this.API_URL + `payment_files/${paymentId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  openCreateEditPaymentForm(type: ModalActionType, payment?: Payment, companyId?: number, orderId?: number): Observable<Payment[]> {\r\n    return this.dialog\r\n      .open<CreateEditPaymentFormComponent>(CreateEditPaymentFormComponent, {\r\n        width: '39rem',\r\n        height: 'auto',\r\n        data: {type, payment, companyId, orderId},\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  showPaymentFiles(paymentId: number): Observable<void> {\r\n    return this.dialog\r\n      .open<PaymentFileFormComponent>(PaymentFileFormComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: paymentId,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {ServiceInvoicePayment, ServiceInvoicePaymentFile} from '../models/service-invoice-payment';\r\nimport {Payment} from \"../models/payment\";\r\nimport {ModalActionType} from \"@shared/models/modal-action\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {\r\n  CreateEditServicePaymentFormComponent\r\n} from \"../modals/create-edit-service-payment-form/create-edit-service-payment-form.component\";\r\nimport {\r\n  ServicePaymentFileFormComponent\r\n} from \"../modals/service-payment-file-form/service-payment-file-form.component\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceInvoicePaymentService {\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'service_invoice_payments/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  getConfirmationPayments(): Observable<ServiceInvoicePayment[]> {\r\n    return this.httpClient.get<{ data: ServiceInvoicePayment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\r\n      map(response => response.data));\r\n  }\r\n\r\n  severalConfirm(ids: number[]): Observable<any[]> {\r\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `confirm/${id}/`, null)));\r\n  }\r\n\r\n  severalDecline(ids: number[]): Observable<any[]> {\r\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `decline/${id}/`, null)));\r\n  }\r\n\r\n  create(payment: any): Observable<ServiceInvoicePayment> {\r\n    return this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url, payment).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  update(payment: any): Observable<ServiceInvoicePayment> {\r\n    return this.httpClient.patch<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `${payment.id}/`, payment).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`)\r\n  };\r\n\r\n  get(query?: { name: string, value: any }[]): Observable<ServiceInvoicePayment[]> {\r\n    let q_string = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          q_string += '&' + element.name + '=' + element.value\r\n        } else {\r\n          q_string += '?' + element.name + '=' + element.value\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: ServiceInvoicePayment[] }>(this.API_URL + this.url + 'all/' + q_string).pipe\r\n    (map(response => response.data))\r\n  }\r\n\r\n  downloadAuxiliaryPaymentFile(fileId): Observable<Blob> {\r\n    return this.httpClient.get(this.API_URL + `service_invoice_payment_file_download/${fileId}/`, {responseType: 'blob'})\r\n  }\r\n\r\n  removeAuxiliaryPaymentFile(fileId: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + `service_invoice_payment_file_delete/${fileId}/`, null)\r\n  }\r\n\r\n  getAuxiliaryPaymentFiles(paymentId: number): Observable<ServiceInvoicePaymentFile[]> {\r\n    return this.httpClient.get<{ data: ServiceInvoicePaymentFile[] }>(this.API_URL + `service_invoice_payment_files/${paymentId}/`).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  severalUploadFiles(paymentId: number, files: File[]): Observable<ServiceInvoicePaymentFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData()\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData)\r\n    })\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{ data: ServiceInvoicePaymentFile }>(this.API_URL + `service_invoice_payment_files/${paymentId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  pay(payment: any): Observable<Payment> {\r\n    return this.httpClient.patch<{ data: Payment }>(this.API_URL + this.url + `${payment.id}/`, payment).pipe(\r\n      map(response => response.data)\r\n    )\r\n  }\r\n\r\n  openCreateEditServicePaymentForm(type: ModalActionType, payment?: ServiceInvoicePayment, companyId?: number, orderId?: number): Observable<ServiceInvoicePayment[]> {\r\n    return this.dialog\r\n      .open<CreateEditServicePaymentFormComponent>(CreateEditServicePaymentFormComponent, {\r\n        width: '55rem',\r\n        height: 'auto',\r\n        data: {type, payment, companyId, orderId},\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n\r\n  showAuxiliaryPaymentFiles(paymentId: number): Observable<void> {\r\n    return this.dialog\r\n      .open<ServicePaymentFileFormComponent>(ServicePaymentFileFormComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: paymentId,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {BaseServicesService} from '../../services/base-services.service';\nimport {BaseService} from '../../models/base-service';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {ModalService} from '@shared/services/modal.service';\nimport {cloneDeep} from 'lodash-es';\nimport {TreeService} from '@shared/services/tree.service';\n\n@Component({\n  selector: 'pek-auxiliary-invoices-types-list',\n  templateUrl: './auxiliary-invoices-types-list.component.html',\n  styleUrls: ['./auxiliary-invoices-types-list.component.scss']\n})\nexport class AuxiliaryInvoicesTypesListComponent implements OnInit {\n  isLoading = true;\n  services: BaseService[] = [];\n  selectedNode: TreeNode<BaseService>;\n  servicesTree: TreeNode<BaseService>[] = [];\n\n  expanseMap = {};\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Auxiliary Invoices Type',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditService()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveService()\n      }\n    ]\n  }];\n\n  constructor(\n    private readonly baseServicesService: BaseServicesService,\n    private readonly treeService: TreeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getServices();\n  }\n\n  getServices() {\n    this.baseServicesService.get().subscribe(services => {\n      this.services = services;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.servicesTree) {\n      this.treeService.mapExpansion(this.servicesTree, this.expanseMap);\n    }\n\n    this.servicesTree = this.treeService.createTree(this.services, this.expanseMap);\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.servicesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.servicesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.servicesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.servicesTree = temp;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  private onEditService() {\n    this.baseServicesService.createEditBaseService('edit', this.selectedNode.data).subscribe(service => {\n      if (service) {\n        const index = this.services.findIndex(s => s.id === service.id);\n        this.services[index] = service;\n        this.selectedNode = null;\n        this.createTree();\n      }\n    });\n  }\n\n  public onCreateService() {\n    this.baseServicesService.createEditBaseService('create').subscribe(service => {\n      if (service) {\n        this.services.unshift(service);\n        this.createTree();\n      }\n    });\n  }\n\n  private onRemoveService() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.baseServicesService.delete(this.selectedNode.data.id).subscribe(() => {\n          const removeChildren = (id: number) => {\n            const ids: number[] = this.services.filter(p => p.parent === id).map(p => p.id);\n            this.services = [...this.services.filter(p => p.parent !== id)];\n\n            ids.forEach(id => {\n              removeChildren(id);\n            });\n          };\n\n          removeChildren(this.selectedNode.data.id);\n\n          const index = this.services.findIndex(p => p.id === this.selectedNode.data.id);\n          this.services.splice(index, 1);\n          this.selectedNode = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Auxiliary Invoices Types</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"New Auxiliary Invoices Types\"\n        (click)=\"onCreateService()\"\n      ></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"servicesTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex\">\n              <p class=\"subtitle\" *ngIf=\"!selectedNode\">Choose the Auxiliary Invoices Type to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 45%; padding-left: 48px\">Name</th>\n              <th style=\"width: 55%\">Comment</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr\n              [ttRow]=\"rowNode\"\n              [ttSelectableRow]=\"rowNode\"\n            >\n              <td style=\"width: 45%\">\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <span>{{rowData.name}}</span>\n                </div>\n              </td>\n              <td style=\"width: 55%\">\n                {{rowData.comment}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {OrderProduct} from '../../models/order-product';\nimport {BehaviorSubject, iif, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {OrderProductService} from '../../services/order-product.service';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {OrderService} from '../../services/order.service';\nimport {Router} from '@angular/router';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-procurement-chain-creation-list',\n  templateUrl: './procurement-chain-creation-list.component.html',\n  styleUrls: ['./procurement-chain-creation-list.component.scss']\n})\nexport class ProcurementChainCreationListComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isCanOrder = false;\n  isCanAddOrder = false;\n\n  isShowAll = false;\n\n  statuses = [\n    {label: 'ORDERED', value: 'ordered'},\n    {label: 'NOT ORDERED', value: 'not_ordered'},\n    {label: 'PARTLY ORDERED', value: 'partially_ordered'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    nomenclature__name: [null],\n    categories_ids: [null],\n    request_date: [null],\n    status: ['not_ordered']\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProducts: OrderProduct[] = [];\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n  name$: Subject<void> = new Subject<void>();\n\n  orderProducts$: Observable<OrderProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n        !this.isShowAll,\n        this.orderProductService.getGroupedPurchasedForPagination(this.query).pipe(\n          tap(response => this.productsCount = response.count),\n          map(response => response.results.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          })),\n        ),\n        this.orderProductService.getGroupedPurchased(this.query).pipe(\n          tap(products => this.productsCount = products.length),\n          map(products => products.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          }))\n        )\n      ),\n    ),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n    private readonly orderService: OrderService,\n    private readonly modalService: ModalService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setProductStatus(product: OrderProduct) {\n    let status: string;\n\n    if (product.ordered_quantity >= product.initial_quantity) {\n      status = 'A0';\n    } else if (product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0) {\n      status = 'A1';\n    } else {\n      status = 'A2';\n    }\n\n    return status;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProducts = [];\n\n    this.onCheckOrder();\n    this.onCheckAddOrder();\n    this.getIsCleanUnnecessary();\n    this.getIsDeleted();\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true},)\n    }\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value !== null) {\n\n        if (this.searchForm.controls[key].value instanceof Date) {\n          this.query.push({\n            name: key,\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\n          });\n        } else {\n          this.query.push({\n            name: key,\n            value: this.searchForm.controls[key].value\n          });\n        }\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  getSmallDescription(description: string) {\n    if (description && description?.length > 40) return description.substring(0, 40) + '...';\n    else return description\n  }\n\n  onCheckOrder() {\n    this.isCanOrder = true;\n\n    this.selectedProducts.forEach(element => {\n      if (element.ordered_quantity >= element.initial_quantity) {\n        this.isCanOrder = false;\n      }\n    });\n\n    if (this.selectedProducts.length === 0) {\n      this.isCanOrder = false;\n    }\n  }\n\n  onCheckAddOrder() {\n    this.isCanAddOrder = this.selectedProducts.every(node => node.status !== 'A0');\n  }\n\n  getIsCleanUnnecessary() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A1');\n    }\n  }\n\n  getIsDeleted() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A2');\n    }\n  }\n\n  onCloseOrders() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const partlyOrderedProducts = this.selectedProducts.filter(n => n.status === 'A1');\n\n        if (partlyOrderedProducts.length > 0) {\n\n          console.log(partlyOrderedProducts);\n          this.selectedProducts = [];\n          this.orderProductService.closeOrders(partlyOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onDeleteOrders() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        const notOrderedProducts = this.selectedProducts.filter(n => n.status === 'A2');\n\n        if (notOrderedProducts.length > 0) {\n          this.selectedProducts = [];\n          this.orderProductService.deleteSeveral(notOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onCreateChain() {\n    this.orderService.openCreateChainModal(this.selectedProducts, 'procurement').subscribe(order => {\n      if (order) {\n        this.router.navigate(['/procurement/chains/order', order.id]);\n      }\n    });\n  }\n\n  onAddProductsToChain() {\n    this.orderService.openAddProductsToChainModal(this.selectedProducts, 'procurement').subscribe(order => {\n      if (order) {\n        this.search$.next();\n      }\n    });\n  }\n\n  onSelectCategories(ids: number[]) {\n    this.searchForm.get('categories_ids').patchValue(ids?.join(',') || null);\n    this.search$.next();\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n    this.search$.next()\n\n    if (!this.isShowAll) {\n      this.currentPage = 1\n    }\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Procurement Chain Creation</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        [disabled]=\"!selectedProducts || !isCanOrder\"\n        class=\"ml-auto mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Create Procurement Chain\"\n        (click)=\"onCreateChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Add To Procurement Chain\"\n        (click)=\"onAddProductsToChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsCleanUnnecessary()\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-check\"\n        label=\"Close Order\"\n        (click)=\"onCloseOrders()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsDeleted()\"\n        class=\"p-button-danger\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-times\"\n        label=\"Delete Order\"\n        (click)=\"onDeleteOrders()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form\n      [formGroup]=\"searchForm\"\n      class=\"form mb-3\"\n    >\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input\n              formControlName=\"nomenclature__name\"\n              (ngModelChange)=\"name$.next()\"\n              type=\"text\"\n              pInputText\n            >\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Category</label>\n            <pek-multi-product-categories-picker (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-product-categories-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Date</label>\n            <p-calendar\n              formControlName=\"request_date\"\n              dataType=\"date\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              [readonlyInput]=\"true\"\n              (ngModelChange)=\"search$.next()\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <p-dropdown\n              [options]=\"statuses\"\n              formControlName=\"status\"\n              optionValue=\"value\"\n              [showClear]=\"true\"\n              placeholder=\"Choose Status\"\n              (ngModelChange)=\"search$.next()\"\n            ></p-dropdown>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        selectionMode=\"multiple\"\n        dataKey=\"id\"\n        [rows]=\"10\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 24.25rem)\"\n        [value]=\"orderProducts$ | async\"\n        [(selection)]=\"selectedProducts\"\n        (selectionChange)=\"onCheckOrder(); onCheckAddOrder();\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\" class=\"index-header text-center\">#</th>\n            <th style=\"width: 4%\" class=\"text-center\">ID</th>\n            <th style=\"width: 10%\">Name</th>\n            <th style=\"width: 5%\" class=\"text-center\">Request Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">Ordered Quantity</th>\n            <th style=\"width: 7%\" class=\"text-center\">Free Ordered Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\n            <th style=\"width: 8%;\">Category</th>\n            <th style=\"width: 10%;\"> Description</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Date</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Request Type</th>\n            <th class=\"text-center\" style=\"width: 6%;\">Chains</th>\n            <th style=\"width: 9%;\">Root Lists</th>\n            <th style=\"width: 9%;\">Production Lists</th>\n            <th class=\"text-center\" style=\"width: 7%;\">Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"product\">\n            <td style=\"width: 3%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 4%\" class=\"text-center\">{{product.request_id}}</td>\n            <td style=\"width: 10%\">{{product.nomenclature.name}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.initial_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.ordered_quantity}}</td>\n            <td style=\"width: 7%\" class=\"text-center\">{{product.free_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\n            </td>\n            <td style=\"width: 8%;\">{{product.nomenclature.category?.name}}</td>\n            <td style=\"width: 10%;\">\n              <div class=\"word-break\">\n                {{getSmallDescription(product.nomenclature.description)}}\n              </div>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">{{product.request_date |date:'dd/MM/yyyy'}}</td>\n            <td class=\"text-center\" style=\"width: 6%;\">\n              <ng-container *ngIf=\"product.request_type==1\">Auto</ng-container>\n              <ng-container *ngIf=\"product.request_type==0\">Manual</ng-container>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">\n              <ng-container *ngFor=\"let order of product.orders; let idx = index\">\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 1\"\n                   [routerLink]=\"['/procurement/orders/products',order.id]\">\n                  {{order.id}}</a>\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 2\"\n                   [routerLink]=\"['/outsource/outsource-chain/products',order.id]\">\n                  {{order.id}}<span *ngIf=\"idx !== product.orders.length - 1\">,</span></a>\n              </ng-container>\n            </td>\n\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.root_production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.root_production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td class=\"text-center\" style=\"width: 7%;\">\n              <ng-container *ngIf=\"product.ordered_quantity >= product.initial_quantity\">\n                <span class=\"badge badge_success\">ORDERED</span>\n              </ng-container>\n              <ng-container\n                *ngIf=\"product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0\"\n              >\n                <span class=\"badge badge_warning\">PARTLY ORDERED</span>\n              </ng-container>\n              <ng-container *ngIf=\"product.ordered_quantity==0\">\n                <span class=\"badge badge_danger\">NOT ORDERED</span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n      <div\n        *ngIf=\"!isShowAll\"\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n        <p-button\n          (click)=\"onShowAll(true)\"\n          class=\"paginator-all\"\n          type=\"button\"\n          styleClass=\"p-button-text\"\n        >\n          All\n        </p-button>\n      </div>\n    </div>\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {OrderService} from '../../services/order.service';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Order} from '../../models/order';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ListProduct} from '../../../warehouse/models/list-product';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {BehaviorSubject, switchMap} from 'rxjs';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Table} from 'primeng/table';\r\nimport {OrderStatusesTableComponent} from '@shared/components/order-statuses-table/order-statuses-table.component';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-procurement-chains',\r\n  templateUrl: './procurement-chains.component.html',\r\n  styleUrls: ['./procurement-chains.component.scss']\r\n})\r\nexport class ProcurementChainsComponent implements OnInit {\r\n  @ViewChild('dt') dt: Table;\r\n  @ViewChild(OrderStatusesTableComponent)\r\n  orderStatusTableComponent: OrderStatusesTableComponent;\r\n\r\n  isShowStatuses = false;\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Chain',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToOderPage()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveChain()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    contains_nomenclature: [null],\r\n    supplier: [null],\r\n    order_root_list_id: [null],\r\n    active_status__in: [null],\r\n    created_after: [null],\r\n    created_before: [null],\r\n    root_production_list_products_root_categories: [null],\r\n    contains_nomenclatures_by_categories: [null],\r\n    contains_declined_payment: [null],\r\n  });\r\n\r\n  orders: Order[] = [];\r\n  selectedOrder: Order;\r\n\r\n  isLoading = false;\r\n  isHideFilters = false;\r\n\r\n  nomenclaturesList: Nomenclature[] = [];\r\n  rootLists: any[] = [];\r\n\r\n  query: QuerySearch[] = [];\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  tableScrollHeight = '29.625rem';\r\n  firstPage: number = 0;\r\n  finalStatusSelected = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly orderService: OrderService,\r\n    private readonly router: Router,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.search$.pipe(\r\n      tap(() => this.prepareForSearch()),\r\n      switchMap(() => this.orderService.get(this.query)),\r\n      map(orders => this.orderService.modifyOrders(orders)),\r\n      tap(orders => this.orders = orders),\r\n      tap(() => this.generateNomenclaturesListAndRootLists()),\r\n      tap(() => this.isLoading = false),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n  }\r\n\r\n  generateNomenclaturesListAndRootLists() {\r\n    this.orders.forEach(order => {\r\n      if (order.activeStatusDate) {\r\n        order.activeStatusDate = new Date(order.activeStatusDate);\r\n      }\r\n\r\n      order.order_products.forEach(orderProduct => {\r\n        if (!this.nomenclaturesList.includes(orderProduct.nomenclature)) {\r\n          this.nomenclaturesList.push(orderProduct.nomenclature);\r\n        }\r\n      });\r\n\r\n      order.root_production_list_products.forEach(root => this.rootLists.push(root));\r\n\r\n      this.rootLists = this.rootLists.map(root => {\r\n        return {\r\n          ...root,\r\n          fullName: `(${root.id}) ${root.nomenclature.code}~${root.nomenclature.name}`\r\n        };\r\n      });\r\n    });\r\n\r\n    this.nomenclaturesList = this.adapterService.removeDuplicates(this.nomenclaturesList, x => x.id);\r\n    this.rootLists = this.adapterService.removeDuplicates(this.rootLists, x => x.id);\r\n\r\n    this.nomenclaturesList.sort((a, b) => {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name > b.name) return 1;\r\n      return 0;\r\n    });\r\n\r\n    this.rootLists.sort((a, b) => {\r\n      if (a.fullName < b.fullName) return -1;\r\n      if (a.fullName > b.fullName) return 1;\r\n      return 0;\r\n    });\r\n\r\n  }\r\n\r\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\r\n    const lists: { list: ListProduct, count?: number }[] = [];\r\n    rootLists.forEach((res: ListProduct) => {\r\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\r\n      if (found) {\r\n        found.count++;\r\n      } else {\r\n        lists.push({list: res, count: 1});\r\n      }\r\n    });\r\n    return lists;\r\n  }\r\n\r\n  private onGoToOderPage() {\r\n    window.open('/procurement/chains/order/' + this.selectedOrder?.id, '_blank');\r\n  }\r\n\r\n  onRemoveChain() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderService.delete(this.selectedOrder.id).subscribe(() => {\r\n          this.orders = this.orders.filter(x => x.id !== this.selectedOrder.id);\r\n          this.selectedOrder = null;\r\n\r\n          setTimeout(() => {\r\n            this.orderStatusTableComponent?.renderDates({first: this.firstPage});\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedOrder = null;\r\n    this.orders = [];\r\n\r\n    this.query = [\r\n      {name: 'accounting_type', value: 1},\r\n      {name: 'has_purchase_category', value: false},\r\n      {name: 'exclude_with_active_final_status', value: !this.finalStatusSelected}\r\n    ];\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.firstPage = 0;\r\n    this.orderStatusTableComponent?.renderDates({first: 0});\r\n    this.orders = this.orders.map(o => o);\r\n  }\r\n\r\n  onSelectCompany(id: number) {\r\n    this.searchForm.get('supplier').patchValue(id);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectStatuses(ids: number[]) {\r\n    this.searchForm.get('active_status__in').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectRootCategories(ids: string) {\r\n    this.searchForm.get('root_production_list_products_root_categories').patchValue(ids);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectCategories(ids: number[]) {\r\n    this.searchForm.get('contains_nomenclatures_by_categories').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onToggleStatuses() {\r\n    this.isShowStatuses = !this.isShowStatuses;\r\n  }\r\n\r\n  onChangePage(page: number) {\r\n    this.firstPage = page;\r\n  }\r\n\r\n  onPage(evt: any) {\r\n    this.orderStatusTableComponent.renderDates(evt);\r\n  }\r\n\r\n  onSelectOrder() {\r\n    this.orderStatusTableComponent.selectedOrder = this.selectedOrder;\r\n  }\r\n\r\n  onSelectionOrder(order: Order) {\r\n    this.selectedOrder = order;\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.dt.paginator = value;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Procurement Chains</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n\r\n    <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\r\n      <div class=\"filters-visibility__header\">\r\n        <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n      </div>\r\n\r\n      <button\r\n        class=\"icon pi\"\r\n        [class.pi-angle-double-up]=\"!isHideFilters\"\r\n        [class.pi-angle-double-down]=\"isHideFilters\"\r\n      ></button>\r\n\r\n      <form\r\n        [formGroup]=\"searchForm\"\r\n        class=\"form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Nomenclature</label>\r\n              <p-dropdown\r\n                [filter]=\"true\"\r\n                [showClear]=\"true\"\r\n                [options]=\"nomenclaturesList\"\r\n                formControlName=\"contains_nomenclature\"\r\n                optionValue=\"id\"\r\n                optionLabel=\"name\"\r\n                placeholder=\"No Nomenclature Selected\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Root List</label>\r\n              <p-dropdown\r\n                [filter]=\"true\"\r\n                [showClear]=\"true\"\r\n                [options]=\"rootLists\"\r\n                formControlName=\"order_root_list_id\"\r\n                (ngModelChange)=\"search$.next()\"\r\n                optionValue=\"list.id\"\r\n                optionLabel=\"fullName\"\r\n                placeholder=\"No List Selected\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Status</label>\r\n              <pek-multi-statuses-picker\r\n                (selectStatuses)=\"onSelectStatuses($event)\"\r\n                (isFinalStatusSelected)=\"finalStatusSelected = $event\"\r\n                [accountingType]=\"4\"\r\n              ></pek-multi-statuses-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>From</label>\r\n                  <p-calendar\r\n                    formControlName=\"created_after\"\r\n                    dataType=\"date\"\r\n                    [showButtonBar]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"search$.next()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>To</label>\r\n                  <p-calendar\r\n                    dataType=\"date\"\r\n                    formControlName=\"created_before\"\r\n                    [showButtonBar]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"search$.next()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Product Structure Categories</label>\r\n              <pek-multi-product-structure-categories-picker\r\n                (choiceCategories)=\"onSelectRootCategories($event)\"></pek-multi-product-structure-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Warehouse Category</label>\r\n              <pek-multi-product-categories-picker\r\n                (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-product-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3 d-flex\">\r\n            <div class=\"form-group form-group_checkbox\">\r\n              <label>Declined</label>\r\n              <p-triStateCheckbox\r\n                formControlName=\"contains_declined_payment\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              >\r\n              </p-triStateCheckbox>\r\n            </div>\r\n            <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"page__table\">\r\n      <div [ngClass]=\"{'d-none': !isShowStatuses}\">\r\n        <pek-order-statuses-table\r\n          [orders]=\"orders\"\r\n          [isLoading]=\"isLoading\"\r\n          (changePage)=\"onChangePage($event)\"\r\n          (selectOrder)=\"onSelectionOrder($event)\"\r\n        ></pek-order-statuses-table>\r\n      </div>\r\n\r\n      <div [ngClass]=\"{'d-none': isShowStatuses}\">\r\n        <p-table\r\n          #dt\r\n          selectionMode=\"single\"\r\n          [scrollable]=\"true\"\r\n          dataKey=\"id\"\r\n          [paginator]=\"orders.length > 0\"\r\n          [rows]=\"10\"\r\n          [(first)]=\"firstPage\"\r\n          [value]=\"orders\"\r\n          [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n          [(selection)]=\"selectedOrder\"\r\n          (onPage)=\"onPage($event)\"\r\n          (selectionChange)=\"onSelectOrder()\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 3%;\">#</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Date</th>\r\n              <th class=\"text-center\" style=\"width: 7%;\">Order ID</th>\r\n              <th class=\"text-center\" style=\"width: 15%;\">Supplier</th>\r\n              <th class=\"text-center\" style=\"width: 15%;\">Supplier Nomenclature</th>\r\n              <th style=\"width: 15%;\">Comment</th>\r\n              <th style=\"width: 15%;\">Root Lists</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Status</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Completion</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"order\">\r\n              <td class=\"text-center\" style=\"width: 3%;\">{{i + 1}}</td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order.created | date:'dd/MM/yyyy'}}</td>\r\n              <td class=\"text-center\" style=\"width: 7%;\">{{order.id}}</td>\r\n              <td class=\"text-center\" style=\"width: 15%;\">{{order.supplier?.name}}</td>\r\n              <td class=\"text-center\" style=\"width: 15%;\">{{order.supplier?.supplier_nomenclature}}</td>\r\n              <td style=\"width: 15%;\">\r\n                <div class=\"word-break\">\r\n                  {{order.comment}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 15%;\">\r\n                <div class=\"word-break\"\r\n                     *ngFor=\"let item of getRootLists(order.root_production_list_products); let idx = index\">\r\n                  {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\r\n                </div>\r\n              </td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order.status?.value}}</td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order?.activeStatusDate | date: 'dd/MM/yyyy'}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"onShowAll(false)\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n        <div *ngIf=\"!dt.paginator && !isLoading && orders.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"onShowAll(true)\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #actionButtons>\r\n  <div class=\"action-buttons\">\r\n    <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedOrder\"></p-menubar>\r\n    <button\r\n      class=\"ml-2\"\r\n      pButton\r\n      type=\"button\"\r\n      icon=\"pi pi-table\"\r\n      [label]=\"(isShowStatuses ? 'Close' : 'Open') +  ' Order Statuses'\"\r\n      (click)=\"onToggleStatuses()\"\r\n    ></button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-procurement-layout',\n  templateUrl: './procurement-layout.component.html',\n  styleUrls: ['./procurement-layout.component.scss']\n})\nexport class ProcurementLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Procurement Chain Creation', commands: ['order-products']},\n    {label: 'Procurement Chains', commands: ['chains']},\n  ];\n\n  settingsRoutes: NavigationLink[] = [\n    {label: 'Auxiliary Invoices Types', commands: ['services']},\n    {label: 'Order Statuses', commands: ['statuses']},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Production Lists Procurement'\"\n  [routes]=\"routes\"\n  [settingsRoutes]=\"settingsRoutes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {map, tap} from 'rxjs/operators';\nimport {OrderService} from '../../services/order.service';\n\n@Component({\n  selector: 'pek-procurement-order-page',\n  templateUrl: './procurement-order-page.component.html',\n  styleUrls: ['./procurement-order-page.component.scss']\n})\nexport class ProcurementOrderPageComponent implements OnInit {\n  orderId: number;\n  isOrderLoading = true;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly orderService: OrderService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.orderId = +id),\n    ).subscribe();\n  }\n\n  openOrderFiles() {\n    this.orderService.filesModal$.next();\n  }\n\n  editOrder() {\n    this.orderService.editOrderModal$.next();\n  }\n\n  loaded() {\n    this.isOrderLoading = false;\n  }\n}\n","<div class=\"procurement-order-page\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order {{orderId}}</h1>\n      </div>\n      <div class=\"page__tools\">\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-file\"\n          label=\"Order Files\"\n          class=\"mr-2\"\n          (click)=\"openOrderFiles()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-pencil\"\n          label=\"Lead Date & Status\"\n          (click)=\"editOrder()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <pek-order-page\n      [orderType]=\"'procurement'\"\n      (loaded)=\"loaded()\"\n      [orderId]=\"orderId\"\n    ></pek-order-page>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-procurement-order-statuses',\n  templateUrl: './procurement-order-statuses.component.html',\n  styleUrls: ['./procurement-order-statuses.component.scss']\n})\nexport class ProcurementOrderStatusesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"procurement-order-statuses\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order Statuses</h1>\n      </div>\n      <div class=\"page__tools\">\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <h2 class=\"mb-4\">Manual Statuses</h2>\n\n    <div class=\"page__card mb-4\">\n      <pek-order-statuses [statusType]=\"4\"></pek-order-statuses>\n    </div>\n\n    <h2 class=\"mb-4\">Automatic Statuses</h2>\n\n    <div class=\"page__card\">\n      <pek-order-statuses [statusType]=\"4\" [isAutoStatus]=\"true\"></pek-order-statuses>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, finalize, map, tap} from 'rxjs/operators';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {QuerySearch} from '@shared/models/other';\nimport {Nomenclature} from '@shared/models/nomenclature';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {Paginator} from 'primeng/paginator';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {Category} from '../../../product-structure/models/category';\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderProductService} from '../../services/order-product.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-add-order-product-to-order',\n  templateUrl: './add-order-product-to-order.component.html',\n  styleUrls: ['./add-order-product-to-order.component.scss']\n})\nexport class AddOrderProductToOrderComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isSaving = false;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    root_categories: [null],\n    category: [null],\n  });\n\n  createForm: FormGroup = this.fb.group({\n    quantity: [0, [Validators.required, Validators.min(1)]],\n    order: [this.data.orderId],\n    nomenclature: [null, Validators.required],\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProduct: Nomenclature;\n\n  name$: Subject<void> = new Subject<void>();\n  code$: Subject<void> = new Subject<void>();\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  products$: Observable<Nomenclature[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.nomenclatureService.getForPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly adapterService: AdapterService,\n    private readonly orderProductService: OrderProductService,\n    private dialogRef: MatDialogRef<AddOrderProductToOrderComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { isPurchased: boolean, orderId: number }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n\n    this.code$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProduct = null;\n\n    this.createForm.get('quantity').patchValue(null);\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'paginated', value: true},\n      {name: 'page', value: this.currentPage},\n      {name: 'type', value: 0}\n    ];\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value) {\n        this.query.push({\n          name: key,\n          value: this.searchForm.controls[key].value\n        });\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  onAddProduct() {\n    if (this.createForm.value) {\n      this.isSaving = true;\n\n      if (this.data.isPurchased) {\n        this.createForm.addControl('is_purchased_only', this.fb.control(true));\n      }\n\n      this.orderProductService.create(this.createForm.value).pipe(\n        finalize(() => this.isSaving = false)\n      ).subscribe(product => this.dialogRef.close(product));\n    }\n  }\n\n  onSelectCategory(category: Category) {\n    this.searchForm.get('category').patchValue(category?.name || null);\n    this.search$.next();\n  }\n\n  onSelectRootCategory(category: ProductStructureCategory) {\n    this.searchForm.get('root_categories').patchValue(category?.id || null);\n    this.search$.next();\n  }\n\n  clearCreatForm() {\n    this.createForm.get('quantity').patchValue(0);\n  }\n\n  onSelectProduct() {\n    this.createForm.get('nomenclature').patchValue(this.selectedProduct?.id || null);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    <ng-container *ngIf=\"!data.isPurchased\">\n      Add a New Item To Order\n    </ng-container>\n    <ng-container *ngIf=\"data.isPurchased\">\n      Add a New Item To Request\n    </ng-container>\n  </h2>\n\n  <p *ngIf=\"data.isPurchased\">\n    Please Search the Item from catalogue and select items for request\n  </p>\n</div>\n\n<div class=\"add-order-product-to-order__row\">\n  <div class=\"add-order-product-to-order__column-left\">\n    <pek-categories-tree-picker (categorySelected)=\"onSelectCategory($event)\"></pek-categories-tree-picker>\n  </div>\n  <div class=\"add-order-product-to-order__column-right\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label>Root Category</label>\n            <pek-product-structure-category-picker\n              (choiceCategory)=\"onSelectRootCategory($event)\"\n            ></pek-product-structure-category-picker>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              pInputText\n              formControlName=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"name\"\n              (ngModelChange)=\"name$.next()\"\n            />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form-group\">\n            <label for=\"code\">Code</label>\n            <input\n              pInputText\n              formControlName=\"code\"\n              class=\"form-control\"\n              type=\"text\"\n              id=\"code\"\n              (ngModelChange)=\"code$.next()\"\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <mat-dialog-content>\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          dataKey=\"id\"\n          rowExpandMode=\"single\"\n          [rows]=\"10\"\n          [value]=\"products$ | async\"\n          [(selection)]=\"selectedProduct\"\n          (selectionChange)=\"onSelectProduct()\"\n          (onRowExpand)=\"clearCreatForm()\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 5%\" class=\"text-center\">#</th>\n              <th style=\"width: 25%\">Code</th>\n              <th style=\"width: 25%\">Name</th>\n              <th style=\"width: 30%\">Description</th>\n              <th style=\"width: 15%\" class=\"text-center\">UOM</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n            <tr\n              [pSelectableRow]=\"product\"\n              [pRowToggler]=\"product\"\n              [pSelectableRowDisabled]=\"product.approved === '0' && product.type === '0'\"\n              [pRowTogglerDisabled]=\"product.approved === '0' && product.type === '0'\"\n            >\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 25%\">\n                {{ product.code }}\n              </td>\n              <td style=\"width: 25%\">\n                  <span\n                    *ngIf=\"product.approved === '0' && product.type === '0'\"\n                    class=\"badge badge_warning\"\n                    style=\"margin-right: 0.25rem\"\n                  >\n                    NEW\n                  </span>\n                {{ product.name }}\n              </td>\n              <td class=\"word-break\" style=\"width: 30%\">{{product.description}}</td>\n              <td class=\"text-center\" style=\"width: 15%\">\n                {{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs'}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"rowexpansion\" let-product>\n            <tr>\n              <td colspan=\"5\">\n                <form [formGroup]=\"createForm\">\n                  <div class=\"form-group\">\n                    <label>Quantity*</label>\n                    <input\n                      pInputText\n                      formControlName=\"quantity\"\n                      min=\"1\"\n                      class=\"form-control\"\n                      type=\"number\"\n                    >\n                  </div>\n                </form>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </mat-dialog-content>\n      <div\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Add\"\n    [disabled]=\"createForm.invalid\"\n    [loading]=\"isSaving\"\n    (click)=\"onAddProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {BaseService} from '../../models/base-service';\nimport {TreeNode} from 'primeng/api';\nimport {BaseServicesService} from '../../services/base-services.service';\nimport {TreeService} from '@shared/services/tree.service';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-create-edit-auxiliary-invoice-type',\n  templateUrl: './create-edit-auxiliary-invoice-type.component.html',\n  styleUrls: ['./create-edit-auxiliary-invoice-type.component.scss']\n})\nexport class CreateEditAuxiliaryInvoiceTypeComponent implements OnInit {\n  isSaving = false;\n\n  isLoading = true;\n  services: BaseService[] = [];\n  selectedNode: TreeNode<BaseService>;\n  servicesTree: TreeNode<BaseService>[] = [];\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    comment: [''],\n    parent: [null],\n    is_for_root: [true]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly baseServicesService: BaseServicesService,\n    private readonly treeService: TreeService,\n    private dialogRef: MatDialogRef<CreateEditAuxiliaryInvoiceTypeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, service: BaseService }\n  ) {\n  }\n\n  ngOnInit() {\n    this.getServices();\n\n    if (this.data.type === 'edit') {\n      this.form.patchValue(this.data.service);\n\n      if (this.data.service.parent) {\n        this.form.get('is_for_root').patchValue(false);\n      }\n    }\n  }\n\n  findNode() {\n    const find = (nodes: TreeNode<BaseService>[]) => {\n      const foundNode = nodes.find(n => n.data.id === this.data.service.id);\n\n      if (foundNode) {\n        this.selectedNode = foundNode;\n        return;\n      } else {\n        nodes.forEach(node => {\n          node.expanded = true;\n          if (node.children.length > 0) {\n            find(node.children);\n          }\n        });\n      }\n    };\n\n    find(this.servicesTree);\n  }\n\n  getServices() {\n    this.baseServicesService.get().subscribe(services => {\n      this.services = services;\n      this.createTree();\n\n      if (this.data.type === 'edit') {\n        this.findNode();\n      }\n\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.servicesTree) {\n      this.treeService.mapExpansion(this.servicesTree, {});\n    }\n\n    this.servicesTree = this.treeService.createTree(this.services, {});\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createService();\n        break;\n      }\n      case 'edit': {\n        this.editService();\n        break;\n      }\n    }\n  }\n\n  onChange() {\n    this.selectedNode = null;\n    this.form.get('parent').patchValue(null);\n  }\n\n  editService() {\n    this.baseServicesService.update(this.form.value, this.data.service.id).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(service => this.dialogRef.close(service));\n  }\n\n  createService() {\n    const send = this.form.value;\n\n    this.baseServicesService.create(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(service => this.dialogRef.close(service));\n  }\n\n  onSelection() {\n    this.form.get('parent').patchValue(this.selectedNode?.data?.id || null);\n  }\n}\n","<div class=\"create-edit-product-structure-category\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Auxiliary Invoice Type\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input\n          pInputText\n          formControlName=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"comment\">Comment</label>\n        <textarea\n          id=\"comment\"\n          [rows]=\"2\"\n          pInputTextarea\n          [autoResize]=\"true\"\n          formControlName=\"comment\"\n        ></textarea>\n      </div>\n\n      <div class=\"form-group box\">\n        <p-checkbox\n          inputId=\"root\"\n          formControlName=\"is_for_root\"\n          (onChange)=\"onChange()\"\n          [binary]=\"true\"\n        ></p-checkbox>\n        <label class=\"ml-2 mb-0\" for=\"root\">Is For Root</label>\n      </div>\n    </form>\n\n    <div class=\"table mt-2\" *ngIf=\"!form.get('is_for_root')?.value\">\n      <p-treeTable\n        [value]=\"servicesTree\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedNode\"\n        [scrollable]=\"true\"\n        (selectionChange)=\"onSelection()\"\n        scrollHeight=\"calc(100vh - 40.625rem)\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 50%; padding-left: 48px\">Name</th>\n            <th style=\"width: 50%\">Comment</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n          <tr\n            [ttRow]=\"rowNode\"\n            [ttSelectableRow]=\"rowNode\"\n          >\n            <td style=\"width: 50%\">\n              <div class=\"table-toggle\">\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                <span>{{rowData.name}}</span>\n              </div>\n            </td>\n            <td style=\"width: 50%\">\n              {{rowData.comment}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid || (!this.form.get('is_for_root').value) && !selectedNode\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {OrderProductService} from '../../services/order-product.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderProduct} from '../../models/order-product';\nimport {finalize} from 'rxjs/operators';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-edit-order-product-delivery-date',\n  templateUrl: './edit-order-product-delivery-date.component.html',\n  styleUrls: ['./edit-order-product-delivery-date.component.scss']\n})\nexport class EditOrderProductDeliveryDateComponent implements OnInit {\n  isSaving = false;\n  isReset = false;\n\n  form: FormGroup = this.fb.group({\n    id: [null, Validators.required],\n    reception_date: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly orderProductService: OrderProductService,\n    private dialogRef: MatDialogRef<EditOrderProductDeliveryDateComponent>,\n    private readonly modalService: ModalService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public orderProduct: OrderProduct\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('id').patchValue(this.orderProduct.id);\n\n    if (this.orderProduct.reception_date) {\n      this.form.get('reception_date').patchValue(new Date(this.orderProduct.reception_date));\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n    this.save();\n  }\n\n  onReset() {\n    this.modalService.confirm('danger', 'Reset').subscribe(confirm => {\n      if (confirm) {\n        this.isReset = true;\n        this.form.get('reception_date').patchValue(null);\n        this.save();\n      }\n    });\n  }\n\n  save() {\n    this.orderProductService.updatePartly(this.form.value).pipe(\n      finalize(() => {\n        this.isSaving = false;\n        this.isReset = false;\n      })\n    ).subscribe(orderProduct => {\n      this.dialogRef.close(orderProduct);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Edit Delivery Date for {{orderProduct.nomenclature.name}}\n  </h2>\n  <button\n    [disabled]=\"!orderProduct.reception_date\"\n    icon=\"pi pi-times\"\n    pButton\n    type=\"button\"\n    label=\"Reset\"\n    [loading]=\"isReset\"\n    (click)=\"onReset()\"\n    class=\"ml-3 p-button-danger p-button-icon\"\n  ></button>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Delivery Date*</label>\n      <p-calendar\n        formControlName=\"reception_date\"\n        [showButtonBar]=\"true\"\n        dateFormat=\"dd/mm/yy\"\n        [readonlyInput]=\"true\"\n      >\n      </p-calendar>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Change\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderProductService} from '../../services/order-product.service';\nimport {OrderProduct} from '../../models/order-product';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-edit-order-product-quantity',\n  templateUrl: './edit-order-product-quantity.component.html',\n  styleUrls: ['./edit-order-product-quantity.component.scss']\n})\nexport class EditOrderProductQuantityComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    id: [null, Validators.required],\n    quantity: [null, [Validators.required, Validators.min(1)]],\n    request_date: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly orderProductService: OrderProductService,\n    private dialogRef: MatDialogRef<EditOrderProductQuantityComponent>,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public orderProduct: OrderProduct\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.patchValue(this.orderProduct);\n  }\n\n  onSave() {\n    this.isSaving = true;\n    this.orderProductService.updatePartly(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(orderProduct => {\n      this.dialogRef.close(orderProduct);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Change Order Item Quantity\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity*</label>\n      <input\n        pInputText\n        formControlName=\"quantity\"\n        class=\"form-control\"\n        type=\"number\"\n        id=\"quantity\"\n      />\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Change\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {PaymentFile} from '../../../payments/models/payment';\nimport {environment} from '@env/environment';\nimport {Invoice, InvoiceFile} from '../../models/invoice';\nimport {InvoiceService} from '../../services/invoice.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-invoice-files',\n  templateUrl: './invoice-files.component.html',\n  styleUrls: ['./invoice-files.component.scss']\n})\nexport class InvoiceFilesComponent implements OnInit {\n  readonly deletion = new Set<number>();\n  readonly addition = new Set<number>();\n\n  invoiceId: number;\n\n  uploadFiles: File[] = [];\n  files: InvoiceFile[] = [];\n  isLoading = true;\n  isPending = false;\n  link = environment.image_path;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<InvoiceFilesComponent>,\n    private readonly invoiceService: InvoiceService,\n    private readonly adapterService: AdapterService,\n    private readonly modalService: ModalService,\n    @Inject(MAT_DIALOG_DATA) private invoice: Invoice,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.invoiceId = this.invoice.id;\n    this.getFiles();\n  }\n\n  getFiles() {\n    this.invoiceService.getFiles(this.invoiceId).subscribe(files => {\n      this.files = files;\n      this.isLoading = false;\n    });\n  }\n\n  fileAdded(file: File) {\n    this.uploadFiles.push(file);\n  }\n\n  getFileName(file: string) {\n    let name = file.split('/');\n    return name[name.length - 1];\n  }\n\n  onDownloadFile(file: PaymentFile) {\n    this.addition.add(file.id);\n    this.invoiceService.downloadFile(file.id).subscribe(response => {\n      const filename = this.getFileName(file.file);\n      this.adapterService.downloadFile(filename, response);\n      this.addition.clear();\n    });\n  }\n\n  onSelectFiles(files: File[]) {\n    this.uploadFiles = files;\n  }\n\n  onUploadFiles() {\n    this.isPending = true;\n    this.invoiceService.severalUploadFiles(this.invoiceId, this.uploadFiles)\n      .pipe(\n        finalize(() => this.isPending = false)\n      )\n      .subscribe(files => this.dialogRef.close(files));\n  }\n\n  onRemoveFile(id: number) {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.deletion.add(id);\n\n        this.invoiceService.removeFile(id).subscribe(() => {\n          const index = this.files.findIndex(f => f.id === id);\n          this.files.splice(index, 1);\n          this.deletion.clear();\n        });\n      }\n    });\n  }\n}\n","<div pekPasteScreenImage (imageAdded)=\"fileAdded($event)\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      Invoice Files\n    </h2>\n  </div>\n\n  <mat-dialog-content >\n    <pek-upload-file\n      [uploadFiles]=\"uploadFiles\"\n      [multiple]=\"true\"\n      (selectFile)=\"onSelectFiles($event)\"\n    ></pek-upload-file>\n\n    <div class=\"product-files\">\n      <h3 class=\"product-files__caption\">Uploaded Files</h3>\n      <p-table\n        selectionMode=\"single\"\n        [value]=\"files\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 75%\">Name</th>\n            <th style=\"width: 20%\">Download</th>\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 75%\" class=\"word-break\">\n              <a [href]=\"link + file.file\">\n                {{getFileName(file.file)}}\n              </a>\n            </td>\n            <td style=\"width: 20%\">\n              <div class=\"d-flex\">\n                <button\n                  pButton\n                  (click)=\"onDownloadFile(file)\"\n                  [loading]=\"addition.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\n                  icon=\"pi pi-download\"\n                ></button>\n                <button\n                  pButton\n                  (click)=\"onRemoveFile(file.id)\"\n                  [loading]=\"deletion.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                  icon=\"pi pi-trash\"\n                ></button>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-2\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </mat-dialog-content>\n\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Upload\"\n      [loading]=\"isPending\"\n      [disabled]=\"uploadFiles.length === 0\"\n      (click)=\"onUploadFiles()\"\n    ></button>\n  </mat-dialog-actions>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Invoice, InvoiceFile} from '../../models/invoice';\nimport {environment} from '@env/environment';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {InvoiceService} from '../../services/invoice.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {PaymentFile} from '../../../payments/models/payment';\nimport {finalize} from 'rxjs';\nimport {ServiceInvoiceService} from '@shared/services/service-invoice.service';\n\n@Component({\n  selector: 'pek-service-invoice-files',\n  templateUrl: './service-invoice-files.component.html',\n  styleUrls: ['./service-invoice-files.component.scss']\n})\nexport class ServiceInvoiceFilesComponent implements OnInit {\n\n  readonly deletion = new Set<number>();\n  readonly addition = new Set<number>();\n\n  invoiceId: number;\n\n  uploadFiles: File[] = [];\n  files: InvoiceFile[] = [];\n  isLoading = true;\n  isPending = false;\n  link = environment.image_path;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<ServiceInvoiceFilesComponent>,\n    private readonly serviceInvoiceService: ServiceInvoiceService,\n    private readonly adapterService: AdapterService,\n    private readonly modalService: ModalService,\n    @Inject(MAT_DIALOG_DATA) private invoice: Invoice,\n  ) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.invoice);\n    this.invoiceId = this.invoice.id;\n    this.getFiles();\n  }\n\n  getFiles() {\n    this.serviceInvoiceService.getFiles(this.invoiceId).subscribe(files => {\n      this.files = files;\n      this.isLoading = false;\n    });\n  }\n\n  fileAdded(file: File) {\n    this.uploadFiles.push(file);\n  }\n\n  getFileName(file: string) {\n    let name = file.split('/');\n    return name[name.length - 1];\n  }\n\n  onDownloadFile(file: PaymentFile) {\n    console.log(file);\n    this.addition.add(file.id);\n    this.serviceInvoiceService.downloadFile(file.id).subscribe(response => {\n      const filename = this.getFileName(file.file);\n      this.adapterService.downloadFile(filename, response);\n      this.addition.clear();\n    });\n  }\n\n  onSelectFiles(files: File[]) {\n    this.uploadFiles = files;\n  }\n\n  onUploadFiles() {\n    this.isPending = true;\n    this.serviceInvoiceService.severalUploadFiles(this.invoiceId, this.uploadFiles)\n      .pipe(\n        finalize(() => this.isPending = false)\n      )\n      .subscribe(files => this.dialogRef.close(files));\n  }\n\n  onRemoveFile(id: number) {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.deletion.add(id);\n\n        this.serviceInvoiceService.removeFile(id).subscribe(() => {\n          const index = this.files.findIndex(f => f.id === id);\n          this.files.splice(index, 1);\n          this.deletion.clear();\n        });\n      }\n    });\n  }\n}\n","<div pekPasteScreenImage (imageAdded)=\"fileAdded($event)\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      Auxiliary Invoice Files\n    </h2>\n  </div>\n\n  <mat-dialog-content >\n    <pek-upload-file\n      [uploadFiles]=\"uploadFiles\"\n      [multiple]=\"true\"\n      (selectFile)=\"onSelectFiles($event)\"\n    ></pek-upload-file>\n\n    <div class=\"product-files\">\n      <h3 class=\"product-files__caption\">Uploaded Files</h3>\n      <p-table\n        selectionMode=\"single\"\n        [value]=\"files\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 75%\">Name</th>\n            <th style=\"width: 20%\">Download</th>\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 75%\" class=\"word-break\">\n              <a [href]=\"link + file.file\">\n                {{getFileName(file.file)}}\n              </a>\n            </td>\n            <td style=\"width: 20%\">\n              <div class=\"d-flex\">\n                <button\n                  pButton\n                  (click)=\"onDownloadFile(file)\"\n                  [loading]=\"addition.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\n                  icon=\"pi pi-download\"\n                ></button>\n                <button\n                  pButton\n                  (click)=\"onRemoveFile(file.id)\"\n                  [loading]=\"deletion.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                  icon=\"pi pi-trash\"\n                ></button>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-2\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </mat-dialog-content>\n\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Upload\"\n      [loading]=\"isPending\"\n      [disabled]=\"uploadFiles.length === 0\"\n      (click)=\"onUploadFiles()\"\n    ></button>\n  </mat-dialog-actions>\n\n</div>\n","import {Order} from './order';\r\nimport {Company} from \"../../crm/models/company\";\r\n\r\nexport class Invoice {\r\n  readonly id: number;\r\n  self_serial_number?: string;\r\n  self_proforma_serial_number?: string;\r\n  supplier_serial_number: string;\r\n  supplier?: Company;\r\n  total_price: number;\r\n  ddv: number;\r\n  tax: number;\r\n  completed: boolean;\r\n  qc_completed: boolean;\r\n  order?: Order;\r\n  related_files: boolean;\r\n  // currency: Currency;\r\n  invoice_date: Date;\r\n  items_reception_date: Date;\r\n  items_reception_date_to: Date;\r\n  invoice_reception_date: Date;\r\n  invoice_reception_date_to: Date;\r\n  due_date: Date;\r\n  is_proforma: boolean;\r\n  proformas: Invoice[] | null;\r\n  total_price_converted: number;\r\n  pure_total_price?: number;\r\n  pure_total_price_converted?: number;\r\n  label?;\r\n  payment_status: string;\r\n  supplierId?: number;\r\n  paid_interest?: number;\r\n  supplier_total_price?: number;\r\n  to_invoices?: any;\r\n  otherCurrency?: number;\r\n  isAux?: boolean;\r\n  isPayment?: boolean;\r\n  isCompleted?: boolean;\r\n  purchase_category?: any;\r\n\r\n  creationDateFrom?: Date;\r\n  creationDateTo?: Date;\r\n\r\n  invoiceReceptionFrom?: Date;\r\n  invoiceReceptionTo?: Date;\r\n\r\n  itemsReceptionFrom?: Date;\r\n  itemsReceptionTo?: Date;\r\n  relatedStatus?: boolean;\r\n\r\n  supplierCategories: string[];\r\n  root_production_plans?: any[];\r\n  unique_root_production_plans?: any[];\r\n\r\n  system_creation_date?: Date;\r\n  system_creation_date_to: Date;\r\n  related_status?;\r\n  general_invoices?: any[];\r\n\r\n}\r\n\r\nexport class SerialNumber {\r\n  id: number;\r\n  type_with_number: string;\r\n  is_passed: boolean;\r\n  traversed?: boolean;\r\n  warehouseproductqcprotocol_set?: any;\r\n}\r\n\r\nexport class InvoiceFile {\r\n  readonly id: number;\r\n  file: string;\r\n  invoice_id: number;\r\n}\r\n","import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Locator} from '../../warehouse/models/locator';\r\nimport {ListProduct} from '../../warehouse/models/list-product';\r\nimport {Technology} from '../../product-structure/models/technology';\r\n\r\nexport class OrderProduct {\r\n  readonly id: number;\r\n  ids?: number[];\r\n  current_technology: any;\r\n  nomenclature: Nomenclature;\r\n  order: string;\r\n  accepted_quantity: number;\r\n  initial_quantity: number;\r\n  quantity: number;\r\n  ordered_quantity: number;\r\n  passed_quantity?: number;\r\n  not_passed_quantity?: number;\r\n  request_type: string;\r\n  status: 0 | 1 | 2 | string;\r\n  request_date?;\r\n  request_id?;\r\n  technologies?;\r\n  details?: OrderDetail;\r\n  root_lists?;\r\n  root_production_list_products?: any[];\r\n  exists_on_locators?: Locator[];\r\n  production_list_products?: any[];\r\n  is_technology_ready?: boolean;\r\n  not_ordered_product_id?: number;\r\n  quality_control?: number;\r\n  // details?: OrderDetail;\r\n  isReady?: boolean;\r\n  products: OrderProduct[];\r\n  reception_date?: string;\r\n  isSelected?: boolean;\r\n  checkedForGeneration?: boolean;\r\n  serial_numbers?: { id: number, type_with_number: string, is_passed: boolean }[];\r\n}\r\n\r\nexport class OrderMaterial {\r\n  readonly id: number;\r\n  name: string;\r\n  code: string;\r\n  required_quantity: number;\r\n  list_product: ListProduct;\r\n}\r\n\r\nexport class OrderDetail {\r\n  current_technology: Technology;\r\n  task_employees: [];\r\n  task_materials: OrderMaterial[];\r\n  task_machines: OrderMachine[];\r\n}\r\n\r\nexport class OrderProducts {\r\n  prev: string;\r\n  next: string;\r\n  count: number;\r\n  results: OrderProduct[];\r\n}\r\n\r\nexport class OrderMachine {\r\n  readonly id: number;\r\n}\r\n\r\n","import {Company} from '../../crm/models/company';\r\nimport {PurchaseCategory} from '../../purchasing/models/purchase-category';\r\nimport {Task} from '@shared/models/task';\r\nimport {Technology} from '../../product-structure/models/technology';\r\n\r\nexport class Order {\r\n  readonly id: number;\r\n  request: string;\r\n  supplier: Company;\r\n  created?: any;\r\n  updated?: string;\r\n  deadline?: Date;\r\n  promised_date: string;\r\n  comment: string;\r\n  statuses: Array<any>;\r\n  dates: any;\r\n  type;\r\n  accointing_type;\r\n  status?;\r\n  order_products?: any[];\r\n  root_lists?: any[];\r\n  root_production_list_products?: any[];\r\n  root_search_lists?;\r\n  created_to?;\r\n  completed?: boolean;\r\n  qc_completed?: boolean;\r\n  searchFieldList?: any;\r\n  searchFiledStatus?: any;\r\n  quality_control: boolean;\r\n  is_closed?: boolean;\r\n  is_prepared?: boolean;\r\n  purchase_category?: PurchaseCategory;\r\n  companyId?: number;\r\n  statusesIds?: number[];\r\n  dateFrom?: Date;\r\n  dateTo?: Date;\r\n  rootLists?: [];\r\n  list_ids?: number[];\r\n  orderStatuses?: any;\r\n  root_production_plans?: any[];\r\n  unique_root_production_plans?: any[];\r\n  root_production_plans_display?: {root_list: Task, list: Task[]}[];\r\n  activeStatusDate?: any;\r\n  // root_production_list_products?: ListProduct[];\r\n  can_select_supplier?: boolean;\r\n  is_hand_added?: boolean;\r\n  accounting_type?: number;\r\n  ordered_products_unique_technologies?: Technology[]\r\n}\r\n\r\nexport class Orders {\r\n  prev: string;\r\n  next: string;\r\n  count: number;\r\n  results: Order[];\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProcurementRouting } from './procurement.routing';\r\nimport { ProcurementChainsComponent } from './components/procurement-chains/procurement-chains.component';\r\nimport { ProcurementLayoutComponent } from './components/procurement-layout/procurement-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {WarehouseModule} from '../warehouse/warehouse.module';\r\nimport { ProcurementOrderPageComponent } from './components/procurement-order-page/procurement-order-page.component';\r\nimport { EditOrderProductQuantityComponent } from './modals/edit-order-product-quantity/edit-order-product-quantity.component';\r\nimport { EditOrderProductDeliveryDateComponent } from './modals/edit-order-product-delivery-date/edit-order-product-delivery-date.component';\r\nimport { AddOrderProductToOrderComponent } from './modals/add-order-product-to-order/add-order-product-to-order.component';\r\nimport { InvoiceFilesComponent } from './modals/invoice-files/invoice-files.component';\r\nimport { ServiceInvoiceFilesComponent } from './modals/service-invoice-files/service-invoice-files.component';\r\nimport { AuxiliaryInvoicesTypesListComponent } from './components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component';\r\nimport { CreateEditAuxiliaryInvoiceTypeComponent } from './modals/create-edit-auxiliary-invoice-type/create-edit-auxiliary-invoice-type.component';\r\nimport { ProcurementOrderStatusesComponent } from './components/procurement-order-statuses/procurement-order-statuses.component';\r\nimport { ProcurementChainCreationListComponent } from './components/procurement-chain-creation-list/procurement-chain-creation-list.component';\r\nimport {TriStateCheckboxModule} from 'primeng/tristatecheckbox';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcurementChainsComponent,\r\n    ProcurementLayoutComponent,\r\n    ProcurementOrderPageComponent,\r\n    EditOrderProductQuantityComponent,\r\n    EditOrderProductDeliveryDateComponent,\r\n    AddOrderProductToOrderComponent,\r\n    InvoiceFilesComponent,\r\n    ServiceInvoiceFilesComponent,\r\n    AuxiliaryInvoicesTypesListComponent,\r\n    CreateEditAuxiliaryInvoiceTypeComponent,\r\n    ProcurementOrderStatusesComponent,\r\n    ProcurementChainCreationListComponent,\r\n  ],\r\n  exports: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProcurementRouting,\r\n    LayoutModule,\r\n    SharedModule,\r\n    WarehouseModule,\r\n    TriStateCheckboxModule\r\n  ]\r\n})\r\nexport class ProcurementModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProcurementLayoutComponent} from './components/procurement-layout/procurement-layout.component';\r\nimport {ProcurementChainsComponent} from './components/procurement-chains/procurement-chains.component';\r\nimport {ProcurementOrderPageComponent} from './components/procurement-order-page/procurement-order-page.component';\r\nimport {\r\n  AuxiliaryInvoicesTypesListComponent\r\n} from './components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component';\r\nimport {\r\n  ProcurementOrderStatusesComponent\r\n} from './components/procurement-order-statuses/procurement-order-statuses.component';\r\nimport {\r\n  ProcurementChainCreationListComponent\r\n} from './components/procurement-chain-creation-list/procurement-chain-creation-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProcurementLayoutComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'chains', pathMatch: 'full'},\r\n      {\r\n        path: 'chains',\r\n        children: [\r\n          {path: '', title: 'Procurement Chains', component: ProcurementChainsComponent},\r\n          {path: 'order/:id', title: 'Procurement Order', component: ProcurementOrderPageComponent},\r\n        ]\r\n      },\r\n      {path: 'services', title: 'Auxiliary Invoices Types', component: AuxiliaryInvoicesTypesListComponent},\r\n      {path: 'order-products', title: 'Procurement Chain Creation', component: ProcurementChainCreationListComponent},\r\n      {path: 'statuses', title: 'Order Statuses', component: ProcurementOrderStatusesComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProcurementRouting {\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BaseService} from '../models/base-service';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditAuxiliaryInvoiceTypeComponent\n} from '../modals/create-edit-auxiliary-invoice-type/create-edit-auxiliary-invoice-type.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseServicesService {\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'base_services/';\n\n  baseService: BaseService[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  getById(id): Observable<BaseService> {\n    return this.httpClient.get<{ data: BaseService }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  get(): Observable<BaseService[]> {\n    return this.httpClient.get<{ data: BaseService[] }>(this.API_URL + this.url + 'all/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(baseService): Observable<BaseService> {\n    return this.httpClient.post<{ data: BaseService }>(this.API_URL + this.url, baseService).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(baseService: Partial<BaseService>, id: number): Observable<BaseService> {\n    return this.httpClient.patch<{ data: BaseService }>(this.API_URL + this.url + id + '/', baseService).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\n  }\n\n  createEditBaseService(type: ModalActionType, service?: BaseService): Observable<BaseService> {\n    return this.dialog\n      .open<CreateEditAuxiliaryInvoiceTypeComponent>(CreateEditAuxiliaryInvoiceTypeComponent, {\n        width: '54rem',\n        height: 'auto',\n        data: {type, service},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {InvoiceProduct} from '../models/invoice-product';\r\nimport {concat, forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceProductService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'invoice_products/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<InvoiceProduct[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  acceptSeveral(send: any[]): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.warehouse_url + 'invoice_product_to_warehouse/', send).pipe(\r\n      map(response => response)\r\n    )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {map} from 'rxjs/operators';\r\nimport {Invoice, InvoiceFile} from '../models/invoice';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {InvoiceProduct} from '../models/invoice-product';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  QcAcceptToWarehouseComponent\r\n} from '../../warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component';\r\nimport {Order} from '../models/order';\r\nimport {InvoiceFilesComponent} from '../modals/invoice-files/invoice-files.component';\r\nimport {PaymentFile} from '../../payments/models/payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'invoices/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Invoice[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Invoice[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<Invoice> {\r\n    return this.httpClient.get<{ data: Invoice }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getProductsToAccept(id: number): Observable<InvoiceProduct[]> {\r\n    return this.httpClient.get<{ data: InvoiceProduct[] }>(this.API_URL + this.url + id + '/products_to_accept/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getFiles(id: number): Observable<InvoiceFile[]> {\r\n    return this.httpClient.get<{ data: InvoiceFile[] }>(this.API_URL + 'invoice_files/' + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  downloadFile(id: number): Observable<any> {\r\n    return this.httpClient.get(this.API_URL + 'invoice_file_download/' + id + '/', {responseType: 'blob'});\r\n  }\r\n\r\n  removeFile(id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'invoice_file_delete/' + id + '/', null).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n  severalUploadFiles(invoiceId: number, files: File[]): Observable<InvoiceFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData()\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData)\r\n    })\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{data: InvoiceFile}>(this.API_URL + `invoice_files/${invoiceId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  openInvoiceFilesModal(invoice: Invoice): Observable<any> {\r\n    return this.dialog\r\n      .open<InvoiceFilesComponent>(InvoiceFilesComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: invoice,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAcceptToWarehouseModal(items: InvoiceProduct[], id: number, type = 'invoice'): Observable<any> {\r\n    return this.dialog\r\n      .open<QcAcceptToWarehouseComponent>(QcAcceptToWarehouseComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {items, id, type},\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {OrderProduct, OrderProducts} from '../models/order-product';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  EditOrderProductQuantityComponent\r\n} from '../modals/edit-order-product-quantity/edit-order-product-quantity.component';\r\nimport {\r\n  EditOrderProductDeliveryDateComponent\r\n} from '../modals/edit-order-product-delivery-date/edit-order-product-delivery-date.component';\r\nimport {\r\n  AddOrderProductToOrderComponent\r\n} from '../modals/add-order-product-to-order/add-order-product-to-order.component';\r\nimport {Order} from '../models/order';\r\nimport {\r\n  CreateOutsourcingRequestComponent\r\n} from '../../outsourcing/modals/create-outsourcing-request/create-outsourcing-request.component';\r\nimport {\r\n  AddMaterialToOrderComponent\r\n} from '../../outsourcing/modals/add-material-to-order/add-material-to-order.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderProductService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'order_products/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<OrderProduct[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getGroupedPurchasedForPagination(query?: { name: string, value: any }[]): Observable<OrderProducts> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: OrderProducts }>(this.API_URL + this.url + 'purchased_grouped_by_nomenclature_request_id/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getGroupedPurchased(query?: { name: string, value: any }[]): Observable<OrderProduct[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'purchased_grouped_by_nomenclature_request_id/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getGroupedOutsourceForPagination(query?: { name: string, value: any }[]): Observable<OrderProducts> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: OrderProducts }>(this.API_URL + this.url + 'other_grouped_by_nomenclature_request_id/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getGroupedOutsource(query?: { name: string, value: any }[]): Observable<OrderProduct[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + 'other_grouped_by_nomenclature_request_id/' + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  acceptSeveral(send: any[]): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.warehouse_url + 'order_product_to_warehouse/', send).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n  create(send: Partial<OrderProduct>): Observable<OrderProduct> {\r\n    return this.httpClient.post<{ data: OrderProduct }>(this.API_URL + this.url, send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  deleteSeveral(orderProducts: OrderProduct[]): Observable<OrderProduct[]> {\r\n    return forkJoin(...orderProducts.map(orderProduct => this.httpClient.delete<OrderProduct>(this.API_URL + this.url + orderProduct.not_ordered_product_id + '/')));\r\n  }\r\n\r\n  closeOrders(orderProducts: OrderProduct[]): Observable<OrderProduct[]>  {\r\n    return forkJoin(...orderProducts.map(orderProduct => this.httpClient.post<OrderProduct>(this.API_URL + this.url + orderProduct.not_ordered_product_id + '/clean_unnecessary/', orderProduct.not_ordered_product_id)));\r\n  }\r\n\r\n  addToOrder(send: {id: number; order: number}[]) : Observable<OrderProduct[]>{\r\n    return forkJoin(...send.map(send => this.httpClient.patch<OrderProduct>(this.API_URL + this.url + send.id + '/', send)));\r\n  }\r\n\r\n  updatePartly(orderProduct: OrderProduct): Observable<OrderProduct> {\r\n    return this.httpClient.patch<{ data: OrderProduct }>(this.API_URL + this.url + orderProduct.id + '/', orderProduct).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  removeFromOrder(orderProduct: OrderProduct): Observable<any> {\r\n    return this.httpClient.post<{ data: OrderProduct }>(this.API_URL + this.url + orderProduct.id + '/remove_from_order/', orderProduct)\r\n  }\r\n\r\n  openAddOutsourcingRequestModal(orderId: number): Observable<OrderProduct> {\r\n    return this.dialog\r\n      .open<CreateOutsourcingRequestComponent>(CreateOutsourcingRequestComponent, {\r\n        width: '70rem',\r\n        height: 'auto',\r\n        data: {orderId},\r\n        autoFocus: false,\r\n        panelClass: 'modal-overflow-visible',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editOrderProductQuantity(orderProduct: OrderProduct): Observable<OrderProduct> {\r\n    return this.dialog\r\n      .open<EditOrderProductQuantityComponent>(EditOrderProductQuantityComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: orderProduct,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editOrderProductDeliveryDate(orderProduct: OrderProduct): Observable<OrderProduct> {\r\n    return this.dialog\r\n      .open<EditOrderProductDeliveryDateComponent>(EditOrderProductDeliveryDateComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: orderProduct,\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAddProductToOrderModal(isPurchased: boolean, orderId: number): Observable<OrderProduct> {\r\n    return this.dialog\r\n      .open<AddOrderProductToOrderComponent>(AddOrderProductToOrderComponent, {\r\n        width: '80%',\r\n        maxHeight: '80%',\r\n        data: {isPurchased, orderId},\r\n        panelClass: 'modal-picker',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAddPMaterialToOrder(productId: number): Observable<OrderProduct> {\r\n    return this.dialog\r\n      .open<AddMaterialToOrderComponent>(AddMaterialToOrderComponent, {\r\n        width: '80%',\r\n        maxHeight: '80%',\r\n        data: {productId},\r\n        panelClass: 'modal-picker',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Order, Orders} from '../models/order';\r\nimport {forkJoin, Observable, Subject} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {OrderProduct} from '../models/order-product';\r\nimport {\r\n  QcAcceptToWarehouseComponent\r\n} from '../../warehouse/modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {OrderTechnicalEquipment} from '../../warehouse/models/order-technical-equipment';\r\nimport {\r\n  QcAcceptTechnicalEquipmentComponent\r\n} from '../../warehouse/modals/qc-accept-technical-equipment/qc-accept-technical-equipment.component';\r\nimport {EditOrderComponent} from '@shared/modals/edit-order/edit-order.component';\r\nimport {OrderType} from '@shared/components/order-page/order-page.component';\r\nimport {CreateChainComponent} from '@shared/modals/create-chain/create-chain.component';\r\nimport {AddProductsToChainComponent} from '@shared/modals/add-products-to-chain/add-products-to-chain.component';\r\nimport {\r\n  CreateOutsourcingRequestComponent\r\n} from '../../outsourcing/modals/create-outsourcing-request/create-outsourcing-request.component';\r\nimport {\r\n  CreateEditPurchasingCategoryComponent\r\n} from '../../purchasing/modals/create-edit-purchasing-category/create-edit-purchasing-category.component';\r\nimport {\r\n  CreateEmptyPurchaseChainComponent\r\n} from '../../purchasing/modals/create-empty-purchase-chain/create-empty-purchase-chain.component';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  filesModal$: Subject<void> = new Subject<void>();\r\n  editOrderModal$: Subject<void> = new Subject<void>();\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'orders/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n    private readonly router: Router,\r\n    private readonly adapterService: AdapterService,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Order[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Order[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<Orders> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Orders }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  updatePartly(order: any) {\r\n    return this.httpClient.patch<{ data: Order }>(this.API_URL + this.url + order.id + '/', order).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<Order> {\r\n    return this.httpClient.get<{ data: Order }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getProductsToAccept(id: number): Observable<OrderProduct[]> {\r\n    return this.httpClient.get<{ data: OrderProduct[] }>(this.API_URL + this.url + id + '/products_to_accept/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getFiles(orderId: number): Observable<any> {\r\n    return this.httpClient.get<{ data: any }>(this.API_URL + 'order_files/' + orderId + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getTechnicalEquipmentToAccept(id: number): Observable<OrderTechnicalEquipment[]> {\r\n    return this.httpClient.get<{ data: OrderTechnicalEquipment[] }>(this.API_URL + this.url + id + '/order_technical_equipment_to_accept/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createProformaInvoice(id: number): Observable<any> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + id + '/proforma_invoice_with_products_create/', null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createInvoice(id: number): Observable<any> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + id + '/invoice_with_products_create/', null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  downloadFile(id: number): Observable<any> {\r\n    return this.httpClient.get(this.API_URL + 'order_file_download/' + id + '/', {responseType: 'blob'});\r\n  }\r\n\r\n  deleteFile(id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'order_file_delete/' + id + '/', null);\r\n  }\r\n\r\n  create(data: any): Observable<Order> {\r\n    return this.httpClient.post<{ data: Order }>(this.API_URL + this.url, data).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createChain(order: any): Observable<Order> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + 'order_bulk_products_create/', order).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  severalUploadFiles(id: number, files: File[]): Observable<any[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData);\r\n    });\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{ data: any }>(this.API_URL + `order_files/${id}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  openOrderStatusesChartWindow(orders: Order[]) {\r\n    localStorage.setItem('orders', JSON.stringify(orders));\r\n\r\n    console.log(JSON.parse(localStorage.getItem('orders')));\r\n\r\n    const url = this.router.serializeUrl(\r\n      this.router.createUrlTree(['/order-statuses-chart'])\r\n    );\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  openAcceptToWarehouseModal(items: OrderProduct[], id: number, type = 'order'): Observable<any> {\r\n    return this.dialog\r\n      .open<QcAcceptToWarehouseComponent>(QcAcceptToWarehouseComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {items, id, type},\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openAcceptToWarehouseModalTechnicalEquipment(items: OrderTechnicalEquipment[], id: number): Observable<any> {\r\n    return this.dialog\r\n      .open<QcAcceptTechnicalEquipmentComponent>(QcAcceptTechnicalEquipmentComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {items, id},\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openEditOrderModal(order: Order, orderType: OrderType): Observable<Order> {\r\n    return this.dialog\r\n      .open<EditOrderComponent>(EditOrderComponent, {\r\n        width: '54rem',\r\n        height: 'auto',\r\n        data: {order, orderType},\r\n        autoFocus: false,\r\n        panelClass: 'modal-picker',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openCreateChainModal(products: OrderProduct[], orderType: OrderType): Observable<Order> {\r\n    return this.dialog\r\n      .open<CreateChainComponent>(CreateChainComponent, {\r\n        width: '64rem',\r\n        height: 'auto',\r\n        data: {products, orderType},\r\n        autoFocus: false,\r\n        panelClass: 'modal-picker',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  modifyOrders(orders: Order[]): Order[] {\r\n    let modifyOrders = [];\r\n\r\n    orders.forEach(order => {\r\n      order.created = new Date(order.created);\r\n      order.created_to = order.created;\r\n      order.status = order.statuses.filter(stat => stat.is_active)[0]?.status;\r\n      order.activeStatusDate = order.statuses.filter(stat => stat.is_active)[0]?.estimated_date;\r\n\r\n      order.root_lists = [];\r\n      order.order_products.forEach(prod => order.root_lists = order.root_lists.concat(prod.root_production_list_products));\r\n      order.root_lists = this.adapterService.removeDuplicates(order.root_lists, x => x.id);\r\n      order.root_search_lists = 'A' + order.root_lists.map(x => x.nomenclature.code + '~' + x.nomenclature.name).join('/');\r\n\r\n      order.orderStatuses = order.status ? order.status.value : 'Empty';\r\n\r\n      order.statuses.forEach(stat => {\r\n        stat.estimated_date = new Date(stat.estimated_date);\r\n      })\r\n\r\n      if (order.status) {\r\n        order.status.filter_value = 'A' + order.status.value;\r\n      } else {\r\n        order.status = {value: 'Empty', filter_value: 'A'};\r\n      }\r\n\r\n      order.statuses.sort((a, b) => new Date(a.estimated_date).getTime() - new Date(b.estimated_date).getTime());\r\n      order.root_lists = this.adapterService.removeDuplicates(order.root_lists, x => x.fullName);\r\n\r\n      order.dates = [];\r\n\r\n      order.companyId = order.supplier?.id;\r\n      order.dateFrom = order.created;\r\n      order.dateTo = new Date(new Date(order.created).setDate(new Date(order.created).getDate() - 1));\r\n    })\r\n\r\n    modifyOrders = [...orders]\r\n\r\n    return modifyOrders\r\n  }\r\n\r\n  openAddProductsToChainModal(products: OrderProduct[], orderType: OrderType): Observable<Order> {\r\n    return this.dialog\r\n      .open<AddProductsToChainComponent>(AddProductsToChainComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        data: {products, orderType},\r\n        autoFocus: false,\r\n        panelClass: 'modal-picker',\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openCreateEmptyPurchaseChainModal(): Observable<Order> {\r\n    return this.dialog\r\n      .open<CreateEmptyPurchaseChainComponent>(CreateEmptyPurchaseChainComponent, {\r\n        width: '54rem',\r\n        height: 'auto',\r\n        data: {},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Status} from '../models/status';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditStatusComponent} from '@shared/modals/create-edit-status/create-edit-status.component';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'statuses/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Status[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Status[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(status: Partial<Status>): Observable<Status> {\n    return this.httpClient.post<{ data: Status }>(this.API_URL + this.url, status).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(status: Partial<Status>): Observable<Status> {\n    return this.httpClient.put<{ data: Status }>(this.API_URL + this.url + `${status.id}/`, status).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(status: Partial<Status>): Observable<Status> {\n    return this.httpClient.patch<{ data: Status }>(this.API_URL + this.url + `${status.id}/`, status).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\n  }\n\n  createEditStatusModal(type: ModalActionType, statusType: number, isAutoStatus: boolean, status?: Status): Observable<Status> {\n    return this.dialog\n      .open<CreateEditStatusComponent>(CreateEditStatusComponent, {\n        width: '45rem',\n        height: 'auto',\n        data: {type, statusType, isAutoStatus, status},\n        autoFocus: false,\n        panelClass: 'modal-overflow-visible',\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {NomenclaturesFileService} from '@shared/services/nomenclatures-file.service';\r\nimport {forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {NomenclatureFile} from '@shared/models/nomenclature';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {UploadFilePickerComponent} from '@shared/components/upload-file-picker/upload-file-picker.component';\r\n\r\n@Component({\r\n  selector: 'pek-nomenclature-files',\r\n  templateUrl: './nomenclature-files.component.html',\r\n  styleUrls: ['./nomenclature-files.component.scss']\r\n})\r\nexport class NomenclatureFilesComponent implements OnInit, OnDestroy {\r\n  @ViewChild('filePicker') filePicker: UploadFilePickerComponent;\r\n  @Input() nomenclatureId: number;\r\n  private destroy$ = new Subject();\r\n  files: NomenclatureFile[] = [];\r\n  selectedFile: NomenclatureFile;\r\n\r\n  readonly deletion = new Set<number>();\r\n\r\n  constructor(\r\n    private nomenclatureFileService: NomenclaturesFileService,\r\n    private modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.nomenclatureId) {\r\n      this.loadFiles();\r\n    }\r\n  }\r\n\r\n  loadFiles() {\r\n    this.nomenclatureFileService.get([{name: 'nomenclature', value: this.nomenclatureId}])\r\n      .pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe(res => {\r\n      this.files = res;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  filesChanged(files: File[]) {\r\n    const filesToAddCall = [];\r\n    files.forEach(file => {\r\n      filesToAddCall.push(this.nomenclatureFileService.create({nomenclature: this.nomenclatureId, file}));\r\n    });\r\n    const observable = forkJoin([\r\n      ...filesToAddCall\r\n    ]);\r\n\r\n    observable.pipe(takeUntil(this.destroy$)).subscribe({\r\n      next: value => {\r\n        this.filePicker.clearFiles();\r\n        this.loadFiles();\r\n      },\r\n      complete: () => {\r\n\r\n      },\r\n    });\r\n  }\r\n\r\n  public deleteFile(id: number) {\r\n    this.modalService.confirm('danger', 'Confirm').pipe(takeUntil(this.destroy$)).subscribe(confirm => {\r\n      if (confirm) {\r\n        this.deletion.add(id);\r\n        this.nomenclatureFileService.delete(id).pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n          this.deletion.delete(id);\r\n          this.selectedFile = null;\r\n          this.loadFiles();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getName(name) {\r\n    const nameArr = name.split('/');\r\n    return nameArr[nameArr.length - 1];\r\n  }\r\n\r\n  printFileAdded(file: File) {\r\n    this.nomenclatureFileService.create({\r\n      nomenclature: this.nomenclatureId,\r\n      file\r\n    }).pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.filePicker.clearFiles();\r\n      this.loadFiles();\r\n    });\r\n  }\r\n}\r\n","<div pekPasteScreenImage [trackMousePosition]=\"true\" (imageAdded)=\"printFileAdded($event)\">\r\n  <div class=\"\">\r\n    <div class=\"col-12\">\r\n      <div class=\"form-group\">\r\n        <pek-upload-file-picker #filePicker (fileChanged)=\"filesChanged($event)\"></pek-upload-file-picker>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p-table\r\n    [paginator]=\"files.length > 10\"\r\n    [rows]=\"10\"\r\n    [value]=\"files\"\r\n    selectionMode=\"single\"\r\n    [scrollable]=\"true\"\r\n    [(selection)]=\"selectedFile\"\r\n  >\r\n    <ng-template pTemplate=\"caption\">\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n        <th style=\"width: 75%\">File Name</th>\r\n        <th class=\"text-center\" style=\"width: 20%\">Actions</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\r\n      <tr>\r\n        <td class=\"text-center\" style=\"width: 5%\">\r\n          <h3 class=\"td-title\">#</h3>\r\n          {{i + 1}}\r\n        </td>\r\n        <td style=\"width: 75%\" class=\"word-break\">\r\n          <h3 class=\"td-title\">File Name</h3>\r\n          <a>\r\n            {{getName(file.file)}}\r\n          </a>\r\n        </td>\r\n        <td style=\"width: 20%\">\r\n          <h3 class=\"td-title\">Actions</h3>\r\n          <div class=\"btn-actions\">\r\n            <button\r\n              pButton\r\n              (click)=\"deleteFile(file.id)\"\r\n              [loading]=\"deletion.has(file.id)\"\r\n              type=\"button\"\r\n              class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\r\n              icon=\"pi pi-trash\"\r\n            ></button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td class=\"text-center p-4\" [attr.colspan]=\"4\">\r\n          <span>No Records Found</span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {TechnicalEquipment} from '../../../../../models/technical-equipment';\r\n\r\n@Component({\r\n  selector: 'pek-edit-technical-equipment',\r\n  templateUrl: './edit-technical-equipment.component.html',\r\n  styleUrls: ['./edit-technical-equipment.component.scss']\r\n})\r\nexport class EditTechnicalEquipmentComponent implements OnInit {\r\n  equipment: TechnicalEquipment;\r\n  form: FormGroup = this.fb.group({\r\n    quantity: [1, Validators.required]\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<EditTechnicalEquipmentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public technicalEquipment: { technicalEquipment: TechnicalEquipment },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.get('quantity').patchValue(this.technicalEquipment.technicalEquipment.quantity)\r\n    this.equipment = this.technicalEquipment.technicalEquipment;\r\n  }\r\n\r\n  onSave() {\r\n    if (this.form.valid) {\r\n      const data: TechnicalEquipment = {\r\n        id: this.equipment.id,\r\n        used_by_nomenclature: this.equipment.used_by_nomenclature,\r\n        quantity: this.form.get('quantity').value\r\n      }\r\n      this.dialogRef.close(data);\r\n    }\r\n  }\r\n}\r\n","<!--<div *ngIf=\"technicalEquipment\">-->\r\n<!--  <p>edit-technical-equipment works!</p>-->\r\n<!--  {{technicalEquipment.technicalEquipment.technical_equipment.code}}-->\r\n<!--  /-->\r\n<!--  {{technicalEquipment.technicalEquipment.quantity}}-->\r\n<!--</div>-->\r\n\r\n<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Edit Technical Equipment\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"quantity\">Quantity</label>\r\n      <input type=\"text\" id=\"quantity\" pInputText formControlName=\"quantity\">\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Update\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSave()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {TechnicalEquipment} from '../../../../models/technical-equipment';\r\nimport {TechnicalEquipmentService} from '../../../../services/technical-equipment.service';\r\nimport {Subject, takeUntil} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-technical-equipments-table',\r\n  templateUrl: './technical-equipments-table.component.html',\r\n  styleUrls: ['./technical-equipments-table.component.scss']\r\n})\r\nexport class TechnicalEquipmentsTableComponent implements OnInit, OnDestroy {\r\n  @Input() technicalEquipments: TechnicalEquipment[] = [];\r\n  @Output() isSelectedEquipmentEmitter: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() equipmentChanged: EventEmitter<{ index: number, technicalEquipment: TechnicalEquipment }>\r\n    = new EventEmitter<{ index: number; technicalEquipment: TechnicalEquipment }>();\r\n  @Output() deleteEquipmentIndex: EventEmitter<number> = new EventEmitter<number>();\r\n  selectedTechnicalEquipment: TechnicalEquipment;\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private technicalEquipmentService: TechnicalEquipmentService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  emitItemSelected(): void {\r\n    this.isSelectedEquipmentEmitter.emit(!!this.selectedTechnicalEquipment);\r\n  }\r\n\r\n  emitDeletedIndex(): void {\r\n    const index = this.technicalEquipments.findIndex(equipments => equipments === this.selectedTechnicalEquipment);\r\n    this.deleteEquipmentIndex.emit(index);\r\n    this.selectedTechnicalEquipment = null;\r\n    this.emitItemSelected();\r\n  }\r\n\r\n  editTechnicalEquipment() {\r\n    const index = this.technicalEquipments.findIndex(equipments => equipments === this.selectedTechnicalEquipment);\r\n    this.technicalEquipmentService.openEditTechnicalEquipment(this.selectedTechnicalEquipment)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.equipmentChanged.emit({index: index, technicalEquipment: res});\r\n          this.selectedTechnicalEquipment = null;\r\n          this.emitItemSelected();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-end mb-3\" *ngIf=\"selectedTechnicalEquipment\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    icon=\"pi pi-pencil\"\r\n    class=\"p-button-rounded mr-2\"\r\n    (click)=\"editTechnicalEquipment()\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    icon=\"pi pi-trash\"\r\n    class=\"p-button-rounded p-button-danger\"\r\n    (click)=\"emitDeletedIndex()\"\r\n  ></button>\r\n</div>\r\n\r\n<div class=\"table-pagination-preloader\">\r\n  <p-table\r\n    #dt\r\n    selectionMode=\"single\"\r\n    [scrollable]=\"true\"\r\n    [rows]=\"10\"\r\n    [(selection)]=\"selectedTechnicalEquipment\"\r\n    (selectionChange)=\"emitItemSelected()\"\r\n    [value]=\"technicalEquipments\"\r\n  >\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n        <th style=\"width: 23.75%\">Code</th>\r\n        <th style=\"width: 23.75%\">Name</th>\r\n        <th class=\"text-center\" style=\"width: 23.75%\">Quantity</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-technicalEquipment let-i=\"rowIndex\">\r\n      <tr [pSelectableRow]=\"technicalEquipment\">\r\n        <td style=\"width: 5%\" class=\"text-center\">\r\n          {{i + 1}}\r\n        </td>\r\n        <td style=\"width: 23.75%\">\r\n          {{technicalEquipment.used_by_nomenclature.code}}\r\n        </td>\r\n        <td style=\"width: 23.75%\">\r\n          <b *ngIf=\"technicalEquipment.used_by_nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n          {{technicalEquipment.used_by_nomenclature.name}}\r\n        </td>\r\n        <td style=\"width: 23.75%\" class=\"text-center\">\r\n          {{technicalEquipment.quantity}}\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"emptymessage\">\r\n      <tr>\r\n        <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n          <span >No Records Found</span>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ENomenclatureBulk, ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {Technology} from '../../models/technology';\r\nimport {Product} from '../../models/product';\r\nimport {Category} from '../../models/category';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {TechnicalEquipmentService} from '../../services/technical-equipment.service';\r\nimport {TechnicalEquipment} from '../../models/technical-equipment';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-form',\r\n  templateUrl: './create-edit-product-form.component.html',\r\n  styleUrls: ['./create-edit-product-form.component.scss']\r\n})\r\nexport class CreateEditProductFormComponent implements OnInit, OnDestroy {\r\n  technicalEquipments: TechnicalEquipment[] = [];\r\n  deleted_technical_equipments_ids: number[] = [];\r\n  @Input() isShowQuantity = true;\r\n  @Input() type: 'edit' | 'create' = 'edit';\r\n  @Input() product: Partial<Product>;\r\n  @Output() formChange: EventEmitter<{ invalid: boolean, formValue: Partial<Product & Nomenclature> }> = new EventEmitter<{ invalid: boolean; formValue: Partial<Product> }>();\r\n  @Output() uploadImage: EventEmitter<File[]> = new EventEmitter<File[]>();\r\n  @Output() removeImage: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  nomenclatureType = ENomenclatureType;\r\n\r\n  selectedTechnologiesIds: number[] = [];\r\n\r\n  bulkOrSerial = [\r\n    {label: 'Bulk', value: ENomenclatureBulk.BULK},\r\n    {label: 'With Serial Numbers', value: ENomenclatureBulk.SERIAL}\r\n  ];\r\n\r\n  form: FormGroup = this.fb.group({\r\n    type: [null, {disabled: true}],\r\n    name: ['', Validators.required],\r\n    code: ['', Validators.required],\r\n    description: [''],\r\n    quantity: [1, [Validators.required, Validators.min(1)]],\r\n    category: [null],\r\n    canAddTechnicalEquipment: [false],\r\n    bulk_or_serial: ['0', Validators.required],\r\n    codeId: [{value: '', disabled: true}],\r\n    technologies: [[]],\r\n    technical_equipments: this.fb.array([]),\r\n    deleted_technical_equipments_ids: [[]],\r\n  });\r\n\r\n  private destroy$ = new Subject();\r\n  isItemSelected: boolean;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private technicalEquipmentService: TechnicalEquipmentService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges.pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(data => {\r\n      this.formChange.next({invalid: this.form.invalid, formValue: data});\r\n    });\r\n\r\n    if (this.product) {\r\n      if (this.product.nomenclature.technologies.length > 0) {\r\n        this.selectedTechnologiesIds = this.product.nomenclature.technologies.map(t => t.id);\r\n        this.form.get('technologies').patchValue([...this.product.nomenclature.technologies]);\r\n      }\r\n\r\n      this.form.patchValue(this.product.nomenclature);\r\n\r\n      if (this.isShowQuantity) {\r\n        this.form.get('quantity').patchValue(this.product.quantity);\r\n      } else {\r\n        this.form.removeControl('quantity');\r\n      }\r\n\r\n      this.form.get('codeId').patchValue(this.product.nomenclature.code);\r\n\r\n      if (this.product.nomenclature.category) {\r\n        this.form.get('category').patchValue(this.product.nomenclature.category.id);\r\n      }\r\n\r\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\r\n        this.form.removeControl('code');\r\n      }\r\n\r\n      if (this.product.nomenclature.id) {\r\n        this.getTechnicalEquipments();\r\n      }\r\n    }\r\n  }\r\n\r\n  getTechnicalEquipments(): void {\r\n    this.technicalEquipmentService.get([{\r\n      name: 'nomenclature',\r\n      value: this.product.nomenclature.id\r\n    }]).pipe(takeUntil(this.destroy$)).subscribe(res => {\r\n      if (res) {\r\n        this.technicalEquipments = res.map(equipment => {\r\n          return {\r\n            id: equipment.id,\r\n            used_by_nomenclature: {\r\n              id: equipment.used_by_nomenclature.id,\r\n              code: equipment.used_by_nomenclature.code,\r\n              name: equipment.used_by_nomenclature.name,\r\n            },\r\n            quantity: equipment.quantity\r\n          };\r\n        });\r\n        if (this.technicalEquipments.length > 0) {\r\n          this.form.get('canAddTechnicalEquipment').patchValue(true);\r\n          this.technicalEquipments.forEach(equipment => {\r\n            (this.form.controls['technical_equipments'] as FormArray).push(this.fb.group({\r\n              ...equipment\r\n            }));\r\n          });\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  onSelectCategory(category: Category) {\r\n    if (category) {\r\n      this.form.get('category').patchValue(category.id);\r\n    } else {\r\n      this.form.get('category').patchValue(null);\r\n    }\r\n  }\r\n\r\n  onUploadImages(files: File[]) {\r\n    this.uploadImage.emit(files);\r\n  }\r\n\r\n  onRemoveImage(idx: number) {\r\n    this.removeImage.emit(idx);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<Technology[]>) {\r\n    const technologies = this.form.get('technologies').value.map(t => t);\r\n    const technologiesIds = this.selectedTechnologiesIds;\r\n    moveItemInArray(technologies, event.previousIndex, event.currentIndex);\r\n    moveItemInArray(technologiesIds, event.previousIndex, event.currentIndex);\r\n    this.form.get('technologies').patchValue([...technologies]);\r\n    this.selectedTechnologiesIds = [...technologiesIds];\r\n  }\r\n\r\n  onSelectTechnology(technologies: Technology[]) {\r\n    this.form.get('technologies').patchValue(technologies);\r\n    this.selectedTechnologiesIds = technologies.map(t => t.id);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  addTechnicalEquipment() {\r\n    this.technicalEquipmentService.openAddTechnicalEquipment().pipe(takeUntil(this.destroy$)).subscribe(res => {\r\n      if (res) {\r\n        (this.form.controls['technical_equipments'] as FormArray).push(this.fb.group({\r\n          ...res\r\n        }));\r\n        this.refreshTechnicalEquipments();\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshTechnicalEquipments(): void {\r\n    this.technicalEquipments = [];\r\n    (this.form.controls['technical_equipments'] as FormArray).controls.forEach(group => {\r\n      this.technicalEquipments.push(group.value);\r\n    });\r\n  }\r\n\r\n  equipmentChanged(data: { index: number; technicalEquipment: TechnicalEquipment }) {\r\n    (this.form.controls['technical_equipments'] as FormArray).controls[data.index].setValue(data.technicalEquipment);\r\n    this.refreshTechnicalEquipments();\r\n  }\r\n\r\n  equipmentDeleted(index: number) {\r\n    if (index > -1) {\r\n      const equipmentId = this.technicalEquipments[index].id;\r\n      if (equipmentId) {\r\n        this.deleted_technical_equipments_ids.push(this.technicalEquipments[index].id);\r\n        this.form.get('deleted_technical_equipments_ids').patchValue([...this.deleted_technical_equipments_ids]);\r\n      }\r\n      this.technicalEquipments.splice(index, 1);\r\n      (this.form.controls['technical_equipments'] as FormArray).removeAt(index);\r\n    }\r\n  }\r\n}\r\n","<div class=\"create-edit-product-form\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"edit-product\">\r\n      <div class=\"edit-product__left\" *ngIf=\"product.nomenclature.type !== nomenclatureType.PURCHASED\">\r\n        <div class=\"form-group edit-product__technology-picker\">\r\n          <label>Technologies</label>\r\n          <pek-multi-technology-picker\r\n            (selectTechnologies)=\"onSelectTechnology($event)\"\r\n            [currentTechnologiesIds]=\"selectedTechnologiesIds\"\r\n          >\r\n          </pek-multi-technology-picker>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Order of Technologies</label>\r\n          <div\r\n            class=\"edit-product__list\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n          >\r\n            <div\r\n              class=\"edit-product__technology\"\r\n              *ngFor=\"let technology of form.get('technologies').value\"\r\n              cdkDrag\r\n            >\r\n              <div class=\"edit-product__placeholder\" *cdkDragPlaceholder></div>\r\n              {{technology.name}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"edit-product__right\">\r\n        <div class=\"edit-product__column\">\r\n          <div class=\"edit-product__image\">\r\n            <pek-images-slider\r\n              [width]=\"'15.75rem'\"\r\n              [height]=\"'15.75rem'\"\r\n              [images]=\"product.nomenclature.images\"\r\n              (removeImage)=\"onRemoveImage($event)\"\r\n              (choiceImages)=\"onUploadImages($event)\"\r\n            ></pek-images-slider>\r\n          </div>\r\n          <div class=\"edit-product__fields\">\r\n            <div class=\"form-group\">\r\n              <label>Type</label>\r\n              <pek-nomenclature-type-picker\r\n                [isDisabled]=\"true\"\r\n                [currentNomenclatureType]=\"form.get('type').value\"\r\n              ></pek-nomenclature-type-picker>\r\n            </div>\r\n            <div class=\"form-group\" *ngIf=\"form.get('type').value !== nomenclatureType.PURCHASED\">\r\n              <label for=\"code\">Code*</label>\r\n              <input type=\"text\" id=\"code\" pInputText formControlName=\"code\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Name*</label>\r\n              <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\r\n            </div>\r\n\r\n            <div class=\"form-group\" *ngIf=\"form.get('type').value === nomenclatureType.PURCHASED\">\r\n              <label>Category</label>\r\n              <pek-product-category-picker\r\n                (choiceCategory)=\"onSelectCategory($event)\"\r\n                [currentCategoryId]=\"this.form.get('category').value\"\r\n              >\r\n              </pek-product-category-picker>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"product-add__box\">\r\n          <div class=\"form-group\" *ngIf=\"form.get('type').value === nomenclatureType.PURCHASED\">\r\n            <label for=\"bulk\">Bulk / With Serial Numbers*</label>\r\n            <p-dropdown\r\n              id=\"bulk\"\r\n              [options]=\"bulkOrSerial\"\r\n              formControlName=\"bulk_or_serial\"\r\n              optionLabel=\"label\"\r\n              optionValue=\"value\"\r\n            ></p-dropdown>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"type === 'edit'\">\r\n            <label for=\"id\">Id</label>\r\n            <input type=\"text\" id=\"id\" pInputText formControlName=\"codeId\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              [rows]=\"2\"\r\n              pInputTextarea\r\n              [autoResize]=\"false\"\r\n              formControlName=\"description\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"(product.parent || type === 'create') && isShowQuantity\">\r\n            <label for=\"quantity\">Quantity*</label>\r\n            <input type=\"number\" min=\"1\" step=\"1\" id=\"quantity\" pInputText formControlName=\"quantity\">\r\n          </div>\r\n          <div *ngIf=\"product.nomenclature.type !== nomenclatureType.PURCHASED\" class=\"form-group\">\r\n            <label for=\"technicalEquipment\">Required Technical Equipment</label>\r\n            <p-checkbox id=\"technicalEquipment\" formControlName=\"canAddTechnicalEquipment\" [binary]=\"true\"\r\n                        inputId=\"binary\"></p-checkbox>\r\n          </div>\r\n          <div class=\"d-flex justify-content-end mb-3\"\r\n               *ngIf=\"form.get('canAddTechnicalEquipment').value && !isItemSelected\">\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-plus\"\r\n              class=\"p-button-rounded\"\r\n              (click)=\"addTechnicalEquipment()\"\r\n            ></button>\r\n          </div>\r\n          <div *ngIf=\"form.get('canAddTechnicalEquipment').value\">\r\n            <pek-technical-equipments-table\r\n              (isSelectedEquipmentEmitter)=\"isItemSelected = $event\" [technicalEquipments]=\"technicalEquipments\"\r\n              (deleteEquipmentIndex)=\"equipmentDeleted($event)\"\r\n              (equipmentChanged)=\"equipmentChanged($event)\"></pek-technical-equipments-table>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <pek-nomenclature-files [nomenclatureId]=\"product.nomenclature.id\"></pek-nomenclature-files>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport {ProductPrefix} from '../../models/prefix';\nimport {ModalService} from '@shared/services/modal.service';\nimport {PrefixService} from '../../services/prefix.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-prefixes',\n  templateUrl: './prefixes.component.html',\n  styleUrls: ['./prefixes.component.scss']\n})\nexport class PrefixesComponent implements OnInit, OnDestroy {\n  prefixes: ProductPrefix[] = [];\n  selectedPrefix: ProductPrefix;\n  isLoading = true;\n\n  constructor(\n    private prefixService: PrefixService,\n    public modalService: ModalService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPrefixes();\n  }\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Prefix',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditPrefix()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemovePrefix()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  getPrefixes() {\n    this.prefixService.get().subscribe(prefixes => {\n      this.prefixes = prefixes;\n      this.isLoading = false;\n    });\n  }\n\n  onAddPrefix() {\n    this.prefixService.createEditPrefix('create').pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(prefix => {\n      if (prefix) {\n        this.prefixes.unshift(prefix);\n      }\n    });\n  }\n\n  onEditPrefix() {\n    this.prefixService.createEditPrefix('edit', this.selectedPrefix).subscribe(prefix => {\n      if (prefix) {\n        const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n        this.prefixes[index] = prefix;\n      }\n    });\n  }\n\n  onRemovePrefix() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.prefixService.delete(this.selectedPrefix.id).subscribe(() => {\n          const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n          this.prefixes.splice(index, 1);\n          this.selectedPrefix = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Prefixes</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Prefix\" (click)=\"onAddPrefix()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"prefixes.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedPrefix\"\n        [value]=\"prefixes\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedPrefix\">Choose the Prefix to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedPrefix\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-prefix let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"prefix\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{prefix.prefix}}</td>\n            <td style=\"width: 50%\">{{prefix.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"prefix.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && prefixes.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {cloneDeep} from 'lodash-es';\nimport {finalize, Subject, takeUntil} from 'rxjs';\nimport {TreeService} from '@shared/services/tree.service';\nimport {Category} from '../../models/category';\n\n@Component({\n  selector: 'pek-product-structure-categories',\n  templateUrl: './product-structure-categories.component.html',\n  styleUrls: ['./product-structure-categories.component.scss']\n})\nexport class ProductStructureCategoriesComponent implements OnInit, OnDestroy {\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[];\n  selectedCategory: TreeNode<ProductStructureCategory>;\n\n  isLoading = true;\n  isMovingDown = false;\n  isMovingUp = false;\n\n  expanseMap = {};\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Category',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditCategory()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveCategory()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private productStructureCategoryService: ProductStructureCategoryService,\n    private modalService: ModalService,\n    private readonly treeService: TreeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, this.expanseMap);\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, this.expanseMap);\n  }\n\n  getMeasure(measure) {\n    if (measure != null) {\n      return measure.name + ' (' + measure.symbol + ')';\n    } else {\n      return '_';\n    }\n  }\n\n  findIndexToMove(selectedNodeId) {\n    let index;\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach((node, i) => {\n        if (node.data.id === selectedNodeId) {\n          index = i;\n          return;\n        } else {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n    return index;\n  }\n\n  down() {\n    const node = this.selectedCategory;\n\n    const index = this.findIndexToMove(node.data.id);\n\n    if ((index < node.parent?.children.length - 1 || (!node.parent && index < this.categoriesTree.length - 1)) && !this.isMovingDown) {\n      this.isMovingDown = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index + 1].data.id : this.categoriesTree[index + 1].data.id,\n        move_to: 'right'\n      };\n      this.productStructureCategoryService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingDown = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'down');\n      });\n    }\n  }\n\n  up() {\n    const node = this.selectedCategory;\n    const index = this.findIndexToMove(node.data.id);\n\n    if (index > 0 && !this.isMovingUp) {\n      this.isMovingUp = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index - 1].data.id : this.categoriesTree[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.productStructureCategoryService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingUp = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'up');\n      });\n    }\n  }\n\n  productMoved(category: Category, direction: 'up' | 'down') {\n    let findedProduct: TreeNode<ProductStructureCategory>;\n    let parentProduct: TreeNode<ProductStructureCategory>;\n\n    const findProduct = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === category.id) {\n          findedProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findProduct(node.children);\n          }\n        }\n      });\n    };\n\n    const findParent = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === findedProduct.parent.data.id) {\n          parentProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findParent(node.children);\n          }\n        }\n      });\n    };\n\n    findProduct(this.categoriesTree);\n\n    if (findedProduct.parent) {\n      findParent(this.categoriesTree);\n    } else {\n      parentProduct = findedProduct;\n    }\n\n    if (findedProduct.parent) {\n      const index = parentProduct.children.findIndex(child => child.data.id === category.id);\n\n      if (direction === 'down') {\n        [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\n      } else {\n        [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\n      }\n    } else {\n      const index = this.categoriesTree.findIndex(node => node.data.id === category.id);\n\n      if (direction === 'down') {\n        [this.categoriesTree[index], this.categoriesTree[index + 1]] = [this.categoriesTree[index + 1], this.categoriesTree[index]];\n      } else {\n        [this.categoriesTree[index], this.categoriesTree[index - 1]] = [this.categoriesTree[index - 1], this.categoriesTree[index]];\n      }\n    }\n\n    this.categoriesTree = this.categoriesTree.map(node => node);\n  }\n\n  onCreateCategory() {\n    this.productStructureCategoryService.createEditCategory('create').subscribe(category => {\n      if (category) {\n        this.categories.unshift(category);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditCategory() {\n    this.productStructureCategoryService.createEditCategory('edit', this.selectedCategory.data).subscribe(category => {\n      if (category) {\n        const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n        this.categories[index] = category;\n        this.createTree();\n        this.selectedCategory = this.treeService.findSelectedNode(this.selectedCategory, this.categoriesTree);\n      }\n    });\n  }\n\n  onRemoveCategory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productStructureCategoryService.delete(this.selectedCategory.data).subscribe(() => {\n          const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n          this.categories.splice(index, 1);\n          this.selectedCategory = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.categoriesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.categoriesTree = temp;\n    this.selectedCategory = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Product Structure Categories</h1>\n    </div>\n\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Category\" (click)=\"onCreateCategory()\"></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          [value]=\"categoriesTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedCategory\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex align-items-center\">\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-up\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"!selectedCategory\"\n                [loading]=\"isMovingUp\"\n                (click)=\"up()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-down\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"!selectedCategory\"\n                [loading]=\"isMovingDown\"\n                (click)=\"down()\"\n              ></button>\n\n              <p class=\"subtitle ml-1 mr-2\" *ngIf=\"!selectedCategory\">Choose the Category to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedCategory\"></p-menubar>\n\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 52px\">Name</th>\n              <th style=\"width: 30%\">Unit of Measure</th>\n              <th style=\"width: 35%\">Description</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n              <td style=\"width: 35%\">\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                {{rowData.name}}\n              </td>\n              <td style=\"width: 30%\">\n                {{getMeasure(rowData.unit_of_measure)}}\n              </td>\n              <td style=\"width: 35%\">\n                <ng-container>\n                  {{rowData.description}}\n                </ng-container>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-product-structure-layout',\n  templateUrl: './product-structure-layout.component.html',\n  styleUrls: ['./product-structure-layout.component.scss']\n})\nexport class ProductStructureLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Products', commands: ['products']},\n    {label: 'Categories', commands: ['categories']},\n  ]\n\n  settingRoutes: NavigationLink[] = [\n    {label: 'Technologies', commands: ['technologies']},\n    {label: 'Prefixes', commands: ['prefixes']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Product Structure'\"\n  [routes]=\"routes\"\n  [settingsRoutes]=\"settingRoutes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MenuItem, TreeNode} from 'primeng/api';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {Product} from '../../models/product';\r\nimport {Table} from 'primeng/table';\r\nimport {finalize, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\r\nimport {debounceTime, map, tap} from 'rxjs/operators';\r\nimport {cloneDeep} from 'lodash-es';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MakeRootProductComponent} from '../../modals/make-root-product/make-root-product.component';\r\nimport {MakeProductionListComponent} from '../../modals/make-production-list/make-production-list.component';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {ENomenclatureType} from '@shared/models/nomenclature';\r\n\r\n@Component({\r\n  selector: 'pek-product-structure-product',\r\n  templateUrl: './product-structure-product.component.html',\r\n  styleUrls: ['./product-structure-product.component.scss']\r\n})\r\nexport class ProductStructureProductComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('dt') dt: Table;\r\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\r\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\r\n\r\n  productsTree: TreeNode<Product>[];\r\n  selectedProduct: TreeNode<Product> = null;\r\n  products: Product[];\r\n\r\n  isMovingUp = false;\r\n  isMovingDown = false;\r\n\r\n  menuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Product',\r\n      items: [\r\n        {\r\n          label: 'Add Item',\r\n          icon: 'pi pi-plus',\r\n          disabled: true,\r\n          command: () => this.onAddProduct(),\r\n        },\r\n        {\r\n          label: 'Make Production List',\r\n          icon: 'pi pi-box',\r\n          command: () => this.onOpenMakeProductionList(),\r\n        },\r\n        {\r\n          label: 'Make Root',\r\n          icon: 'pi pi-globe',\r\n          disabled: true,\r\n          command: () => this.onOpenMakeRoot(),\r\n        },\r\n        {\r\n          label: 'Upload Structure',\r\n          icon: 'pi pi-upload',\r\n          command: () => this.onUploadProductStructure(),\r\n        },\r\n        {\r\n          label: 'Files',\r\n          icon: 'pi pi-file',\r\n          command: () => this.onShowFiles(),\r\n        },\r\n        {\r\n          label: 'Images',\r\n          icon: 'pi pi-images',\r\n          command: () => this.onShowGallery(),\r\n        },\r\n        {\r\n          label: 'Edit',\r\n          icon: 'pi pi-pencil',\r\n          command: () => this.onEditProduct(),\r\n        },\r\n        {\r\n          label: 'Copy',\r\n          icon: 'pi pi-clone',\r\n          command: () => this.onCopyProduct(),\r\n        },\r\n        {\r\n          label: 'Remove',\r\n          icon: 'pi pi-trash',\r\n          command: () => this.onDeleteProduct(),\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  expanseMap = {};\r\n  sorted = false;\r\n  isLoading = true;\r\n\r\n  productId = this.route.snapshot.paramMap.get('id');\r\n\r\n  inputCodeSub: Subscription;\r\n  inputNameSub: Subscription;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly productService: ProductService,\r\n    private readonly modalService: ModalService,\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialog: MatDialog,\r\n    private readonly router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\r\n      .pipe(\r\n        map(() => this.searchCodeInput.nativeElement.value),\r\n        tap(value => this.filterProducts(value, 'code', 'contains')),\r\n        debounceTime(299),\r\n      ).subscribe((value) => {\r\n        if (!value) {\r\n          this.onCollapseAll();\r\n          return;\r\n        }\r\n\r\n        this.expandedFindProducts(value, 'code');\r\n      });\r\n\r\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\r\n      .pipe(\r\n        map(() => this.searchNameInput.nativeElement.value),\r\n        tap(value => this.filterProducts(value, 'name', 'contains')),\r\n        debounceTime(299),\r\n      ).subscribe((value) => {\r\n        if (!value) {\r\n          this.onCollapseAll();\r\n          return;\r\n        }\r\n\r\n        this.expandedFindProducts(value, 'name');\r\n      });\r\n  }\r\n\r\n  onExpandAll(): void {\r\n    const temp = cloneDeep(this.productsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, true);\r\n    });\r\n    this.productsTree = temp;\r\n  }\r\n\r\n  onCollapseAll(): void {\r\n    const temp = cloneDeep(this.productsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, false);\r\n    });\r\n    this.productsTree = temp;\r\n    this.selectedProduct = null;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  getProducts() {\r\n    if (this.productsTree) {\r\n      this.mapExpansion();\r\n    }\r\n\r\n    this.productService.getTree(Number(this.productId)).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(products => {\r\n        this.products = products;\r\n        if (!this.sorted) {\r\n          this.createTree();\r\n        } else {\r\n          this.sort();\r\n        }\r\n\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  filterProducts(event: any, field: string, mode: string) {\r\n    this.dt.filter(event, `nomenclature.${field}`, mode);\r\n  }\r\n\r\n  expandedFindProducts(value: string, field: string) {\r\n    this.selectedProduct = null;\r\n\r\n    this.productsTree.forEach(parent => {\r\n      parent.children.forEach(product => {\r\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\r\n          parent.expanded = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  createTree() {\r\n    if (this.productsTree) {\r\n      this.mapExpansion();\r\n    }\r\n\r\n    const dd = [];\r\n    this.products.forEach(element => {\r\n      const ins = {data: element, expanded: false};\r\n      if (this.expanseMap) {\r\n        ins.expanded = this.expanseMap[element.id];\r\n      }\r\n      dd.push(ins);\r\n    });\r\n    let root;\r\n    const idMapping = dd.reduce((acc, el, i) => {\r\n      acc[el.data.id] = i;\r\n      return acc;\r\n    }, {});\r\n    dd.forEach(el => {\r\n      if (el.data.parent === null) {\r\n        root = el;\r\n        return;\r\n      }\r\n      const parentEl = dd[idMapping[el.data.parent]];\r\n\r\n      parentEl.children = [...(parentEl.children || []), el];\r\n      if (parentEl.children.length === 0) {\r\n        delete parentEl.children;\r\n      }\r\n    });\r\n    root.expanded = true;\r\n    this.productsTree = [root];\r\n    if (this.selectedProduct) {\r\n      this.getSelected(this.productsTree[0]);\r\n    }\r\n  }\r\n\r\n  down() {\r\n    const node = this.selectedProduct;\r\n\r\n    let index;\r\n    node.parent.children.forEach((element, i) => {\r\n      if (element.data.id === node.data.id) {\r\n        index = i;\r\n      }\r\n    });\r\n\r\n    if (index < node.parent.children.length - 1 && !this.isMovingDown) {\r\n      this.isMovingDown = true;\r\n      const move = {\r\n        parent: node.parent.children[index + 1].data.id,\r\n        move_to: 'right'\r\n      };\r\n      this.productService.move(move, node.data.id).pipe(\r\n        finalize(() => this.isMovingDown = false)\r\n      ).subscribe(product => {\r\n\r\n        this.productMoved(product, 'down');\r\n      });\r\n    }\r\n  }\r\n\r\n  up() {\r\n    const node = this.selectedProduct;\r\n\r\n    let index;\r\n    node.parent.children.forEach((element, i) => {\r\n      if (element.data.id === node.data.id) {\r\n        index = i;\r\n      }\r\n    });\r\n\r\n    if (index > 0 && !this.isMovingUp) {\r\n      this.isMovingUp = true;\r\n      const move = {\r\n        parent: node.parent.children[index - 1].data.id,\r\n        move_to: 'left'\r\n      };\r\n      this.productService.move(move, node.data.id).pipe(\r\n        finalize(() => this.isMovingUp = false)\r\n      ).subscribe(product => {\r\n        this.productMoved(product, 'up');\r\n      });\r\n    }\r\n  }\r\n\r\n  productMoved(product: Product, direction: 'up' | 'down') {\r\n    let findedProduct: TreeNode<Product>;\r\n    let parentProduct: TreeNode<Product>;\r\n\r\n    const findProduct = (nodes: TreeNode<Product>[]) => {\r\n      nodes.forEach(node => {\r\n        if (node.data.id === product.id) {\r\n          findedProduct = node;\r\n        } else {\r\n          if (node.children && node.children.length > 0) {\r\n            findProduct(node.children);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    const findParent = (nodes: TreeNode<Product>[]) => {\r\n      nodes.forEach(node => {\r\n        if (node.data.id === findedProduct.parent.data.id) {\r\n          parentProduct = node;\r\n        } else {\r\n          if (node.children && node.children.length > 0) {\r\n            findParent(node.children);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    findProduct(this.productsTree);\r\n    findParent(this.productsTree);\r\n\r\n    const index = parentProduct.children.findIndex(child => child.data.id === product.id);\r\n\r\n    if (direction === 'down') {\r\n      [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\r\n    } else {\r\n      [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\r\n    }\r\n\r\n    this.productsTree = this.productsTree.map(node => node);\r\n  }\r\n\r\n  sort() {\r\n    this.sorted = true;\r\n    const sortType = {'0': 3, '1': 1, '2': 2};\r\n    this.products.sort((a, b) => sortType[a.nomenclature.type] - sortType[b.nomenclature.type]);\r\n    this.createTree();\r\n  }\r\n\r\n  mapExpansion() {\r\n    this.productsTree.forEach(element => {\r\n      this.createExpanseMap(element);\r\n    });\r\n  }\r\n\r\n  getSelected(node) {\r\n    if (node.data.id == this.selectedProduct.data.id) {\r\n      this.selectedProduct = node;\r\n    } else {\r\n      if (node.children) {\r\n        node.children.forEach(element => {\r\n          this.getSelected(element);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  createExpanseMap(node) {\r\n    if (node.expanded) {\r\n      this.expanseMap[node.data.id] = node.expanded;\r\n    } else {\r\n      this.expanseMap[node.data.id] = false;\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(element => {\r\n        this.createExpanseMap(element);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectNode() {\r\n    if (this.selectedProduct) {\r\n      this.menuItems[0].items[0].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY || this.selectedProduct.data.parent === null);\r\n      this.menuItems[0].items[2].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY && this.selectedProduct.data.parent !== null);\r\n      this.menuItems[0].items[3].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY);\r\n    }\r\n  }\r\n\r\n  onOpenMakeRoot() {\r\n    this.dialog.open(MakeRootProductComponent, {\r\n      width: '36rem',\r\n      data: this.selectedProduct.data,\r\n      autoFocus: false,\r\n      enterAnimationDuration: '250ms',\r\n      panelClass: 'modal_visible'\r\n    });\r\n  }\r\n\r\n  onOpenMakeProductionList() {\r\n    this.dialog.open(MakeProductionListComponent, {\r\n      width: '36rem',\r\n      data: {nomenclature: this.selectedProduct.data.nomenclature, rootId: this.productsTree[0].data.nomenclature.id},\r\n      autoFocus: false,\r\n      enterAnimationDuration: '250ms',\r\n    });\r\n  }\r\n\r\n  onEditProduct() {\r\n    this.productService.editProductModal(this.selectedProduct.data).subscribe(product => {\r\n      if (product) {\r\n        this.getProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  onCopyProduct() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.productService.copyStructure({\r\n          nomenclature_id: this.selectedProduct.data.nomenclature.id,\r\n          parent_id: this.selectedProduct.data.parent,\r\n          name: this.selectedProduct.data.nomenclature.name\r\n        }).subscribe(products => {\r\n          if (products) {\r\n            this.getProducts();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteProduct() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.productService.delete(this.selectedProduct.data.id).subscribe(() => {\r\n          const removeChildren = (id: number) => {\r\n            const ids: number[] = this.products.filter(p => p.parent === id).map(p => p.id);\r\n            this.products = [...this.products.filter(p => p.parent !== id)];\r\n\r\n            ids.forEach(id => {\r\n              removeChildren(id);\r\n            });\r\n          };\r\n\r\n          removeChildren(this.selectedProduct.data.id);\r\n\r\n          const index = this.products.findIndex(p => p.id === this.selectedProduct.data.id);\r\n\r\n          if (index >= 0) {\r\n            if (!this.products[index].parent) {\r\n              this.router.navigate(['../../'], {relativeTo: this.route});\r\n            } else {\r\n              this.products.splice(index, 1);\r\n              this.selectedProduct = null;\r\n              this.createTree();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddProduct() {\r\n    this.productService.addProductModal(this.selectedProduct.data.id).subscribe(products => {\r\n      if (products) {\r\n        console.log(products);\r\n        this.products = [...this.products, ...products];\r\n        // console.log(this.products);\r\n        // this.productsTree = [];\r\n        this.createTree();\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowGallery() {\r\n    this.modalService.showImageGallery(this.selectedProduct.data.nomenclature.images).subscribe();\r\n  }\r\n\r\n  onUploadProductStructure() {\r\n    if (this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY) {\r\n      this.productService.uploadProductStructureModal(this.selectedProduct.data.id, this.productId).subscribe(response => {\r\n        if (response) {\r\n          this.getProducts();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onShowFiles() {\r\n    this.productService.showProductFiles(+this.productId).subscribe();\r\n  }\r\n\r\n  drop(event) {\r\n    const parent = this.products.find(x => x.id === event.container.data);\r\n    const child = this.products.find(x => x.id === event.item.data);\r\n    if (child.parent !== null && child.id !== parent.id) {\r\n      if (parent.nomenclature.type === ENomenclatureType.ASSEMBLY || parent.parent === null) {\r\n        if (child.id !== parent.id) {\r\n          const product = {\r\n            id: child.id,\r\n            parent: parent.id,\r\n          };\r\n\r\n          this.productService.updatePartly(product).subscribe(product => {\r\n            this.getProducts();\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n    this.inputCodeSub.unsubscribe();\r\n    this.inputNameSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Product Structure ({{!isLoading ? productsTree[0].data.nomenclature.name : '...'}})</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <div class=\"p-input-icon-left mr-2\">\r\n        <i class=\"pi pi-search\"></i>\r\n        <input\r\n          #searchCodeInput\r\n          pInputText\r\n          type=\"text\"\r\n          class=\"input-fill\"\r\n          placeholder=\"Search by code\"\r\n        >\r\n      </div>\r\n      <div class=\"p-input-icon-left mr-2\">\r\n        <i class=\"pi pi-search\"></i>\r\n        <input\r\n          #searchNameInput\r\n          pInputText\r\n          type=\"text\"\r\n          class=\"input-fill\"\r\n          placeholder=\"Search by name\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <div class=\"page__table\">\r\n        <p-treeTable\r\n          #dt\r\n          [value]=\"productsTree\"\r\n          selectionMode=\"single\"\r\n          [(selection)]=\"selectedProduct\"\r\n          [scrollable]=\"true\"\r\n          scrollHeight=\"calc(100vh - 19.2rem)\"\r\n          (onNodeSelect)=\"onSelectNode()\"\r\n          cdkDropListGroup\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex align-items-center\">\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-arrow-up\"\r\n                class=\"p-button-rounded mr-2\"\r\n                [disabled]=\"selectedProduct?.data.parent === null\"\r\n                [loading]=\"isMovingUp\"\r\n                (click)=\"up()\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-arrow-down\"\r\n                class=\"p-button-rounded mr-2\"\r\n                [disabled]=\"selectedProduct?.data.parent === null\"\r\n                [loading]=\"isMovingDown\"\r\n                (click)=\"down()\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-print\"\r\n                label=\"Print\"\r\n                class=\"mr-2\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-refresh\"\r\n                label=\"Sort\"\r\n                class=\"mr-2\"\r\n                (click)=\"sort()\"\r\n              ></button>\r\n              <p class=\"ml-1 subtitle\" *ngIf=\"!selectedProduct\">Choose the Product to edit</p>\r\n              <p-menubar\r\n                class=\"product-structure-bar ml-auto mr-2\"\r\n                [model]=\"menuItems\"\r\n                [class.disabled]=\"!selectedProduct\"\r\n              ></p-menubar>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-angle-down\"\r\n                label=\"Expand All\"\r\n                class=\"mr-2\"\r\n                (click)=\"onExpandAll()\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-angle-up\"\r\n                label=\"Collapse All\"\r\n                (click)=\"onCollapseAll()\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 30%; padding-left: 40px\">Code</th>\r\n              <th style=\"width: 20%\">Name</th>\r\n              <th style=\"width: 7%\" class=\"text-center\">Quantity</th>\r\n              <th style=\"width: 6%\" class=\"text-center\">UOM</th>\r\n              <th style=\"width: 14%\" class=\"text-center\">Technologies</th>\r\n              <th style=\"width: 11%\" class=\"text-center\">Type</th>\r\n              <th style=\"width: 12%\" class=\"text-center\">Confirmation</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n            <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\r\n              <td\r\n                style=\"width: 30%\"\r\n                [ngStyle]=\"{'padding-left': rowNode.level * 0.5 + 'rem'}\"\r\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\r\n                (cdkDropListDropped)=\"drop($event)\"\r\n                [cdkDropListData]=\"rowData.id\"\r\n                cdkDropList\r\n              >\r\n                <div class=\"table-toggle\">\r\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                  <span\r\n                    cdkDrag\r\n                    [cdkDragData]=\"rowData.id\"\r\n                    class=\"drag-cursor\"\r\n                  >\r\n                    {{rowData.nomenclature.code}}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 20%\" [class.font-italic]=\"rowData.nomenclature.type !== '1'\">\r\n                <b *ngIf=\"rowData.nomenclature.has_technical_equipment\">(T)</b>\r\n                {{rowData.nomenclature.name}}</td>\r\n              <td\r\n                style=\"width: 7%\"\r\n                class=\"text-center\"\r\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\r\n              >\r\n                {{rowData.quantity}}\r\n              </td>\r\n              <td\r\n                style=\"width: 6%\"\r\n                class=\"text-center\"\r\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\r\n              >\r\n                <ng-container *ngIf=\"rowData.nomenclature.category; else symbol\">\r\n                  {{rowData.nomenclature.category.unit_of_measure?.symbol}}\r\n                </ng-container>\r\n              </td>\r\n              <td\r\n                style=\"width: 14%\"\r\n                class=\"text-center\"\r\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\r\n              >\r\n                <ng-container *ngIf=\"rowData.nomenclature.technologies.length > 0\">\r\n                  <ng-container *ngFor=\"let tech of rowData.nomenclature.technologies; let idx = index\">\r\n                    {{tech.name}}<span *ngIf=\"idx !== rowData.nomenclature.technologies.length - 1\">,</span>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 11%\" class=\"text-center\">\r\n                <ng-container [ngSwitch]=\"rowData.nomenclature.type\">\r\n                  <span *ngSwitchCase=\"'0'\" class=\"font-italic\">Purchased</span>\r\n                  <span *ngSwitchCase=\"'2'\" class=\"font-italic\">Manufactured</span>\r\n                  <ng-container *ngSwitchCase=\"'1'\">Assembly</ng-container>\r\n                </ng-container>\r\n              </td>\r\n              <td\r\n                style=\"width: 12%\"\r\n                class=\"text-center\"\r\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\r\n              >\r\n                <ng-container *ngIf=\"rowData.nomenclature.type === '0'\">\r\n                  <ng-container [ngSwitch]=\"rowData.nomenclature.approved\">\r\n                    <span *ngSwitchCase=\"'0'\" class=\"text-warning\">NEW</span>\r\n                    <span *ngSwitchCase=\"'1'\" class=\"text-success\">APPROVED</span>\r\n                    <span *ngSwitchCase=\"'2'\" class=\"text-danger\">DECLINED</span>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-treeTable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #symbol>Pcs</ng-template>\r\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {Product} from '../../models/product';\nimport {forkJoin, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\nimport {cloneDeep} from 'lodash-es';\nimport {Table} from 'primeng/table';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\n\n@Component({\n  selector: 'pek-product-structure-products-list',\n  templateUrl: './product-structure-products-list.component.html',\n  styleUrls: ['./product-structure-products-list.component.scss']\n})\nexport class ProductStructureProductsListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('dt') dt: Table;\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Product',\n    items: [\n      {\n        label: 'Structure',\n        icon: 'pi pi-table',\n        command: () => this.goToProductStructure(),\n      },\n      {\n        label: 'Copy',\n        icon: 'pi pi-clone',\n        command: () => this.onCopyProduct(),\n      },\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditProduct(),\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveProduct(),\n      }\n    ]\n  }];\n\n  productsTree: TreeNode<Product & ProductStructureCategory>[] = [];\n  categories: ProductStructureCategory[];\n  selectedNode: TreeNode<Product>;\n  products: Product[];\n\n  inputCodeSub: Subscription;\n  inputNameSub: Subscription;\n\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productService: ProductService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly productStructureCategoryServices: ProductStructureCategoryService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProductsAndCategories();\n  }\n\n  ngAfterViewInit() {\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchCodeInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'code', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'code');\n      });\n\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchNameInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'name', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'name');\n      });\n  }\n\n  filterProducts(event: any, field: string, mode: string) {\n    this.dt.filter(event, `nomenclature.${field}`, mode);\n  }\n\n  expandedFindProducts(value: string, field: string) {\n    this.selectedNode = null;\n\n    this.productsTree.forEach(parent => {\n      parent.children.forEach(product => {\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\n          parent.expanded = true;\n        }\n      });\n    });\n  }\n\n  getProductsAndCategories() {\n    forkJoin({\n      products: this.productService.getRoots(),\n      categories: this.productStructureCategoryServices.get()\n    }).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(({products, categories}) => {\n      this.products = products;\n      this.categories = categories;\n      this.createTreeCategories();\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTreeCategories() {\n    this.productsTree.unshift({\n      // @ts-ignore\n      data: {name: 'Not category'},\n      expanded: false,\n      parent: null,\n      children: []\n    });\n\n    this.categories.filter(category => !category.parent).forEach(category => {\n      this.productsTree.push({\n        data: category,\n        expanded: false,\n        parent: null,\n        children: []\n      });\n    });\n\n    const addChildrenCategories = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        const childrenCategories = this.categories.filter(category => category.parent === node.data.id);\n\n        if (childrenCategories.length > 0) {\n          node.children = childrenCategories.map(category => {\n            return {\n              data: category,\n              expanded: false,\n              parent: null,\n              children: [],\n            };\n          });\n        }\n\n        if (node.children.length > 0) {\n          addChildrenCategories(node.children);\n        }\n      });\n    };\n\n    addChildrenCategories(this.productsTree);\n  }\n\n  clearTree() {\n    const clear = (nodes: TreeNode<Product & ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        node.children = [...node.children.filter(child => child.data.tree_id)];\n\n        clear(node.children);\n      });\n    };\n\n    clear(this.productsTree);\n  }\n\n  createTree() {\n    this.clearTree();\n\n    const addProductsToTree = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        const products = this.products.filter(p => p.nomenclature.root_category?.id === node.data.id);\n\n        node.children = [...node.children, ...products.map(product => {\n          return {\n            data: product,\n            expanded: false,\n            parent: null,\n            children: [],\n          };\n        })];\n\n        addProductsToTree(node.children);\n      });\n    };\n\n    this.productsTree = [...this.productsTree];\n\n    addProductsToTree(this.productsTree);\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.productsTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.productsTree = temp;\n    this.selectedNode = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  onRemoveProduct() {\n    const product: Product = this.selectedNode.data;\n\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productService.delete(product.id).subscribe(() => {\n          this.selectedNode = null;\n          const index = this.products.findIndex(p => p.id === product.id);\n          this.products.splice(index, 1);\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  onCreateProduct() {\n    this.productService.createEditRootProduct('create').subscribe(product => {\n      if (product) {\n        this.products.unshift(<Product>product);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditProduct() {\n    const product = {...<Product>this.selectedNode.data};\n    this.productService.createEditRootProduct('edit', product).subscribe(nomenclature => {\n      if (nomenclature) {\n        const index = this.products.findIndex(p => p.nomenclature.id === nomenclature.id);\n\n        if (index !== -1) {\n          this.products[index].nomenclature = nomenclature;\n          this.createTree();\n        }\n      }\n    });\n  }\n\n  onCopyProduct() {\n    const product = <Product>this.selectedNode.data;\n    this.productService.createEditRootProduct('copy', product).subscribe(products => {\n      if (products) this.updateProducts();\n    });\n  }\n\n  // временный метод до оптимизации\n  updateProducts() {\n    this.productService.getRoots().subscribe(products => {\n      this.products = products;\n      this.createTree();\n    });\n  }\n\n  goToProductStructure() {\n    this.router.navigate(['structure', this.selectedNode.data.id], {relativeTo: this.route}).then();\n  }\n\n  ngOnDestroy() {\n    this.inputCodeSub.unsubscribe();\n    this.inputNameSub.unsubscribe();\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Products</h1>\n    </div>\n    <div class=\"page__tools\">\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchCodeInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by code\"\n        >\n      </div>\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchNameInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by name\"\n        >\n      </div>\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Product\" (click)=\"onCreateProduct()\"></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"productsTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex\">\n              <p class=\"subtitle\" *ngIf=\"!selectedNode\">Choose the Product to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 48px\">Code</th>\n              <th style=\"width: 35%\">Name</th>\n              <th style=\"width: 30%\">Description</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr\n              [ttRow]=\"rowNode\"\n              [ttSelectableRow]=\"rowNode\"\n              [ttSelectableRowDisabled]=\"!rowData.nomenclature\"\n              [class.disabled]=\"!rowData.nomenclature\"\n            >\n              <td style=\"width: 35%\">\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <ng-container *ngIf=\"!rowData.nomenclature\">\n                  <span class=\"category-name\">{{rowData.name}}\n                  </span>\n                  </ng-container>\n                  {{rowData.nomenclature?.code}}\n                </div>\n              </td>\n              <td style=\"width: 35%\">\n                {{rowData.nomenclature?.name}}\n              </td>\n              <td style=\"width: 30%\">\n                {{rowData.nomenclature?.description}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {TechnologyService} from '../../services/technology.service';\nimport {Technology} from '../../models/technology';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss']\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  technologies: Technology[] = [];\n  selectedTechnology: Technology;\n  isLoading = true;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Technology',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditTechnology()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveTechnology()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private technologyService: TechnologyService,\n    public modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getTechnologies();\n  }\n\n  getTechnologies() {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.isLoading = false;\n    });\n  }\n\n  onAddTechnology() {\n    this.technologyService.createEditTechnology('create').subscribe(technology => {\n      if (technology) {\n        this.technologies.unshift(technology);\n      }\n    });\n  }\n\n  onEditTechnology() {\n    this.technologyService.createEditTechnology('edit', this.selectedTechnology).subscribe(technology => {\n      if (technology) {\n        const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n        this.technologies[index] = technology;\n        this.selectedTechnology = this.technologies[index];\n      }\n    });\n  }\n\n  onRemoveTechnology() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.technologyService.delete(this.selectedTechnology).subscribe(() => {\n          const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n          this.technologies.splice(index, 1);\n          this.selectedTechnology = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Technologies</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Technology\" (click)=\"onAddTechnology()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"technologies.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedTechnology\"\n        [value]=\"technologies\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnology\">Choose the Technology to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedTechnology\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-technology let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"technology\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{technology.name}}</td>\n            <td style=\"width: 50%\">{{technology.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"technology.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && technologies.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ENomenclatureApproval, ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {finalize, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {debounceTime, map, tap} from 'rxjs/operators';\r\nimport {Category} from '../../models/category';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Table} from 'primeng/table';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'pek-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('searchBoxName') searchBoxName;\r\n  @ViewChild('searchBoxCode') searchBoxCode;\r\n  @ViewChild('dt') table: Table;\r\n\r\n  isCreateFormInvalid: boolean = true;\r\n  createFormValue: Partial<Nomenclature & Product>;\r\n\r\n  mode: 'add' | 'create' = 'add';\r\n\r\n  inputCodeSub: Subscription;\r\n  inputNameSub: Subscription;\r\n\r\n  isStartOnePage = false;\r\n  isSelectNomenclature = false;\r\n  isLoading = false;\r\n  isSaving = false;\r\n\r\n  nomenclatures: Nomenclature[] = [];\r\n  countNomenclatures = 0;\r\n\r\n  selectedNomenclature: Nomenclature = null;\r\n\r\n  nomenclatureType = ENomenclatureType;\r\n  nomenclatureApproval = ENomenclatureApproval;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    page: [1],\r\n    name: [''],\r\n    code: [''],\r\n    category: [''],\r\n    type: [null],\r\n  });\r\n\r\n  sendForm: FormGroup = this.fb.group({\r\n    quantity: [1, [Validators.min(1), Validators.required]],\r\n  });\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'page', value: this.searchForm.get('page').value},\r\n    {name: 'paginated', value: true}\r\n  ];\r\n\r\n  queryKey = 'name:/code:/category:';\r\n\r\n  newProduct: Partial<Product> = {\r\n    nomenclature: {\r\n      id: null,\r\n      category: null,\r\n      technologies: [],\r\n      images: [],\r\n      type: null,\r\n    }\r\n  };\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<AddProductComponent>,\r\n    private readonly productService: ProductService,\r\n    private readonly nomenclatureService: NomenclatureService,\r\n    public readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) private parentId: number,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputNameSub = fromEvent(this.searchBoxName.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedNomenclature = null),\r\n        map(() => this.searchBoxName.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n        this.searchNomenclatures();\r\n      });\r\n\r\n    this.inputCodeSub = fromEvent(this.searchBoxCode.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedNomenclature = null),\r\n        map(() => this.searchBoxCode.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n        this.searchNomenclatures();\r\n      });\r\n  }\r\n\r\n  getNomenclatures() {\r\n    this.nomenclatureService.getForPagination(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(nomenclatures => {\r\n      this.nomenclatures = nomenclatures.results;\r\n      this.countNomenclatures = nomenclatures.count;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  choiceType(type: ENomenclatureType) {\r\n    this.searchForm.get('type').patchValue(type);\r\n\r\n    this.query.push({\r\n      name: 'type',\r\n      value: this.searchForm.get('type').value\r\n    });\r\n\r\n    this.newProduct.nomenclature.type = type;\r\n\r\n    this.isSelectNomenclature = true;\r\n    this.isLoading = true;\r\n    this.dialogRef.updateSize('92rem', 'auto');\r\n\r\n    this.getNomenclatures();\r\n  }\r\n\r\n  searchNomenclatures() {\r\n\r\n    this.destroy$.next(true);\r\n    this.isLoading = true;\r\n\r\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/category:${this.searchForm.get('category').value}`;\r\n\r\n    // если значения фильтров изменились, начинаем с 1 страницы\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.isStartOnePage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'page', value: this.searchForm.get('page').value},\r\n      {name: 'paginated', value: true},\r\n      {name: 'type', value: this.searchForm.get('type').value}\r\n    ];\r\n\r\n    if (this.searchForm.get('name').value) {\r\n      this.query.push({name: 'name', value: this.searchForm.get('name').value});\r\n    }\r\n\r\n    if (this.searchForm.get('code').value) {\r\n      this.query.push({name: 'code', value: encodeURIComponent(this.searchForm.get('code').value)});\r\n    }\r\n\r\n    if (this.searchForm.get('category').value) {\r\n      this.query.push({name: 'category', value: this.searchForm.get('category').value});\r\n    }\r\n\r\n    this.getNomenclatures();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (this.searchForm.get('page').value !== evt.page + 1 && !this.isStartOnePage) {\r\n      this.selectedNomenclature = null;\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchNomenclatures();\r\n    }\r\n  }\r\n\r\n  onAddProduct() {\r\n    this.isSaving = true;\r\n\r\n    const send: any = {\r\n      nomenclature: this.selectedNomenclature.id,\r\n      parent: this.parentId,\r\n      quantity: this.sendForm.get('quantity').value,\r\n    };\r\n\r\n    this.productService.addProduct(send)\r\n      .pipe(finalize(() => this.isSaving = false))\r\n      .subscribe(products => {\r\n        this.dialogRef.close(products);\r\n      });\r\n  }\r\n\r\n  choiceCategory(category: Category) {\r\n    if (category) {\r\n      this.searchForm.get('category').patchValue(category.name);\r\n    } else {\r\n      this.searchForm.get('category').patchValue('');\r\n    }\r\n    this.searchNomenclatures();\r\n  }\r\n\r\n  resetSendForm() {\r\n    this.sendForm.get('quantity').patchValue(1);\r\n  }\r\n\r\n  onOpenLink(description: string) {\r\n    window.open(description, '_blank');\r\n    this.selectedNomenclature = null;\r\n    this.table.expandedRowKeys = {};\r\n    this.resetSendForm();\r\n  }\r\n\r\n  onChangeMode(mode: 'add' | 'create') {\r\n    this.mode = mode;\r\n\r\n    if (this.searchForm.get('type').value === ENomenclatureType.PURCHASED) {\r\n      this.dialogRef.updateSize('50rem', 'auto');\r\n    } else {\r\n      this.dialogRef.updateSize('60rem', 'auto');\r\n    }\r\n\r\n    this.dialogRef.removePanelClass('modal-picker');\r\n    this.dialogRef.addPanelClass('modal-overflow-visible');\r\n  }\r\n\r\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\r\n    this.createFormValue = data.formValue;\r\n    this.isCreateFormInvalid = data.invalid;\r\n  }\r\n\r\n  onCreateProduct() {\r\n    if (!this.isCreateFormInvalid) {\r\n      this.isSaving = true;\r\n\r\n      const send: Partial<Nomenclature> = {\r\n        name: this.createFormValue.name,\r\n        code: this.createFormValue.code,\r\n        description: this.createFormValue.description,\r\n        type: this.createFormValue.type,\r\n      };\r\n\r\n      if (this.createFormValue.type === ENomenclatureType.PURCHASED) {\r\n        send.category = this.createFormValue.category;\r\n        send.bulk_or_serial = this.createFormValue.bulk_or_serial;\r\n        delete send.code;\r\n      } else {\r\n        send.technologies = [...this.createFormValue.technologies];\r\n        send.category = null;\r\n      }\r\n\r\n      this.nomenclatureService.create(send).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(nomenclature => {\r\n        this.isSaving = true;\r\n\r\n        const send = [];\r\n\r\n        if (this.newProduct.nomenclature.images.length > 0) {\r\n          this.newProduct.nomenclature.images.forEach(file => {\r\n            send.push({\r\n              nomenclature: nomenclature.id,\r\n              image: file.file,\r\n            });\r\n          });\r\n\r\n          this.nomenclatureService.uploadImagesSeveral(send).pipe(\r\n            finalize(() => this.isSaving = false)\r\n          ).subscribe(images => {\r\n            this.isSaving = true;\r\n            this.addProduct(nomenclature.id, this.createFormValue.quantity, images);\r\n          });\r\n        } else {\r\n          this.isSaving = true;\r\n          this.addProduct(nomenclature.id, this.createFormValue.quantity, []);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addProduct(id: number, quantity: number, images: NomenclatureImage[]) {\r\n    const send: Partial<Product> = {\r\n      // @ts-ignore\r\n      nomenclature: id,\r\n      parent: this.parentId,\r\n      quantity,\r\n    };\r\n    this.productService.addProduct(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(products => {\r\n      products[0].nomenclature.images = [...images];\r\n      this.dialogRef.close(products);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputNameSub.unsubscribe();\r\n    this.inputCodeSub.unsubscribe();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onRemoveImage(idx: number) {\r\n    this.newProduct.nomenclature.images.splice(idx, 1);\r\n  }\r\n\r\n  onUploadImage(files: File[]) {\r\n    files.forEach(file => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = (fileLoadedEvent) => {\r\n        const srcData = fileLoadedEvent.target.result;\r\n\r\n        const newImage: NomenclatureImage = {\r\n          file,\r\n          image: srcData,\r\n          id: null\r\n        };\r\n\r\n        this.newProduct.nomenclature.images.push(newImage);\r\n      };\r\n\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        {{mode === 'add' ? 'Add' : 'Create'}} new Position\r\n        <ng-container *ngIf=\"mode === 'create'\">\r\n          <span\r\n            class=\"hint\"\r\n            pTooltip=\"To paste the image, copy it and press «Ctrl + V»\"\r\n            tooltipPosition=\"top\"\r\n          >\r\n            <i>?</i>\r\n          </span>\r\n        </ng-container>\r\n      </h2>\r\n\r\n      <p *ngIf=\"mode === 'add' && this.searchForm.get('type').value\">\r\n        Please search the Item from Catalogue (If not found Create a New Position)\r\n      </p>\r\n    </div>\r\n\r\n    <div\r\n      class=\"ml-auto\"\r\n      *ngIf=\"mode === 'add' && this.searchForm.get('type').value\"\r\n    >\r\n      <button\r\n        pButton\r\n        label=\"Or create New Position\"\r\n        icon=\"pi pi-plus\"\r\n        type=\"button\"\r\n        (click)=\"onChangeMode('create')\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <div class=\"form\" [class.hide]=\"!searchForm.get('type').value\">\r\n      <form [formGroup]=\"searchForm\">\r\n        <div\r\n          class=\"form-box\"\r\n          [class.form-box_2]=\"this.searchForm.get('type').value !== nomenclatureType.PURCHASED\"\r\n          [class.form-box_3]=\"this.searchForm.get('type').value === nomenclatureType.PURCHASED\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"code\">Code</label>\r\n            <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"this.searchForm.get('type').value === nomenclatureType.PURCHASED\">\r\n            <label>Categories</label>\r\n            <pek-product-category-picker (choiceCategory)=\"choiceCategory($event)\"></pek-product-category-picker>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <ng-container *ngIf=\"searchForm.get('type').value; else selectionType\">\r\n      <div class=\"table-pagination-preloader\">\r\n        <p-table\r\n          #dt\r\n          (onRowExpand)=\"resetSendForm()\"\r\n          [value]=\"nomenclatures\"\r\n          [(selection)]=\"selectedNomenclature\"\r\n          [rows]=\"10\"\r\n          dataKey=\"id\"\r\n          selectionMode=\"single\"\r\n          rowExpandMode=\"single\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\r\n              <th style=\"width: 25%\">Code</th>\r\n              <th style=\"width: 25%\">Name</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">UOM</th>\r\n              <th style=\"width: 33%\">Description</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"product\" [pRowToggler]=\"product\">\r\n              <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\r\n              <td style=\"width: 25%\">{{product.code}}</td>\r\n              <td style=\"width: 25%\">\r\n                <ng-container\r\n                  *ngIf=\"product.approved === nomenclatureApproval.NEW && product.type === nomenclatureType.PURCHASED\">\r\n                  <span class=\"badge badge_warning \">NEW</span>\r\n                </ng-container>\r\n                {{product.name}}\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                {{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs' }}\r\n              </td>\r\n              <td style=\"width: 33%\" class=\"word-break\" [pRowToggler]=\"product\">\r\n                <a\r\n                  *ngIf=\"adapterService.isValidHttpUrl(product.description); else productDescription\"\r\n                  (click)=\"onOpenLink(product.description)\"\r\n                  target=\"_blank\"\r\n                >\r\n                  {{product.description}}\r\n                </a>\r\n\r\n                <ng-template #productDescription>\r\n                  {{product.description}}\r\n                </ng-template>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"rowexpansion\">\r\n            <tr class=\"disabled\">\r\n              <td colspan=\"5\">\r\n                <form [formGroup]=\"sendForm\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"quantity\">Quantity (Quantity can't be less than one)</label>\r\n                    <input id=\"quantity\" min=\"1\" class=\"form-control\" type=\"number\" pInputText\r\n                           formControlName=\"quantity\">\r\n                  </div>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-3\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n\r\n        <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\r\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"mode === 'create'\">\r\n    <pek-create-edit-form\r\n      [product]=\"newProduct\"\r\n      (formChange)=\"onChangeFormValue($event)\"\r\n      (uploadImage)=\"onUploadImage($event)\"\r\n      (removeImage)=\"onRemoveImage($event)\"\r\n      type=\"create\"\r\n    ></pek-create-edit-form>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <p-paginator\r\n      #paginator\r\n      [class.hide]=\"countNomenclatures === 0\"\r\n      [rows]=\"10\"\r\n      [totalRecords]=\"countNomenclatures\"\r\n      (onPageChange)=\"paginate($event)\"\r\n    >\r\n    </p-paginator>\r\n    <button\r\n      *ngIf=\"searchForm.get('type').value\"\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Add\"\r\n      class=\"p-button-success\"\r\n      [disabled]=\"!selectedNomenclature || sendForm.invalid\"\r\n      [loading]=\"isSaving\"\r\n      (click)=\"onAddProduct()\"\r\n    ></button>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"mode === 'create'\">\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Create\"\r\n      class=\"p-button-success\"\r\n      [disabled]=\"isCreateFormInvalid\"\r\n      [loading]=\"isSaving\"\r\n      (click)=\"onCreateProduct()\"\r\n    ></button>\r\n  </ng-container>\r\n\r\n</mat-dialog-actions>\r\n\r\n<ng-template #selectionType>\r\n  <div class=\"add-product\">\r\n    <h3>Please select the type of new position</h3>\r\n\r\n    <div class=\"add-product__buttons\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Purchased\"\r\n        (click)=\"choiceType(nomenclatureType.PURCHASED)\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Assembly\"\r\n        (click)=\"choiceType(nomenclatureType.ASSEMBLY)\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Manufactured\"\r\n        (click)=\"choiceType(nomenclatureType.MANUFACTURED)\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {Category} from '../../models/category';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-add-technical-equipment',\r\n  templateUrl: './add-technical-equipment.component.html',\r\n  styleUrls: ['./add-technical-equipment.component.scss']\r\n})\r\nexport class AddTechnicalEquipmentComponent implements OnInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  selectedNomenclature: Nomenclature;\r\n  nomenclatures: Nomenclature[] = [];\r\n  countNomenclatures: number = 0;\r\n\r\n  tableScrollHeight = '29.75rem';\r\n\r\n  isShowAll = false;\r\n  isLoading = false;\r\n  isStartOnePage = false;\r\n\r\n  form = this.fb.group({\r\n    code: [''],\r\n    name: [''],\r\n    category: [null],\r\n    root_categories: [null],\r\n    page: [1],\r\n  });\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'page', value: this.form.get('page').value},\r\n    {name: 'paginated', value: true}\r\n  ];\r\n\r\n  sendForm: FormGroup = this.fb.group({\r\n    quantity: [1, [Validators.min(1), Validators.required]],\r\n  });\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private nomenclatureService: NomenclatureService,\r\n    private readonly dialogRef: MatDialogRef<AddTechnicalEquipmentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { nomenclatureId: number }\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form.valueChanges.pipe(takeUntil(this.destroy$), debounceTime(50)).subscribe(res => {\r\n      this.searchNomenclature();\r\n    });\r\n  }\r\n\r\n  onSelected() {\r\n    const technicalEquipment = {\r\n      id: this.selectedNomenclature.id,\r\n      code: this.selectedNomenclature.code,\r\n      name: this.selectedNomenclature.name,\r\n    }\r\n    const send: any = {\r\n      id: null,\r\n      used_by_nomenclature: technicalEquipment,\r\n      quantity: this.sendForm.get('quantity').value,\r\n    };\r\n    this.dialogRef.close(send);\r\n  }\r\n\r\n  searchNomenclature() {\r\n    this.query = [];\r\n    if (!this.isShowAll) {\r\n      this.query = [\r\n        {name: 'paginated', value: 'true'},\r\n        {name: 'page', value: this.form.get('page').value},\r\n      ];\r\n    }\r\n\r\n    if (this.form.get('code').value) this.query.push({name: 'code', value: this.form.get('code').value});\r\n    if (this.form.get('name').value) this.query.push({name: 'name', value: this.form.get('name').value});\r\n    if (this.form.get('category').value) this.query.push({name: 'category', value: this.form.get('category').value});\r\n    if (this.form.get('root_categories').value) this.query.push({name: 'root_categories', value: this.form.get('root_categories').value});\r\n\r\n    if (!this.isShowAll) {\r\n      this.getNomenclaturesForPagination();\r\n    } else {\r\n      this.form.get('page').patchValue(1);\r\n      this.getNomenclatures();\r\n    }\r\n  }\r\n\r\n  getNomenclaturesForPagination() {\r\n    this.nomenclatureService.getForPagination(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      response.results.forEach((product: any, idx) => {\r\n\r\n      this.nomenclatures = response.results;\r\n      this.countNomenclatures = response.count;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n\r\n      this.isLoading = false;\r\n    });\r\n  });\r\n  }\r\n\r\n  getNomenclatures() {\r\n    this.nomenclatureService.get(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n\r\n      this.nomenclatures = response;\r\n      this.countNomenclatures = response.length;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onSelectNomenclatureStructureCategory(ids: number[]) {\r\n    if (ids) {\r\n      this.form.get('root_categories').patchValue(ids.join(','));\r\n    } else {\r\n      this.form.get('root_categories').patchValue('');\r\n    }\r\n  }\r\n\r\n  onSelectCategory(category: Category) {\r\n    if (category) {\r\n      this.form.get('category').patchValue(category.id);\r\n    } else {\r\n      this.form.get('category').patchValue(null);\r\n    }\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (!this.isStartOnePage) {\r\n      this.form.get('page').patchValue(evt.page + 1);\r\n      this.searchNomenclature();\r\n    }\r\n  }\r\n\r\n  onShowAll() {\r\n    this.isShowAll = true;\r\n    this.setTableScrollHeight();\r\n    this.searchNomenclature();\r\n  }\r\n\r\n  onShowPartial() {\r\n    this.isShowAll = false;\r\n    this.setTableScrollHeight();\r\n    this.searchNomenclature();\r\n  }\r\n\r\n  setTableScrollHeight() {\r\n    if (this.isShowAll) {\r\n      this.tableScrollHeight = '27.5rem';\r\n      return;\r\n    }\r\n\r\n    if (!this.isShowAll) {\r\n      this.tableScrollHeight = '29.75rem';\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  changedSelection() {\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Pick Nomenclature\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form class=\"d-flex\" [formGroup]=\"form\">\r\n    <div class=\"side-categories form-group\">\r\n      <pek-categories-tree-picker [isModal]=\"true\" (categorySelected)=\"onSelectCategory($event)\"></pek-categories-tree-picker>\r\n    </div>\r\n    <div class=\"right-side\">\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>Code</label>\r\n            <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <div class=\"form-group\">\r\n            <label>Product Structure Category</label>\r\n            <pek-product-structure-category-picker\r\n              [isAllIds]=\"true\"\r\n              (choiceCategoryFolAllIds)=\"onSelectNomenclatureStructureCategory($event)\"\r\n            ></pek-product-structure-category-picker>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"table-pagination-preloader\">\r\n          <p-table\r\n            #dt\r\n            selectionMode=\"single\"\r\n            rowExpandMode=\"single\"\r\n            dataKey=\"id\"\r\n            [scrollable]=\"true\"\r\n            [rows]=\"10\"\r\n            [(selection)]=\"selectedNomenclature\"\r\n            [value]=\"nomenclatures\"\r\n            (selectionChange)=\"changedSelection()\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n                <th style=\"width: 23.75%\">Code</th>\r\n                <th style=\"width: 23.75%\">Name</th>\r\n                <th class=\"text-center\" style=\"width: 23.75%\">UOM</th>\r\n                <th class=\"text-center\" style=\"width: 23.75%\">Category</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"nomenclature\" [pRowToggler]=\"nomenclature\">\r\n                <td style=\"width: 5%\" class=\"text-center\">\r\n                  {{(this.form.get('page').value - 1) * 10 + i + 1}}\r\n                </td>\r\n                <td style=\"width: 23.75%\">\r\n                  {{nomenclature.code}}\r\n                </td>\r\n                <td style=\"width: 23.75%\">\r\n                  <b *ngIf=\"nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n                  {{nomenclature.name}}\r\n                </td>\r\n                <td style=\"width: 23.75%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"nomenclature.category || nomenclature.root_category\">\r\n                    <ng-container *ngIf=\"nomenclature.category\">\r\n                      {{nomenclature.category?.unit_of_measure?.symbol ? nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"nomenclature.root_category\">\r\n                      {{nomenclature.root_category?.unit_of_measure?.symbol ? nomenclature.root_category?.unit_of_measure?.symbol : 'Pcs' }}\r\n                    </ng-container>\r\n                  </ng-container>\r\n\r\n                  <span *ngIf=\"!nomenclature.category && !nomenclature.root_category\">\r\n                    Pcs\r\n                  </span>\r\n                </td>\r\n                <td style=\"width: 23.75%\" class=\"text-center\">\r\n                  {{nomenclature.category?.name}}\r\n                  {{nomenclature.root_category?.name}}\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"rowexpansion\">\r\n              <tr class=\"disabled\">\r\n                <td colspan=\"5\">\r\n                  <form [formGroup]=\"sendForm\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"quantity\">Quantity (Quantity can't be less than one)</label>\r\n                      <input id=\"quantity\" min=\"1\" class=\"form-control\" type=\"number\" pInputText\r\n                             formControlName=\"quantity\">\r\n                    </div>\r\n                  </form>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                  <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n          <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"paginator-wrapper\"\r\n          *ngIf=\"!isShowAll\"\r\n          [class.paginator-wrapper_hide]=\"nomenclatures.length === 0\"\r\n        >\r\n          <p-paginator\r\n            #paginator\r\n            [rows]=\"10\"\r\n            [totalRecords]=\"countNomenclatures\"\r\n            (onPageChange)=\"paginate($event)\">\r\n          </p-paginator>\r\n          <p-button\r\n            (click)=\"onShowAll()\"\r\n            class=\"paginator-all\"\r\n            type=\"button\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            All\r\n          </p-button>\r\n        </div>\r\n\r\n        <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"onShowPartial()\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Select\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onSelected()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MenuItem, TreeNode} from 'primeng/api';\r\nimport {ProductStructureCompare} from '../../models/product-structure-compare';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {CompareChangedCodeName} from '../../models/compare-changed-code-name';\r\n\r\n@Component({\r\n  selector: 'pek-compare-structure',\r\n  templateUrl: './compare-structure.component.html',\r\n  styleUrls: ['./compare-structure.component.scss']\r\n})\r\nexport class CompareStructureComponent implements OnInit {\r\n  currentProductsTree: TreeNode<ProductStructureCompare>[] = [];\r\n  newProductsTree: TreeNode<ProductStructureCompare>[] = [];\r\n  isLoading: any;\r\n  hasCyclingProduct = false;\r\n  hasChangedName = false;\r\n  changedCodeNamesList: CompareChangedCodeName[] = [];\r\n\r\n  newSelectedItem: TreeNode<ProductStructureCompare>;\r\n  newMenuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Product',\r\n      items: [\r\n        {\r\n          label: 'Set New Name',\r\n          icon: 'pi pi-refresh',\r\n          command: () => this.onAcceptNewName(this.newSelectedItem.data),\r\n        },\r\n        {\r\n          label: 'Set Current Name',\r\n          icon: 'pi pi-replay',\r\n          command: () => this.onAcceptCurrentName(this.newSelectedItem.data),\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  currentSelectedItem: TreeNode<ProductStructureCompare>;\r\n  currentMenuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Product',\r\n      items: [\r\n        {\r\n          label: 'Accept New Name',\r\n          icon: 'pi pi-refresh',\r\n          command: () => this.onAcceptNewName(this.currentSelectedItem.data),\r\n        },\r\n        {\r\n          label: 'Accept Current Name',\r\n          icon: 'pi pi-replay',\r\n          command: () => this.onAcceptCurrentName(this.currentSelectedItem.data),\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CompareStructureComponent>,\r\n    public auth: AuthService,\r\n    @Inject(MAT_DIALOG_DATA) public data: {\r\n      newResult: TreeNode<ProductStructureCompare>[],\r\n      oldResult: TreeNode<ProductStructureCompare>[],\r\n      hasCyclingProduct: boolean,\r\n      hasChangedName: boolean,\r\n      changedNamesList: CompareChangedCodeName[],\r\n    },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.newProductsTree = this.data.newResult;\r\n    this.currentProductsTree = this.data.oldResult;\r\n    this.hasCyclingProduct = this.data.hasCyclingProduct;\r\n    this.hasChangedName = this.data.hasChangedName;\r\n    this.changedCodeNamesList = this.data.changedNamesList;\r\n  }\r\n\r\n\r\n\r\n  onCancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onContinueUpdate() {\r\n    this.dialogRef.close(this.changedCodeNamesList.map(name => {\r\n      return {code: name.code, selected_name: name.selectedName};\r\n    }));\r\n  }\r\n\r\n  expandAllNew() {\r\n    const temp = cloneDeep(this.newProductsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, true);\r\n    });\r\n    this.newProductsTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  collapseAllNew() {\r\n    const temp = cloneDeep(this.newProductsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, false);\r\n    });\r\n    this.newProductsTree = temp;\r\n  }\r\n\r\n  expandAllCurrent() {\r\n    const temp = cloneDeep(this.currentProductsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, true);\r\n    });\r\n    this.currentProductsTree = temp;\r\n  }\r\n\r\n  collapseAllCurrent() {\r\n    const temp = cloneDeep(this.currentProductsTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, false);\r\n    });\r\n    this.currentProductsTree = temp;\r\n  }\r\n\r\n  hasNameChanged(rowData: any) {\r\n    return this.changedCodeNamesList.findIndex(name => name.code === rowData.code && !name.selectedName) > -1;\r\n  }\r\n\r\n  hasNameChangeDepend() {\r\n    return this.changedCodeNamesList.some(name => !name.selectedName);\r\n  }\r\n\r\n  private onAcceptNewName(data) {\r\n    const nameInList = this.changedCodeNamesList.find(name => name.code === data.code);\r\n\r\n    nameInList.selectedName = nameInList.newName;\r\n    this.updateNamesInNodes(nameInList);\r\n  }\r\n\r\n  private onAcceptCurrentName(data) {\r\n    const nameInList = this.changedCodeNamesList.find(name => name.code === data.code);\r\n\r\n    nameInList.selectedName = nameInList.currentName;\r\n    this.updateNamesInNodes(nameInList);\r\n  }\r\n\r\n  updateNamesInNodes(nameInList) {\r\n    this.newProductsTree.forEach(node => {\r\n      node.children.forEach(child => {\r\n        this.changedNames(child, nameInList.code, nameInList.selectedName);\r\n      });\r\n    });\r\n    this.currentProductsTree.forEach(node => {\r\n      node.children.forEach(child => {\r\n        this.changedNames(child, nameInList.code, nameInList.selectedName);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  changedNames(node: TreeNode<ProductStructureCompare>, code: string, newName: string) {\r\n    if (node.data.code === code) {\r\n      node.data.name = newName;\r\n    }\r\n    node.children.forEach(child => {\r\n      this.changedNames(child, code, newName);\r\n    });\r\n  }\r\n\r\n  hasNoMultipleNames(data) {\r\n    return this.changedCodeNamesList.findIndex(name => name.code === data.code && !name.selectedName) < 0;\r\n  }\r\n\r\n  acceptNewForAll() {\r\n    this.changedCodeNamesList.forEach(change => {\r\n      change.selectedName = change.newName;\r\n      this.updateNamesInNodes(change);\r\n    });\r\n  }\r\n\r\n  acceptCurrentForAll() {\r\n    this.changedCodeNamesList.forEach(change => {\r\n      change.selectedName = change.currentName;\r\n      this.updateNamesInNodes(change);\r\n    });\r\n  }\r\n\r\n  getPossibleName(code: string, isNewStructure: boolean = false) {\r\n    const name = this.changedCodeNamesList.find(name => name.code === code && !name.selectedName);\r\n    if (name) {\r\n      return isNewStructure ? name.currentName : name.newName;\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  codeHasMoreThanOne(data) {\r\n    return this.changedCodeNamesList.filter(change => change.code === data.code).length > 1;\r\n  }\r\n\r\n  moreThanOne() {\r\n    return this.changedCodeNamesList.map(change => change.code).findIndex(el => {\r\n      return this.changedCodeNamesList.filter(change => change.code === el).length > 1;\r\n    }) > -1;\r\n  }\r\n}\r\n","<div class=\"d-flex align-items-center mb-2\">\r\n  <div class=\"d-flex align-items-center \">\r\n    <span class=\"color-box name-changed\"></span>\r\n    <div>\r\n      Name Changed\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-center ml-3\">\r\n    <span class=\"color-box is-deleted\"></span>\r\n    <div>\r\n      Is Deleted\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-center ml-3\">\r\n    <span class=\"color-box quantity-changed\"></span>\r\n    <div>\r\n      Quantity Changed\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-center ml-3\">\r\n    <span class=\"color-box is-cycled\"></span>\r\n    <div>\r\n      Is Looped\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-center ml-3\">\r\n    <span class=\"color-box is-new\"></span>\r\n    <div>\r\n      Is New\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"compare\">\r\n  <div class=\" page__table mr-2\">\r\n    <div class=\"page__title\">\r\n      <h1 style=\"width: 100%\" class=\"d-flex align-items-center justify-content-between mb-2\">\r\n        <div>\r\n          Current Structure\r\n        </div>\r\n        <div class=\"d-flex align-item-center\">\r\n          <p-menubar\r\n            class=\"product-structure-bar ml-auto mr-2\"\r\n            [model]=\"currentMenuItems\"\r\n            [class.disabled]=\"!currentSelectedItem || currentSelectedItem && (hasNoMultipleNames(currentSelectedItem.data) || codeHasMoreThanOne(currentSelectedItem.data))\"\r\n          ></p-menubar>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            icon=\"pi pi-angle-down\"\r\n            class=\"mr-2\"\r\n            (click)=\"expandAllCurrent()\"\r\n          ></button>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            icon=\"pi pi-angle-up\"\r\n            (click)=\"collapseAllCurrent()\"\r\n          ></button>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n    <p-treeTable\r\n      #dt\r\n      [value]=\"currentProductsTree\"\r\n      [(selection)]=\"currentSelectedItem\"\r\n      selectionMode=\"single\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"calc(100vh - 19.2rem)\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 30%; padding-left: 40px\">Code</th>\r\n          <th style=\"width: 20%\">Name</th>\r\n          <th style=\"width: 7%\" class=\"text-center\">Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\"\r\n            [class.is-new]=\"rowData?.isNew\"\r\n            [class.quantity-changed]=\"rowData?.hasQuantityChanged && !rowData?.hasNameChanged && !rowData?.isDeleted\"\r\n            [class.name-changed]=\"hasNameChanged(rowData) && !rowData?.hasQuantityChanged && !rowData?.isDeleted\"\r\n            [class.is-deleted]=\"rowData?.isDeleted && !rowData?.hasQuantityChanged && !rowData?.hasNameChanged\">\r\n          <td\r\n            style=\"width: 30%\"\r\n            [ngStyle]=\"{'padding-left': rowNode.level * 0.5 + 'rem'}\"\r\n          >\r\n            <div class=\"table-toggle\">\r\n              <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n              <span>\r\n                    {{rowData?.code}}\r\n                </span>\r\n            </div>\r\n          </td>\r\n          <td style=\"width: 20%\" class=\"name\">\r\n            {{rowData?.name}}\r\n            <span *ngIf=\"rowData ? codeHasMoreThanOne(rowData) : false\">\r\n              <p class=\"badge_warning\">Has Multiple Names In Import</p>\r\n            </span>\r\n            <span *ngIf=\"getPossibleName(rowData?.code) &&\r\n             getPossibleName(rowData?.code) !== rowData?.name && !codeHasMoreThanOne(rowData)\">\r\n              <b>\r\n                <br>\r\n                New Name:\r\n                <br>\r\n                {{getPossibleName(rowData?.code)}}\r\n              </b>\r\n            </span>\r\n          </td>\r\n          <td\r\n            style=\"width: 7%\"\r\n            class=\"text-center\"\r\n          >\r\n            {{rowData ? rowData?.quantity : rowData | json}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-treeTable>\r\n  </div>\r\n\r\n  <div class=\"page__table\">\r\n    <div class=\"page__title ml-2\">\r\n      <h1 style=\"width: 100%\" class=\"d-flex align-items-center justify-content-between mb-2\">\r\n        <div>\r\n          New Structure\r\n        </div>\r\n        <div class=\"d-flex align-item-center\">\r\n          <p-menubar\r\n            class=\"product-structure-bar ml-auto mr-2\"\r\n            [model]=\"newMenuItems\"\r\n            [class.disabled]=\"!newSelectedItem || newSelectedItem && (hasNoMultipleNames(newSelectedItem.data) || codeHasMoreThanOne(newSelectedItem.data))\"\r\n          ></p-menubar>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            icon=\"pi pi-angle-down\"\r\n            class=\"mr-2\"\r\n            (click)=\"expandAllNew()\"\r\n          ></button>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            icon=\"pi pi-angle-up\"\r\n            (click)=\"collapseAllNew()\"\r\n          ></button>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n    <p-treeTable\r\n      #dt\r\n      [value]=\"newProductsTree\"\r\n      selectionMode=\"single\"\r\n      [scrollable]=\"true\"\r\n      scrollHeight=\"calc(100vh - 19.2rem)\"\r\n      [(selection)]=\"newSelectedItem\"\r\n      cdkDropListGroup\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 30%; padding-left: 40px\">Code</th>\r\n          <th style=\"width: 20%\">Name</th>\r\n          <th style=\"width: 7%\" class=\"text-center\">Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\"\r\n            [class.is-new]=\"rowData?.isNew && !rowData?.hasCycle\"\r\n            [class.quantity-changed]=\"rowData?.hasQuantityChanged && !rowData?.hasNameChanged && !rowData?.isDeleted\"\r\n            [class.name-changed]=\"hasNameChanged(rowData) && !rowData?.hasQuantityChanged && !rowData?.isDeleted\"\r\n            [class.is-cycled]=\"rowData?.hasCycle && !rowData?.hasQuantityChanged && !rowData?.isDeleted\"\r\n            [class.is-deleted]=\"rowData?.isDeleted && !rowData?.hasQuantityChanged && !rowData?.hasNameChanged\">\r\n          <td\r\n            style=\"width: 30%\"\r\n            [ngStyle]=\"{'padding-left': rowNode.level * 0.5 + 'rem'}\"\r\n          >\r\n            <div class=\"table-toggle\">\r\n              <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n              <span>\r\n                    {{rowData?.code}}\r\n                </span>\r\n            </div>\r\n          </td>\r\n          <td class=\"name\" style=\"width: 20%\">\r\n            {{rowData?.name}}\r\n            <span *ngIf=\"rowData ? codeHasMoreThanOne(rowData) : false\">\r\n              <p class=\"badge_warning\">Has Multiple Names In Import</p>\r\n            </span>\r\n            <span *ngIf=\"getPossibleName(rowData?.code, true) &&\r\n             getPossibleName(rowData?.code, true) !== rowData?.name && !codeHasMoreThanOne(rowData)\">\r\n              <b>\r\n                <br>\r\n                Current Name:\r\n                <br>\r\n                {{getPossibleName(rowData?.code, true)}}\r\n              </b>\r\n\r\n            </span>\r\n          </td>\r\n          <td\r\n            style=\"width: 7%\"\r\n            class=\"text-center\"\r\n          >\r\n            {{rowData ? rowData?.quantity : rowData | json}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-treeTable>\r\n  </div>\r\n</div>\r\n<div class=\"d-flex justify-content-between mt-3\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-warning mr-2\"\r\n    label=\"Cancel Changes\"\r\n    (click)=\"onCancel()\"\r\n  ></button>\r\n  <div class=\"d-flex align-items-center\">\r\n    <button\r\n      *ngIf=\"hasNameChangeDepend() && !moreThanOne()\"\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-warning mr-2\"\r\n      label=\"Accept Current Names For All\"\r\n      [disabled]=\"!auth.user.can_accept_changes_on_import || hasCyclingProduct\"\r\n      (click)=\"acceptCurrentForAll()\"\r\n    ></button>\r\n    <button\r\n      *ngIf=\"hasNameChangeDepend() && !moreThanOne()\"\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-danger  mr-2\"\r\n      label=\"Accept New Names For All\"\r\n      [disabled]=\"!auth.user.can_accept_changes_on_import || hasCyclingProduct\"\r\n      (click)=\"acceptNewForAll()\"\r\n    ></button>\r\n    <p style=\"display: inline-block\" class=\"mr-2 text-danger\" *ngIf=\"moreThanOne()\"><b>Some Codes Has More Than One Different Name</b></p>\r\n    <button\r\n      [disabled]=\"!auth.user.can_accept_changes_on_import || hasCyclingProduct || hasNameChangeDepend()\"\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      label=\"Accept Changes\"\r\n      (click)=\"onContinueUpdate()\"\r\n    ></button>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ProductPrefix} from '../../models/prefix';\nimport {PrefixService} from '../../services/prefix.service';\n\n@Component({\n  selector: 'pek-create-edit-prefix',\n  templateUrl: './create-edit-prefix.component.html',\n  styleUrls: ['./create-edit-prefix.component.scss']\n})\nexport class CreateEditPrefixComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    prefix: ['', [Validators.required]],\n    description: [''],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly prefixService: PrefixService,\n    private dialogRef: MatDialogRef<CreateEditPrefixComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, prefix: ProductPrefix }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.prefix.id));\n      this.form.patchValue(this.data.prefix);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createPrefix();\n        break;\n      }\n      case 'edit': {\n        this.editPrefix();\n        break;\n      }\n    }\n  }\n\n  createPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.create(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.update(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Prefix\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"prefix\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\n\n@Component({\n  selector: 'pek-create-edit-product-structure-category',\n  templateUrl: './create-edit-product-structure-category.component.html',\n  styleUrls: ['./create-edit-product-structure-category.component.scss']\n})\nexport class CreateEditProductStructureCategoryComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    description: ['', Validators.required],\n    unit_of_measure: [0],\n    parent: [null],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly productStructureCategoryService: ProductStructureCategoryService,\n    private dialogRef: MatDialogRef<CreateEditProductStructureCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: Partial<ProductStructureCategory> }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      const category = this.data.category;\n      this.form.addControl('id' as any, new FormControl(category.id));\n      this.form.get('name').patchValue(category.name);\n      this.form.get('description').patchValue(category.description);\n      this.form.get('parent').patchValue(category.parent);\n      this.form.get('unit_of_measure').patchValue(this.data.category.unit_of_measure.id);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCategory();\n        break;\n      }\n    }\n  }\n\n  createCategory() {\n    const send = <any>this.form.value;\n    this.productStructureCategoryService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCategory() {\n    const send = <any>this.form.value;\n    this.productStructureCategoryService.updatePartly(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectMeasureUnit(id: number) {\n    this.form.get('unit_of_measure').patchValue(id);\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('parent').patchValue(category.id);\n    } else {\n      this.form.get('parent').patchValue(null);\n    }\n  }\n}\n","<div class=\"create-edit-product-structure-category\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Product Structure\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description*</label>\n        <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\"\n                  formControlName=\"description\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label>Unit of measure*</label>\n        <pek-unit-measure-picker\n          [currentMeasureUnitId]=\"form.get('unit_of_measure').value\"\n          (selectMeasureUnit)=\"onSelectMeasureUnit($event)\"\n        ></pek-unit-measure-picker>\n      </div>\n      <div class=\"form-group\">\n        <label>Parent Category</label>\n        <pek-product-structure-category-picker\n          [ignoredCategoryId]=\"data.category?.id\"\n          [currentCategoryId]=\"form.get('parent').value\"\n          (choiceCategory)=\"onSelectCategory($event)\"\n        ></pek-product-structure-category-picker>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid || !form.get('unit_of_measure').value\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ProductService} from '../../services/product.service';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {finalize} from 'rxjs';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {Nomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-create-edit-root-product',\n  templateUrl: './create-edit-root-product.component.html',\n  styleUrls: ['./create-edit-root-product.component.scss']\n})\nexport class CreateEditRootProductComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    code: ['', Validators.required],\n    description: [''],\n    type: [1],\n    root_category: [null],\n  });\n\n  isCategoryDisabled: boolean = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly productService: ProductService,\n    private dialogRef: MatDialogRef<CreateEditRootProductComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, product: Partial<Product> }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type !== 'create') {\n      const nomenclature: Partial<Nomenclature> = this.data.product.nomenclature;\n      this.form.addControl('id' as any, new FormControl(this.data.product.id));\n      // @ts-ignore\n      this.form.patchValue(nomenclature);\n\n      if (nomenclature.root_category) {\n        this.form.get('root_category').patchValue(nomenclature.root_category.id);\n      }\n    }\n\n    if (this.data.type === 'copy') {\n      this.isCategoryDisabled = true;\n      this.form.get('code').disable();\n      this.form.get('description').disable();\n    }\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('root_category').patchValue(category.id);\n    } else {\n      this.form.get('root_category').patchValue(null);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n    const send: any = this.form.value;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createProduct(send);\n        break;\n      }\n      case 'edit': {\n        this.editProduct(send);\n        break;\n      }\n      case 'copy': {\n        this.copyProduct();\n        break;\n      }\n    }\n  }\n\n  createProduct(send: any) {\n    this.nomenclatureService.create(send).subscribe({\n      next: (nomenclature) => {\n        if (nomenclature) {\n          // @ts-ignore\n          this.productService.addProduct({nomenclature: nomenclature.id}).pipe(\n            finalize(() => this.isSaving = false)\n          ).subscribe(products => this.dialogRef.close(products[0]));\n        }\n      },\n      error: () => this.isSaving = false\n    });\n  }\n\n  editProduct(send: any) {\n    this.nomenclatureService.updatePartly(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(product => this.dialogRef.close(product));\n  }\n\n  copyProduct() {\n    const send = {\n      nomenclature_id: this.form.get('id').value,\n      parent_id: null,\n      name: this.form.get('name').value,\n    };\n\n    this.productService.copyStructure(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(products => this.dialogRef.close(products));\n  }\n}\n","<div class=\"create-edit-root-product\">\n\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Product\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label>Category</label>\n        <pek-product-structure-category-picker\n          [currentCategoryId]=\"form.get('root_category').value\"\n          [isDisabled]=\"isCategoryDisabled\"\n          (choiceCategory)=\"onSelectCategory($event)\"\n        ></pek-product-structure-category-picker>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"code\">Code*</label>\n        <input type=\"text\" id=\"code\" pInputText formControlName=\"code\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\"\n                  formControlName=\"description\"></textarea>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {Technology} from '../../models/technology';\nimport {TechnologyService} from '../../services/technology.service';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Component({\n  selector: 'pek-create-edit-technology',\n  templateUrl: './create-edit-technology.component.html',\n  styleUrls: ['./create-edit-technology.component.scss']\n})\nexport class CreateEditTechnologyComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', Validators.required],\n    service_or_material: [null, Validators.required]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly technologyService: TechnologyService,\n    private dialogRef: MatDialogRef<CreateEditTechnologyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, technology: Technology }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.technology.id));\n      this.form.patchValue(this.data.technology);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createTechnology();\n        break;\n      }\n      case 'edit': {\n        this.editTechnology();\n        break;\n      }\n    }\n  }\n\n  createTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.create(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.update(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Technology\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Namea*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label>Type*</label>\n      <div class=\"column\">\n        <p-radioButton\n          class=\"mr-3\"\n          name=\"service_or_material\"\n          label=\"Service\"\n          value=\"0\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n        <p-radioButton\n          name=\"service_or_material\"\n          label=\"Material\"\n          value=\"1\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Product} from '../../models/product';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {finalize, forkJoin, of} from 'rxjs';\r\nimport {TechnicalEquipmentService} from '../../services/technical-equipment.service';\r\nimport {TechnicalEquipment} from '../../models/technical-equipment';\r\n\r\n@Component({\r\n  selector: 'pek-edit-product',\r\n  templateUrl: './edit-product.component.html',\r\n  styleUrls: ['./edit-product.component.scss']\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n  isSaving: boolean = false;\r\n  isFormInvalid: boolean = true;\r\n\r\n  formValue: Partial<Product & Nomenclature>;\r\n  quantity: number;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly nomenclatureService: NomenclatureService,\r\n    private readonly productService: ProductService,\r\n    private readonly technicalEquipmentService: TechnicalEquipmentService,\r\n    private readonly dialogRef: MatDialogRef<EditProductComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public product: Product,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.product.nomenclature.type !== ENomenclatureType.PURCHASED) {\r\n      this.dialogRef.updateSize('60rem', 'auto');\r\n    }\r\n  }\r\n\r\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\r\n    this.formValue = data.formValue;\r\n    this.isFormInvalid = data.invalid;\r\n  }\r\n\r\n  onUploadImage(files: File[]) {\r\n    files.forEach(newFile => {\r\n      const send = {\r\n        nomenclature: this.product.nomenclature.id,\r\n        image: newFile,\r\n      };\r\n\r\n      this.nomenclatureService.uploadImage(send).subscribe(image => {\r\n        this.product.nomenclature.images.push(image);\r\n      });\r\n    });\r\n  }\r\n\r\n  onRemoveImage(index: number) {\r\n    this.nomenclatureService.removeImage(this.product.nomenclature.images[index].id).subscribe(() => {\r\n      this.product.nomenclature.images.splice(index, 1);\r\n    });\r\n  }\r\n\r\n  onUpdateProduct() {\r\n    if (!this.isFormInvalid) {\r\n      this.isSaving = true;\r\n\r\n      const send: Partial<Nomenclature> = {\r\n        id: this.product.nomenclature.id,\r\n        name: this.formValue.name,\r\n        code: this.formValue.code,\r\n        description: this.formValue.description,\r\n        type: this.formValue.type,\r\n      };\r\n\r\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\r\n        send.category = this.formValue.category;\r\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\r\n        delete send.code;\r\n      } else {\r\n        send.technologies = [...this.formValue.technologies];\r\n        send.category = null;\r\n      }\r\n\r\n      const sendUpdateQuantity: Partial<Product> = {\r\n        id: this.product.id,\r\n        quantity: this.formValue.quantity,\r\n      };\r\n\r\n      const technicalEquipments = this.formValue.technical_equipments;\r\n      const createUpdateTechnicalEquipments = {\r\n        updated_created_technical_equipment: technicalEquipments.map(equipment => {\r\n          return {\r\n            id: equipment.id,\r\n            used_by_nomenclature: equipment.used_by_nomenclature.id,\r\n            quantity: equipment.quantity\r\n          };\r\n        }),\r\n        deleted_technical_equipment_ids: this.formValue.deleted_technical_equipments_ids,\r\n      };\r\n\r\n      if (this.product.parent && this.product.nomenclature.type !== ENomenclatureType.ASSEMBLY) {\r\n        forkJoin({\r\n          nomenclature: this.nomenclatureService.update(send),\r\n          product: this.productService.updatePartly(sendUpdateQuantity),\r\n          technicalEquipment: this.product.nomenclature.type !== ENomenclatureType.PURCHASED ?\r\n            this.nomenclatureService.bulkCreateUpdateTechnicalEquipments(this.product.nomenclature.id, createUpdateTechnicalEquipments) :\r\n            of(true),\r\n        }).pipe(\r\n          finalize(() => this.isSaving = false)\r\n        ).subscribe(({nomenclature, product, technicalEquipment}) => {\r\n          this.dialogRef.close({nomenclature, product});\r\n        });\r\n      } else {\r\n        forkJoin({\r\n          nomenclature: this.nomenclatureService.update(send),\r\n          technicalEquipment: this.product.nomenclature.type !== ENomenclatureType.PURCHASED ?\r\n            this.nomenclatureService.bulkCreateUpdateTechnicalEquipments(this.product.nomenclature.id, createUpdateTechnicalEquipments) :\r\n            of(true),\r\n        }).pipe(\r\n          finalize(() => this.isSaving = false)\r\n        ).subscribe(({nomenclature, technicalEquipment}) => {\r\n          this.dialogRef.close({nomenclature, product: null});\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Edit Product\r\n    {{product.nomenclature.id}}\r\n    <span\r\n      class=\"hint\"\r\n      pTooltip=\"To paste the image, copy it and press «Ctrl + V»\"\r\n      tooltipPosition=\"top\"\r\n    >\r\n      <i>?</i>\r\n    </span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <pek-create-edit-form\r\n    [product]=\"product\"\r\n    (formChange)=\"onChangeFormValue($event)\"\r\n    (uploadImage)=\"onUploadImage($event)\"\r\n    (removeImage)=\"onRemoveImage($event)\"\r\n  ></pek-create-edit-form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Edit\"\r\n    class=\"p-button-success\"\r\n    [disabled]=\"isFormInvalid\"\r\n    [loading]=\"isSaving\"\r\n    (click)=\"onUpdateProduct()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ProductService} from '../../services/product.service';\nimport {Nomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-make-production-list',\n  templateUrl: './make-production-list.component.html',\n  styleUrls: ['./make-production-list.component.scss']\n})\nexport class MakeProductionListComponent implements OnInit {\n  isSaving: boolean = false;\n\n  form: FormGroup = this.fb.group({\n    nomenclature: [null],\n    quantity: [1, [Validators.required, Validators.min(1)]],\n    is_grouped: [false],\n    root_nomenclature: [null]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeProductionListComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public data: { nomenclature: Nomenclature, rootId: number }\n  ) { }\n\n  ngOnInit(): void {\n    this.form.get('is_grouped').disable();\n    this.form.get('nomenclature').patchValue(this.data.nomenclature.id);\n    this.form.get('root_nomenclature').patchValue(this.data.rootId);\n  }\n\n  onChangeQuantity() {\n    if (this.form.get('quantity').value < 1) {\n      this.form.get('quantity').patchValue(1);\n    } else {\n      if (this.form.get('quantity').value <= 1) {\n        this.form.get('is_grouped').disable();\n        this.form.get('is_grouped').patchValue(false);\n      } else {\n        this.form.get('is_grouped').enable();\n      }\n    }\n  }\n\n  onMakeProductionList(): void {\n    this.isSaving = true;\n    const send = {...this.form.value};\n    this.productService.makeProductionList(send).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Production List from &laquo;{{data.nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Number Of Sets</label>\n      <input type=\"number\" pInputText class=\"form-control\" formControlName=\"quantity\" (ngModelChange)=\"onChangeQuantity()\">\n    </div>\n    <div class=\"form-group\">\n      <p-checkbox label=\"Group Production Plan\" [binary]=\"true\" formControlName=\"is_grouped\"></p-checkbox>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeProductionList()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../../services/product.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\n\n@Component({\n  selector: 'pek-make-root-product',\n  templateUrl: './make-root-product.component.html',\n  styleUrls: ['./make-root-product.component.scss']\n})\nexport class MakeRootProductComponent implements OnInit {\n  isSaving: boolean = false;\n  form: FormGroup = this.fb.group({\n    category: [null, Validators.required]\n  })\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeRootProductComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public product: Product\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('category').patchValue(category.id);\n    } else {\n      this.form.get('category').patchValue(null);\n    }\n  }\n\n  onMakeRoot() {\n    this.isSaving = true;\n    this.productService.makeRoot(this.product.id, this.form.value).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    })\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Root &laquo;{{product.nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div class=\"form-group\">\n    <label>Category</label>\n    <pek-product-structure-category-picker\n      [currentCategoryId]=\"form.get('category').value\"\n      (choiceCategory)=\"onSelectCategory($event)\"\n    ></pek-product-structure-category-picker>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeRoot()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ProductFile} from '../../models/product';\r\nimport {finalize} from 'rxjs';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Route, Router} from '@angular/router';\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-product-files',\r\n  templateUrl: './product-files.component.html',\r\n  styleUrls: ['./product-files.component.scss']\r\n})\r\nexport class ProductFilesComponent implements OnInit {\r\n  link = environment.image_path;\r\n  readonly deletion = new Set<number>();\r\n  readonly addition = new Set<number>();\r\n\r\n  uploadFiles: File[] = [];\r\n  files: ProductFile[] = [];\r\n  isLoading = true;\r\n  isPending = false;\r\n\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<ProductFilesComponent>,\r\n    private readonly productService: ProductService,\r\n    private readonly modalService: ModalService,\r\n    private readonly adapterService: AdapterService,\r\n    private router: Router,\r\n    @Inject(MAT_DIALOG_DATA) public productId: number,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFiles();\r\n   }\r\n\r\n  getFiles() {\r\n    this.productService.getProductFiles(this.productId).subscribe(files => {\r\n      this.files = files;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getFileName(file: string) {\r\n    let name = file.split('/');\r\n    return name[name.length - 1];\r\n  }\r\n\r\n  onUploadFiles(file: File = null) {\r\n    this.isPending = true;\r\n    const sendFiles = file ? [file] : this.uploadFiles;\r\n    this.productService.severalUploadFiles(this.productId, sendFiles)\r\n      .pipe(\r\n        finalize(() => this.isPending = false)\r\n      )\r\n      .subscribe(files => this.dialogRef.close(files));\r\n  }\r\n\r\n  onRemoveFile(id: number) {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.deletion.add(id);\r\n\r\n        this.productService.removeProductFile(id).subscribe(() => {\r\n          const index = this.files.findIndex(f => f.id === id);\r\n          this.files.splice(index, 1);\r\n          this.deletion.clear();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openFileInBrowser(file: ProductFile) {\r\n    window.open(this.link + file.file, '_blank');\r\n  }\r\n\r\n  onDownloadFile(file: ProductFile) {\r\n    this.addition.add(file.id);\r\n    this.productService.downloadProductFile(file.id).subscribe(response => {\r\n      const filename = this.getFileName(file.file);\r\n      this.adapterService.downloadFile(filename, response);\r\n      this.addition.clear();\r\n    });\r\n  }\r\n\r\n  onSelectFiles(files: File[]) {\r\n    this.uploadFiles = files;\r\n  }\r\n\r\n  imageAdded(file: File) {\r\n    this.onUploadFiles(file)\r\n  }\r\n}\r\n","<div class=\"modal-header\" >\r\n  <h2 class=\"modal-header__title\">\r\n    Product Files\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content pekPasteScreenImage (imageAdded)=\"imageAdded($event)\">\r\n  <pek-upload-file\r\n    [multiple]=\"true\"\r\n    (selectFile)=\"onSelectFiles($event)\"\r\n  ></pek-upload-file>\r\n\r\n  <div class=\"product-files\">\r\n    <h3 class=\"product-files__caption\">Uploaded Files</h3>\r\n    <p-table\r\n      selectionMode=\"single\"\r\n      [value]=\"files\"\r\n    >\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n          <th style=\"width: 75%\">File Name</th>\r\n          <th style=\"width: 20%\">Actions</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\r\n        <tr>\r\n          <td class=\"text-center\" style=\"width: 5%\">#</td>\r\n          <td style=\"width: 75%\" class=\"word-break\">\r\n            <a [href]=\"link + file.file\">\r\n              {{getFileName(file.file)}}\r\n            </a>\r\n          </td>\r\n          <td style=\"width: 20%\">\r\n            <div class=\"d-flex\">\r\n              <button\r\n                pButton\r\n                (click)=\"onDownloadFile(file)\"\r\n                [loading]=\"addition.has(file.id)\"\r\n                type=\"button\"\r\n                class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\r\n                icon=\"pi pi-download\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                (click)=\"onRemoveFile(file.id)\"\r\n                [loading]=\"deletion.has(file.id)\"\r\n                type=\"button\"\r\n                class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\r\n                icon=\"pi pi-trash\"\r\n              ></button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td class=\"text-center p-2\" [attr.colspan]=\"3\">\r\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            <span *ngIf=\"!isLoading\">No Records Found</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    class=\"p-button-success\"\r\n    label=\"Upload\"\r\n    [loading]=\"isPending\"\r\n    [disabled]=\"uploadFiles.length === 0\"\r\n    (click)=\"onUploadFiles()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {ProductStructureCompare} from '../../models/product-structure-compare';\r\nimport {AncestorProductStructureCompare} from '../../models/product-structure-compare-result';\r\nimport {CompareChangedCodeName} from '../../models/compare-changed-code-name';\r\n\r\n@Component({\r\n  selector: 'pek-upload-product-structure',\r\n  templateUrl: './upload-product-structure.component.html',\r\n  styleUrls: ['./upload-product-structure.component.scss']\r\n})\r\nexport class UploadProductStructureComponent implements OnInit, OnDestroy {\r\n  fileToUpload: File;\r\n  isLoading = false;\r\n  showErrorUpload = false;\r\n\r\n  files: string[] = [];\r\n  error: string;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  currentProductsTree: TreeNode<ProductStructureCompare>[] = [];\r\n  newProductsTree: TreeNode<ProductStructureCompare>[] = [];\r\n  hasCyclingProduct = false;\r\n  hasChangedName = false;\r\n  hasChanges = false;\r\n  newStructure: ProductStructureCompare;\r\n  currentStructure: ProductStructureCompare;\r\n  ancestorsProducts: AncestorProductStructureCompare[];\r\n  changedNames: { code: string, selected_name: string }[];\r\n  changedCodeNamesList: CompareChangedCodeName[] = [];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UploadProductStructureComponent>,\r\n    private productService: ProductService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { productId: number, rootProductId: number },\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel() {\r\n    this.showErrorUpload = false;\r\n    this.isLoading = false;\r\n    this.fileToUpload = null;\r\n    this.error = '';\r\n  }\r\n\r\n  previewStructure() {\r\n    const dataFprStructurePreview = {\r\n      file_xls: this.fileToUpload,\r\n      root_product_id: this.data.productId\r\n    };\r\n\r\n    this.productService.compare_structure(dataFprStructurePreview)\r\n      .pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe({\r\n      next: res => {\r\n        this.newStructure = res.data.new_structure;\r\n        this.currentStructure = res.data.current_structure;\r\n        this.ancestorsProducts = res.data.ancestors_products;\r\n\r\n        this.checkForDifferences();\r\n        this.newProductsTree.forEach(node => {\r\n          node.children.forEach(child => {\r\n            this.collectChangedNames(child);\r\n          });\r\n        });\r\n        if (this.hasCyclingProduct || this.changedCodeNamesList.length > 0 || this.hasChanges) {\r\n          this.productService.openCompareStructureDialog(this.newProductsTree, this.currentProductsTree, this.hasCyclingProduct, this.hasChangedName, this.changedCodeNamesList).subscribe(res => {\r\n            if (res) {\r\n              this.changedNames = res as { code: string, selected_name: string }[];\r\n              this.onUpload();\r\n            } else {\r\n              this.dialogRef.close(false);\r\n            }\r\n          });\r\n        } else {\r\n          this.onUpload();\r\n        }\r\n      },\r\n      error: err => {\r\n        if (err) {\r\n          this.isLoading = false;\r\n          this.error = err.error.data;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  collectChangedNames(node: TreeNode<ProductStructureCompare>) {\r\n    if (node.data.current_name && node.data.current_name.trim() !== node.data.name.trim()) {\r\n      const isNotExists = this.changedCodeNamesList.findIndex(change => change.code === node.data.code && change.newName === node.data.name.trim()) < 0;\r\n      if (isNotExists) {\r\n        this.changedCodeNamesList.push({\r\n          currentName: node.data.current_name.trim(),\r\n          newName: node.data.name.trim(),\r\n          selectedName: '',\r\n          code: node.data.code\r\n        });\r\n      }\r\n    }\r\n    node.children.forEach(child => {\r\n      this.collectChangedNames(child);\r\n    });\r\n  }\r\n\r\n  onUpload(codes: string[] = null) {\r\n    this.isLoading = true;\r\n\r\n    const data = {\r\n      file_xls: this.fileToUpload,\r\n      root_product_id: this.data.productId,\r\n      changed_names: this.changedNames\r\n    };\r\n\r\n    if (codes) {\r\n      data['passed_codes'] = codes.join(',');\r\n    }\r\n\r\n    this.productService.uploadProductStructure(data)\r\n      .pipe(\r\n        takeUntil(this.destroy$)\r\n      ).subscribe({\r\n      next: res => {\r\n        this.dialogRef.close(true);\r\n      },\r\n      error: err => {\r\n        if (err) {\r\n          this.isLoading = false;\r\n          this.error = err.error.data;\r\n          this.processing(err.error.data);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  processing(arr: any) {\r\n    const str: string = arr ? arr[0] : '';\r\n\r\n    if (str.includes('Error in parsing items at position')) {\r\n      this.showErrorUpload = true;\r\n      const str2 = str.split('code:')[1];\r\n      const str3 = str2.split(', Index:')[0];\r\n\r\n      this.files.push(str3);\r\n    } else {\r\n      this.showErrorUpload = false;\r\n      this.fileToUpload = null;\r\n    }\r\n  }\r\n\r\n  onContinueUpdate() {\r\n    this.onUpload(this.files);\r\n  }\r\n\r\n  selectFile(files: File[]) {\r\n    this.error = '';\r\n    this.fileToUpload = files[0];\r\n  }\r\n\r\n  removeFile() {\r\n    this.fileToUpload = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  checkForDifferences() {\r\n    this.compareOldVersion();\r\n    this.compareNewVersion();\r\n    this.prepareCurrentTree();\r\n    this.prepareNewTree();\r\n  }\r\n\r\n  checkChangesInCurrentStructure(parent: ProductStructureCompare, parentIndex) {\r\n    if (parent.children) {\r\n      parent.children.forEach((element, index) => {\r\n        element.isNew = true;\r\n        this.hasChanges = true;\r\n        if (element.children) {\r\n          element.children.forEach((el, childIndex) => {\r\n            el.isNew = true;\r\n            this.hasChanges = true;\r\n            this.checkChangesInCurrentStructure(el, index);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  prepareCurrentTree() {\r\n    this.currentProductsTree.push({\r\n      data: this.currentStructure,\r\n      expanded: false,\r\n      parent: null,\r\n      children: []\r\n    });\r\n\r\n    this.currentStructure.children?.forEach(child => {\r\n      this.currentProductsTree[0].children.push(\r\n        {\r\n          data: child,\r\n          expanded: false,\r\n          parent: null,\r\n          children: []\r\n        }\r\n      );\r\n    });\r\n    this.addProdStructureCurrent(this.currentProductsTree[0]);\r\n  }\r\n\r\n  addProdStructureCurrent(treeProduct: TreeNode<ProductStructureCompare>) {\r\n    if (treeProduct.children) {\r\n      treeProduct.children.forEach(child => {\r\n        if (child.parent) {\r\n          child.data.hasCycle = this.isCycle(child.data.parent, child.data.code);\r\n\r\n          if (!child.data.hasCycle) {\r\n            if (this.newStructure.parent_id) {\r\n              const nextParent = this.ancestorsProducts.find(el => el.id === this.newStructure.parent_id);\r\n              child.data.hasCycle = this.isCycleOnStructure(nextParent, child.data.code);\r\n            }\r\n          }\r\n        }\r\n        if (child.data.hasCycle) {\r\n          this.hasCyclingProduct = true;\r\n          this.hasChanges = true;\r\n        }\r\n        if (child.data && child.data.children) {\r\n          child.data.children.forEach(innerChild => {\r\n            if (innerChild.parent) {\r\n              innerChild.hasCycle = this.isCycle(innerChild.parent, innerChild.code);\r\n\r\n              if (!innerChild.hasCycle) {\r\n                if (this.newStructure.parent_id) {\r\n                  const nextParent = this.ancestorsProducts.find(el => el.id === this.newStructure.parent_id);\r\n                  innerChild.hasCycle = this.isCycleOnStructure(nextParent, innerChild.code);\r\n                }\r\n              }\r\n            }\r\n            if (innerChild.hasCycle) {\r\n              this.hasCyclingProduct = true;\r\n              this.hasChanges = true;\r\n            }\r\n            child.children.push({\r\n              data: innerChild,\r\n              expanded: false,\r\n              parent: null,\r\n              children: []\r\n            });\r\n          });\r\n          this.addProdStructureCurrent(child);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  prepareNewTree() {\r\n    this.newProductsTree.push({\r\n      data: this.newStructure,\r\n      expanded: false,\r\n      parent: null,\r\n      children: []\r\n    });\r\n\r\n    this.newStructure.children.forEach(child => {\r\n      if (child.parent) {\r\n        child.hasCycle = this.isCycle(child.parent, child.code);\r\n\r\n        if (!child.hasCycle) {\r\n          if (this.newStructure.parent_id) {\r\n            const nextParent = this.ancestorsProducts.find(el => el.id === this.newStructure.parent_id);\r\n            child.hasCycle = this.isCycleOnStructure(nextParent, child.code);\r\n          }\r\n        }\r\n      }\r\n      if (child.hasCycle) {\r\n        this.hasCyclingProduct = true;\r\n        this.hasChanges = true;\r\n      }\r\n      this.newProductsTree[0].children.push(\r\n        {\r\n          data: child,\r\n          expanded: false,\r\n          parent: null,\r\n          children: []\r\n        }\r\n      );\r\n    });\r\n    this.addProdStructureCurrent(this.newProductsTree[0]);\r\n\r\n  }\r\n\r\n  private compareOldVersion() {\r\n    // if (this.currentStructure.children)\r\n    this.currentStructure.children?.forEach((oldVersionProduct, index) => {\r\n      const newVersionProduct = this.newStructure.children.find(el => el.code === oldVersionProduct.code && !el.hasCheckedForQuantity);\r\n      if (!newVersionProduct) {\r\n        oldVersionProduct.isDeleted = true;\r\n        this.hasChanges = true;\r\n        if (oldVersionProduct.children) {\r\n          this.markAsDeleted(oldVersionProduct);\r\n        }\r\n      }\r\n\r\n      if (newVersionProduct) {\r\n        if (newVersionProduct.quantity !== oldVersionProduct.quantity && !newVersionProduct.hasCheckedForQuantity) {\r\n          oldVersionProduct.hasQuantityChanged = true;\r\n          this.hasChanges = true;\r\n        }\r\n        newVersionProduct.hasCheckedForQuantity = true;\r\n\r\n        if (oldVersionProduct.children && newVersionProduct.children) {\r\n          this.recursiveFindChangesOld(oldVersionProduct, newVersionProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Смотреть если уже находили этот элемент (чтою не смотреть первый попавшийся) Для этого эти поля сделал (низ)\r\n  // hasCheckedForDeletion\r\n  // hasCheckedForQuantity\r\n  // hasCheckedForNew\r\n\r\n  private recursiveFindChangesOld(oldProductStructure: ProductStructureCompare, newProductStructure: ProductStructureCompare) {\r\n    oldProductStructure.children.forEach((oldVersionProduct, index) => {\r\n      const newVersionProduct = newProductStructure.children.find(el => el.code === oldVersionProduct.code && !el.hasCheckedForQuantity);\r\n      if (!newVersionProduct) {\r\n        oldVersionProduct.isDeleted = true;\r\n        this.hasChanges = true;\r\n        if (oldVersionProduct.children) {\r\n          this.markAsDeleted(oldVersionProduct);\r\n        }\r\n      }\r\n      if (newVersionProduct) {\r\n        if (newVersionProduct.quantity !== oldVersionProduct.quantity) {\r\n          oldVersionProduct.hasQuantityChanged = true;\r\n          this.hasChanges = true;\r\n        }\r\n        newVersionProduct.hasCheckedForQuantity = true;\r\n\r\n        if (oldVersionProduct.children && newVersionProduct.children) {\r\n          this.recursiveFindChangesOld(oldVersionProduct, newVersionProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  markAsDeleted(productStructure: ProductStructureCompare) {\r\n    productStructure.children.forEach(child => {\r\n      child.isDeleted = true;\r\n      this.hasChanges = true;\r\n      if (child.children) {\r\n        this.markAsDeleted(child);\r\n      }\r\n    });\r\n  }\r\n\r\n  private compareNewVersion() {\r\n    this.newStructure.children.forEach((newVersionProduct, index) => {\r\n      const oldVersionProduct = this.currentStructure.children?.find(el => el.code === newVersionProduct.code && !el.hasCheckedForQuantity);\r\n      newVersionProduct.parent = {\r\n        code: this.newStructure.code,\r\n        name: this.newStructure.name,\r\n        quantity: null\r\n      };\r\n      if (!oldVersionProduct) {\r\n        newVersionProduct.isNew = true;\r\n        this.hasChanges = true;\r\n        if (newVersionProduct.children) {\r\n          this.markAsNew(newVersionProduct);\r\n        }\r\n      }\r\n      if (oldVersionProduct) {\r\n        if (newVersionProduct.quantity !== oldVersionProduct.quantity) {\r\n          newVersionProduct.hasQuantityChanged = true;\r\n          this.hasChanges = true;\r\n        }\r\n        oldVersionProduct.hasCheckedForQuantity = true;\r\n        if (oldVersionProduct.children && newVersionProduct.children) {\r\n          this.recursiveFindChangesNew(newVersionProduct, oldVersionProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private recursiveFindChangesNew(newVersionProductParent: ProductStructureCompare, oldProductStructure: ProductStructureCompare) {\r\n    newVersionProductParent.children.forEach((newVersionProduct, index) => {\r\n      newVersionProduct.parent = {\r\n        code: newVersionProductParent.code,\r\n        name: newVersionProductParent.name,\r\n        parent: newVersionProductParent.parent,\r\n        quantity: null\r\n      };\r\n      const oldVersionProduct = oldProductStructure.children.find(el => el.code === newVersionProduct.code && !el.hasCheckedForQuantity);\r\n\r\n      if (!oldVersionProduct) {\r\n        newVersionProduct.isNew = true;\r\n        this.hasChanges = true;\r\n        if (newVersionProduct.children) {\r\n          this.markAsNew(newVersionProduct);\r\n        }\r\n      }\r\n\r\n      if (oldVersionProduct) {\r\n        if (newVersionProduct.quantity !== oldVersionProduct.quantity) {\r\n          newVersionProduct.hasQuantityChanged = true;\r\n          this.hasChanges = true;\r\n        }\r\n        oldVersionProduct.hasCheckedForQuantity = true;\r\n        if (newVersionProduct.children && oldVersionProduct.children) {\r\n          this.recursiveFindChangesNew(newVersionProduct, oldVersionProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  isCycle(parentProduct: ProductStructureCompare, code: string) {\r\n    if (parentProduct.code === code) return true;\r\n    if (parentProduct.parent) return this.isCycle(parentProduct.parent, code);\r\n  }\r\n\r\n  isCycleOnStructure(ancestorProduct: AncestorProductStructureCompare, code: string) {\r\n    if (ancestorProduct.nomenclature__code === code) {\r\n      return true;\r\n    } else {\r\n      if (!ancestorProduct.parent_id) {\r\n        return false;\r\n      }\r\n      const nextParent = this.ancestorsProducts.find(el => el.id === ancestorProduct.parent_id);\r\n      return this.isCycleOnStructure(nextParent, code);\r\n    }\r\n  }\r\n\r\n  markAsNew(productStructure: ProductStructureCompare) {\r\n    productStructure.children.forEach(child => {\r\n      child.isNew = true;\r\n      this.hasChanges = true;\r\n      if (child.children) {\r\n        this.markAsNew(child);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    Upload Product Structure\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <div *ngIf=\"!isLoading; else loading\" class=\"upload-product-structure\">\r\n    <div\r\n      *ngIf=\"error\"\r\n      class=\"upload-product-structure__error\"\r\n      [class.upload-product-structure__error_upload]=\"showErrorUpload\"\r\n    >\r\n      {{error}}\r\n    </div>\r\n    <div\r\n      *ngIf=\"!showErrorUpload\"\r\n      class=\"upload-product-structure__uploader\"\r\n    >\r\n      <pek-upload-file\r\n        (selectFile)=\"selectFile($event)\"\r\n        (removeFile)=\"removeFile()\"\r\n        [fileFormat]=\"'excel'\"\r\n      ></pek-upload-file>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\r\n\r\n  <div *ngIf=\"!isLoading\">\r\n    <button\r\n      *ngIf=\"!showErrorUpload; else continueLoading\"\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      label=\"Upload\"\r\n      (click)=\"previewStructure()\"\r\n      [disabled]=\"!fileToUpload || isLoading || showErrorUpload\"\r\n    ></button>\r\n  </div>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #loading>\r\n  <div class=\"upload-product-structure__text\">\r\n    <div class=\"upload-message\">\r\n      <p>The structure is being loaded.</p>\r\n      <p>Please don't close the window.</p>\r\n      <p>The window will close automatically after a successful download.</p>\r\n    </div>\r\n    <div class=\"upload-product-structure__spinner\">\r\n      <i class=\"pi pi-spin pi-spinner\"></i>\r\n      <p>Pending...</p>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #continueLoading>\r\n  <div>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-warning mr-2\"\r\n      label=\"Cancel Uploading\"\r\n      (click)=\"onCancel()\"\r\n    ></button>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      class=\"p-button-success\"\r\n      label=\"Continue Uploading\"\r\n      (click)=\"onContinueUpdate()\"\r\n    ></button>\r\n  </div>\r\n</ng-template>\r\n","import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Locator} from '../../warehouse/models/locator';\r\nimport {SerialNumber} from '../../procurement/models/invoice';\r\n\r\nexport class Product {\r\n  readonly id: number;\r\n  root_id?: number;\r\n  quantity?: number;\r\n  required_quantity?: number;\r\n  nomenclature?: Nomenclature;\r\n  position?: number;\r\n  task_required_quantity?: number;\r\n  group_uid?: number;\r\n  countProducts?: number;\r\n  product?: Product;\r\n  products?: Product[];\r\n  serial_number?: SerialNumber;\r\n  is_scanned?: boolean;\r\n  is_scanned_root?: boolean;\r\n  checkedForGeneration?: boolean;\r\n  parent?: number;\r\n  lft?: number;\r\n  rght?: number;\r\n  locator?: Locator;\r\n  level?: number;\r\n}\r\n\r\nexport class ProductFile {\r\n  readonly id: number;\r\n  file: string;\r\n  product_id: number;\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ProductStructureRouting} from './product-structure.routing';\r\nimport {\r\n  ProductStructureProductsListComponent\r\n} from './components/product-structure-products-list/product-structure-products-list.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {\r\n  ProductStructureProductComponent\r\n} from './components/product-structure-product/product-structure-product.component';\r\nimport {MakeRootProductComponent} from './modals/make-root-product/make-root-product.component';\r\nimport {MakeProductionListComponent} from './modals/make-production-list/make-production-list.component';\r\nimport {TechnologiesComponent} from './components/technologies/technologies.component';\r\nimport {PrefixesComponent} from './components/prefixes/prefixes.component';\r\nimport {CreateEditTechnologyComponent} from './modals/create-edit-technology/create-edit-technology.component';\r\nimport {CreateEditPrefixComponent} from './modals/create-edit-prefix/create-edit-prefix.component';\r\nimport {\r\n  ProductStructureLayoutComponent\r\n} from './components/product-structure-layout/product-structure-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport {AddProductComponent} from './modals/add-product/add-product.component';\r\nimport {CreateEditRootProductComponent} from './modals/create-edit-root-product/create-edit-root-product.component';\r\nimport { EditProductComponent } from './modals/edit-product/edit-product.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { UploadProductStructureComponent } from './modals/upload-product-structure/upload-product-structure.component';\r\nimport { ProductFilesComponent } from './modals/product-files/product-files.component';\r\nimport {CreateEditProductFormComponent} from './components/create-edit-product-form/create-edit-product-form.component';\r\nimport { ProductStructureCategoriesComponent } from './components/product-structure-categories/product-structure-categories.component';\r\nimport {\r\n  CreateEditProductStructureCategoryComponent\r\n} from './modals/create-edit-product-structure-category/create-edit-product-structure-category.component';\r\nimport {AddTechnicalEquipmentComponent} from './modals/add-technical-equipment/add-technical-equipment.component';\r\nimport { TechnicalEquipmentsTableComponent } from './components/create-edit-product-form/components/technical-equipments-table/technical-equipments-table.component';\r\nimport { EditTechnicalEquipmentComponent } from './components/create-edit-product-form/components/technical-equipments-table/edit-technical-equipment/edit-technical-equipment.component';\r\nimport { NomenclatureFilesComponent } from './components/create-edit-product-form/components/nomenclature-files/nomenclature-files.component';\r\nimport {CompareStructureComponent} from './modals/compare-structure/compare-structure.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductStructureProductsListComponent,\r\n    CreateEditRootProductComponent,\r\n    ProductStructureProductComponent,\r\n    MakeRootProductComponent,\r\n    MakeProductionListComponent,\r\n    TechnologiesComponent,\r\n    PrefixesComponent,\r\n    CreateEditTechnologyComponent,\r\n    CreateEditPrefixComponent,\r\n    ProductStructureLayoutComponent,\r\n    AddProductComponent,\r\n    EditProductComponent,\r\n    UploadProductStructureComponent,\r\n    ProductFilesComponent,\r\n    CreateEditProductFormComponent,\r\n    ProductStructureCategoriesComponent,\r\n    CreateEditProductStructureCategoryComponent,\r\n    AddTechnicalEquipmentComponent,\r\n    TechnicalEquipmentsTableComponent,\r\n    EditTechnicalEquipmentComponent,\r\n    NomenclatureFilesComponent,\r\n    CompareStructureComponent,\r\n  ],\r\n  exports: [\r\n    CreateEditProductFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductStructureRouting,\r\n    SharedModule,\r\n    LayoutModule,\r\n    DragDropModule,\r\n  ]\r\n})\r\nexport class ProductStructureModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {\n  ProductStructureProductsListComponent\n} from './components/product-structure-products-list/product-structure-products-list.component';\nimport {\n  ProductStructureProductComponent\n} from './components/product-structure-product/product-structure-product.component';\nimport {TechnologiesComponent} from './components/technologies/technologies.component';\nimport {PrefixesComponent} from './components/prefixes/prefixes.component';\nimport {\n  ProductStructureLayoutComponent\n} from './components/product-structure-layout/product-structure-layout.component';\nimport {\n  ProductStructureCategoriesComponent\n} from './components/product-structure-categories/product-structure-categories.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductStructureLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'products', pathMatch: 'full'},\n      {\n        path: 'products', children: [\n          {path: '', title: 'Products', component: ProductStructureProductsListComponent},\n          {path: 'structure/:id', title: 'Products', component: ProductStructureProductComponent}\n        ]\n      },\n      {path: 'technologies', title: 'Technologies', component: TechnologiesComponent},\n      {path: 'prefixes', title: 'Prefixes', component: PrefixesComponent},\n      {path: 'categories', title: 'Categories', component: ProductStructureCategoriesComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductStructureRouting {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Category} from '../models/category';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditWarehouseCategoryComponent\n} from '../../warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'categories/';\n\n  categories: Category[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Category[]> {\n    if (this.categories) {\n      return of(this.categories);\n    }\n\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Category[] }>(this.API_URL + this.url + qString).pipe(map(response => {\n      let categories = response.data;\n\n      categories.forEach(category => {\n        if (!category.parent) category.lft = category.tree_id;\n      });\n\n      categories.sort((a, b) => a.lft - b.lft);\n      this.categories = categories;\n      return categories;\n    }));\n  }\n\n  create(category: Partial<Category>): Observable<Category> {\n    return this.httpClient.post<{ data: Category }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(category: Partial<Category>): Observable<Category> {\n    return this.httpClient.patch<{ data: Category }>(this.API_URL + this.url + `${category.id}/`, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(category: Category): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${category.id}/`);\n  };\n\n  move(move: any, categoryId: number): Observable<Category> {\n    return this.httpClient.post<{ data: Category }>(this.API_URL + this.url + `${categoryId}/move/`, move).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditWarehouseCategoryModal(type: ModalActionType, category?: Category): Observable<Category> {\n    return this.dialog\n      .open<CreateEditWarehouseCategoryComponent>(CreateEditWarehouseCategoryComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {ProductPrefix} from '../models/prefix';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditPrefixComponent} from '../modals/create-edit-prefix/create-edit-prefix.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefixService {\n  readonly API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'xls_manufactured_prefixes/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<ProductPrefix[]> {\n    return this.httpClient.get<{ data: ProductPrefix[] }>(this.API_URL + this.url).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.post<{ data: ProductPrefix }>(this.API_URL + this.url, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.patch<{ data: ProductPrefix }>(this.API_URL + this.url + `${prefix.id}/`, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\n  }\n\n  createEditPrefix(type: ModalActionType, prefix?: ProductPrefix): Observable<ProductPrefix> {\n    return this.dialog\n      .open<CreateEditPrefixComponent>(CreateEditPrefixComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, prefix},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditProductStructureCategoryComponent\n} from '../modals/create-edit-product-structure-category/create-edit-product-structure-category.component';\nimport {ProductStructureCategory} from '../models/product-structure-category';\nimport {Product} from '../models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductStructureCategoryService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'root_categories/';\n\n  rootCategories: ProductStructureCategory[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<ProductStructureCategory[]> {\n    if (this.rootCategories) {\n      return of(this.rootCategories);\n    }\n\n    return this.httpClient.get<{ data: ProductStructureCategory[] }>(this.API_URL + 'root_categories/').pipe(map(response => {\n      let categories = response.data;\n\n      categories.forEach(category => {\n        if (!category.parent) category.lft = category.tree_id;\n      });\n\n      categories.sort((a, b) => a.lft - b.lft);\n      this.rootCategories = categories;\n      return categories;\n    }));\n  }\n\n  create(category: Partial<ProductStructureCategory>): Observable<ProductStructureCategory> {\n    return this.httpClient.post<{ data: ProductStructureCategory }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(category: Partial<ProductStructureCategory>): Observable<ProductStructureCategory> {\n    return this.httpClient.patch<{ data: ProductStructureCategory }>(this.API_URL + this.url + `${category.id}/`, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(category: ProductStructureCategory): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${category.id}/`);\n  };\n\n  move(move: any, categoryId: number): Observable<ProductStructureCategory> {\n    return this.httpClient.post<{data: ProductStructureCategory}>(this.API_URL + this.url + `${categoryId}/move/`, move).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditCategory(type: ModalActionType, category?: ProductStructureCategory): Observable<ProductStructureCategory> {\n    return this.dialog\n      .open<CreateEditProductStructureCategoryComponent>(CreateEditProductStructureCategoryComponent, {\n        width: '42rem',\n        height: 'auto',\n        panelClass: 'modal-picker',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, map, Observable} from 'rxjs';\r\nimport {Product, ProductFile} from '../models/product';\r\nimport {environment} from '@env/environment';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {AddProductComponent} from '../modals/add-product/add-product.component';\r\nimport {CreateEditRootProductComponent} from '../modals/create-edit-root-product/create-edit-root-product.component';\r\nimport {EditProductComponent} from '../modals/edit-product/edit-product.component';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {UploadProductStructureComponent} from '../modals/upload-product-structure/upload-product-structure.component';\r\nimport {ProductFilesComponent} from '../modals/product-files/product-files.component';\r\nimport {CompareStructureComponent} from '../modals/compare-structure/compare-structure.component';\r\nimport {ProductStructureCompareResult} from '../models/product-structure-compare-result';\r\nimport {CompareChangedCodeName} from '../models/compare-changed-code-name';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  API_URL = environment.base_url + environment.product_structure_url;\r\n  private readonly url = 'products/';\r\n  private readonly;\r\n  formData = new FormData();\r\n\r\n\r\n  constructor(\r\n    private readonly httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + this.url).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  // TODO удалить all\r\n  getRoots(): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'products_roots/all/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getTree(id: number): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'product_tree/' + `${id}/`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updatePartly(product: Partial<Product>) {\r\n    return this.httpClient.patch<{ data: Product }>(this.API_URL + this.url + product.id + '/', product).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\r\n  }\r\n\r\n  copyStructure(send: { nomenclature_id: number, parent_id: number, name: string }): Observable<Product[]> {\r\n    return this.httpClient.post<{ data: Product[] }>(this.API_URL + this.url + 'product_structure_copy/', send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  move(move: any, productId: number): Observable<Product> {\r\n    return this.httpClient.post<{ data: Product }>(this.API_URL + this.url + `${productId}/move/`, move).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getProductFiles(productId: number): Observable<ProductFile[]> {\r\n    return this.httpClient.get<{ data: ProductFile[] }>(this.API_URL + `product_files/${productId}/`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  severalUploadFiles(productId: number, files: File[]): Observable<ProductFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData);\r\n    });\r\n\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{ data: ProductFile }>(this.API_URL + `product_files/${productId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  removeProductFile(fileId: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + `file_delete/${fileId}/`, null);\r\n  }\r\n\r\n  downloadProductFile(fileId: number): Observable<Blob> {\r\n    return this.httpClient.get(this.API_URL + `file_download/${fileId}/`, {responseType: 'blob'});\r\n  }\r\n\r\n  uploadProductStructure(\r\n    data: {\r\n      file_xls: File,\r\n      root_product_id: number,\r\n      passed_codes?: string,\r\n      changed_names: { code: string, selected_name: string }[],\r\n    }): Observable<any> {\r\n    this.formData = new FormData();\r\n\r\n    this.createFormData(data);\r\n\r\n    return this.httpClient.post(this.API_URL + 'products/import_products/', this.formData).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n  createFormData(obj, subKeyStr = '') {\r\n    for (const i in obj) {\r\n      const value = obj[i];\r\n      const subKeyStrTrans = subKeyStr ? subKeyStr + '[' + i + ']' : i;\r\n\r\n      if (typeof (value) === 'string' || typeof (value) === 'number' || typeof (value) === 'boolean') {\r\n        // @ts-ignore\r\n        this.formData.append(subKeyStrTrans, value);\r\n\r\n      } else if (typeof (value) === 'object') {\r\n        if (value instanceof File) {\r\n          this.formData.append(subKeyStrTrans, value);\r\n        } else {\r\n          this.createFormData(value, subKeyStrTrans);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  compare_structure(\r\n    data: {\r\n      file_xls: File,\r\n      root_product_id: number\r\n    }): Observable<{ data: ProductStructureCompareResult }> {\r\n    const formData = new FormData();\r\n\r\n    for (const key in data) {\r\n      formData.append(key, data[key]);\r\n    }\r\n\r\n    return this.httpClient.post<{ data: ProductStructureCompareResult }>(this.API_URL + 'products/prepare_structure_changes/', formData).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n  makeRoot(productId: number, send: { category: number }): Observable<any> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + `${this.url}${productId}/copy_tree_to_root/`, send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  // TODO ПЕРЕНЕСТИ В ДРУГОЙ СЕРВИС\r\n  makeProductionList(send: any): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.production_url + 'list_creation_requests/', send);\r\n  }\r\n\r\n  addProduct(product: Partial<Product>): Observable<Product[]> {\r\n    return this.httpClient.post<{ data: Product[] }>(this.API_URL + this.url, product).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createEditRootProduct(type: ModalActionType, product?: Product): Observable<Nomenclature & Product[]> {\r\n    return this.dialog\r\n      .open<CreateEditRootProductComponent>(CreateEditRootProductComponent, {\r\n        width: '35rem',\r\n        height: 'auto',\r\n        data: {type, product},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editProductModal(product: Product): Observable<{ nomenclature: Nomenclature, product: Product }> {\r\n    return this.dialog\r\n      .open<EditProductComponent>(EditProductComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: product,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  addProductModal(id: number): Observable<Product[]> {\r\n    return this.dialog\r\n      .open<AddProductComponent>(AddProductComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        panelClass: 'modal-picker',\r\n        data: id,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  uploadProductStructureModal(productId: number, rootProductId): Observable<Product[]> {\r\n    return this.dialog\r\n      .open<UploadProductStructureComponent>(UploadProductStructureComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: {productId, rootProductId},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  showProductFiles(productId: number): Observable<void> {\r\n    return this.dialog\r\n      .open<ProductFilesComponent>(ProductFilesComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: productId,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n\r\n  openCompareStructureDialog(newResult: any,\r\n                             oldResult: any,\r\n                             hasCyclingProduct: boolean,\r\n                             hasChangedName: boolean,\r\n                             changedNamesList: CompareChangedCodeName[]): Observable<boolean | { code: string, selected_name: string }[]> {\r\n    return this.dialog\r\n      .open<CompareStructureComponent>(CompareStructureComponent, {\r\n        width: '80rem',\r\n        height: 'auto',\r\n        data: {newResult, oldResult, hasCyclingProduct, hasChangedName, changedNamesList},\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {TechnicalEquipment} from '../models/technical-equipment';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {AddTechnicalEquipmentComponent} from '../modals/add-technical-equipment/add-technical-equipment.component';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {\r\n  EditTechnicalEquipmentComponent\r\n} from '../components/create-edit-product-form/components/technical-equipments-table/edit-technical-equipment/edit-technical-equipment.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechnicalEquipmentService {\r\n  readonly API_URL = environment.base_url + environment.product_structure_url;\r\n  readonly url = 'technical_equipment/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) { }\r\n\r\n  get(query?: QuerySearch[]): Observable<TechnicalEquipment[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: TechnicalEquipment[] }>(this.API_URL + this.url + qString).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(technicalEquipment: Partial<TechnicalEquipment>): Observable<TechnicalEquipment> {\r\n    return this.httpClient.post<{ data: TechnicalEquipment }>(this.API_URL + this.url, technicalEquipment).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  update(technicalEquipment: Partial<TechnicalEquipment>): Observable<TechnicalEquipment> {\r\n    return this.httpClient.patch<{ data: TechnicalEquipment }>(this.API_URL + this.url + `${technicalEquipment.id}/`, technicalEquipment).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  bulk_update(nomenclatureId: number, technical_quipment: TechnicalEquipment[]): Observable<any> {\r\n    return this.httpClient.post<{ data: TechnicalEquipment }>(this.API_URL + 'nomenclatures/', technical_quipment).pipe(\r\n      map(response => response.data)\r\n    );\r\n  //  bulk_update_technical_equipments\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\r\n  }\r\n\r\n  openAddTechnicalEquipment(): Observable<Nomenclature> {\r\n    return this.dialog\r\n      .open<AddTechnicalEquipmentComponent>(AddTechnicalEquipmentComponent, {\r\n        width: '110rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: null,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openEditTechnicalEquipment(technicalEquipment: TechnicalEquipment): Observable<Nomenclature> {\r\n    return this.dialog\r\n      .open<EditTechnicalEquipmentComponent>(EditTechnicalEquipmentComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: {technicalEquipment: technicalEquipment},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Technology} from '../models/technology';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnologyService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'technologies/';\n\n  technologies: Technology[];\n\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Technology[]> {\n    if (this.technologies) {\n      return of(this.technologies);\n    }\n\n    return this.httpClient.get<{ data: Technology[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const technologies = response.data;\n        this.technologies = technologies;\n        return technologies;\n      }));\n  }\n\n  create(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.post<{ data: Technology }>(this.API_URL + this.url, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.put<{ data: Technology }>(this.API_URL + this.url + `${technology.id}/`, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(technology: Technology): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${technology.id}/`);\n  };\n\n  createEditTechnology(type: ModalActionType, technology?: Technology): Observable<Technology> {\n    return this.dialog\n      .open<CreateEditTechnologyComponent>(CreateEditTechnologyComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, technology},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {TreeService} from '@shared/services/tree.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {cloneDeep} from 'lodash-es';\nimport {PurchasingCategoryService} from '../../services/purchasing-category.service';\nimport {PurchaseCategory} from '../../models/purchase-category';\n\n@Component({\n  selector: 'pek-purchasing-categories',\n  templateUrl: './purchasing-categories.component.html',\n  styleUrls: ['./purchasing-categories.component.scss']\n})\nexport class PurchasingCategoriesComponent implements OnInit {\n  isLoading = true;\n  purchasingCategories: PurchaseCategory[] = [];\n  selectedNode: TreeNode<PurchaseCategory>;\n  categoriesTree: TreeNode<PurchaseCategory>[] = [];\n\n  expanseMap = {};\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Category',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditCategory()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveCategory()\n      }\n    ]\n  }];\n\n  constructor(\n    private purchasingCategoryService: PurchasingCategoryService,\n    private readonly treeService: TreeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPurchasingCategory();\n  }\n\n  getPurchasingCategory() {\n    this.purchasingCategoryService.getAll().subscribe(categories => {\n      this.purchasingCategories = categories;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, this.expanseMap);\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.purchasingCategories, this.expanseMap);\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.categoriesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.categoriesTree = temp;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  private onEditCategory() {\n    this.purchasingCategoryService.createEditCategory('edit', this.selectedNode.data).subscribe(category => {\n      if (category) {\n        const index = this.purchasingCategories.findIndex(s => s.id === category.id);\n        this.purchasingCategories[index] = category;\n        this.selectedNode = null;\n        this.createTree();\n      }\n    });\n  }\n\n  public onCreateCategory() {\n    this.purchasingCategoryService.createEditCategory('create').subscribe(category => {\n      if (category) {\n        this.purchasingCategories.push(category);\n        this.createTree();\n      }\n    });\n  }\n\n  private onRemoveCategory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.purchasingCategoryService.delete(this.selectedNode.data.id).subscribe(() => {\n          const removeChildren = (id: number) => {\n            const ids: number[] = this.purchasingCategories.filter(p => p.parent === id).map(p => p.id);\n            this.purchasingCategories = [...this.purchasingCategories.filter(p => p.parent !== id)];\n\n            ids.forEach(id => {\n              removeChildren(id);\n            });\n          };\n\n          removeChildren(this.selectedNode.data.id);\n\n          const index = this.purchasingCategories.findIndex(p => p.id === this.selectedNode.data.id);\n          this.purchasingCategories.splice(index, 1);\n          this.selectedNode = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Procurement Categories</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"New Category\"\n        (click)=\"onCreateCategory()\"\n      ></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"categoriesTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex\">\n              <p class=\"subtitle\" *ngIf=\"!selectedNode\">Choose the Category to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 48px\">Name</th>\n              <th style=\"width: 35%\">Description</th>\n              <th style=\"width: 30%\" class=\"text-center\">Material</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr\n              [ttRow]=\"rowNode\"\n              [ttSelectableRow]=\"rowNode\"\n            >\n              <td style=\"width: 35%\">\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <span>{{rowData.name}}</span>\n                </div>\n              </td>\n              <td style=\"width: 35%\">\n                {{rowData.description}}\n              </td>\n              <td style=\"width: 30%\" class=\"text-center\">\n                {{rowData.is_material ? 'Tangible' : 'Intangible'}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {BehaviorSubject, iif, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {Router} from '@angular/router';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-purchasing-chain-creation-list',\n  templateUrl: './purchasing-chain-creation-list.component.html',\n  styleUrls: ['./purchasing-chain-creation-list.component.scss']\n})\nexport class PurchasingChainCreationListComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isCanOrder = false;\n  isCanAddOrder = false;\n  isShowAll = false;\n\n  statuses = [\n    {label: 'ORDERED', value: 'ordered'},\n    {label: 'NOT ORDERED', value: 'not_ordered'},\n    {label: 'PARTLY ORDERED', value: 'partially_ordered'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    nomenclature__name: [null],\n    categories_ids: [null],\n    request_date: [null],\n    status: ['not_ordered']\n  });\n\n  isStartFirstPage = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProducts: OrderProduct[] = [];\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n  name$: Subject<void> = new Subject<void>();\n\n  orderProducts$: Observable<OrderProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n          !this.isShowAll,\n        this.orderProductService.getGroupedPurchasedForPagination(this.query).pipe(\n          tap(response => this.productsCount = response.count),\n          map(response => response.results.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          })),\n        ),\n        this.orderProductService.getGroupedPurchased(this.query).pipe(\n          tap(products => this.productsCount = products.length),\n          map(products => products.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          }))\n        )\n      ),\n    ),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n    private readonly orderService: OrderService,\n    private readonly modalService: ModalService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setProductStatus(product: OrderProduct) {\n    let status: string;\n\n    if (product.ordered_quantity >= product.initial_quantity) {\n      status = 'A0';\n    } else if (product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0) {\n      status = 'A1';\n    } else {\n      status = 'A2';\n    }\n\n    return status;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProducts = [];\n\n    this.onCheckOrder();\n    this.onCheckAddOrder();\n    this.getIsCleanUnnecessary();\n    this.getIsDeleted();\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n      {name: 'is_purchased_only', value: true},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true},)\n    }\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value !== null) {\n\n        if (this.searchForm.controls[key].value instanceof Date) {\n          this.query.push({\n            name: key,\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\n          });\n        } else {\n          this.query.push({\n            name: key,\n            value: this.searchForm.controls[key].value\n          });\n        }\n      }\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  getSmallDescription(description: string) {\n    if (description && description?.length > 40) return description.substring(0, 40) + '...';\n    else return description\n  }\n\n  onCheckOrder() {\n    this.isCanOrder = true;\n\n    this.selectedProducts.forEach(element => {\n      if (element.ordered_quantity >= element.initial_quantity) {\n        this.isCanOrder = false;\n      }\n    });\n\n    if (this.selectedProducts.length === 0) {\n      this.isCanOrder = false;\n    }\n  }\n\n  onCheckAddOrder() {\n    this.isCanAddOrder = this.selectedProducts.every(node => node.status !== 'A0');\n  }\n\n  getIsCleanUnnecessary() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A1');\n    }\n  }\n\n  getIsDeleted() {\n    if (this.selectedProducts) {\n      return this.selectedProducts.every(node => node.status === 'A2');\n    }\n  }\n\n  onCloseOrders() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const partlyOrderedProducts = this.selectedProducts.filter(n => n.status === 'A1');\n\n        if (partlyOrderedProducts.length > 0) {\n\n          console.log(partlyOrderedProducts);\n          this.selectedProducts = [];\n          this.orderProductService.closeOrders(partlyOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onDeleteOrders() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        const notOrderedProducts = this.selectedProducts.filter(n => n.status === 'A2');\n\n        if (notOrderedProducts.length > 0) {\n          this.selectedProducts = [];\n          this.orderProductService.deleteSeveral(notOrderedProducts).subscribe(() => this.search$.next());\n        }\n      }\n    });\n  }\n\n  onCreateChain() {\n    this.orderService.openCreateChainModal(this.selectedProducts, 'purchase').subscribe(order => {\n      if (order) {\n        this.router.navigate(['/purchasing/chains/order', order.id]);\n      }\n    });\n  }\n\n  onAddProductsToChain() {\n    this.orderService.openAddProductsToChainModal(this.selectedProducts, 'purchase').subscribe(order => {\n      if (order) {\n        this.search$.next();\n      }\n    });\n  }\n\n  onSelectCategories(ids: number[]) {\n    this.searchForm.get('categories_ids').patchValue(ids?.join(',') || null);\n    this.search$.next();\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n    this.search$.next()\n\n    if (!this.isShowAll) {\n      this.currentPage = 1\n    }\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Procurement Chain Creation</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        [disabled]=\"!selectedProducts || !isCanOrder\"\n        class=\"ml-auto mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Create Procurement Chain\"\n        (click)=\"onCreateChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Add To Procurement Chain\"\n        (click)=\"onAddProductsToChain()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsCleanUnnecessary()\"\n        class=\"mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-check\"\n        label=\"Close Order\"\n        (click)=\"onCloseOrders()\"\n      ></button>\n      <button\n        [disabled]=\"!selectedProducts || selectedProducts.length === 0 || !isCanAddOrder || !getIsDeleted()\"\n        class=\"p-button-danger\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-times\"\n        label=\"Delete Order\"\n        (click)=\"onDeleteOrders()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form\n      [formGroup]=\"searchForm\"\n      class=\"form mb-3\"\n    >\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input\n              formControlName=\"nomenclature__name\"\n              (ngModelChange)=\"name$.next()\"\n              type=\"text\"\n              pInputText\n            >\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Category</label>\n            <pek-multi-product-categories-picker (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-product-categories-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Date</label>\n            <p-calendar\n              formControlName=\"request_date\"\n              dataType=\"date\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              [readonlyInput]=\"true\"\n              (ngModelChange)=\"search$.next()\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <p-dropdown\n              [options]=\"statuses\"\n              formControlName=\"status\"\n              optionValue=\"value\"\n              [showClear]=\"true\"\n              placeholder=\"Choose Status\"\n              (ngModelChange)=\"search$.next()\"\n            ></p-dropdown>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        selectionMode=\"multiple\"\n        dataKey=\"id\"\n        [rows]=\"10\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 24.25rem)\"\n        [value]=\"orderProducts$ | async\"\n        [(selection)]=\"selectedProducts\"\n        (selectionChange)=\"onCheckOrder(); onCheckAddOrder();\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\" class=\"index-header text-center\">#</th>\n            <th style=\"width: 4%\" class=\"text-center\">ID</th>\n            <th style=\"width: 10%\">Name</th>\n            <th style=\"width: 5%\" class=\"text-center\">Request Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">Ordered Quantity</th>\n            <th style=\"width: 7%\" class=\"text-center\">Free Ordered Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\n            <th style=\"width: 8%;\">Category</th>\n            <th style=\"width: 10%;\"> Description</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Date</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Request Type</th>\n            <th class=\"text-center\" style=\"width: 6%;\">Chains</th>\n            <th style=\"width: 9%;\">Root Lists</th>\n            <th style=\"width: 9%;\">Production Lists</th>\n            <th class=\"text-center\" style=\"width: 7%;\">Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"product\">\n            <td style=\"width: 3%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 4%\" class=\"text-center\">{{product.request_id}}</td>\n            <td style=\"width: 10%\">{{product.nomenclature.name}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.initial_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.ordered_quantity}}</td>\n            <td style=\"width: 7%\" class=\"text-center\">{{product.free_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\n            </td>\n            <td style=\"width: 8%;\">{{product.nomenclature.category?.name}}</td>\n            <td style=\"width: 10%;\">\n              <div class=\"word-break\">\n                {{getSmallDescription(product.nomenclature.description)}}\n              </div>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">{{product.request_date |date:'dd/MM/yyyy'}}</td>\n            <td class=\"text-center\" style=\"width: 6%;\">\n              <ng-container *ngIf=\"product.request_type==1\">Auto</ng-container>\n              <ng-container *ngIf=\"product.request_type==0\">Manual</ng-container>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">\n              <ng-container *ngFor=\"let order of product.orders; let idx = index\">\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 1\"\n                   [routerLink]=\"['/procurement/orders/products',order.id]\">\n                  {{order.id}}</a>\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 2\"\n                   [routerLink]=\"['/outsource/outsource-chain/products',order.id]\">\n                  {{order.id}}<span *ngIf=\"idx !== product.orders.length - 1\">,</span></a>\n              </ng-container>\n            </td>\n\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.root_production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.root_production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td class=\"text-center\" style=\"width: 7%;\">\n              <ng-container *ngIf=\"product.ordered_quantity >= product.initial_quantity\">\n                <span class=\"badge badge_success\">ORDERED</span>\n              </ng-container>\n              <ng-container\n                *ngIf=\"product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0\"\n              >\n                <span class=\"badge badge_warning\">PARTLY ORDERED</span>\n              </ng-container>\n              <ng-container *ngIf=\"product.ordered_quantity==0\">\n                <span class=\"badge badge_danger\">NOT ORDERED</span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n      <div\n        *ngIf=\"!isShowAll\"\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n        <p-button\n          (click)=\"onShowAll(true)\"\n          class=\"paginator-all\"\n          type=\"button\"\n          styleClass=\"p-button-text\"\n        >\n          All\n        </p-button>\n      </div>\n    </div>\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {Router} from '@angular/router';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {ListProduct} from '../../../warehouse/models/list-product';\r\nimport {BehaviorSubject, switchMap} from 'rxjs';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Table} from 'primeng/table';\r\nimport {OrderStatusesTableComponent} from '@shared/components/order-statuses-table/order-statuses-table.component';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-purchasing-chains',\r\n  templateUrl: './purchasing-chains.component.html',\r\n  styleUrls: ['./purchasing-chains.component.scss']\r\n})\r\nexport class PurchasingChainsComponent implements OnInit {\r\n  @ViewChild('dt') dt: Table;\r\n  @ViewChild(OrderStatusesTableComponent)\r\n  orderStatusTableComponent: OrderStatusesTableComponent;\r\n\r\n  isShowStatuses = false;\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Chain',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToOderPage()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveChain()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    contains_nomenclature: [null],\r\n    supplier: [null],\r\n    order_root_list_id: [null],\r\n    active_status__in: [null],\r\n    created_after: [null],\r\n    created_before: [null],\r\n    root_production_list_products_root_categories: [null],\r\n    contains_nomenclatures_by_categories: [null],\r\n    contains_declined_payment: [null],\r\n    purchase_categories: [null]\r\n  });\r\n\r\n  orders: Order[] = [];\r\n  selectedOrder: Order;\r\n\r\n  isLoading = false;\r\n  isHideFilters = false;\r\n\r\n  nomenclaturesList: Nomenclature[] = [];\r\n  rootLists: any[] = [];\r\n\r\n  query: QuerySearch[] = [];\r\n\r\n  tableScrollHeight = '29.625rem';\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  firstPage: number = 0;\r\n  finalStatusSelected = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly orderService: OrderService,\r\n    private readonly router: Router,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.search$.pipe(\r\n      tap(() => this.prepareForSearch()),\r\n      switchMap(() => this.orderService.get(this.query)),\r\n      map(orders => this.orderService.modifyOrders(orders)),\r\n      tap(orders => this.orders = orders),\r\n      tap(() => this.generateNomenclaturesListAndRootLists()),\r\n      tap(() => this.isLoading = false),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n  }\r\n\r\n  generateNomenclaturesListAndRootLists() {\r\n    this.orders.forEach(order => {\r\n      if (order.activeStatusDate) {\r\n        order.activeStatusDate = new Date(order.activeStatusDate);\r\n      }\r\n\r\n      order.order_products.forEach(orderProduct => {\r\n        if (!this.nomenclaturesList.includes(orderProduct.nomenclature)) {\r\n          this.nomenclaturesList.push(orderProduct.nomenclature);\r\n        }\r\n      });\r\n\r\n      order.root_production_list_products.forEach(root => this.rootLists.push(root));\r\n\r\n      this.rootLists = this.rootLists.map(root => {\r\n        return {\r\n          ...root,\r\n          fullName: `(${root.id}) ${root.nomenclature.code}~${root.nomenclature.name}`\r\n        };\r\n      });\r\n    });\r\n\r\n    this.nomenclaturesList = this.adapterService.removeDuplicates(this.nomenclaturesList, x => x.id);\r\n    this.rootLists = this.adapterService.removeDuplicates(this.rootLists, x => x.id);\r\n\r\n    this.nomenclaturesList.sort((a, b) => {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name > b.name) return 1;\r\n      return 0;\r\n    });\r\n\r\n    this.rootLists.sort((a, b) => {\r\n      if (a.fullName < b.fullName) return -1;\r\n      if (a.fullName > b.fullName) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\r\n    const lists: { list: ListProduct, count?: number }[] = [];\r\n    rootLists.forEach((res: ListProduct) => {\r\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\r\n      if (found) {\r\n        found.count++;\r\n      } else {\r\n        lists.push({list: res, count: 1});\r\n      }\r\n    });\r\n    return lists;\r\n  }\r\n\r\n  private onGoToOderPage() {\r\n    window.open('/purchasing/chains/order/' + this.selectedOrder?.id, '_blank');\r\n  }\r\n\r\n  onRemoveChain() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderService.delete(this.selectedOrder.id).subscribe(() => {\r\n          this.orders = this.orders.filter(x => x.id !== this.selectedOrder.id);\r\n          this.selectedOrder = null;\r\n\r\n          setTimeout(() => {\r\n            this.orderStatusTableComponent?.renderDates({first: this.firstPage});\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedOrder = null;\r\n    this.orders = [];\r\n\r\n    this.query = [\r\n      {name: 'accounting_type', value: 1},\r\n      {name: 'has_purchase_category', value: true},\r\n      {name: 'exclude_with_active_final_status', value:  !this.finalStatusSelected}\r\n    ];\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.firstPage = 0;\r\n\r\n    this.orderStatusTableComponent?.renderDates({first: 0});\r\n    this.orders = this.orders.map(o => o);\r\n  }\r\n\r\n  onSelectCompany(id: number) {\r\n    this.searchForm.get('supplier').patchValue(id);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectStatuses(ids: number[]) {\r\n    this.searchForm.get('active_status__in').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectRootCategories(ids: string) {\r\n    this.searchForm.get('root_production_list_products_root_categories').patchValue(ids);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectCategories(ids: number[]) {\r\n    this.searchForm.get('contains_nomenclatures_by_categories').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectPurchaseCategories(ids: number[]) {\r\n    this.searchForm.get('purchase_categories').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onCreatePurchaseChain() {\r\n    this.orderService.openCreateEmptyPurchaseChainModal().subscribe(order => {\r\n      if (order) {\r\n        this.router.navigate(['/purchasing/chains/order', order.id])\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleStatuses() {\r\n    this.isShowStatuses = !this.isShowStatuses;\r\n  }\r\n\r\n  onChangePage(page: number) {\r\n    this.firstPage = page;\r\n  }\r\n\r\n  onPage(evt: any) {\r\n    this.orderStatusTableComponent.renderDates(evt);\r\n  }\r\n\r\n  onSelectOrder() {\r\n    this.orderStatusTableComponent.selectedOrder = this.selectedOrder;\r\n  }\r\n\r\n  onSelectionOrder(order: Order) {\r\n    this.selectedOrder = order;\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.dt.paginator = value;\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Procurement Chains</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"Create Procurement Chain\"\r\n        (click)=\"onCreatePurchaseChain()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n\r\n    <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\r\n      <div class=\"filters-visibility__header\">\r\n        <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n      </div>\r\n\r\n      <button\r\n        class=\"icon pi\"\r\n        [class.pi-angle-double-up]=\"!isHideFilters\"\r\n        [class.pi-angle-double-down]=\"isHideFilters\"\r\n      ></button>\r\n\r\n      <form\r\n        [formGroup]=\"searchForm\"\r\n        class=\"form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Nomenclature</label>\r\n              <p-dropdown\r\n                [filter]=\"true\"\r\n                [showClear]=\"true\"\r\n                [options]=\"nomenclaturesList\"\r\n                formControlName=\"contains_nomenclature\"\r\n                optionValue=\"id\"\r\n                optionLabel=\"name\"\r\n                placeholder=\"No Nomenclature Selected\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Root List</label>\r\n                  <p-dropdown\r\n                    [filter]=\"true\"\r\n                    [showClear]=\"true\"\r\n                    [options]=\"rootLists\"\r\n                    formControlName=\"order_root_list_id\"\r\n                    (ngModelChange)=\"search$.next()\"\r\n                    optionValue=\"list.id\"\r\n                    optionLabel=\"fullName\"\r\n                    placeholder=\"No List Selected\"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Status</label>\r\n                  <pek-multi-statuses-picker\r\n                    (selectStatuses)=\"onSelectStatuses($event)\"\r\n                    (isFinalStatusSelected)=\"finalStatusSelected = $event\"\r\n                    [accountingType]=\"1\"\r\n                  ></pek-multi-statuses-picker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Purchase Categories</label>\r\n              <pek-multi-purchase-category-picker\r\n                (choiceCategories)=\"onSelectPurchaseCategories($event)\"></pek-multi-purchase-category-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>From</label>\r\n                  <p-calendar\r\n                    formControlName=\"created_after\"\r\n                    dataType=\"date\"\r\n                    [showButtonBar]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"search$.next()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>To</label>\r\n                  <p-calendar\r\n                    dataType=\"date\"\r\n                    formControlName=\"created_before\"\r\n                    [showButtonBar]=\"true\"\r\n                    dateFormat=\"dd/mm/yy\"\r\n                    [readonlyInput]=\"true\"\r\n                    (ngModelChange)=\"search$.next()\"\r\n                  >\r\n                  </p-calendar>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Product Structure Categories</label>\r\n              <pek-multi-product-structure-categories-picker\r\n                (choiceCategories)=\"onSelectRootCategories($event)\"></pek-multi-product-structure-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Warehouse Category</label>\r\n              <pek-multi-product-categories-picker\r\n                (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-product-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3 d-flex\">\r\n            <div class=\"form-group form-group_checkbox\">\r\n              <label>Declined</label>\r\n              <p-triStateCheckbox\r\n                formControlName=\"contains_declined_payment\"\r\n                (ngModelChange)=\"search$.next()\"\r\n              ></p-triStateCheckbox>\r\n            </div>\r\n            <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"page__table\">\r\n      <div [ngClass]=\"{'d-none': !isShowStatuses}\">\r\n        <pek-order-statuses-table\r\n          [orders]=\"orders\"\r\n          [isLoading]=\"isLoading\"\r\n          (changePage)=\"onChangePage($event)\"\r\n          (selectOrder)=\"onSelectionOrder($event)\"\r\n        ></pek-order-statuses-table>\r\n      </div>\r\n\r\n      <div [ngClass]=\"{'d-none': isShowStatuses}\">\r\n        <p-table\r\n          #dt\r\n          [(first)]=\"firstPage\"\r\n          selectionMode=\"single\"\r\n          [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n          [scrollable]=\"true\"\r\n          dataKey=\"id\"\r\n          [paginator]=\"orders.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedOrder\"\r\n          [value]=\"orders\"\r\n          (onPage)=\"onPage($event)\"\r\n          (selectionChange)=\"onSelectOrder()\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 3%;\">#</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Date</th>\r\n              <th class=\"text-center\" style=\"width: 7%;\">Order ID</th>\r\n              <th class=\"text-center\" style=\"width: 15%;\">Supplier</th>\r\n              <th class=\"text-center\" style=\"width: 15%;\">Purchase category</th>\r\n              <th style=\"width: 15%;\">Comment</th>\r\n              <th style=\"width: 15%;\">Root Lists</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Status</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Completion</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"order\">\r\n              <td class=\"text-center\" style=\"width: 3%;\">{{i + 1}}</td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order.created | date:'dd/MM/yyyy'}}</td>\r\n              <td class=\"text-center\" style=\"width: 7%;\">{{order.id}}</td>\r\n              <td class=\"text-center\" style=\"width: 15%;\">{{order.supplier?.name}}</td>\r\n              <td class=\"text-center\" style=\"width: 15%;\">{{order.purchase_category?.name}}</td>\r\n              <td style=\"width: 15%;\">\r\n                <div class=\"word-break\">\r\n                  {{order.comment}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 15%;\">\r\n                <div class=\"word-break\"\r\n                     *ngFor=\"let item of getRootLists(order.root_production_list_products); let idx = index\">\r\n                  {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\r\n                </div>\r\n              </td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order.status?.value}}</td>\r\n              <td class=\"text-center\" style=\"width: 10%;\">{{order?.activeStatusDate | date: 'dd/MM/yyyy'}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"onShowAll(false)\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n        <div *ngIf=\"!dt.paginator && !isLoading && orders.length > 0\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"onShowAll(true)\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #actionButtons>\r\n  <div class=\"action-buttons\">\r\n    <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedOrder\"></p-menubar>\r\n    <button\r\n      class=\"ml-2\"\r\n      pButton\r\n      type=\"button\"\r\n      icon=\"pi pi-table\"\r\n      [label]=\"(isShowStatuses ? 'Close' : 'Open') +  ' Order Statuses'\"\r\n      (click)=\"onToggleStatuses()\"\r\n    ></button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-purchasing-layout',\n  templateUrl: './purchasing-layout.component.html',\n  styleUrls: ['./purchasing-layout.component.scss']\n})\nexport class PurchasingLayoutComponent implements OnInit {\n  routes: NavigationLink[] = [\n    {label: 'Procurement Requests', commands: ['requests']},\n    {label: 'Procurement Chain Creation', commands: ['order-products']},\n    {label: 'Procurement Chains', commands: ['chains']},\n  ];\n\n  settingsRoutes: NavigationLink[] = [\n    {label: 'Procurement Categories', commands: ['categories']},\n    {label: 'Order Statuses', commands: ['statuses']},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'General Procurement'\"\n  [routes]=\"routes\"\n  [settingsRoutes]=\"settingsRoutes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-purchasing-order-page',\n  templateUrl: './purchasing-order-page.component.html',\n  styleUrls: ['./purchasing-order-page.component.scss']\n})\nexport class PurchasingOrderPageComponent implements OnInit {\n  orderId: number;\n  isOrderLoading = true;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly orderService: OrderService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.orderId = +id),\n    ).subscribe();\n  }\n\n  openOrderFiles() {\n    this.orderService.filesModal$.next();\n  }\n\n  editOrder() {\n    this.orderService.editOrderModal$.next();\n  }\n\n  loaded() {\n    this.isOrderLoading = false;\n  }\n}\n","<div class=\"procurement-order-page\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order {{orderId}}</h1>\n      </div>\n      <div class=\"page__tools\">\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-file\"\n          label=\"Order Files\"\n          class=\"mr-2\"\n          (click)=\"openOrderFiles()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n        <button\n          pButton\n          type=\"button\"\n          icon=\"pi pi-pencil\"\n          label=\"Lead Date & Status\"\n          (click)=\"editOrder()\"\n          [disabled]=\"isOrderLoading\"\n        >\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <pek-order-page\n      [orderType]=\"'purchase'\"\n      (loaded)=\"loaded()\"\n      [orderId]=\"orderId\"\n    ></pek-order-page>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-purchasing-order-statuses',\n  templateUrl: './purchasing-order-statuses.component.html',\n  styleUrls: ['./purchasing-order-statuses.component.scss']\n})\nexport class PurchasingOrderStatusesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"procurement-order-statuses\">\n  <div class=\"page\">\n    <div class=\"page__header\">\n      <div class=\"page__title\">\n        <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Order Statuses</h1>\n      </div>\n      <div class=\"page__tools\">\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <h2 class=\"mb-4\">Manual Statuses</h2>\n\n    <div class=\"page__card mb-4\">\n      <pek-order-statuses [statusType]=\"1\"></pek-order-statuses>\n    </div>\n\n    <h2 class=\"mb-4\">Automatic Statuses</h2>\n\n    <div class=\"page__card\">\n      <pek-order-statuses [statusType]=\"1\" [isAutoStatus]=\"true\"></pek-order-statuses>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Paginator} from 'primeng/paginator';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {BehaviorSubject, iif, Observable, Subject, switchMap} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderService} from '../../../procurement/services/order.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-purchasing-requests',\n  templateUrl: './purchasing-requests.component.html',\n  styleUrls: ['./purchasing-requests.component.scss']\n})\nexport class PurchasingRequestsComponent implements OnInit {\n\n  @ViewChild('paginator') paginator: Paginator;\n\n  statuses = [\n    {label: 'ORDERED', value: 'ordered'},\n    {label: 'NOT ORDERED', value: 'not_ordered'},\n    {label: 'PARTLY ORDERED', value: 'partially_ordered'}\n  ];\n\n  searchForm: FormGroup = this.fb.group({\n    nomenclature__name: [null],\n    categories_ids: [null],\n    request_date: [null],\n    status: ['not_ordered']\n  });\n\n  isStartFirstPage = false;\n  isShowAll = false;\n\n  currentPage = 1;\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  selectedProducts: OrderProduct[] = [];\n\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n  name$: Subject<void> = new Subject<void>();\n\n  orderProducts$: Observable<OrderProduct[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() =>\n      iif(() =>\n          !this.isShowAll,\n        this.orderProductService.getGroupedPurchasedForPagination(this.query).pipe(\n          tap(response => this.productsCount = response.count),\n          map(response => response.results.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          })),\n        ),\n        this.orderProductService.getGroupedPurchased(this.query).pipe(\n          tap(products => this.productsCount = products.length),\n          map(products => products.map(product => {\n            product.status = this.setProductStatus(product);\n            return product;\n          }))\n        )\n      ),\n    ),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.name$.pipe(\n      debounceTime(150),\n      tap(() => this.search$.next()),\n      distinctUntilChanged(),\n      untilDestroyed(this)\n    ).subscribe();\n  }\n\n  setProductStatus(product: OrderProduct) {\n    let status: string;\n\n    if (product.ordered_quantity >= product.initial_quantity) {\n      status = 'A0';\n    } else if (product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0) {\n      status = 'A1';\n    } else {\n      status = 'A2';\n    }\n\n    return status;\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedProducts = [];\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.currentPage},\n      {name: 'is_purchased_only', value: true},\n    ];\n\n    if (!this.isShowAll) {\n      this.query.push({name: 'paginated', value: true},)\n    }\n\n    for (const key in this.searchForm.controls) {\n      if (this.searchForm.controls[key].value !== null) {\n\n        if (this.searchForm.controls[key].value instanceof Date) {\n          this.query.push({\n            name: key,\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\n          });\n        } else {\n          this.query.push({\n            name: key,\n            value: this.searchForm.controls[key].value\n          });\n        }\n      }\n    }\n  }\n\n  getSmallDescription(description: string) {\n    if (description && description?.length > 40) return description.substring(0, 40) + '...';\n    else return description;\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  onCreateRequest() {\n    this.orderProductService.openAddProductToOrderModal(true,null).subscribe(product => {\n      if (product) {\n        this.search$.next();\n      }\n    });\n  }\n\n  onSelectCategories(ids: number[]) {\n    this.searchForm.get('categories_ids').patchValue(ids?.join(',') || null);\n    this.search$.next();\n  }\n\n  onShowAll(value: boolean) {\n    this.isShowAll = value;\n\n    if (!this.isShowAll) {\n      this.currentPage = 1\n    }\n\n    this.search$.next()\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'manufacturing-procurement'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Procurement Requests</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"New Request\"\n        (click)=\"onCreateRequest()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <form\n      [formGroup]=\"searchForm\"\n      class=\"form mb-3\"\n    >\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input\n              formControlName=\"nomenclature__name\"\n              (ngModelChange)=\"name$.next()\"\n              type=\"text\"\n              pInputText\n            >\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Category</label>\n            <pek-multi-product-categories-picker (choiceCategories)=\"onSelectCategories($event)\"></pek-multi-product-categories-picker>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Date</label>\n            <p-calendar\n              formControlName=\"request_date\"\n              dataType=\"date\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              [readonlyInput]=\"true\"\n              (ngModelChange)=\"search$.next()\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-3\">\n          <div class=\"form-group\">\n            <label>Status</label>\n            <p-dropdown\n              [options]=\"statuses\"\n              formControlName=\"status\"\n              optionValue=\"value\"\n              [showClear]=\"true\"\n              placeholder=\"Choose Status\"\n              (ngModelChange)=\"search$.next()\"\n            ></p-dropdown>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        #dt\n        selectionMode=\"multiple\"\n        dataKey=\"id\"\n        [rows]=\"10\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 24.25rem)\"\n        [value]=\"orderProducts$ | async\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\" class=\"index-header text-center\">#</th>\n            <th style=\"width: 4%\" class=\"text-center\">ID</th>\n            <th style=\"width: 10%\">Name</th>\n            <th style=\"width: 5%\" class=\"text-center\">Request Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">Ordered Quantity</th>\n            <th style=\"width: 7%\" class=\"text-center\">Free Ordered Quantity</th>\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\n            <th style=\"width: 8%;\">Category</th>\n            <th style=\"width: 10%;\"> Description</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Date</th>\n            <th style=\"width: 6%;\" class=\"text-center\">Request Type</th>\n            <th class=\"text-center\" style=\"width: 6%;\">Chains</th>\n            <th style=\"width: 9%;\">Root Lists</th>\n            <th style=\"width: 9%;\">Production Lists</th>\n            <th class=\"text-center\" style=\"width: 7%;\">Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 4%\" class=\"text-center\">{{product.request_id}}</td>\n            <td style=\"width: 10%\">{{product.nomenclature.name}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.initial_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">{{product.ordered_quantity}}</td>\n            <td style=\"width: 7%\" class=\"text-center\">{{product.free_quantity}}</td>\n            <td style=\"width: 5%\" class=\"text-center\">\n              {{product.nomenclature.category ? product.nomenclature.category.unit_of_measure.symbol : 'Pcs'}}\n            </td>\n            <td style=\"width: 8%;\">{{product.nomenclature.category?.name}}</td>\n            <td style=\"width: 10%;\">\n              <div class=\"word-break\">\n                {{getSmallDescription(product.nomenclature.description)}}\n              </div>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">{{product.request_date |date:'dd/MM/yyyy'}}</td>\n            <td class=\"text-center\" style=\"width: 6%;\">\n              <ng-container *ngIf=\"product.request_type==1\">Auto</ng-container>\n              <ng-container *ngIf=\"product.request_type==0\">Manual</ng-container>\n            </td>\n            <td style=\"width: 6%;\" class=\"text-center\">\n              <ng-container *ngFor=\"let order of product.orders; let idx = index\">\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 1\"\n                   [routerLink]=\"['/procurement/orders/products',order.id]\">\n                  {{order.id}}</a>\n                <a target=\"blank\" *ngIf=\"order.accounting_type == 2\"\n                   [routerLink]=\"['/outsource/outsource-chain/products',order.id]\">\n                  {{order.id}}<span *ngIf=\"idx !== product.orders.length - 1\">,</span></a>\n              </ng-container>\n            </td>\n\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.root_production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.root_production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td style=\"width: 9%;\">\n              <ng-container *ngFor=\"let list of product.production_list_products; let idx = index\">\n                {{list}}<span *ngIf=\"idx !== product.production_list_products.length - 1\">,</span>\n              </ng-container>\n            </td>\n            <td class=\"text-center\" style=\"width: 7%;\">\n              <ng-container *ngIf=\"product.ordered_quantity >= product.initial_quantity\">\n                <span class=\"badge badge_success\">ORDERED</span>\n              </ng-container>\n              <ng-container\n                *ngIf=\"product.ordered_quantity < product.initial_quantity && product.ordered_quantity > 0\"\n              >\n                <span class=\"badge badge_warning\">PARTLY ORDERED</span>\n              </ng-container>\n              <ng-container *ngIf=\"product.ordered_quantity==0\">\n                <span class=\"badge badge_danger\">NOT ORDERED</span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n      <div\n        *ngIf=\"!isShowAll\"\n        class=\"paginator-wrapper\"\n        [class.paginator-wrapper_hide]=\"productsCount === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"productsCount\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n        <p-button\n          (click)=\"onShowAll(true)\"\n          class=\"paginator-all\"\n          type=\"button\"\n          styleClass=\"p-button-text\"\n        >\n          All\n        </p-button>\n      </div>\n    </div>\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {TreeNode} from 'primeng/api';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {TreeService} from '@shared/services/tree.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {finalize} from 'rxjs/operators';\nimport {PurchaseCategory} from '../../models/purchase-category';\nimport {PurchasingCategoryService} from '../../services/purchasing-category.service';\n\n@Component({\n  selector: 'pek-create-edit-purchasing-category',\n  templateUrl: './create-edit-purchasing-category.component.html',\n  styleUrls: ['./create-edit-purchasing-category.component.scss']\n})\nexport class CreateEditPurchasingCategoryComponent implements OnInit {\n  isSaving = false;\n\n  types = [\n    {name: 'Tangible', value: true},\n    {name: 'Intangible', value: false}\n  ];\n\n  isLoading = true;\n  categories: PurchaseCategory[] = [];\n  selectedNode: TreeNode<PurchaseCategory>;\n  categoriesTree: TreeNode<PurchaseCategory>[] = [];\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: [''],\n    is_material: [null, Validators.required],\n    parent: [null],\n    is_for_root: [true]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly treeService: TreeService,\n    private dialogRef: MatDialogRef<CreateEditPurchasingCategoryComponent>,\n    private purchasingCategoryService: PurchasingCategoryService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: PurchaseCategory }\n  ) {\n  }\n\n  ngOnInit() {\n    this.getCategories();\n\n    if (this.data.type === 'edit') {\n      this.form.patchValue(<any>this.data.category);\n\n      if (this.data.category.parent) {\n        this.form.get('is_for_root').patchValue(false);\n      }\n    }\n  }\n\n  findNode() {\n    const find = (nodes: TreeNode<PurchaseCategory>[]) => {\n      const foundNode = nodes.find(n => n.data.id === this.data.category.id);\n\n      if (foundNode) {\n        this.selectedNode = foundNode;\n        return;\n      } else {\n        nodes.forEach(node => {\n          node.expanded = true;\n          if (node.children.length > 0) {\n            find(node.children);\n          }\n        });\n      }\n    };\n\n    find(this.categoriesTree);\n  }\n\n  getCategories() {\n    this.purchasingCategoryService.getAll().subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n\n      if (this.data.type === 'edit') {\n        this.findNode();\n      }\n\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, {});\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, {});\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCategory();\n        break;\n      }\n    }\n  }\n\n  onChange() {\n    this.selectedNode = null;\n    this.form.get('parent').patchValue(null);\n  }\n\n  editCategory() {\n    this.purchasingCategoryService.update(<any>this.form.value, this.data.category.id).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(category => this.dialogRef.close(category));\n  }\n\n  createCategory() {\n    const send = <any>this.form.value;\n\n    this.purchasingCategoryService.create(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(category => this.dialogRef.close(category));\n  }\n\n  onSelection() {\n    this.form.get('parent').patchValue(this.selectedNode?.data?.id || null);\n  }\n\n}\n","<div class=\"create-edit-purchasing-category\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Purchasing Category\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input\n          pInputText\n          formControlName=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          id=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"name\">Type*</label>\n        <p-dropdown\n          [showClear]=\"true\"\n          [options]=\"types\"\n          formControlName=\"is_material\"\n          optionValue=\"value\"\n          optionLabel=\"name\"\n          placeholder=\"Choice Type\">\n        </p-dropdown>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          [rows]=\"2\"\n          pInputTextarea\n          [autoResize]=\"true\"\n          formControlName=\"description\"\n        ></textarea>\n      </div>\n\n      <div class=\"form-group box\">\n        <p-checkbox\n          inputId=\"root\"\n          formControlName=\"is_for_root\"\n          (onChange)=\"onChange()\"\n          [binary]=\"true\"\n        ></p-checkbox>\n        <label class=\"ml-2 mb-0\" for=\"root\">Is For Root</label>\n      </div>\n    </form>\n\n    <div class=\"table mt-2\" *ngIf=\"!form.get('is_for_root')?.value\">\n      <p-treeTable\n        [value]=\"categoriesTree\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedNode\"\n        [scrollable]=\"true\"\n        (selectionChange)=\"onSelection()\"\n        scrollHeight=\"calc(100vh - 46.25rem)\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 50%; padding-left: 48px\">Name</th>\n            <th style=\"width: 50%\">Comment</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n          <tr\n            [ttRow]=\"rowNode\"\n            [ttSelectableRow]=\"rowNode\"\n          >\n            <td style=\"width: 50%\">\n              <div class=\"table-toggle\">\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                <span>{{rowData.name}}</span>\n              </div>\n            </td>\n            <td style=\"width: 50%\">\n              {{rowData.comment}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid || (!this.form.get('is_for_root').value) && !selectedNode\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {TreeService} from '@shared/services/tree.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PurchasingCategoryService} from '../../services/purchasing-category.service';\nimport {PurchaseCategory} from '../../models/purchase-category';\nimport {TreeNode} from 'primeng/api';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {finalize} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-create-empty-purchase-chain',\n  templateUrl: './create-empty-purchase-chain.component.html',\n  styleUrls: ['./create-empty-purchase-chain.component.scss']\n})\nexport class CreateEmptyPurchaseChainComponent implements OnInit {\n  isSaving = false;\n  isLoading = true;\n\n  categories: PurchaseCategory[] = [];\n  selectedNode: TreeNode<PurchaseCategory>;\n  categoriesTree: TreeNode<PurchaseCategory>[] = [];\n\n  form = this.fb.group({\n    accounting_type: [1],\n    purchase_category: [<number>null, Validators.required],\n    supplier: [<number>null, Validators.required]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly treeService: TreeService,\n    private dialogRef: MatDialogRef<CreateEmptyPurchaseChainComponent>,\n    private purchasingCategoryService: PurchasingCategoryService,\n    private readonly orderService: OrderService,\n    @Inject(MAT_DIALOG_DATA) public data: {}\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.purchasingCategoryService.getAll().subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, {});\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, {});\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('supplier').patchValue(id || null);\n  }\n\n  onSelection() {\n    this.form.get('purchase_category').patchValue(this.selectedNode?.data?.id || null);\n  }\n\n  onCreate() {\n    this.isSaving = true;\n    this.orderService.create(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(order => this.dialogRef.close(order));\n  }\n}\n","<div class=\"create-empty-purchasing-chain\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      Create Empty Procurement Chain\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label>Supplier*</label>\n        <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n      </div>\n    </form>\n\n    <p class=\"mb-2 mt-2\">Parent Category*</p>\n\n    <div class=\"table mt-2\" *ngIf=\"!form.get('is_for_root')?.value\">\n      <p-treeTable\n        [value]=\"categoriesTree\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedNode\"\n        [scrollable]=\"true\"\n        (selectionChange)=\"onSelection()\"\n        scrollHeight=\"calc(100vh - 36.25rem)\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 50%; padding-left: 48px\">Name</th>\n            <th style=\"width: 50%\">Comment</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n          <tr\n            [ttRow]=\"rowNode\"\n            [ttSelectableRow]=\"rowNode\"\n          >\n            <td style=\"width: 50%\">\n              <div class=\"table-toggle\">\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                <span>{{rowData.name}}</span>\n              </div>\n            </td>\n            <td style=\"width: 50%\">\n              {{rowData.comment}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Create\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid\"\n      (click)=\"onCreate()\"\n    ></button>\n  </mat-dialog-actions>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PurchasingRouting } from './purchasing.routing';\nimport { PurchasingLayoutComponent } from './components/purchasing-layout/purchasing-layout.component';\nimport { PurchasingOrderStatusesComponent } from './components/purchasing-order-statuses/purchasing-order-statuses.component';\nimport { PurchasingChainsComponent } from './components/purchasing-chains/purchasing-chains.component';\nimport { PurchasingOrderPageComponent } from './components/purchasing-order-page/purchasing-order-page.component';\nimport {LayoutModule} from '../layout/layout.module';\nimport { PurchasingCategoriesComponent } from './components/purchasing-categories/purchasing-categories.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { CreateEditPurchasingCategoryComponent } from './modals/create-edit-purchasing-category/create-edit-purchasing-category.component';\nimport { PurchasingChainCreationListComponent } from './components/purchasing-chain-creation-list/purchasing-chain-creation-list.component';\nimport { PurchasingRequestsComponent } from './components/purchasing-requests/purchasing-requests.component';\nimport {TriStateCheckboxModule} from 'primeng/tristatecheckbox';\nimport { CreateEmptyPurchaseChainComponent } from './modals/create-empty-purchase-chain/create-empty-purchase-chain.component';\n\n\n@NgModule({\n  declarations: [\n    PurchasingLayoutComponent,\n    PurchasingOrderStatusesComponent,\n    PurchasingChainsComponent,\n    PurchasingOrderPageComponent,\n    PurchasingCategoriesComponent,\n    CreateEditPurchasingCategoryComponent,\n    PurchasingChainCreationListComponent,\n    PurchasingRequestsComponent,\n    CreateEmptyPurchaseChainComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    PurchasingRouting,\n    LayoutModule,\n    TriStateCheckboxModule\n  ]\n})\nexport class PurchasingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ProcurementLayoutComponent} from '../procurement/components/procurement-layout/procurement-layout.component';\nimport {ProcurementChainsComponent} from '../procurement/components/procurement-chains/procurement-chains.component';\nimport {\n  ProcurementOrderPageComponent\n} from '../procurement/components/procurement-order-page/procurement-order-page.component';\nimport {\n  AuxiliaryInvoicesTypesListComponent\n} from '../procurement/components/auxiliary-invoices-types-list/auxiliary-invoices-types-list.component';\nimport {\n  ProcurementChainCreationListComponent\n} from '../procurement/components/procurement-chain-creation-list/procurement-chain-creation-list.component';\nimport {\n  ProcurementOrderStatusesComponent\n} from '../procurement/components/procurement-order-statuses/procurement-order-statuses.component';\nimport {PurchasingLayoutComponent} from './components/purchasing-layout/purchasing-layout.component';\nimport {PurchasingChainsComponent} from './components/purchasing-chains/purchasing-chains.component';\nimport {PurchasingOrderPageComponent} from './components/purchasing-order-page/purchasing-order-page.component';\nimport {\n  PurchasingOrderStatusesComponent\n} from './components/purchasing-order-statuses/purchasing-order-statuses.component';\nimport {PurchasingCategoriesComponent} from './components/purchasing-categories/purchasing-categories.component';\nimport {\n  PurchasingChainCreationListComponent\n} from './components/purchasing-chain-creation-list/purchasing-chain-creation-list.component';\nimport {PurchasingRequestsComponent} from './components/purchasing-requests/purchasing-requests.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PurchasingLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'chains', pathMatch: 'full'},\n      {\n        path: 'chains',\n        children: [\n          {path: '', title: 'Procurement Chains', component: PurchasingChainsComponent},\n          {path: 'order/:id', title: 'Procurement Order', component: PurchasingOrderPageComponent},\n        ]\n      },\n      {path: 'order-products', title: 'Procurement Chain Creation', component: PurchasingChainCreationListComponent},\n      {path: 'statuses', title: 'Order Statuses', component: PurchasingOrderStatusesComponent},\n      {path: 'categories', title: 'Procurement Categories', component: PurchasingCategoriesComponent},\n      {path: 'requests', title: 'Procurement Requests', component: PurchasingRequestsComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PurchasingRouting { }\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {Observable} from 'rxjs';\nimport {PurchaseCategory} from '../models/purchase-category';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {\n  CreateEditPurchasingCategoryComponent\n} from '../modals/create-edit-purchasing-category/create-edit-purchasing-category.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchasingCategoryService {\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'purchase_categories/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<PurchaseCategory[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: PurchaseCategory[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getAll(): Observable<PurchaseCategory[]> {\n    return this.httpClient.get<{ data: PurchaseCategory[] }>(this.API_URL + this.url + 'all/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(category: Partial<PurchaseCategory>): Observable<PurchaseCategory> {\n    return this.httpClient.post<{ data: PurchaseCategory }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(category: Partial<PurchaseCategory>, id: number): Observable<PurchaseCategory> {\n    return this.httpClient.patch<{ data: PurchaseCategory }>(this.API_URL + this.url + `${id}/`, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\n  }\n\n  createEditCategory(type: ModalActionType, category?: PurchaseCategory): Observable<PurchaseCategory> {\n    return this.dialog\n      .open<CreateEditPurchasingCategoryComponent>(CreateEditPurchasingCategoryComponent, {\n        width: '54rem',\n        height: 'auto',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {QrCodes} from '../../qr-code';\n\n@Component({\n  selector: 'pek-print-qr-codes',\n  templateUrl: './print-qr-codes.component.html',\n  styleUrls: ['./print-qr-codes.component.scss']\n})\nexport class PrintQrCodesComponent implements OnInit {\n  @Input() qrCodes: QrCodes;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"print-qr-codes\">\n  <ul class=\"print-qr-codes__list\">\n    <li\n      *ngFor=\"let qrCode of qrCodes.without_serial\"\n      class=\"print-qr-codes__item\"\n    >\n      <pek-qr-code-item [qrCode]=\"qrCode\"></pek-qr-code-item>\n    </li>\n    <li\n      *ngFor=\"let qrCode of qrCodes.with_serial\"\n      class=\"print-qr-codes__item\"\n    >\n      <pek-qr-code-item [qrCode]=\"qrCode\"></pek-qr-code-item>\n    </li>\n  </ul>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {QrCode, QrCodes} from '../../qr-code';\n\n@Component({\n  selector: 'pek-qr-code-item',\n  templateUrl: './qr-code-item.component.html',\n  styleUrls: ['./qr-code-item.component.scss']\n})\nexport class QrCodeItemComponent implements OnInit {\n  @Input() qrCode: QrCode;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"qr-code-item\">\n  <img [src]=\"qrCode.qr_src\" [alt]=\"qrCode.name\">\n  <div class=\"qr-code-item__content\">\n    <p *ngIf=\"qrCode?.serial_number\">{{qrCode.serial_number}}</p>\n    <p>{{qrCode.code}}</p>\n    <p>{{qrCode.name}}</p>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {QrCode, QrCodes} from '../../qr-code';\n\n@Component({\n  selector: 'pek-qr-code-modal',\n  templateUrl: './qr-code-modal.component.html',\n  styleUrls: ['./qr-code-modal.component.scss']\n})\nexport class QrCodeModalComponent implements OnInit {\n\n  qrCodesWithOutSerial: QrCode[] = [];\n  qrCodesWithSerial: QrCode[] = [];\n\n  constructor(\n    private dialogRef: MatDialogRef<QrCodeModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public qrCodes: QrCodes\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.qrCodesWithOutSerial = this.qrCodes.without_serial;\n    this.qrCodesWithSerial = this.qrCodes.with_serial;\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">Generated QR-codes</h2>\n  <button\n    pButton\n    type=\"button\"\n    icon=\"pi pi-print\"\n    label=\"Print QR Codes\"\n    (click)=\"onPrint()\"\n  ></button>\n</div>\n\n<mat-dialog-content>\n  <div class=\"qr-code-modal mt-3\">\n    <div class=\"qr-code-modal__box\">\n      <h2>Generated QR-codes With Out Serial Numbers</h2>\n    </div>\n\n    <ul class=\"qr-code-modal__list\" *ngIf=\"qrCodes.without_serial.length > 0; else empty\">\n      <li\n        *ngFor=\"let qrCode of qrCodes.without_serial\"\n        class=\"qr-code-modal__item\"\n      >\n        <pek-qr-code-item [qrCode]=\"qrCode\"></pek-qr-code-item>\n      </li>\n    </ul>\n\n    <div class=\"qr-code-modal__box mt-5\">\n      <h2>Generated QR-codes With Serial Numbers</h2>\n    </div>\n\n    <ul class=\"qr-code-modal__list\" *ngIf=\"qrCodes.with_serial.length > 0; else empty\">\n      <li\n        *ngFor=\"let qrCode of qrCodes.with_serial\"\n        class=\"qr-code-modal__item\"\n      >\n        <pek-qr-code-item [qrCode]=\"qrCode\"></pek-qr-code-item>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"qr-code-modal__print\">\n    <pek-print-qr-codes [qrCodes]=\"qrCodes\"></pek-print-qr-codes>\n  </div>\n\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n</mat-dialog-actions>\n\n<ng-template #empty>\n  <p class=\"empty\">No QR Codes</p>\n</ng-template>\n","import {AfterViewInit, Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\r\nimport QrScanner from 'qr-scanner';\r\nimport {auditTime, Subject} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-qr-code-scanner',\r\n  templateUrl: './qr-code-scanner.component.html',\r\n  styleUrls: ['./qr-code-scanner.component.scss']\r\n})\r\nexport class QrCodeScannerComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Output() scanned: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() cancel: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @ViewChild('scanner') video: ElementRef;\r\n\r\n  scanner: QrScanner;\r\n  isScanned = false;\r\n  isPending = true;\r\n\r\n  stream$ = new Subject<any>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.stream$.pipe(\r\n      auditTime(1000),\r\n    ).subscribe(data => {\r\n      this.scanned.next(data);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    document.body.style.overflow = 'hidden';\r\n    document.querySelector<HTMLElement>('.layout').style.overflow = 'hidden';\r\n\r\n    setTimeout(() => this.initScanner());\r\n  }\r\n\r\n  initScanner() {\r\n    this.scanner = new QrScanner(this.video.nativeElement, result => this.setResult(result), {\r\n      highlightScanRegion: true,\r\n      highlightCodeOutline: true,\r\n    });\r\n\r\n    this.scanner.start().then();\r\n  }\r\n\r\n  setResult(result) {\r\n    try {\r\n      this.stream$.next(JSON.parse(result.data));\r\n    } catch (e) {\r\n      console.log('Not valid data found');\r\n    }\r\n  }\r\n\r\n  getFrame = () => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = this.video.nativeElement.videoWidth;\r\n    canvas.height = this.video.nativeElement.videoHeight;\r\n    canvas.getContext('2d', {willReadFrequently: true}).drawImage(this.video.nativeElement, 0, 0);\r\n    return canvas.toDataURL('image/png');\r\n  };\r\n\r\n  onCancel() {\r\n    this.cancel.emit(true)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.style.overflow = 'initial';\r\n    document.querySelector<HTMLElement>('.layout').style.overflow = 'initial';\r\n    this.scanner.stop();\r\n    this.scanner.destroy();\r\n    this.stream$.next(true);\r\n    this.stream$.complete();\r\n  }\r\n}\r\n","<div class=\"qr-code-scanner\">\n  <div class=\"qr-code-scanner__video\" *ngIf=\"!isScanned\">\n    <video id=\"qr-video\" #scanner></video>\n  </div>\n\n  <div class=\"qr-code-scanner__border qr-code-scanner__border_top-left\"></div>\n  <div class=\"qr-code-scanner__border qr-code-scanner__border_top-right\"></div>\n  <div class=\"qr-code-scanner__border qr-code-scanner__border_bottom-left\"></div>\n  <div class=\"qr-code-scanner__border qr-code-scanner__border_bottom-right\"></div>\n\n  <button class=\"qr-code-scanner__cancel-button\" (click)=\"onCancel()\">\n    Cancel\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QrCodeModalComponent } from './components/qr-code-modal/qr-code-modal.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { PrintQrCodesComponent } from './components/print-qr-codes/print-qr-codes.component';\nimport { QrCodeItemComponent } from './components/qr-code-item/qr-code-item.component';\nimport { QrCodeScannerComponent } from './components/qr-code-scanner/qr-code-scanner.component';\n\n\n\n@NgModule({\n  declarations: [\n    QrCodeModalComponent,\n    PrintQrCodesComponent,\n    QrCodeItemComponent,\n    QrCodeScannerComponent\n  ],\n  exports: [\n    QrCodeScannerComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class QrCodeModule { }\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {QrCodeModalComponent} from './components/qr-code-modal/qr-code-modal.component';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {map, tap} from 'rxjs/operators';\nimport {QrCodes} from './qr-code';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QrCodeService {\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly http: HttpClient,\n    private domSanitizer: DomSanitizer,\n  ) {\n  }\n\n  showQrCodeModal(qrCodes: QrCodes): Observable<void> {\n    return this.dialog\n      .open<QrCodeModalComponent>(QrCodeModalComponent, {\n        width: '80rem',\n        data: qrCodes,\n        height: 'auto',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  generateQrCodes(send: any): Observable<QrCodes> {\n    return this.http.post<{ data: QrCodes }>(environment.base_url + 'warehouse/generate_qr_codes/', send).pipe(\n      map(response => response.data),\n      tap(qrCodes => {\n        qrCodes.without_serial.forEach(code => {\n          code.qr_src = this.domSanitizer.bypassSecurityTrustUrl('data:image/svg+xml;base64,' + code.qr_src);\n        });\n\n        const newQrCodesSerials = [];\n\n        qrCodes.with_serial.forEach(code => {\n          // @ts-ignore\n          code.qr_codes.forEach(c => {\n            c.qr_src = this.domSanitizer.bypassSecurityTrustUrl('data:image/svg+xml;base64,' + c.qr_src);\n            newQrCodesSerials.push(c)\n          })\n        });\n\n        qrCodes.with_serial = [...newQrCodesSerials];\n      }),\n      tap(qrCodes => this.showQrCodeModal(qrCodes))\n    );\n  }\n}\n","import {SafeUrl} from '@angular/platform-browser';\r\n\r\nexport class QrCode {\r\n  code: string;\r\n  name: string;\r\n  serial_number?: string;\r\n  qr_src: string | SafeUrl;\r\n}\r\n\r\nexport class QrCodes {\r\n  with_serial: QrCode[];\r\n  without_serial: QrCode[];\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {SalesStatus} from '../../models/sales-chain';\nimport {SalesStatusService} from '../../services/sales-status.service';\n\n@Component({\n  selector: 'pek-create-edit-sales-status',\n  templateUrl: './create-edit-sales-status.component.html',\n  styleUrls: ['./create-edit-sales-status.component.scss']\n})\nexport class CreateEditSalesStatusComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<CreateEditSalesStatusComponent>,\n    private readonly salesStatusService: SalesStatusService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, status: SalesStatus }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.status.id));\n      this.form.patchValue(this.data.status);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createSalesStatus();\n        break;\n      }\n      case 'edit': {\n        this.editSalesStatus();\n        break;\n      }\n    }\n  }\n\n  createSalesStatus() {\n    const send = <Partial<SalesStatus>>this.form.value;\n    this.salesStatusService.create(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editSalesStatus() {\n    const send = <Partial<SalesStatus>>this.form.value;\n    this.salesStatusService.update(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Sales Status\n  </h2>\n</div>\n\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {Observable, of} from 'rxjs';\nimport {SalesStatus} from '../models/sales-chain';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../warehouse/models/warehouse';\nimport {\n  CreateEditWarehouseComponent\n} from '../../warehouse/modals/create-edit-warehouse/create-edit-warehouse.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditSalesStatusComponent} from '../modals/create-edit-sales-status/create-edit-sales-status.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesStatusService {\n\n  statuses: SalesStatus[];\n\n  API_URL = environment.base_url + environment.sales_url;\n  readonly url = 'status/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<SalesStatus[]> {\n    if (this.statuses) {\n      return of(this.statuses);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: SalesStatus[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => {\n        const statuses = response.data;\n        this.statuses = statuses;\n        return statuses;\n      }));\n  }\n\n  create(status: Partial<SalesStatus>): Observable<SalesStatus> {\n    return this.httpClient.post<{ data: SalesStatus }>(this.API_URL + this.url, status).pipe(\n      map(response => response.data)\n    );\n  }\n\n\n  update(status: Partial<SalesStatus>): Observable<SalesStatus> {\n    return this.httpClient.put<{ data: SalesStatus }>(this.API_URL + this.url + status.id + '/', status).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(status: SalesStatus): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + status.id + '/');\n  }\n\n  changeOrder(status: SalesStatus, order: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + status.id + '/change_order/', {\n      new_order: order,\n    });\n  }\n\n  createEditSalesStatusModal(type: ModalActionType, status?: SalesStatus): Observable<SalesStatus> {\n    return this.dialog\n      .open<CreateEditSalesStatusComponent>(CreateEditSalesStatusComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, status},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\r\n\r\n@Component({\r\n  selector: 'pek-categories-tree-picker',\r\n  templateUrl: './categories-tree-picker.component.html',\r\n  styleUrls: ['./categories-tree-picker.component.scss']\r\n})\r\nexport class CategoriesTreePickerComponent implements OnInit, OnDestroy, OnChanges {\r\n  categoriesTree: TreeNode<Category>[] = [];\r\n  isLoadingCategories = true;\r\n  @Output() categorySelected: EventEmitter<Category> = new EventEmitter<Category>();\r\n  categories: Category[];\r\n  @Input() isModal = false;\r\n  @Input() currentCategoryId: number;\r\n\r\n  private destroy$ = new Subject();\r\n  selectedCategory: TreeNode<Category>;\r\n\r\n  constructor(\r\n    private readonly productCategoriesService: CategoriesService,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.findCategory()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n  }\r\n\r\n  getCategories() {\r\n    this.productCategoriesService.get([{name: 'is_for_root', value: false}]).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(categories => {\r\n      this.categories = categories;\r\n      this.createTree();\r\n      this.findCategory();\r\n      this.isLoadingCategories = false;\r\n    });\r\n  }\r\n\r\n  findCategory() {\r\n    if (this.currentCategoryId) {\r\n\r\n      const find = (nodes: TreeNode<Category>[]) => {\r\n        nodes.forEach(node => {\r\n          if (node.data.id === this.currentCategoryId) {\r\n            this.selectedCategory = node;\r\n            return;\r\n          } else {\r\n            find(node.children);\r\n          }\r\n        });\r\n      };\r\n      find(this.categoriesTree);\r\n    } else {\r\n      this.selectedCategory = null\r\n    }\r\n  }\r\n\r\n  createTree() {\r\n    const getChildren = (nodes: TreeNode<Category>[]) => {\r\n      nodes.forEach(node => {\r\n        const children = this.categories.filter(c => c.parent === node.data.id);\r\n\r\n        if (children.length > 0) {\r\n          node.children = children.map(category => {\r\n            return {\r\n              label: category.name,\r\n              data: category,\r\n              children: []\r\n            };\r\n          });\r\n\r\n          getChildren(node.children);\r\n        }\r\n      });\r\n    };\r\n\r\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\r\n      return {\r\n        label: category.name,\r\n        data: <Category>category,\r\n        children: [],\r\n      };\r\n    });\r\n\r\n    getChildren(tree);\r\n    this.categoriesTree = [...tree];\r\n  }\r\n\r\n  onSelectCategory(node: TreeNode<Category>) {\r\n    if (node) {\r\n      this.categorySelected.emit(node.data);\r\n    } else {\r\n      this.categorySelected.emit(null);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<label>Categories</label>\r\n<div class=\"warehouse-items__tree-wrapper\" *ngIf=\"!isLoadingCategories; else spinner\">\r\n  <div class=\"warehouse-items__tree\" [class.modal]=\"isModal\">\r\n    <p-tree\r\n      [metaKeySelection]=\"false\"\r\n      [value]=\"categoriesTree\"\r\n      (selectionChange)=\"onSelectCategory($event)\"\r\n      [(selection)]=\"selectedCategory\"\r\n      selectionMode=\"single\"\r\n    >\r\n      <ng-template let-node pTemplate=\"default\">\r\n        {{node.data.name}}\r\n      </ng-template>\r\n    </p-tree>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"warehouse-items__spinner\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {NomenclatureImage} from '@shared/models/nomenclature';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {fromEventPattern, Observable, Subject, takeUntil} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-images-slider',\r\n  templateUrl: './images-slider.component.html',\r\n  styleUrls: ['./images-slider.component.scss']\r\n})\r\nexport class ImagesSliderComponent implements OnInit, AfterViewInit {\r\n  @Output() choiceImages: EventEmitter<File[]> = new EventEmitter<File[]>();\r\n  @Output() removeImage: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @Input() images: NomenclatureImage[] = [];\r\n  @Input() width: string;\r\n  @Input() height: string;\r\n\r\n  @ViewChild('inputFile') inputFile: ElementRef;\r\n  @ViewChild('slider') slider: ElementRef;\r\n  onPaste$: Observable<any>;\r\n  private destroy$ = new Subject();\r\n  isImagePasteOpened = false;\r\n  activeSlideIndex = 1;\r\n  isInit = false;\r\n\r\n  sliderWidth = 0;\r\n  offsetSlider = 0;\r\n\r\n  constructor(\r\n    private readonly modalService: ModalService,\r\n    private renderer: Renderer2\r\n  ) {\r\n    // this.createOnPastObservable(renderer);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.onPasteImage();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.images.length > 0) {\r\n      this.sliderWidth = this.slider.nativeElement.offsetWidth;\r\n    }\r\n\r\n    setTimeout(() => this.isInit = true);\r\n  }\r\n\r\n  onSlideNext() {\r\n    if (this.activeSlideIndex === this.images.length) {\r\n      this.offsetSlider = 0;\r\n      this.activeSlideIndex = 1;\r\n    } else {\r\n      this.offsetSlider = this.sliderWidth * this.activeSlideIndex;\r\n      this.activeSlideIndex++;\r\n    }\r\n  }\r\n\r\n  onSlidePrev() {\r\n    if (this.activeSlideIndex === 1) {\r\n      this.offsetSlider = this.sliderWidth * (this.images.length - 1);\r\n      this.activeSlideIndex = this.images.length;\r\n    } else {\r\n      this.offsetSlider = (this.activeSlideIndex - 2) * this.sliderWidth;\r\n      this.activeSlideIndex--;\r\n    }\r\n  }\r\n\r\n  onImageManipulation($event: Event, files: EventTarget) {\r\n    // @ts-ignore\r\n    const newFiles: File[] = Array.from(files.files);\r\n\r\n    if (newFiles.length > 0) {\r\n      if (this.images.length === 0) {\r\n        this.activeSlideIndex = 1;\r\n        this.sliderWidth = this.slider.nativeElement.offsetWidth;\r\n      }\r\n\r\n      this.choiceImages.emit(newFiles);\r\n      this.inputFile.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  onRemoveImage() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.removeImage.emit(this.activeSlideIndex - 1);\r\n        if (this.activeSlideIndex !== 1) {\r\n          this.onSlidePrev();\r\n          this.inputFile.nativeElement.value = '';\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onPasteImage() {\r\n    this.onPaste$.subscribe(event => {\r\n      if (!this.isImagePasteOpened) {\r\n        this.isImagePasteOpened = true;\r\n        const item = event.clipboardData.items[0];\r\n\r\n        if (item.type.indexOf('image') === 0) {\r\n          const blob = item.getAsFile();\r\n\r\n          const reader = new FileReader();\r\n          reader.onload = (event) => {\r\n\r\n            this.modalService.showPasteImageModal(event.target.result, blob).subscribe(confirm => {\r\n              this.isImagePasteOpened = false;\r\n              if (confirm) {\r\n\r\n                if (this.images.length === 0) {\r\n                  this.activeSlideIndex = 1;\r\n                  this.sliderWidth = this.slider.nativeElement.offsetWidth;\r\n                }\r\n\r\n                let send: File[] = [confirm];\r\n                this.choiceImages.emit(send);\r\n                this.inputFile.nativeElement.value = '';\r\n              }\r\n            });\r\n          };\r\n\r\n          reader.readAsDataURL(blob);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private createOnPastObservable(renderer: Renderer2) {\r\n    let removePastEventListener: () => void;\r\n    const createPastEventListener = (\r\n      handler: (e: Event) => boolean | void\r\n    ) => {\r\n      removePastEventListener = renderer.listen(\"document\", \"paste\", handler);\r\n    };\r\n\r\n    this.onPaste$ = fromEventPattern<Event>(createPastEventListener, () =>\r\n      removePastEventListener()\r\n    ).pipe(takeUntil(this.destroy$));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.destroy();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onShowFullImage() {\r\n    this.modalService.showImageGallery(this.images, null, this.activeSlideIndex).subscribe();\r\n  }\r\n\r\n  fileAdded(file: File) {\r\n    this.choiceImages.emit([file]);\r\n  }\r\n}\r\n","<div class=\"images-slider\"\r\n     pekPasteScreenImage [trackMousePosition]=\"true\" (imageAdded)=\"fileAdded($event)\"\r\n     #slider>\r\n  <div class=\"images-slider__slider\"\r\n       [style.width]=\"width\"\r\n       [style.height]=\"height\"\r\n       *ngIf=\"images.length > 0; else noneImages\"\r\n  >\r\n    <div class=\"images-slider__wrapper\">\r\n      <div\r\n        class=\"images-slider__inner\"\r\n        [class.images-slider__inner_init]=\"isInit\"\r\n        [class.slides-none]=\"images.length === 0\"\r\n        [style.width]=\"sliderWidth * images.length + 'px'\"\r\n        [style.transform]=\"'translateX(-' + offsetSlider + 'px)'\"\r\n      >\r\n        <div\r\n          class=\"images-slider__slide\"\r\n          *ngFor=\"let image of images; let idx = index\"\r\n          (click)=\"onShowFullImage()\"\r\n        >\r\n          <img [src]=\"image.image\" [alt]=\"'Image ' + idx + 1\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <i\r\n      *ngIf=\"images.length > 1\"\r\n      class=\"pi pi-chevron-left images-slider__btn images-slider__btn_prev\"\r\n      (click)=\"onSlidePrev()\"\r\n    >\r\n    </i>\r\n    <i\r\n      *ngIf=\"images.length > 1\"\r\n      class=\"pi pi-chevron-right images-slider__btn images-slider__btn_next\"\r\n      (click)=\"onSlideNext()\"\r\n    ></i>\r\n  </div>\r\n\r\n  <div class=\"images-slider__bottom\">\r\n    <label for=\"file\" class=\"images-slider__file-picker\">\r\n      <input\r\n        #inputFile\r\n        id=\"file\"\r\n        multiple\r\n        type=\"file\"\r\n        (input)=\"onImageManipulation($event, $event.target)\" accept=\"image/*\"\r\n      >\r\n      <span>\r\n        <i class=\"pi pi-upload\"></i>\r\n        Choice Image\r\n      </span>\r\n    </label>\r\n\r\n    <div class=\"images-slider__count\" *ngIf=\"images.length > 1\">\r\n      {{activeSlideIndex}} / {{images.length}}\r\n    </div>\r\n\r\n    <button class=\"images-slider__remove\" (click)=\"onRemoveImage()\" *ngIf=\"images.length > 0\">\r\n      <i class=\"pi pi-times\"></i>\r\n      Remove Active Image\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #noneImages>\r\n  <div [style.width]=\"width\" [style.height]=\"height\" class=\"images-slider__empty\">\r\n    <i class=\"pi pi-image\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {Paginator} from 'primeng/paginator';\nimport {debounceTime, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-nomenclature-picker',\n  templateUrl: './nomenclature-picker.component.html',\n  styleUrls: ['./nomenclature-picker.component.scss']\n})\nexport class NomenclaturePickerComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  @Output() selectProduct: EventEmitter<Nomenclature> = new EventEmitter<Nomenclature>();\n  @Input() nomenclatureType: ENomenclatureType;\n  @Input() paginationAbsolute = false;\n\n  countNomenclatures = 0;\n\n  isLoading = true;\n  isStartOnePage = false;\n  nomenclatures: Nomenclature[] = [];\n  selectedNomenclature: Nomenclature;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1],\n    name: [''],\n    code: [''],\n    type: [null],\n  });\n\n  queryKey = 'name:/code:/type:null';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      fromEvent(this.searchBoxName.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxName.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n\n      fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxCode.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  searchNomenclatures() {\n    this.isLoading = true;\n    this.destroy$.next(true);\n    this.selectedNomenclature = null;\n    this.onSelectNomenclature();\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/type:${this.searchForm.get('type').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true},\n    ];\n\n    if (this.searchForm.get('name').value) {\n      this.query.push({\n        name: 'name',\n        value: this.searchForm.get('name').value\n      });\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({\n        name: 'code',\n        value: this.searchForm.get('code').value\n      });\n    }\n\n    if (this.searchForm.get('type').value !== null) {\n      this.query.push({\n        name: 'type',\n        value: this.searchForm.get('type').value\n      });\n    }\n\n    this.getNomenclatures();\n  }\n\n  onSelectNomenclature() {\n    this.selectProduct.emit(this.selectedNomenclature);\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  selectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.searchNomenclatures();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div\n  class=\"nomenclature-picker\"\n  [class.nomenclature-picker_paginator-absolute]=\"paginationAbsolute\"\n>\n  <div class=\"nomenclature-picker__form\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"form-box form-box_3\">\n        <div class=\"form-group\">\n          <label for=\"code\">Code</label>\n          <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\n        </div>\n        <div class=\"form-group\">\n          <label>Type</label>\n          <pek-nomenclature-type-picker\n            (choiceNomenclatureType)=\"selectNomenclatureType($event)\"\n          ></pek-nomenclature-type-picker>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"table-pagination-preloader\">\n    <p-table\n      [value]=\"nomenclatures\"\n      [rows]=\"10\"\n      selectionMode=\"single\"\n      [(selection)]=\"selectedNomenclature\"\n      (selectionChange)=\"onSelectNomenclature()\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th class=\"text-center\" style=\"width: 7%\">#</th>\n          <th style=\"width: 22%\">Code</th>\n          <th style=\"width: 30%\">Name</th>\n          <th style=\"width: 10%\">UOM</th>\n          <th style=\"width: 15%;\">Technology</th>\n          <th style=\"width: 15%\" class=\"text-center\">Category</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n        <tr [pSelectableRow]=\"nomenclature\">\n          <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n          <td style=\"width: 22%\">{{nomenclature.code}}</td>\n          <td style=\"width: 30%\">{{nomenclature.name}}</td>\n          <td\n            style=\"width: 10%\">{{nomenclature.category?.unit_of_measure?.symbol ? nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\n          <td style=\"width: 15%\">\n            <div *ngFor=\"let technology of nomenclature.technologies\">\n              {{technology.name}}\n            </div>\n          </td>\n          <td style=\"width: 15%\" class=\"text-center\">{{nomenclature.category?.name}}</td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n    </div>\n  </div>\n  <p-paginator\n    #paginator\n    [class.hide]=\"nomenclatures.length === 0\"\n    [rows]=\"10\"\n    [totalRecords]=\"countNomenclatures\"\n    (onPageChange)=\"paginate($event)\"\n  >\n  </p-paginator>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ListProduct} from '../../../warehouse/models/list-product';\r\nimport {OrderMaterial, OrderProduct} from '../../../procurement/models/order-product';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {PaymentService} from '../../../payments/services/payment.service';\r\nimport {Payment} from '../../../payments/models/payment';\r\nimport {ServiceInvoiceService} from '@shared/services/service-invoice.service';\r\nimport {ServiceInvoicePayment} from '../../../payments/models/service-invoice-payment';\r\nimport {ServiceInvoicePaymentService} from '../../../payments/services/service-invoice-payment.service';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {environment} from '@env/environment';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {OrderSupplier, OrderSupplierConfirmation} from '../../../confirmation/models/order-supplier';\r\nimport {OrderSupplierService} from '../../../confirmation/services/order-supplier.service';\r\nimport {RequestService} from '../../../warehouse/services/request.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {OrderTechnicalEquipmentsService} from '../../../warehouse/services/order-technical-equipments.service';\r\nimport {PurchaseCategory} from '../../../purchasing/models/purchase-category';\r\nimport {PurchasingCategoryService} from '../../../purchasing/services/purchasing-category.service';\r\n\r\nexport type OrderType = 'procurement' | 'outsourcing' | 'purchase';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-order-page',\r\n  templateUrl: './order-page.component.html',\r\n  styleUrls: ['./order-page.component.scss']\r\n})\r\nexport class OrderPageComponent implements OnInit {\r\n  @Input() orderId: number;\r\n  @Input() orderType: OrderType;\r\n  @Output() loaded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  isPurchaseOrderNonMaterial = false;\r\n\r\n  orderSuppliers: OrderSupplier[] = [];\r\n  selectedOrderSupplier: OrderSupplier = null;\r\n\r\n  link = environment.link_url + 'dash/';\r\n\r\n  productMenuItems: MenuItem[] = [{\r\n    label: 'Selected Item',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditOrderProductQuantity(),\r\n      },\r\n      {\r\n        label: 'Date of Delivery',\r\n        icon: 'pi pi-calendar',\r\n        command: () => this.onEditOrderProductDeliveryDate(),\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveOrderProduct(),\r\n      }\r\n    ]\r\n  }];\r\n\r\n  proformaInvoiceMenuItems: MenuItem[] = [{\r\n    label: 'Selected Proforma Invoice',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToProformaInvoicePage()\r\n      },\r\n      {\r\n        label: 'Files',\r\n        icon: 'pi pi pi-file',\r\n        command: () => this.openProformaInvoiceFilesModal()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveProformaInvoice()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  invoiceMenuItems: MenuItem[] = [{\r\n    label: 'Selected Invoice',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToInvoicePage()\r\n      },\r\n      {\r\n        label: 'Files',\r\n        icon: 'pi pi pi-file',\r\n        command: () => this.openInvoiceFilesModal()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveInvoice()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  serviceInvoiceMenuItems: MenuItem[] = [{\r\n    label: 'Selected Auxiliary Invoice',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToServiceInvoicePage()\r\n      },\r\n      {\r\n        label: 'Files',\r\n        icon: 'pi pi pi-file',\r\n        command: () => this.openServiceInvoiceFilesModal()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveServiceInvoice()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  orderSupplierMenuItems: MenuItem[] = [{\r\n    label: 'Selected Supplier',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditOrderSupplier()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveOrderSupplier()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  readonly deletion = new Set<number>();\r\n  readonly addition = new Set<number>();\r\n\r\n  isSuppliersConfirmed = false;\r\n\r\n  isLoading = true;\r\n  isLoadingProducts = true;\r\n  isLoadingInvoices = true;\r\n  isLoadingPayments = true;\r\n  isLoadingServiceInvoices = true;\r\n  isLoadingServicePayments = true;\r\n  isLoadingFiles = true;\r\n  isLoadingSuppliers = true;\r\n  isLoadingTechnicalEquipments = true;\r\n  isLoadingPurchasingCategories = true;\r\n\r\n  products: OrderProduct[] = [];\r\n  proformaInvoices: Invoice[] = [];\r\n  invoices: Invoice[] = [];\r\n  payments: Payment[] = [];\r\n  orderMaterials: OrderMaterial[] = [];\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  purchasingCategories: PurchaseCategory[] = [];\r\n  files: any[] = [];\r\n\r\n  serviceProformaInvoices: Invoice[] = [];\r\n  serviceInvoices: Invoice[] = [];\r\n  servicePayments: ServiceInvoicePayment[] = [];\r\n\r\n\r\n  selectedInvoice: Invoice;\r\n  selectedProduct: OrderProduct;\r\n  selectedProformaInvoice: Invoice;\r\n  selectedPayment: Payment;\r\n  selectedServiceInvoice: Invoice;\r\n  selectedServicePayment: ServiceInvoicePayment;\r\n  selectedFile: any;\r\n\r\n  order: Order;\r\n  orderSupplierConfirmation: OrderSupplierConfirmation;\r\n  selectedPurchasingCategoryId: number;\r\n\r\n  constructor(\r\n    private readonly orderService: OrderService,\r\n    private readonly invoiceService: InvoiceService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly serviceInvoiceService: ServiceInvoiceService,\r\n    private readonly paymentService: PaymentService,\r\n    private readonly modalService: ModalService,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly servicePaymentService: ServiceInvoicePaymentService,\r\n    private readonly orderSupplierService: OrderSupplierService,\r\n    private readonly requestService: RequestService,\r\n    private readonly orderTechnicalEquipmentService: OrderTechnicalEquipmentsService,\r\n    private readonly purchasingCategoryService: PurchasingCategoryService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrder();\r\n    this.getInvoices();\r\n    this.getPayments();\r\n    this.getServiceInvoices();\r\n    this.getServicePayments();\r\n    this.getFiles();\r\n\r\n    if (this.orderType === 'outsourcing') {\r\n      this.getOrderSuppliers();\r\n      this.getOrderTechnicalEquipments();\r\n    }\r\n\r\n    this.orderService.filesModal$.pipe(\r\n      untilDestroyed(this),\r\n    ).subscribe(() => this.openOrderFilesModal());\r\n\r\n    this.orderService.editOrderModal$.pipe(\r\n      untilDestroyed(this),\r\n    ).subscribe(() => this.openEditOrderModal());\r\n  }\r\n\r\n  getOrderSuppliers() {\r\n    this.orderSupplierService.getOrderSupplierListForOrder(this.orderId).subscribe(orderSuppliers => {\r\n      this.orderSuppliers = orderSuppliers;\r\n      this.isSuppliersConfirmed = orderSuppliers.some(c => c.confirm_status === 2);\r\n      this.isLoadingSuppliers = false;\r\n    });\r\n\r\n    this.orderSupplierService.getOrderSupplierConfirmation(this.orderId).subscribe(orderSuppliers => {\r\n      this.orderSupplierConfirmation = orderSuppliers[0];\r\n    });\r\n  }\r\n\r\n  getOrder() {\r\n    this.orderService.getById(this.orderId).subscribe(order => {\r\n      order.statuses.map(x => x.estimated_date_sort = new Date(x.estimated_date));\r\n      order.statuses.sort((a, b) => a.estimated_date_sort - b.estimated_date_sort || a.is_active - b.is_active);\r\n      this.order = order;\r\n      this.loaded.next();\r\n      this.isLoading = false;\r\n\r\n      this.getProducts();\r\n\r\n      if (!this.order.purchase_category?.is_material) {\r\n        this.isPurchaseOrderNonMaterial = true;\r\n      }\r\n\r\n      if (this.orderType === 'purchase') {\r\n        this.getPurchasingCategories();\r\n      }\r\n    });\r\n  }\r\n\r\n  getProducts() {\r\n    this.orderProductService.get([\r\n      {name: 'order', value: this.orderId}\r\n    ]).subscribe(products => {\r\n      products.forEach((product, idx) => {\r\n\r\n        product.details = this.order.order_products[idx];\r\n        product.isReady = product.is_technology_ready ? product.is_technology_ready : false;\r\n\r\n        if (!this.products.find(p => p.nomenclature.id === product.nomenclature.id)) {\r\n          product.quantity = products.filter(p => p.nomenclature.id === product.nomenclature.id).reduce((sum, p) => sum + p.quantity, 0);\r\n\r\n          const rootLists = products\r\n            .filter(p => p.nomenclature.id === product.nomenclature.id && product.root_production_list_products.length > 0);\r\n          const rootProducts = [];\r\n          rootLists.forEach(roots => {\r\n            if (roots.root_production_list_products.length > 0) {\r\n              roots.root_production_list_products.forEach(el => {\r\n                rootProducts.push(el);\r\n              });\r\n            }\r\n          });\r\n\r\n          if (rootProducts) {\r\n            product.root_production_list_products = rootProducts;\r\n          }\r\n          this.products.push(product);\r\n        }\r\n      });\r\n\r\n      this.products = this.products.map(p => p);\r\n\r\n      if (this.orderType === 'outsourcing') {\r\n        const materials = [];\r\n\r\n        products.forEach(product => {\r\n          if (product.details?.task_materials.length > 0) {\r\n            product.details?.task_materials.forEach(m => {\r\n              materials.push(m);\r\n            });\r\n          }\r\n        });\r\n\r\n        this.orderMaterials = materials.map(m => m);\r\n      }\r\n\r\n      this.isLoadingProducts = false;\r\n    });\r\n  }\r\n\r\n  getInvoices() {\r\n    this.invoiceService.get([{name: 'order', value: this.orderId}]).subscribe(invoices => {\r\n      this.invoices = invoices.filter(el => el.is_proforma === false);\r\n      this.proformaInvoices = invoices.filter(el => el.is_proforma === true);\r\n      this.isLoadingInvoices = false;\r\n    });\r\n  }\r\n\r\n  getPayments() {\r\n    this.paymentService.get([{name: 'order', value: this.orderId}]).subscribe(payments => {\r\n      this.payments = payments;\r\n\r\n      if (this.selectedPayment) this.selectedPayment = this.payments.find(p => p.id === this.selectedPayment.id);\r\n\r\n      this.isLoadingPayments = false;\r\n    });\r\n  }\r\n\r\n  getServiceInvoices() {\r\n    this.serviceInvoiceService.get([{name: 'order', value: this.orderId}]).subscribe(serviceInvoices => {\r\n      this.serviceInvoices = serviceInvoices.filter(el => el.is_proforma === false);\r\n      this.serviceProformaInvoices = serviceInvoices.filter(el => el.is_proforma === true);\r\n      this.isLoadingServiceInvoices = false;\r\n    });\r\n  }\r\n\r\n  getServicePayments() {\r\n    this.servicePaymentService.get([{name: 'order', value: this.orderId}]).subscribe(servicePayments => {\r\n      this.servicePayments = servicePayments;\r\n      this.isLoadingServicePayments = false;\r\n    });\r\n  }\r\n\r\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\r\n    const lists: { list: ListProduct, count?: number }[] = [];\r\n    rootLists.forEach((res: ListProduct) => {\r\n      if (res) {\r\n        const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\r\n        if (found) {\r\n          found.count++;\r\n        } else {\r\n          lists.push({list: res, count: 1});\r\n        }\r\n      }\r\n\r\n    });\r\n    return lists;\r\n  }\r\n\r\n  getFiles() {\r\n    this.orderService.getFiles(+this.orderId).subscribe(files => {\r\n      this.files = files;\r\n      this.isLoadingFiles = false;\r\n    });\r\n  }\r\n\r\n  onEditOrderProductQuantity() {\r\n    this.orderProductService.editOrderProductQuantity(this.selectedProduct).subscribe(orderProduct => {\r\n      if (orderProduct) {\r\n        this.selectedProduct.quantity = orderProduct.quantity;\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditOrderProductDeliveryDate() {\r\n    this.orderProductService.editOrderProductDeliveryDate(this.selectedProduct).subscribe(orderProduct => {\r\n      if (orderProduct) {\r\n        this.selectedProduct.reception_date = orderProduct.reception_date;\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemoveOrderProduct() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderProductService.removeFromOrder(this.selectedProduct).subscribe(() => {\r\n          this.products = this.products.filter(p => p.id !== this.selectedProduct.id);\r\n          this.selectedProduct = null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddProduct() {\r\n    if (this.orderType !== 'outsourcing') {\r\n      this.orderProductService.openAddProductToOrderModal(false, this.orderId).subscribe(product => {\r\n        if (product) {\r\n          this.getProducts();\r\n        }\r\n      });\r\n    } else {\r\n      this.orderProductService.openAddOutsourcingRequestModal(this.orderId).subscribe(product => {\r\n        if (product) {\r\n          this.getProducts();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onCreateProformaInvoice() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderService.createProformaInvoice(this.orderId).subscribe(() => this.getInvoices());\r\n      }\r\n    });\r\n  }\r\n\r\n  onGoToProformaInvoicePage() {\r\n    window.open(`${this.link}accounting/invoices/products/${this.selectedProformaInvoice?.id}`);\r\n  }\r\n\r\n  openProformaInvoiceFilesModal() {\r\n    this.invoiceService.openInvoiceFilesModal(this.selectedProformaInvoice).subscribe();\r\n  }\r\n\r\n  onRemoveProformaInvoice() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.invoiceService.delete(this.selectedProformaInvoice.id).subscribe(() => {\r\n          this.selectedProformaInvoice = null;\r\n          this.getInvoices();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateInvoice() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderService.createInvoice(this.orderId).subscribe(() => this.getInvoices());\r\n      }\r\n    });\r\n  }\r\n\r\n  onGoToInvoicePage() {\r\n    window.open(`${this.link}accounting/invoices/products/${this.selectedInvoice?.id}`);\r\n  }\r\n\r\n  openInvoiceFilesModal() {\r\n    this.invoiceService.openInvoiceFilesModal(this.selectedInvoice).subscribe();\r\n  }\r\n\r\n  onRemoveInvoice() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.invoiceService.delete(this.selectedInvoice.id).subscribe(() => {\r\n          this.selectedInvoice = null;\r\n          this.getInvoices();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreatePayment() {\r\n    this.paymentService.openCreateEditPaymentForm('create', null, this.order.supplier.id, this.orderId).subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditPayment() {\r\n    this.paymentService.openCreateEditPaymentForm('edit', this.selectedPayment).subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateServiceInvoice(isProforma: boolean) {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.serviceInvoiceService.create({\r\n          order: this.orderId,\r\n          supplier: this.order.supplier.id,\r\n          is_proforma: isProforma,\r\n        }).subscribe(invoice => {\r\n          this.getServiceInvoices();\r\n          window.open(`${this.link}accounting/invoices/service-invoice/${invoice.id}`);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemoveServiceInvoice() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.serviceInvoiceService.delete(this.selectedServiceInvoice?.id).subscribe(() => {\r\n          this.getServiceInvoices();\r\n          this.selectedServiceInvoice = null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openServiceInvoiceFilesModal() {\r\n    this.serviceInvoiceService.openInvoiceFilesModal(this.selectedServiceInvoice).subscribe();\r\n  }\r\n\r\n  onGoToServiceInvoicePage() {\r\n    window.open(`${this.link}accounting/invoices/service-invoice/${this.selectedServiceInvoice?.id}`);\r\n  }\r\n\r\n  onCreateServicePayment() {\r\n    this.servicePaymentService.openCreateEditServicePaymentForm('create', null, this.selectedServiceInvoice.supplier?.id, this.orderId).subscribe(confirm => {\r\n      if (confirm) {\r\n        this.getServicePayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditServicePayment() {\r\n    this.servicePaymentService.openCreateEditServicePaymentForm('edit', this.selectedServicePayment).subscribe(payment => {\r\n      if (payment) {\r\n        this.getPayments();\r\n      }\r\n    });\r\n  }\r\n\r\n  getFileName(name) {\r\n    const nameArr = name.split('/');\r\n    return nameArr[nameArr.length - 1];\r\n  }\r\n\r\n  openOrderFilesModal() {\r\n    this.modalService.openAddFileToOrderModal(this.orderId).subscribe(confirm => {\r\n      this.getFiles();\r\n    });\r\n  }\r\n\r\n  openEditOrderModal() {\r\n    this.orderService.openEditOrderModal(this.order, this.orderType).subscribe(confirm => {\r\n      if (confirm) {\r\n        this.getOrder();\r\n      }\r\n    });\r\n  }\r\n\r\n  onDownloadFile(file: any) {\r\n    this.addition.add(file.id);\r\n    this.orderService.downloadFile(file.id).pipe(\r\n      finalize(() => this.addition.delete(file.id))\r\n    ).subscribe(response => {\r\n      const filename = this.getFileName(file.file);\r\n      this.adapterService.downloadFile(filename, response);\r\n    });\r\n  }\r\n\r\n  getConfirmStatus(status: number) {\r\n    switch (status) {\r\n      case 0:\r\n        return 'Untached';\r\n      case 1:\r\n        return 'Declined';\r\n      case 2:\r\n        return 'Confirmed';\r\n    }\r\n  }\r\n\r\n  onRemoveFile(id: number) {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.deletion.add(id);\r\n\r\n        this.orderService.deleteFile(id).pipe(\r\n          finalize(() => this.deletion.delete(id))\r\n        ).subscribe(() => {\r\n          const index = this.files.findIndex(f => f.id === id);\r\n          this.files.splice(index, 1);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openAddSupplier() {\r\n    this.orderSupplierService.openAddSupplierToOrderModal(this.orderSupplierConfirmation.id).subscribe(orderSupplier => {\r\n      if (orderSupplier) {\r\n        this.getOrderSuppliers();\r\n        this.selectedOrderSupplier = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onOrderSupplierConfirm() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderSupplierService.orderSupplierConfirm(this.orderSupplierConfirmation.id).subscribe();\r\n        this.selectedOrderSupplier = null;\r\n        this.orderSupplierConfirmation.sent_to_confirmation = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditOrderSupplier() {\r\n    this.orderSupplierService.openEditSupplierModal(this.selectedOrderSupplier).subscribe(orderSupplier => {\r\n      if (orderSupplier) {\r\n        this.getOrderSuppliers();\r\n        this.selectedOrderSupplier = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onRemoveOrderSupplier() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderSupplierService.deleteSupplier(this.selectedOrderSupplier.id).subscribe(() => {\r\n          this.getOrderSuppliers();\r\n          this.selectedOrderSupplier = null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelOrderMaterials() {\r\n    this.modalService.confirm('danger', 'Confirm').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.requestService.cancel(this.orderId).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    this.orderTechnicalEquipmentService.get([{name: 'order', value: this.orderId}]).subscribe(technicalEquipments => {\r\n      this.technicalEquipments = technicalEquipments;\r\n      this.isLoadingTechnicalEquipments = false;\r\n    });\r\n  }\r\n\r\n  getPurchasingCategories() {\r\n    this.purchasingCategoryService.get([{\r\n      name: 'is_material', value: true\r\n    }]).subscribe(categories => {\r\n      this.purchasingCategories = categories;\r\n      this.selectedPurchasingCategoryId = this.purchasingCategories.find(c => c.id === this.order.purchase_category?.id)?.id;\r\n      this.isLoadingPurchasingCategories = false;\r\n    });\r\n  }\r\n\r\n  onSelectPurchaseCategory() {\r\n   const send = {\r\n     purchase_category: this.selectedPurchasingCategoryId,\r\n     id: this.order.id\r\n   }\r\n\r\n    this.orderService.updatePartly(send).subscribe();\r\n  }\r\n\r\n  onAddMaterial() {\r\n    this.orderProductService.openAddPMaterialToOrder(this.selectedProduct.id).subscribe(request => {\r\n      if (request) {\r\n        this.getOrder();\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"order-page\">\r\n  <div class=\"page__card order-page__info mb-4\">\r\n    <div *ngIf=\"!isLoading; else infoLoading\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-7\">\r\n          <h2>Order Information</h2>\r\n          <h4><span>Id:</span> {{order.id}}</h4>\r\n          <h4><span>Date:</span> {{order.created|date:'dd/MM/yyyy'}}</h4>\r\n          <h4><span>Statuses:</span></h4>\r\n          <div class=\"statuses\">\r\n            <p\r\n              [ngClass]=\"{'text-success': item.is_active}\"\r\n              class=\"status\"\r\n              *ngFor=\"let item of order.statuses\"\r\n            >\r\n              {{item.status.value}}: {{item.estimated_date | date:'dd/MM/yyyy'}}\r\n            </p>\r\n          </div>\r\n          <h4><span>Comment:</span> {{order.comment}}</h4>\r\n          <h4 *ngIf=\"orderType === 'purchase'\"><span>Type:</span> {{order.purchase_category?.is_material ? 'Tangible' : 'Intangible'}}</h4>\r\n          <div class=\"purchase-category\" *ngIf=\"orderType === 'purchase'\">\r\n            <h4>\r\n              <span>Purchase Category:</span>\r\n            </h4>\r\n            <div class=\"purchase-category-dropdown\">\r\n              <p-dropdown\r\n                *ngIf=\"!isLoadingPurchasingCategories; else spinner\"\r\n                [showClear]=\"true\"\r\n                [filter]=\"true\"\r\n                [options]=\"purchasingCategories\"\r\n                [(ngModel)]=\"selectedPurchasingCategoryId\"\r\n                (ngModelChange)=\"onSelectPurchaseCategory()\"\r\n                optionValue=\"id\"\r\n                optionLabel=\"name\"\r\n                placeholder=\"Choice Purchase Category\"\r\n              >\r\n              </p-dropdown>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n          <div class=\"supplier\">\r\n            <h2>Supplier</h2>\r\n            <button\r\n              *ngIf=\"order.supplier\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Go To Supplier\"\r\n              [routerLink]=\"'/crm/business-partners/company-page/' + order.supplier.id\"\r\n            ></button>\r\n          </div>\r\n          <h4><span>Name:</span> {{order.supplier?.name}}</h4>\r\n          <h4>\r\n            <span>Category:</span>\r\n            <ng-container *ngFor=\"let item of order.supplier?.categories; let idx = index\">\r\n              <!--              {{categories[item]}}-->\r\n              <span *ngIf=\"idx !== order.supplier?.categories.length - 1\">,</span>\r\n            </ng-container>\r\n          </h4>\r\n          <h4><span>Address:</span> {{order.supplier?.address}}</h4>\r\n          <h4><span>Tax Number:</span> {{order.supplier?.tax_number}}</h4>\r\n          <h4><span>Register Number:</span> {{order.supplier?.registration_number}}</h4>\r\n          <h4><span>Nomenclature:</span> {{order.supplier?.supplier_nomenclature}}</h4>\r\n          <h4><span>Description:</span></h4>\r\n          <p>{{order.supplier?.comment}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"orderType !== 'purchase' || (orderType === 'purchase' && !isPurchaseOrderNonMaterial)\">\r\n    <h2 class=\"mb-4\">Ordered Items</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #dt\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"products.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedProduct\"\r\n          [value]=\"products\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedProduct\">Choose the Item to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"productMenuItems\"\r\n                [class.disabled]=\"!selectedProduct\"></p-menubar>\r\n              <button\r\n                (click)=\"onAddProduct()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Add Item\"\r\n                [disabled]=\"isLoadingProducts\"\r\n              >\r\n              </button>\r\n              <button\r\n                *ngIf=\"orderType === 'outsourcing'\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Add Material\"\r\n                (click)=\"onAddMaterial()\"\r\n                [disabled]=\"!selectedProduct\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-container *ngIf=\"orderType !== 'outsourcing'\">\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n                <th style=\"width: 14%\">Code</th>\r\n                <th style=\"width: 18%\">Name</th>\r\n                <th style=\"width: 15%\">Description</th>\r\n                <th style=\"width: 12%\" class=\"text-center\">Ordered Quantity</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Date</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Delivery Date</th>\r\n                <th style=\"width: 10%\" class=\"text-center\">Request Type</th>\r\n                <th style=\"width: 20%\" class=\"text-center\">Root Lists</th>\r\n              </tr>\r\n            </ng-template>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"orderType === 'outsourcing'\">\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th style=\"width: 3%\" class=\"index-header text-center\">#</th>\r\n                <th style=\"width: 14%\">Code</th>\r\n                <th style=\"width: 14%\">Name</th>\r\n                <th style=\"width: 15%\">Description</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Technology</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Ordered Quantity</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Date</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Delivery Date</th>\r\n                <th style=\"width: 8%\" class=\"text-center\">Request Type</th>\r\n                <th style=\"width: 14%\" class=\"text-center\">Root Lists</th>\r\n              </tr>\r\n            </ng-template>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"orderType !== 'outsourcing'\">\r\n            <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"product\">\r\n                <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n                <td style=\"width: 14%\">{{product.nomenclature.code}}</td>\r\n                <td style=\"width: 18%\">{{product.nomenclature.name}}</td>\r\n                <td style=\"width: 15%\">\r\n                  <div class=\"word-break\">{{product.nomenclature.description}}</div>\r\n                </td>\r\n                <td style=\"width: 12%\" class=\"text-center\">\r\n                  {{product.quantity}} {{product?.nomenclature?.category?.unit_of_measure?.symbol}}\r\n                </td>\r\n                <td style=\"width: 8%\" class=\"text-center\">{{product.request_date |date:'dd/MM/yyyy'}}</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">{{product.reception_date |date:'dd/MM/yyyy'}}</td>\r\n                <td style=\"width: 10%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"product.request_type == 1\">Auto</ng-container>\r\n                  <ng-container *ngIf=\"product.request_type == 0\">Manual</ng-container>\r\n                </td>\r\n                <td style=\"width: 20%\">\r\n                  <div\r\n                    class=\"d-block\"\r\n                    *ngFor=\"let item of getRootLists(product.root_production_list_products); let idx = index\"\r\n                  >\r\n                    {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"orderType === 'outsourcing'\">\r\n            <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"product\">\r\n                <td style=\"width: 3%\" class=\"text-center\">{{i + 1}}</td>\r\n                <td style=\"width: 14%\">{{product.nomenclature.code}}</td>\r\n                <td style=\"width: 14%\">{{product.nomenclature.name}}</td>\r\n                <td style=\"width: 15%\">\r\n                  <div class=\"word-break\">{{product.nomenclature.description}}</div>\r\n                </td>\r\n                <td style=\"width: 8%\" class=\"text-center\">\r\n                  {{product.current_technology?.name}}\r\n                </td>\r\n                <td style=\"width: 8%\" class=\"text-center\">\r\n                  {{product.quantity}} {{product?.nomenclature?.category?.unit_of_measure?.symbol}}\r\n                </td>\r\n                <td style=\"width: 8%\" class=\"text-center\">{{product.request_date |date:'dd/MM/yyyy'}}</td>\r\n                <td style=\"width: 8%\" class=\"text-center\">{{product.reception_date |date:'dd/MM/yyyy'}}</td>\r\n                <td style=\"width: 8%\" class=\"text-center\">\r\n                  <ng-container *ngIf=\"product.request_type == 1\">Auto</ng-container>\r\n                  <ng-container *ngIf=\"product.request_type == 0\">Manual</ng-container>\r\n                </td>\r\n                <td style=\"width: 14%\">\r\n                  <div\r\n                    class=\"d-block\"\r\n                    *ngFor=\"let item of getRootLists(product.root_production_list_products); let idx = index\"\r\n                  >\r\n                    {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </ng-container>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n                <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!dt.paginator && !isLoadingProducts && products.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"dt.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"orderType === 'outsourcing'\">\r\n    <h2 class=\"mb-4\">\r\n      Parts/Materials List\r\n    </h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #mt\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"orderMaterials.length > 0\"\r\n          [rows]=\"10\"\r\n          [value]=\"orderMaterials\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                (click)=\"onCancelOrderMaterials()\"\r\n                pButton\r\n                type=\"button\"\r\n                label=\"Cancelation\"\r\n                icon=\"pi pi-times\"\r\n                class=\"ml-auto p-button-danger\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 30%\">Code</th>\r\n              <th style=\"width: 25%\">Name</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Technology</th>\r\n              <th style=\"width: 20%\" class=\"text-center\">Required Quantity</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-material let-i=\"rowIndex\">\r\n            <tr>\r\n              <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n              <td style=\"width: 30%\">\r\n                <div *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.code}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 25%\">\r\n                <div *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.name}}\r\n                </div>\r\n              </td>\r\n\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                {{material.technology ? material.technology : null}}\r\n              </td>\r\n              <td style=\"width: 20%\" class=\"text-center\">{{material?.initial_quantity}}</td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <i *ngIf=\"material?.required_quantity === 0\" class=\"pi pi-check-circle\"></i>\r\n                <i *ngIf=\"material?.required_quantity > 0\" class=\"pi pi-times\"></i>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"mt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!mt.paginator && !isLoadingProducts && orderMaterials.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"mt.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">\r\n      Technical Equipments\r\n    </h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #et\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"technicalEquipments.length > 0\"\r\n          [rows]=\"10\"\r\n          [value]=\"technicalEquipments\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 25%\">Code</th>\r\n              <th style=\"width: 25%\">Name</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Locator</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Quantity</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-technicalEquipment let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"technicalEquipment\" class=\"table-row\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td>{{technicalEquipment.nomenclature.code}}</td>\r\n              <td>{{technicalEquipment.nomenclature.name}}</td>\r\n              <td class=\"text-center\">\r\n                <span *ngFor=\"let locator of technicalEquipment.locators\">\r\n                  {{locator.name}}\r\n                </span>\r\n              </td>\r\n              <td class=\"text-center\">{{technicalEquipment.max_initial_quantity}}</td>\r\n              <td class=\"text-center\"\r\n                  [class.text-danger]=\"!technicalEquipment.in_use || technicalEquipment.in_use && technicalEquipment.locators.length < 1\"\r\n                  [class.text-success]=\"technicalEquipment.in_use && technicalEquipment.locators.length > 0\"\r\n              >{{technicalEquipment.in_use && technicalEquipment.locators.length > 0 ? 'Received' : 'Not Received'}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingTechnicalEquipments \" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingTechnicalEquipments \">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"mt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!et.paginator && !isLoadingTechnicalEquipments && technicalEquipments.length > 0\"\r\n           class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"et.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">\r\n      Suppliers\r\n      <span *ngIf=\"orderSupplierConfirmation?.sent_to_confirmation\">\r\n      (On The Confirmation)\r\n      </span>\r\n      <span *ngIf=\"!isLoadingSuppliers && !orderSupplierConfirmation?.sent_to_confirmation && isSuppliersConfirmed\">\r\n        (Confirmed)\r\n      </span>\r\n    </h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"orderSuppliers.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedOrderSupplier\"\r\n          [value]=\"orderSuppliers\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedOrderSupplier\">Choose the Supplier to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto mr-2\"\r\n                [model]=\"orderSupplierMenuItems\"\r\n                [class.disabled]=\"!selectedOrderSupplier\">\r\n              </p-menubar>\r\n              <button\r\n                (click)=\"openAddSupplier()\"\r\n                [disabled]=\"isLoadingSuppliers || orderSupplierConfirmation?.sent_to_confirmation || isSuppliersConfirmed\"\r\n                icon=\"pi pi-plus\"\r\n                label=\"Add Supplier\"\r\n                class=\"mr-2\"\r\n                pButton\r\n                type=\"button\"\r\n              ></button>\r\n              <button\r\n                (click)=\"onOrderSupplierConfirm()\"\r\n                [disabled]=\"isLoadingSuppliers || orderSupplierConfirmation?.sent_to_confirmation || isSuppliersConfirmed\"\r\n                icon=\"pi pi-angle-double-right\"\r\n                label=\"Send To Confirm\"\r\n                pButton\r\n                type=\"button\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 30%\" class=\"text-center\">Supplier</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Price</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Delivery Date</th>\r\n              <th style=\"width: 35%\" class=\"text-center\">Comment</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Confirm Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-item let-i=\"rowIndex\">\r\n            <tr\r\n              [pSelectableRow]=\"(!isLoadingSuppliers && !orderSupplierConfirmation?.sent_to_confirmation && !isSuppliersConfirmed) ? item : null\">\r\n              <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n              <td style=\"width: 30%\" class=\"text-center\">{{item.supplier}}</td>\r\n              <td style=\"width: 10%\" class=\"text-center\">{{item.price | moneyFormat}} €</td>\r\n              <td style=\"width: 10%\" class=\"text-center\">{{item.delivery_date | date: 'dd/MM/yyyy'}}</td>\r\n              <td style=\"width: 35%\" class=\"text-center\">{{item.comment}}</td>\r\n              <td style=\"width: 10%\" class=\"text-center\">{{getConfirmStatus(item.confirm_status)}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingSuppliers\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingSuppliers\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"orderType !== 'purchase' || (orderType === 'purchase' && !isPurchaseOrderNonMaterial)\">\r\n    <h2 class=\"mb-4\">Proforma Invoices</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"proformaInvoices.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedProformaInvoice\"\r\n          [value]=\"proformaInvoices\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedProformaInvoice\">Choose the Proforma Invoice to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"proformaInvoiceMenuItems\"\r\n                [class.disabled]=\"!selectedProformaInvoice\"></p-menubar>\r\n              <button\r\n                (click)=\"onCreateProformaInvoice()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Proforma Invoice\"\r\n                [disabled]=\"isLoadingInvoices\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Creation Date</th>\r\n              <th style=\"width: 28%\" class=\"text-center\">Proforma Number</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Supplier</th>\r\n              <th style=\"width: 20%\" class=\"text-center\">Total Price</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"invoice\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                <i *ngIf=\"invoice.related_files\" class=\"pi pi-paperclip\"></i>\r\n              </td>\r\n              <td class=\"text-center\">{{invoice.self_proforma_serial_number}}</td>\r\n              <td class=\"text-center\">{{invoice.supplier?.name}}</td>\r\n              <td class=\"text-center\">{{invoice.total_price | moneyFormat}} {{invoice.currency?.symbol}} </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">Invoices</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"invoices.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedInvoice\"\r\n          [value]=\"invoices\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedInvoice\">Choose the Invoice to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"invoiceMenuItems\"\r\n                [class.disabled]=\"!selectedInvoice\">\r\n              </p-menubar>\r\n              <button\r\n                (click)=\"onCreateInvoice()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Invoice\"\r\n                [disabled]=\"isLoadingInvoices\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Creation Date</th>\r\n              <th style=\"width: 28%\" class=\"text-center\">Invoice Number</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Supplier</th>\r\n              <th style=\"width: 20%\" class=\"text-center\">Total Price</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"invoice\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                <i *ngIf=\"invoice.related_files\" class=\"pi pi-paperclip\"></i>\r\n              </td>\r\n              <td class=\"text-center\">{{invoice.self_serial_number}}</td>\r\n              <td class=\"text-center\">{{invoice.supplier?.name}}</td>\r\n              <td class=\"text-center\">{{invoice.total_price | moneyFormat}} {{invoice.currency?.symbol}} </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">Payments</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"payments.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedPayment\"\r\n          [value]=\"payments\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedPayment\">Choose the Payment to edit</p>\r\n              <button\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-pencil\"\r\n                class=\"ml-auto\"\r\n                label=\"Edit Payment\"\r\n                [disabled]=\"isLoadingInvoices || !selectedPayment\"\r\n                (click)=\"onEditPayment()\"\r\n              >\r\n              </button>\r\n              <button\r\n                (click)=\"onCreatePayment()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Payment\"\r\n                [disabled]=\"isLoadingInvoices\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Date</th>\r\n              <th style=\"width: 28%\" class=\"text-center\">Invoice</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Supplier</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Converted Amount</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"payment\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{payment.payment_date | date:'dd/MM/yyyy'}}\r\n              </td>\r\n              <td class=\"text-center\">\r\n              <span *ngFor=\"let inv of payment.invoices; let idx = index\">\r\n                {{inv.self_serial_number}}\r\n                <span *ngIf=\"idx !== payment.invoices.length - 1\">,</span>\r\n              </span>\r\n              </td>\r\n              <td class=\"text-center\">\r\n              <span *ngFor=\"let inv of payment.invoices; let idx = index\">\r\n                {{inv.supplier?.name}}\r\n                <span *ngIf=\"idx !== payment.invoices.length - 1\">,</span>\r\n              </span>\r\n              </td>\r\n              <td class=\"text-center\">{{payment.amount | moneyFormat}} €</td>\r\n              <td class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingPayments\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n\r\n  <div [class.auxiliary-box]=\"orderType !== 'purchase' || (orderType === 'purchase' && !isPurchaseOrderNonMaterial)\">\r\n    <h2 class=\"mb-4\">Auxiliary Proforma Invoices</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"serviceProformaInvoices.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedServiceInvoice\"\r\n          [value]=\"serviceProformaInvoices\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedServiceInvoice || !selectedServiceInvoice?.is_proforma\">Choose the Auxiliary Proforma Invoice to\r\n                edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"serviceInvoiceMenuItems\"\r\n                [class.disabled]=\"!selectedServiceInvoice || !selectedServiceInvoice?.is_proforma\">\r\n              </p-menubar>\r\n              <button\r\n                (click)=\"onCreateServiceInvoice(true)\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Auxiliary Proforma Invoice\"\r\n                [disabled]=\"isLoadingServiceInvoices\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Creation Date</th>\r\n              <th style=\"width: 28%;\" class=\"text-center\">Proforma Number</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Company</th>\r\n              <th style=\"width: 20%;\" class=\"text-center\">Total Price</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-serviceInvoice let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"serviceInvoice\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{serviceInvoice.system_creation_date|date:'dd/MM/yyyy'}}\r\n                <i *ngIf=\"serviceInvoice.related_files\" class=\"pi pi-paperclip\"></i>\r\n              </td>\r\n              <td class=\"text-center\">{{serviceInvoice.self_proforma_serial_number}}</td>\r\n              <td class=\"text-center\">{{serviceInvoice.supplier?.name}}</td>\r\n              <td class=\"text-center\">{{serviceInvoice.total_price | moneyFormat}} {{serviceInvoice.currency?.symbol}}\r\n                <ng-container *ngIf=\"serviceInvoice.currency.code! === 'EUR'\">\r\n                  ({{serviceInvoice.total_price_converted | moneyFormat}} €)\r\n                </ng-container>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoadingServiceInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingServiceInvoices\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">Auxiliary Invoices</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"serviceInvoices.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedServiceInvoice\"\r\n          [value]=\"serviceInvoices\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedServiceInvoice || selectedServiceInvoice?.is_proforma\">Choose the Auxiliary Invoice to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"serviceInvoiceMenuItems\"\r\n                [class.disabled]=\"!selectedServiceInvoice || selectedServiceInvoice?.is_proforma\">\r\n              </p-menubar>\r\n              <button\r\n                (click)=\"onCreateServiceInvoice(false)\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Auxiliary Invoice\"\r\n                [disabled]=\"isLoadingServiceInvoices\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Creation Date</th>\r\n              <th style=\"width: 28%\" class=\"text-center\">Invoice</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Company</th>\r\n              <th style=\"width: 20%\" class=\"text-center\">Total Price</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-serviceInvoice let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"serviceInvoice\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{serviceInvoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                <i *ngIf=\"serviceInvoice.related_files\" class=\"pi pi-paperclip\"></i>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                {{serviceInvoice.self_serial_number}}\r\n              </td>\r\n              <td class=\"text-center\">{{serviceInvoice.supplier?.name}}</td>\r\n              <td class=\"text-center\">{{serviceInvoice.total_price | moneyFormat}} {{serviceInvoice.currency?.symbol}}\r\n                <ng-container *ngIf=\"serviceInvoice.currency.code!=='EUR'\">\r\n                  ({{serviceInvoice.total_price_converted | moneyFormat}} €)\r\n                </ng-container>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoadingServiceInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingServiceInvoices\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">Auxiliary Invoice Payments</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"servicePayments.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedServicePayment\"\r\n          [value]=\"servicePayments\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedServicePayment\">Choose the Auxiliary Invoice Payment to edit</p>\r\n              <button\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-pencil\"\r\n                class=\"ml-auto\"\r\n                label=\"Edit Auxiliary Invoice Payment\"\r\n                [disabled]=\"isLoadingServicePayments || !selectedServicePayment\"\r\n                (click)=\"onEditServicePayment()\"\r\n              >\r\n              </button>\r\n              <button\r\n                (click)=\"onCreateServicePayment()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Create Auxiliary Invoice Payment\"\r\n                [disabled]=\"isLoadingServicePayments || !selectedServiceInvoice\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Date</th>\r\n              <th style=\"width: 28%\" class=\"text-center\">Invoice</th>\r\n              <th style=\"width: 32%\" class=\"text-center\">Supplier</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Amount</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Converted Amount</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"payment\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td class=\"text-center\">\r\n                {{payment.payment_date|date:'dd/MM/yyyy'}}\r\n              </td>\r\n              <td class=\"text-center\">\r\n              <span *ngFor=\"let inv of payment.service_invoices; let idx = index\">\r\n                {{inv.self_serial_number}}\r\n                <span *ngIf=\"idx !== payment.service_invoices.length - 1\">,</span>\r\n              </span>\r\n              </td>\r\n              <td class=\"text-center\"> <span *ngFor=\"let inv of payment.service_invoices; let idx = index\">\r\n              {{inv.supplier?.name}}\r\n                <span *ngIf=\"idx !== payment.service_invoices.length - 1\">,</span>\r\n            </span>\r\n              </td>\r\n              <td class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n              <td class=\"text-center\">{{payment.converted_amount | moneyFormat}} €</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingServicePayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingServicePayments\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h2 class=\"mb-4\">Files</h2>\r\n\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"files.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedFile\"\r\n        [value]=\"files\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <button\r\n              pButton type=\"button\"\r\n              icon=\"pi pi-plus\"\r\n              class=\"ml-auto\"\r\n              label=\"Add File\"\r\n              [disabled]=\"isLoadingFiles\"\r\n              (click)=\"openOrderFilesModal()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\r\n            <th style=\"width: 85%\">Name</th>\r\n            <th style=\"width: 10%;\" class=\"text-center\">Actions</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-file let-rowIndex=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\">{{rowIndex + 1}}</td>\r\n            <td>\r\n              <a [href]=\"link + file.file\">\r\n                {{getFileName(file.file)}}\r\n              </a>\r\n            </td>\r\n            <td class=\"text-center\">\r\n              <div class=\"d-flex justify-content-center\">\r\n                <button\r\n                  pButton\r\n                  (click)=\"onDownloadFile(file)\"\r\n                  [loading]=\"addition.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\r\n                  icon=\"pi pi-download\"\r\n                ></button>\r\n                <button\r\n                  pButton\r\n                  (click)=\"onRemoveFile(file.id)\"\r\n                  [loading]=\"deletion.has(file.id)\"\r\n                  type=\"button\"\r\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\r\n                  icon=\"pi pi-trash\"\r\n                ></button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n              <i *ngIf=\"isLoadingFiles\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingFiles\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #infoLoading>\r\n    <div class=\"info-loading\">\r\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Order} from '../../../procurement/models/order';\nimport {Router} from '@angular/router';\nimport {OrderService} from '../../../procurement/services/order.service';\n\n@Component({\n  selector: 'pek-order-statuses-chart',\n  templateUrl: './order-statuses-chart.component.html',\n  styleUrls: ['./order-statuses-chart.component.scss']\n})\nexport class OrderStatusesChartComponent implements OnInit, OnDestroy {\n\n  orders: Order[] = [];\n\n  constructor(\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.orders = JSON.parse(localStorage.getItem('orders'));\n\n\n    if (!this.orders || this.orders.length === 0) {\n      this.router.navigateByUrl('/');\n      return;\n    } else {\n      this.orders.forEach(o => {\n        o.statuses.forEach(s => {\n          s.estimated_date = new Date(s.estimated_date);\n        })\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    localStorage.removeItem('orders');\n  }\n}\n","<div class=\"order-statuses-chart\">\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"pt-2\"></div>\n      <pek-order-statuses-table\n        [isChart]=\"true\"\n        [orders]=\"orders\"\n        [isLoading]=\"false\"\n      ></pek-order-statuses-table>\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {ListProduct} from '../../../warehouse/models/list-product';\nimport {Order} from '../../../procurement/models/order';\nimport {Table} from 'primeng/table';\nimport {OrderService} from '../../../procurement/services/order.service';\n\n@Component({\n  selector: 'pek-order-statuses-table',\n  templateUrl: './order-statuses-table.component.html',\n  styleUrls: ['./order-statuses-table.component.scss']\n})\nexport class OrderStatusesTableComponent implements OnInit, OnChanges {\n  @ViewChild('st') st: Table;\n  @Output() changePage: EventEmitter<number> = new EventEmitter<number>();\n  @Output() selectOrder: EventEmitter<Order> = new EventEmitter<Order>();\n  @Input() isLoading = true;\n  @Input() orders: Order[] = [];\n  @Input() isChart: boolean = false;\n\n  dateWidth = '150px';\n\n  dates: any = [];\n  first = 0;\n\n  isExpandChart = false;\n  selectedOrder: Order;\n\n  constructor(\n    private readonly orderService: OrderService,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('orders' in changes) {\n      if (!this.isChart) {\n        this.modifyOrders();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.isChart) {\n      setTimeout(() => {\n        this.renderDates();\n      }, 0);\n    }\n  }\n\n  modifyOrders() {\n    this.orders.forEach(order => {\n      order.statuses.forEach((stat, index) => {\n        stat.estimated_date = new Date(stat.estimated_date);\n        if (order.dates.indexOf(stat.estimated_date) === -1) {\n          this.dates.push(stat.estimated_date);\n        }\n\n        if (stat.is_active === false) {\n          order.statuses.splice(index, 1);\n        }\n      });\n\n      if (order.statuses.length > 0) {\n        let start = order.statuses[0].estimated_date;\n\n        let end = order.statuses[order.statuses.length - 1].estimated_date;\n        let ins = start;\n        order.dates.push(ins);\n        while (ins < end) {\n          ins = this.addDays(ins, 1);\n          order.dates.push(ins);\n        }\n      }\n    });\n\n    this.renderDates();\n  }\n\n  renderDates(evt?) {\n    const page = evt?.first;\n\n    if (page >= 0) {\n      this.changePage.next(page);\n    }\n\n    this.dates = [];\n\n    let start = 0;\n    let end = 9;\n    if (evt) {\n      this.first = evt.first;\n      if (evt.first !== 0) {\n        start = evt.first - 1;\n        end = evt.first + 10 - 1;\n      }\n    }\n\n    if (this.st) {\n      if (this.st.filteredValue) {\n        this.st.filteredValue.forEach((order, idx) => {\n          if (idx >= start && idx <= end) {\n            order.statuses.forEach(status => {\n              status.estimated_date = new Date(status.estimated_date);\n              this.dates.push(new Date(status.estimated_date));\n            });\n          }\n        });\n      } else {\n        this.orders.forEach((order, idx) => {\n          if (idx >= start && idx <= end) {\n            order.statuses.forEach(status => {\n              status.estimated_date = new Date(status.estimated_date);\n              this.dates.push(new Date(status.estimated_date));\n            });\n          }\n        });\n      }\n    }\n\n    this.dates.sort((a, b) => a.getTime() - b.getTime());\n    const endDate = this.dates[this.dates.length - 1];\n    let ins = this.dates[0];\n\n    const allDates = [];\n    allDates.push(ins);\n\n    while (ins < endDate) {\n      ins = this.addDays(ins, 1);\n      allDates.push(ins);\n    }\n\n    this.dates = allDates;\n    let count = 0;\n    this.orders.forEach(o => {\n      o.statuses.forEach(s => {\n        count++;\n      });\n    });\n\n    console.log(this.orders);\n  }\n\n  addDays(date: string, days: number) {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  getRootListsFilled(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\n    const lists: { list: ListProduct, count?: number }[] = [];\n    rootLists.forEach((res: ListProduct) => {\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\n      if (found) {\n        found.count++;\n      } else {\n        lists.push({list: res, count: 1});\n      }\n    });\n    return lists;\n  }\n\n  onSelectOrder() {\n    this.selectOrder.emit(this.selectedOrder);\n  }\n\n  showAllDates() {\n    this.dates = [];\n\n    if (this.st.filteredValue) {\n      this.st.filteredValue.forEach((order, idx) => {\n        order.statuses.forEach(status => {\n          this.dates.push(new Date(status.estimated_date));\n        });\n      });\n    } else {\n      this.orders.forEach((order, idx) => {\n        order.statuses.forEach(status => {\n          this.dates.push(new Date(status.estimated_date));\n        });\n      });\n    }\n\n    this.dates.sort((a, b) => a.getTime() - b.getTime());\n    const endDate = this.dates[this.dates.length - 1];\n    const startDate = this.dates[0];\n    let ins = startDate;\n    const allDates = [];\n    allDates.push(ins);\n    while (ins < endDate) {\n      ins = this.addDays(ins, 1);\n      allDates.push(ins);\n    }\n    this.dates = allDates;\n  }\n\n  onOpenChartInWindow() {\n    const orders = JSON.parse(JSON.stringify(this.orders));\n    console.log(orders);\n    this.orderService.openOrderStatusesChartWindow(orders);\n  }\n\n  onShowAll(value: boolean) {\n    this.st.paginator = value;\n    if (!value) {\n      this.showAllDates();\n    } else {\n      this.renderDates({first: this.first});\n    }\n  }\n}\n","<div class=\"order-statuses-table\">\n  <div class=\"order-statuses-table__buttons\">\n    <p class=\"mr-2\">Chart Scale:</p>\n    <button\n      pButton\n      class=\"mr-2\"\n      label=\"100%\"\n      [disabled]=\"dateWidth === '150px'\"\n      (click)=\"dateWidth = '150px'\"\n    >\n    </button>\n    <button\n      class=\"mr-2\"\n      pButton\n      label=\"75%\"\n      [disabled]=\"dateWidth === '95px'\"\n      (click)=\"dateWidth = '95px'\"\n    >\n    </button>\n    <button\n      pButton\n      label=\"50%\"\n      [disabled]=\"dateWidth === '60px'\"\n      (click)=\"dateWidth = '60px'\"\n      class=\"mr-3\"\n    >\n    </button>\n\n    <p class=\"actions-text mr-2\">Actions:</p>\n\n    <button\n      [label]=\"(!isExpandChart ? 'Expand' : 'Collapse') + ' Chart'\"\n      pButton\n      class=\"mr-2\"\n      (click)=\"isExpandChart = !isExpandChart\"\n    ></button>\n\n    <button\n      label=\"Open in new Window\"\n      pButton\n      [disabled]=\"isLoading\"\n      (click)=\"onOpenChartInWindow()\"\n    ></button>\n  </div>\n  <p-table\n    #st\n    [value]=\"orders\"\n    selectionMode=\"single\"\n    rowGroupMode=\"rowspan\"\n    [scrollable]=\"true\"\n    scrollHeight=\"calc(100vh - 32.25rem)\"\n    [paginator]=\"orders.length > 0\"\n    [(selection)]=\"selectedOrder\"\n    (onPage)=\"renderDates($event)\"\n    [rows]=\"10\"\n    [(first)]=\"first\"\n    (selectionChange)=\"onSelectOrder()\"\n  >\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th\n          style=\"min-width: 50px\"\n          class=\"index-header text-center t-col-1\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          #\n        </th>\n        <th\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          class=\"text-center t-col-2\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          Date\n        </th>\n        <th\n          style=\"min-width: 150px\"\n          class=\"text-center t-col-3\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n          [class.t-col-3_exp]=\"isExpandChart\"\n          [class.th-status]=\"!isLoading && isExpandChart\"\n        >\n          <div [class.header-id]=\"!isLoading && isExpandChart\">Order ID</div>\n        </th>\n        <th\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          class=\"t-col-4\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          Supplier\n        </th>\n        <th\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          class=\"t-col-5\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          Root Lists\n        </th>\n        <th\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          class=\"text-center th-status t-col-6\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          <div [class.header-status]=\"!isLoading\">Status</div>\n        </th>\n\n        <th\n          [class.date-title]=\"dateWidth === '60px'\"\n          class=\"text-center\" *ngFor=\"let date of dates\"\n          [style.minWidth]=\"dateWidth\"\n          [style.maxWidth]=\"dateWidth\"\n        >\n          {{date | date: 'dd/MM/yyyy'}}\n        </th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n      <tr\n        class=\"order-table-tr\"\n        [pSelectableRow]=\"order\"\n      >\n        <td\n          style=\"min-width: 50px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n          class=\"text-center t-col-1\"\n\n        >\n          {{i + 1}}\n        </td>\n        <td\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n          class=\"text-center t-col-2\"\n        >\n          {{order.created|date:'dd/MM/yyyy'}}\n        </td>\n        <td\n          style=\"min-width: 150px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n          class=\"text-center t-col-3\"\n          [class.td-status]=\"isExpandChart\"\n          [class.t-col-3_exp]=\"isExpandChart\"\n        >\n          <div class=\"status-expand\">\n            {{order.id}}\n          </div>\n        </td>\n        <td\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n          class=\"t-col-4\"\n        >\n          <div class=\"hide-text\" pTooltip=\"{{order.supplier?.name}}\">\n            {{order.supplier?.name}}</div>\n        </td>\n        <td\n          [class.row-hide]=\"isExpandChart\"\n          style=\"min-width: 150px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          class=\"t-col-5\"\n          [frozen]=\"true\"\n        >\n          <div class=\"root-count-wrapper\">\n            <div class=\"fixed-row-container\" pTooltip=\"{{order.root_search_lists}}\">\n              <div class=\"hide-text\">\n                <ng-container\n                  *ngFor=\"let list of getRootListsFilled(order.root_production_list_products); let idx = index\">\n                  {{list.list.nomenclature.name}} ({{list.count}})\n                </ng-container>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td\n          [class.row-hide]=\"isExpandChart\"\n          class=\"td-status t-col-6\"\n          style=\"min-width: 150px\"\n          pFrozenColumn\n          alignFrozen=\"left\"\n          [frozen]=\"true\"\n        >\n          <ng-container *ngIf=\"order.statuses.length === 0\">\n            <div class=\"hide-text text-center status\">New</div>\n          </ng-container>\n\n          <ng-container *ngIf=\"order.statuses.length > 0\">\n            <div\n              class=\"hide-text text-center status\"\n              *ngFor=\"let event of order.statuses,let i = index;\"\n              [ngClass]=\"{'text-success': event.is_active}\" pTooltip=\"{{event.status.value}}\"\n            >\n              {{event.status.value}}\n            </div>\n          </ng-container>\n        </td>\n\n        <td\n          *ngFor=\"let ev of dates\" class=\"td-status\"\n          [style.minWidth]=\"dateWidth\"\n          [style.maxWidth]=\"dateWidth\"\n        >\n          <div\n            class=\"status-row\"\n            *ngFor=\"let event of order.statuses; let i = index;\"\n            [ngClass]=\"{\n                  'background': (event.estimated_date >= ev && ev > order.statuses[i - 1]?.estimated_date && order.statuses[0].estimated_date < ev) || event?.estimated_date?.getTime() === ev?.getTime()\n                }\"\n            pTooltip=\"{{event.status.value}} : {{ev | date:'dd/MM/yyyy'}}\" tooltipPosition=\"left\"\n          >\n          </div>\n        </td>\n      </tr>\n\n    </ng-template>\n\n    <ng-template pTemplate=\"paginatorright\">\n      <p-button\n        type=\"button\"\n        (click)=\"onShowAll(false)\"\n        styleClass=\"p-button-text\"\n      >\n        All\n      </p-button>\n    </ng-template>\n\n    <ng-template pTemplate=\"emptymessage\">\n      <tr>\n        <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n          <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n          <span *ngIf=\"!isLoading\">No Records Found</span>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n  <div *ngIf=\"!st.paginator && !isLoading && orders.length > 0\" class=\"paginator-return-pagination\">\n    <p-button\n      type=\"button\"\n      (click)=\"onShowAll(true)\"\n      styleClass=\"p-button-text\"\n    >\n      Return pagination\n    </p-button>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Status} from '../../../procurement/models/status';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModalService} from '@shared/services/modal.service';\nimport {StatusService} from '../../../procurement/services/status.service';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'pek-order-statuses',\n  templateUrl: './order-statuses.component.html',\n  styleUrls: ['./order-statuses.component.scss']\n})\nexport class OrderStatusesComponent implements OnInit {\n  @Input() isAutoStatus = false;\n  @Input() statusType: number;\n\n  isLoading = true;\n  statuses: Status[] = [];\n  selectedStatus: Status;\n\n  constructor(\n    private activatedRouter: ActivatedRoute,\n    private modalService: ModalService,\n    private statusesService: StatusService,\n  ) {\n  }\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Status',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.edit()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.delete()\n      }\n    ]\n  }];\n\n  ngOnInit(): void {\n    this.getStatuses();\n  }\n\n  getStatuses() {\n    this.statusesService.get([\n      {name: 'is_auto_status', value: this.isAutoStatus},\n      {name: 'accounting_type', value: this.statusType}\n    ]).subscribe(statuses => {\n      this.statuses = statuses;\n      this.isLoading = false;\n    });\n  }\n\n  create() {\n    this.statusesService.createEditStatusModal('create', this.statusType, this.isAutoStatus).subscribe(status => {\n      if (status) {\n        this.statuses.push(status);\n      }\n    });\n  }\n\n  edit() {\n    this.statusesService.createEditStatusModal('edit', this.statusType, this.isAutoStatus, this.selectedStatus).subscribe(status => {\n      if (status) {\n        const index = this.statuses.findIndex(s => s.id === status.id);\n        this.statuses[index] = status;\n        this.selectedStatus = this.statuses.find(s => s.id === status.id);\n      }\n    });\n  }\n\n\n  delete() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.statusesService.delete(this.selectedStatus.id).subscribe(() => {\n          const index = this.statuses.findIndex(s => s.id === this.selectedStatus.id);\n          this.statuses.splice(index, 1);\n          this.selectedStatus = null;\n        });\n      }\n    });\n  }\n\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex);\n    }\n\n    if (event.previousIndex !== event.currentIndex) {\n      const currentStatus = this.statuses[event.currentIndex];\n\n      if (event.currentIndex + 1 === this.statuses.length) {\n        currentStatus.sort_value = this.statuses[event.currentIndex - 1].sort_value + 1;\n      } else {\n        currentStatus.sort_value = this.statuses[event.currentIndex + 1].sort_value;\n      }\n\n      const toUpdate = {\n        id: currentStatus.id,\n        sort_value: currentStatus.sort_value,\n        value: currentStatus.value\n      };\n      // this.statusesService.update(toUpdate).subscribe(() => this.getStatuses());\n    }\n  }\n\n  setFinishStep(status: Status) {\n    const send = {\n      id: status.id,\n      value: status.value,\n      is_final: status.is_final,\n    };\n    this.updateStatus(send);\n  }\n\n  updateStatus(data: any): void {\n    this.statusesService.update(data).subscribe();\n  }\n\n  setActiveStatus(status: Status) {\n    const send = {\n      id: status.id,\n      value: status.value,\n      is_active: status.is_active,\n    };\n\n    this.updateStatus(send);\n  }\n\n  toggleLine(status) {\n    if (this.selectedStatus === status) {\n      this.selectedStatus = null;\n    } else {\n      this.selectedStatus = status;\n    }\n  }\n}\n","<div class=\"order-statuses\">\n  <div class=\"order-statuses-caption\">\n    <p class=\"subtitle\" *ngIf=\"!selectedStatus\">Choose the Status to edit</p>\n    <ng-container [ngSwitch]=\"isAutoStatus\">\n      <ng-container *ngSwitchCase=\"false\">\n        <p-menubar\n          [class.disabled]=\"!selectedStatus\"\n          class=\"ml-auto mr-2\"\n          [model]=\"menuItems\"\n        ></p-menubar>\n        <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Status\" (click)=\"create()\"></button>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"true\">\n        <button\n          class=\"ml-auto\"\n          [disabled]=\"!selectedStatus\"\n          (click)=\"edit()\"\n          pButton\n          type=\"button\"\n          icon=\"pi pi-pencil\"\n          label=\"Edit Status\"\n        ></button>\n      </ng-container>\n    </ng-container>\n  </div>\n  <div class=\"order-statuses-header\">\n    <div class=\"table-col-header text-center\" style=\"width: 5%;\">#</div>\n    <div class=\"table-col-header\" [style.width.%]=\"35\">Name</div>\n    <div class=\"table-col-header\" style=\"width: 30%;\">\n      Description\n    </div>\n    <div class=\"table-col-header text-center\" [style.width.%]=\"isAutoStatus? 15 : 30\">Chain Finish Step</div>\n    <div class=\"table-col-header text-center\" *ngIf=\"isAutoStatus\" style=\"width: 15%\">Is Active</div>\n  </div>\n  <div class=\"order-statuses-body\" *ngIf=\"!isLoading; else spinner\">\n    <div\n      class=\"order-statuses-list order-statuses_dragging\"\n      cdkDropList\n      [cdkDropListData]=\"statuses\"\n      (cdkDropListDropped)=\"drop($event)\"\n    >\n      <div\n        class=\"order-statuses-line order-statuses-line_dragging\"\n        *ngFor=\"let status of statuses; let idx = index\"\n        cdkDrag\n        cdkDragBoundary=\".workloads_dragging\"\n        [class.active]=\"selectedStatus && selectedStatus.id === status.id\"\n        (click)=\"toggleLine(status)\"\n      >\n        <div class=\"example-custom-placeholder\" *cdkDragPlaceholder></div>\n        <div class=\"order-statuses-item\">\n          <div class=\"table-col text-center\" style=\"width: 5%;\">{{idx + 1}}</div>\n          <div class=\" table-col\" [style.width.%]=\"35\">\n            {{status.value}}\n          </div>\n          <div class=\" table-col\" style=\"width: 30%;\">\n            {{ status.description }}\n          </div>\n          <div class=\" table-col text-center\" [style.width.%]=\"isAutoStatus? 15 : 30\">\n            <p-checkbox\n              [(ngModel)]=\"status.is_final\"\n              [binary]=\"true\"\n              (onChange)=\"setFinishStep(status)\"\n            ></p-checkbox>\n          </div>\n          <div class=\" table-col text-center\" *ngIf=\"isAutoStatus\" style=\"width: 15%;\">\n            <p-checkbox\n              [(ngModel)]=\"status.is_active\"\n              [binary]=\"true\"\n              (onChange)=\"setActiveStatus(status)\"\n            ></p-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #spinner>\n  <div class=\"order-statuses-spinner p-4\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {BusinessTripService} from '../../../business-trips/services/business-trip.service';\r\n\r\n@Component({\r\n  selector: 'pek-upload-file-picker',\r\n  templateUrl: './upload-file-picker.component.html',\r\n  styleUrls: ['./upload-file-picker.component.scss']\r\n})\r\nexport class UploadFilePickerComponent implements OnInit {\r\n  @Input() files: File[] = [];\r\n  @Input() showLabel = true;\r\n  uploadedFiles: any[] = [];\r\n  @Output() fileChanged: EventEmitter<File[]> = new EventEmitter<File[]>();\r\n  constructor(\r\n    private businessService: BusinessTripService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  filesSelected(files: any) {\r\n    this.files = files.currentFiles;\r\n    this.fileChanged.emit(this.files);\r\n  }\r\n\r\n  removeFile(file: any) {\r\n  }\r\n\r\n  clearFiles() {\r\n    this.files = [];\r\n    this.fileChanged.emit(this.files);\r\n  }\r\n\r\n  onBasicUpload($event: any) {\r\n\r\n  }\r\n\r\n  takePhoto() {\r\n    this.businessService.takePhotoModal().subscribe(file => {\r\n      if (file) {\r\n        this.addPhotoToList(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  addPhotoToList(file: File) {\r\n    let tempFiles = [...this.files, file];\r\n    this.files = null;\r\n    this.files = [...tempFiles];\r\n    tempFiles = null;\r\n    this.fileChanged.emit(this.files);\r\n  }\r\n}\r\n","<label *ngIf=\"showLabel\"> Files </label>\r\n<p-fileUpload\r\n  (onRemove)=\"removeFile($event)\"\r\n  (onClear)=\"clearFiles()\"\r\n  [files]=\"files\"\r\n  (onSelect)=\"filesSelected($event)\"\r\n  name=\"file[]\"\r\n  [customUpload]=\"true\"\r\n  [multiple]=\"true\"\r\n  (onUpload)=\"onBasicUpload($event)\"\r\n  [showUploadButton]=\"false\"\r\n>\r\n  <ng-template pTemplate=\"toolbar\">\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      icon=\"pi pi-camera\"\r\n      class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small ml-1 mb-2\"\r\n      (click)=\"takePhoto()\"\r\n    ></button>\r\n  </ng-template>\r\n</p-fileUpload>\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\n\r\ntype FileFormat = 'excel' | 'image' | 'all';\r\n\r\n@Component({\r\n  selector: 'pek-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.scss']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n  @Output() selectFile: EventEmitter<File[]> = new EventEmitter<File[]>();\r\n  @Output() removeFile: EventEmitter<void> = new EventEmitter<void>();\r\n  @Input() fileFormat: FileFormat = 'all';\r\n  @Input() multiple: boolean = false;\r\n  @ViewChild('addFileInput') addFileInput: ElementRef;\r\n\r\n  @Input() uploadFiles: File[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    const files: File[] = Array.from(event.dataTransfer.files);\r\n    this.onSelectFile(files);\r\n  }\r\n\r\n  onChangeFile(files: FileList) {\r\n    const filesArr = Array.from(files);\r\n    this.onSelectFile(filesArr);\r\n  }\r\n\r\n  onSelectFile(files: File[]) {\r\n    if (this.multiple) {\r\n      this.uploadFiles = [...this.uploadFiles, ...files];\r\n    } else {\r\n      this.uploadFiles = [...files];\r\n    }\r\n\r\n    this.selectFile.emit(this.uploadFiles);\r\n    this.addFileInput.nativeElement.value = '';\r\n  }\r\n\r\n  onRemoveFile(idx: number) {\r\n    this.uploadFiles.splice(idx, 1);\r\n\r\n    if (this.multiple) {\r\n      this.selectFile.emit(this.uploadFiles);\r\n    } else {\r\n      this.removeFile.emit();\r\n    }\r\n  }\r\n\r\n  getFileSize(size: number) {\r\n    return Math.round(size / 1000);\r\n  }\r\n\r\n  getAcceptFileFormat() {\r\n    switch (this.fileFormat) {\r\n      case 'excel':\r\n        return '.xls, .xlsx';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n","<div\n  class=\"upload-file\"\n  [class.upload-file_upload-one]=\"uploadFiles.length > 0 && !multiple\"\n  [class.upload-file_upload-many]=\"uploadFiles.length > 0 && multiple\"\n>\n\n  <ng-container [ngSwitch]=\"multiple\">\n\n    <!--  Single Select-->\n    <label\n      *ngSwitchCase=\"false\"\n      class=\"upload-file__input\"\n      (dragover)=\"onDragOver($event)\"\n      (drop)=\"onDrop($event)\"\n    >\n      <div\n        *ngIf=\"uploadFiles.length === 0\"\n        class=\"upload-file__placeholder\"\n      >\n        <span>Select file</span>\n        <ng-container *ngIf=\"fileFormat !== 'all'\">\n          in <span>{{fileFormat}}</span> format\n        </ng-container>\n        or drag and drop it here\n      </div>\n      <input\n        #addFileInput\n        *ngIf=\"uploadFiles.length === 0\"\n        hidden\n        type=\"file\"\n        (change)=\"onChangeFile(addFileInput.files)\"\n        [accept]=\"getAcceptFileFormat()\"\n        [multiple]=\"false\"\n        [disabled]=\"uploadFiles.length > 0\"\n      >\n\n      <div\n        *ngIf=\"uploadFiles.length > 0\"\n        class=\"upload-file__upload-files\"\n      >\n        <div class=\"upload-file__upload-files-inner\">\n          <i class=\"pi pi-check-circle\"></i>\n          <p>{{uploadFiles[0].name}}</p>\n          <span>{{getFileSize(uploadFiles[0].size)}} КБ</span>\n        </div>\n      </div>\n    </label>\n    <div class=\"upload-file__remove\" (click)=\"onRemoveFile(0)\" *ngIf=\"uploadFiles.length > 0 && !multiple\">\n      <i class=\"pi pi-times\"></i>\n    </div>\n\n    <!--  Multiple select-->\n    <label\n      *ngSwitchCase=\"true\"\n      class=\"upload-file__input\"\n      (dragover)=\"onDragOver($event)\"\n      (drop)=\"onDrop($event)\"\n    >\n      <div\n        class=\"upload-file__placeholder\"\n      >\n        <span>Select files</span>\n        <ng-container *ngIf=\"fileFormat !== 'all'\">\n          in <span>{{fileFormat}}</span> format\n        </ng-container>\n        or drag and drop it here\n      </div>\n      <input\n        #addFileInput\n        hidden\n        type=\"file\"\n        (change)=\"onChangeFile(addFileInput.files)\"\n        [accept]=\"getAcceptFileFormat()\"\n        [multiple]=\"true\"\n      >\n    </label>\n\n    <div class=\"upload-file__upload-files\" *ngIf=\"uploadFiles.length > 0 && multiple\">\n      <div class=\"upload-file__files\">\n        <div\n          class=\"upload-file__file\"\n          *ngFor=\"let file of uploadFiles; let idx = index\"\n        >\n          <div class=\"upload-file__upload-files-inner\">\n            <i class=\"pi pi-check-circle\"></i>\n            <p>{{file.name}}</p>\n            <span>{{getFileSize(file.size)}} КБ</span>\n          </div>\n\n          <div\n            class=\"upload-file__remove\"\n            (click)=\"onRemoveFile(idx)\"\n          >\n            <i class=\"pi pi-times\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n","import {Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2} from '@angular/core';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {fromEventPattern, Observable, Subject, takeUntil} from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[pekPasteScreenImage]'\r\n})\r\nexport class PasteScreenImageDirective implements OnDestroy{\r\n  @Output() imageAdded: EventEmitter<File> = new EventEmitter<File>();\r\n  @Input() trackMousePosition = true;\r\n  isMouseOver = false;\r\n  private destroy$ = new Subject();\r\n  onPaste$: Observable<any>;\r\n  constructor(\r\n    private readonly modalService: ModalService,\r\n    private element: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.createOnPastObservable(renderer);\r\n    this.onPaste$.subscribe(event => {\r\n      if (!this.trackMousePosition || this.trackMousePosition && this.isMouseOver) {\r\n        const item = event.clipboardData.items[0];\r\n        if (item.type.indexOf('image') === 0) {\r\n          const blob = item.getAsFile();\r\n          const reader = new FileReader();\r\n          reader.onload = (event) => {\r\n            this.modalService.showPasteImageModal(event.target.result, blob).pipe(takeUntil(this.destroy$)).subscribe(file => {\r\n              if (file) {\r\n                this.imageAdded.emit(file);\r\n              }\r\n            });\r\n          };\r\n          reader.readAsDataURL(blob);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private createOnPastObservable(renderer: Renderer2) {\r\n    let removePastEventListener: () => void;\r\n    const createPastEventListener = (\r\n      handler: (e: Event) => boolean | void\r\n    ) => {\r\n      removePastEventListener = renderer.listen(\"document\", \"paste\", handler);\r\n    };\r\n\r\n    this.onPaste$ = fromEventPattern<Event>(createPastEventListener, () =>\r\n      removePastEventListener()\r\n    ).pipe(takeUntil(this.destroy$));\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseover() {\r\n    this.isMouseOver = true;\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeve() {\r\n    this.isMouseOver = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.destroy();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExternalUriGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const {uri} = route.params;\r\n    // window.open(uri, '_blank');\r\n    window.open(uri, '_self');\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-in-icon',\n  templateUrl: './in-icon.component.html',\n  styleUrls: ['./in-icon.component.scss']\n})\nexport class InIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\"\n     fill=\"#fff\">\n  <g>\n    <rect fill=\"none\" height=\"24\" width=\"24\"/>\n  </g>\n  <g>\n    <path\n      d=\"M11,7L9.6,8.4l2.6,2.6H2v2h10.2l-2.6,2.6L11,17l5-5L11,7z M20,19h-8v2h8c1.1,0,2-0.9,2-2V5c0-1.1-0.9-2-2-2h-8v2h8V19z\"/>\n  </g>\n</svg>\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\nexport type Module = 'dashboard' | 'product-structure' | 'confirmation' | 'warehouse' | 'manufacturing-procurement'\r\n  | 'quality-control' | 'manufacturing' | 'contacts-events' | 'outsourcing' | 'purchasing' | 'sales'\r\n  | 'reports' | 'administration' | 'business-trip' | 'correspondents' | 'instruments';\r\n\r\n@Component({\r\n  selector: 'pek-module-icon',\r\n  templateUrl: './module-icon.component.html',\r\n  styleUrls: ['./module-icon.component.scss']\r\n})\r\nexport class ModuleIconComponent implements OnInit {\r\n  @Input() module: Module;\r\n  @Input() isActive: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"module-icon\" [class.module-icon_active]=\"isActive\" [ngSwitch]=\"module\">\r\n  <svg *ngSwitchCase=\"'product-structure'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M30.2 42v-6.25h-7.7v-20.5h-4.65v6.5H4V6h13.85v6.25H30.2V6H44v15.75H30.2v-6.5h-4.7v17.5h4.7v-6.5H44V42ZM7 9v9.75Zm26.2 20.25V39ZM33.2 9v9.75Zm0 9.75H41V9h-7.8Zm0 20.25H41v-9.75h-7.8ZM7 18.75h7.85V9H7Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'dashboard'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M25.5 19.5V6H42v13.5ZM6 25.5V6h16.5v19.5ZM25.5 42V22.5H42V42ZM6 42V28.5h16.5V42Zm3-19.5h10.5V9H9ZM28.5 39H39V25.5H28.5Zm0-22.5H39V9H28.5ZM9 39h10.5v-7.5H9Zm10.5-16.5Zm9-6Zm0 9Zm-9 6Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'confirmation'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M7 40q-1.3 0-2.15-.85Q4 38.3 4 37v-7.65q1.85-.4 3.075-1.875T8.3 24q0-2-1.225-3.5T4 18.65V11q0-1.3.85-2.15Q5.7 8 7 8h34q1.3 0 2.15.85Q44 9.7 44 11v7.65q-1.85.35-3.075 1.85T39.7 24q0 2 1.225 3.475T44 29.35V37q0 1.3-.85 2.15Q42.3 40 41 40Zm0-3h34v-5.45q-1.9-1.3-3.1-3.25-1.2-1.95-1.2-4.3 0-2.35 1.2-4.3 1.2-1.95 3.1-3.25V11H7v5.45q1.95 1.3 3.125 3.25T11.3 24q0 2.35-1.175 4.3Q8.95 30.25 7 31.55Zm17-3.15q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45ZM24 24Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'warehouse'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M7 39h6V23h22v16h6V16L24 9.2 7 16Zm-3 3V14l20-8 20 8v28H32V26H16v16Zm14.5 0v-3h3v3Zm4-6v-3h3v3Zm4 6v-3h3v3ZM13 23h22Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'manufacturing-procurement'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M5 44q-1.2 0-2.1-.9Q2 42.2 2 41V18.05h3V41h30.45v3Zm6-6q-1.2 0-2.1-.9Q8 36.2 8 35V9.1h12.1V5q0-1.2.9-2.1.9-.9 2.1-.9h7.8q1.2 0 2.1.9.9.9.9 2.1v4.1H46V35q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h32V12.1H11V35ZM23.1 9.1h7.8V5h-7.8ZM11 35V12.1 35Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'quality-control'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M28.55 31.6h3v-6.2h6.15v-3h-6.15v-6.15h-3v6.15h-6.2v3h6.2Zm-16.9 9.2Q6.4 38.7 3.2 34.125 0 29.55 0 23.95q0-5.6 3.225-10.15Q6.45 9.25 11.65 7.15v3.4q-3.95 1.8-6.3 5.425Q3 19.6 3 23.95q0 4.4 2.35 8 2.35 3.6 6.3 5.45ZM30 41.95q-3.75 0-7.025-1.425-3.275-1.425-5.7-3.85-2.425-2.425-3.85-5.7Q12 27.7 12 23.95q0-3.75 1.425-7.025 1.425-3.275 3.85-5.7 2.425-2.425 5.7-3.85Q26.25 5.95 30 5.95q3.75 0 7.025 1.425 3.275 1.425 5.7 3.85 2.425 2.425 3.85 5.7Q48 20.2 48 23.95q0 3.75-1.425 7.025-1.425 3.275-3.85 5.7-2.425 2.425-5.7 3.85Q33.75 41.95 30 41.95Zm0-18Zm.05 15q6.2 0 10.575-4.375Q45 30.2 45 23.95q0-6.2-4.375-10.6Q36.25 8.95 30 8.95q-6.2 0-10.6 4.4-4.4 4.4-4.4 10.6 0 6.25 4.4 10.625t10.65 4.375Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'manufacturing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M4 44V19.95L18 14v4l10-4.05V20h16v24Zm3-3h34V23H25v-4.6l-10 4v-3.95L7 22Zm15.5-5h3v-8h-3Zm-8 0h3v-8h-3Zm16 0h3v-8h-3ZM44 20h-9l2-16h5ZM7 41h34Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'contacts-events'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M9 44q-1.2 0-2.1-.9Q6 42.2 6 41V10q0-1.2.9-2.1Q7.8 7 9 7h3.25V4h3.25v3h17V4h3.25v3H39q1.2 0 2.1.9.9.9.9 2.1v31q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h30V19.5H9V41Zm0-24.5h30V10H9Zm0 0V10v6.5ZM24 28q-.85 0-1.425-.575Q22 26.85 22 26q0-.85.575-1.425Q23.15 24 24 24q.85 0 1.425.575Q26 25.15 26 26q0 .85-.575 1.425Q24.85 28 24 28Zm-8 0q-.85 0-1.425-.575Q14 26.85 14 26q0-.85.575-1.425Q15.15 24 16 24q.85 0 1.425.575Q18 25.15 18 26q0 .85-.575 1.425Q16.85 28 16 28Zm16 0q-.85 0-1.425-.575Q30 26.85 30 26q0-.85.575-1.425Q31.15 24 32 24q.85 0 1.425.575Q34 25.15 34 26q0 .85-.575 1.425Q32.85 28 32 28Zm-8 8q-.85 0-1.425-.575Q22 34.85 22 34q0-.85.575-1.425Q23.15 32 24 32q.85 0 1.425.575Q26 33.15 26 34q0 .85-.575 1.425Q24.85 36 24 36Zm-8 0q-.85 0-1.425-.575Q14 34.85 14 34q0-.85.575-1.425Q15.15 32 16 32q.85 0 1.425.575Q18 33.15 18 34q0 .85-.575 1.425Q16.85 36 16 36Zm16 0q-.85 0-1.425-.575Q30 34.85 30 34q0-.85.575-1.425Q31.15 32 32 32q.85 0 1.425.575Q34 33.15 34 34q0 .85-.575 1.425Q32.85 36 32 36Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'outsourcing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M38.5 30.25v-16.1L28 6.8l-10.5 7.35v6.45h-3v-7.95L28 3l13.5 9.65v17.6ZM28 6.8ZM29 17h2v-2h-2Zm-4 0h2v-2h-2Zm4 4h2v-2h-2Zm-4 0h2v-2h-2Zm3.3 23.9-15.55-4.45v2.85H2V23.6h15.45l12.75 4.8q1.35.5 2.275 1.625.925 1.125.925 3.225h5.7q2.1 0 3.5 1.5T44 38.8v1.3ZM5 40.3h4.7V26.6H5Zm23.1 1.5 12.8-3.9q-.3-.95-.75-1.3-.45-.35-1.05-.35H28.75q-1.5 0-2.775-.2t-2.425-.55l-4.05-1.25 1.1-2.9 3.65 1.2q1.25.4 2.375.55 1.125.15 3.575.15 0-.6-.225-1.175-.225-.575-.775-.825L16.95 26.6h-4.2v10.7ZM9.7 33.45Zm20.5-.2Zm-20.5.2Zm3.05 0Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'purchasing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M14.35 43.95q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm20 0q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm-22.6-33 5.5 11.4h14.4l6.25-11.4Zm-1.5-3H39.7q1.6 0 2.025.975.425.975-.275 2.175L34.7 23.25q-.5.85-1.4 1.475-.9.625-1.95.625H16.2l-2.8 5.2h24.55v3h-24.1q-2.1 0-3.025-1.4-.925-1.4.025-3.15l3.2-5.9L6.45 7h-3.9V4H8.4Zm7 14.4h14.4Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'sales'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M25.8 44q-.6 0-1.15-.175-.55-.175-1.05-.675L4.85 24.4q-.5-.5-.675-1.05Q4 22.8 4 22.2V7q0-1.3.85-2.15Q5.7 4 7 4h15.2q.6 0 1.2.175t1.1.675L43.15 23.5q1 1 1 2.225t-1 2.225l-15.2 15.2q-.4.4-.975.625Q26.4 44 25.8 44Zm.1-2.9 15.2-15.2L22.2 7H7v15.2ZM12.25 14.8q1.05 0 1.825-.775.775-.775.775-1.825 0-1.05-.775-1.825Q13.3 9.6 12.25 9.6q-1.05 0-1.825.775-.775.775-.775 1.825 0 1.05.775 1.825.775.775 1.825.775ZM7 7Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'reports'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M15.95 35.5h16.1v-3h-16.1Zm0-8.5h16.1v-3h-16.1ZM11 44q-1.2 0-2.1-.9Q8 42.2 8 41V7q0-1.2.9-2.1Q9.8 4 11 4h18.05L40 14.95V41q0 1.2-.9 2.1-.9.9-2.1.9Zm16.55-27.7V7H11v34h26V16.3ZM11 7v9.3V7v34V7Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'administration'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\r\n    <path\r\n      d=\"M24 44q-6.9-1.6-11.45-7.825Q8 29.95 8 21.9V9.95l16-6 16 6v13.5q-.7-.35-1.5-.625T37 22.45v-10.4l-13-4.8-13 4.8v9.85q0 3.8 1.225 7t3.125 5.625q1.9 2.425 4.2 4.025 2.3 1.6 4.45 2.3.3.6.9 1.35.6.75 1 1.15-.45.25-.95.375-.5.125-.95.275Zm10.55-9.5q1.3 0 2.2-.95.9-.95.9-2.25t-.9-2.2q-.9-.9-2.2-.9-1.3 0-2.25.9t-.95 2.2q0 1.3.95 2.25t2.25.95Zm-.05 6.25q1.65 0 3-.7t2.3-2q-1.3-.7-2.6-1.05-1.3-.35-2.7-.35-1.4 0-2.725.35-1.325.35-2.575 1.05.95 1.3 2.275 2t3.025.7Zm.15 3.25q-3.9 0-6.65-2.775-2.75-2.775-2.75-6.575 0-3.9 2.75-6.675t6.65-2.775q3.85 0 6.625 2.775t2.775 6.675q0 3.8-2.775 6.575Q38.5 44 34.65 44ZM24 24.05Z\"/>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'business-trip'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n    <g>\r\n    <path d=\"M19.78,9.44l-1.84-5A1.75,1.75,0,0,0,16.3,3.25H7.7A1.75,1.75,0,0,0,6.06,4.4l-1.84,5a1.76,1.76,0,0,0-1,1.56v4.5A1.73,1.73,0,0,0,4,16.94S4,17,4,17v2a1,1,0,0,0,1,1H6a1,1,0,0,0,1-1V17.25H17V19a1,1,0,0,0,1,1h1a1,1,0,0,0,1-1V17s0,0,0-.06a1.73,1.73,0,0,0,.76-1.44V11A1.76,1.76,0,0,0,19.78,9.44Zm-.53,6.06a.25.25,0,0,1-.25.25H5a.25.25,0,0,1-.25-.25V11A.25.25,0,0,1,5,10.75H19a.25.25,0,0,1,.25.25ZM7.47,4.91a.25.25,0,0,1,.23-.16h8.6a.25.25,0,0,1,.23.16l1.4,3.84H6.07Z\"/><circle cx=\"8\" cy=\"13.25\" r=\"1.5\"/><circle cx=\"16\" cy=\"13.25\" r=\"1.5\"/>\r\n    </g>\r\n  </svg>\r\n\r\n  <svg *ngSwitchCase=\"'instruments'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g id=\"database\"><path d=\"M19.48,4.54A19.17,19.17,0,0,0,12,2.75,19.17,19.17,0,0,0,4.52,4.54a1.74,1.74,0,0,0-1,1.59V17.87a1.74,1.74,0,0,0,1,1.59A19.17,19.17,0,0,0,12,21.25a19.17,19.17,0,0,0,7.48-1.79,1.74,1.74,0,0,0,1-1.59V6.13A1.74,1.74,0,0,0,19.48,4.54Zm-.48,8a17.76,17.76,0,0,1-7,1.72,17.76,17.76,0,0,1-7-1.72V8.68a18.64,18.64,0,0,0,7,1.57,18.64,18.64,0,0,0,7-1.57ZM5.15,5.9A17.56,17.56,0,0,1,12,4.25,17.67,17.67,0,0,1,18.86,5.9a.26.26,0,0,1,.14.23V7a17.76,17.76,0,0,1-7,1.72A17.76,17.76,0,0,1,5,7v-.9A.25.25,0,0,1,5.15,5.9Zm13.7,12.2A17.56,17.56,0,0,1,12,19.75,17.67,17.67,0,0,1,5.14,18.1.26.26,0,0,1,5,17.87V14.18a18.64,18.64,0,0,0,7,1.57,18.64,18.64,0,0,0,7-1.57v3.69A.25.25,0,0,1,18.85,18.1Z\"/></g></svg>\r\n\r\n  <svg *ngSwitchCase=\"'correspondents'\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g id=\"users\"><path d=\"M14,12.25A3.75,3.75,0,1,1,17.75,8.5,3.75,3.75,0,0,1,14,12.25Zm0-6A2.25,2.25,0,1,0,16.25,8.5,2.25,2.25,0,0,0,14,6.25Z\"/><path d=\"M21,19.25a.76.76,0,0,1-.75-.75c0-1.95-1.06-3.25-6.25-3.25s-6.25,1.3-6.25,3.25a.75.75,0,0,1-1.5,0c0-4.75,5.43-4.75,7.75-4.75s7.75,0,7.75,4.75A.76.76,0,0,1,21,19.25Z\"/><path d=\"M8.32,13.06H8a3,3,0,1,1,.58-6,.75.75,0,1,1-.15,1.49,1.46,1.46,0,0,0-1.09.34,1.47,1.47,0,0,0-.54,1,1.49,1.49,0,0,0,1.35,1.64,1.53,1.53,0,0,0,.93-.22.75.75,0,0,1,.79,1.28A3,3,0,0,1,8.32,13.06Z\"/><path d=\"M3,18.5a.76.76,0,0,1-.75-.75c0-2.7.72-4.5,4.25-4.5a.75.75,0,0,1,0,1.5c-2.35,0-2.75.75-2.75,3A.76.76,0,0,1,3,18.5Z\"/></g></svg>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-sort-icon',\n  templateUrl: './sort-icon.component.html',\n  styleUrls: ['./sort-icon.component.scss']\n})\nexport class SortIconComponent implements OnInit {\n  @Input() value: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngIf=\"value !== null\">\n  <i\n    class=\"pi\"\n    [class.pi-sort-amount-down]=\"value === true\"\n    [class.pi-sort-amount-down-alt]=\"value === false\"\n  ></i>\n</ng-container>\n","import {\r\n  HttpContextToken,\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {MessageService} from 'primeng/api';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {bufferTime, filter, tap} from 'rxjs/operators';\r\n\r\nclass Message {\r\n  severity: 'success' | 'error';\r\n  status: number;\r\n  text: string;\r\n}\r\n\r\nexport const IS_SCANNING_ENABLED = new HttpContextToken<boolean>(() => false);\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  private message$ = new Subject<Message>();\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.message$.pipe(\r\n      bufferTime(1_000),\r\n      filter(messages => Boolean(messages.length)),\r\n    ).subscribe(messages => {\r\n      const succeededMessages = messages.filter(message => message.severity === 'success');\r\n      if (succeededMessages.length) {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: `Succeeded operations: ${succeededMessages.length}`,\r\n          detail: this.getNotificationText(succeededMessages),\r\n        });\r\n      }\r\n      const failedMessages = messages.filter(message => message.severity === 'error');\r\n      if (failedMessages.length) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: `Failed operations: ${failedMessages.length}`,\r\n          detail: this.getNotificationText(failedMessages),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(tap(\r\n      (event) => {\r\n        if (req.context.get(IS_SCANNING_ENABLED) === true) {\r\n          return;\r\n        }\r\n\r\n        if (event instanceof HttpResponse) {\r\n          if (req.method === 'PUT' || req.method === 'PATCH') {\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Updated'});\r\n          }\r\n          if (req.method === 'POST') {\r\n\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Created'});\r\n          }\r\n          if (req.method === 'DELETE') {\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Deleted'});\r\n          }\r\n        }\r\n      },\r\n      (err) => {\r\n        if (req.context.get(IS_SCANNING_ENABLED) === true) {\r\n          return;\r\n        }\r\n\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 400 || err.status === 404 || err.status === 502 || err.status === 403) {\r\n            this.message$.next({severity: 'error', status: err.status, text: JSON.stringify(err.error.data)});\r\n          } else if (err.status === 500) {\r\n            this.message$.next({\r\n              severity: 'error',\r\n              status: err.status,\r\n              text: JSON.stringify('Unknown error. Contact the developer.')\r\n            });\r\n          }\r\n        }\r\n      }),\r\n    );\r\n  }\r\n\r\n  private getNotificationText(messages: Message[]) {\r\n    return messages\r\n      .map((message) => `${message.status}: ${message.text}`)\r\n      .join(';\\r\\n');\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {PaymentFile} from '../../../payments/models/payment';\nimport {environment} from '@env/environment';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PaymentService} from '../../../payments/services/payment.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {finalize} from 'rxjs';\nimport {OrderService} from '../../../procurement/services/order.service';\n\n@Component({\n  selector: 'pek-add-file-to-order',\n  templateUrl: './add-file-to-order.component.html',\n  styleUrls: ['./add-file-to-order.component.scss']\n})\nexport class AddFileToOrderComponent implements OnInit {\n\n  readonly deletion = new Set<number>();\n  readonly addition = new Set<number>();\n\n  uploadFiles: File[] = [];\n  files: any[] = []\n  isLoading = true;\n  isPending = false;\n  link = environment.image_path;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<AddFileToOrderComponent>,\n    private orderService: OrderService,\n    private adapterService: AdapterService,\n    private modalService: ModalService,\n    @Inject(MAT_DIALOG_DATA) public data: {orderId: number}\n  ) { }\n\n  ngOnInit(): void {\n    this.getFiles()\n  }\n\n  getFiles() {\n    this.orderService.getFiles(this.data.orderId).subscribe(files => {\n      this.files = files;\n      this.isLoading = false;\n    });\n  }\n\n  getFileName(file: string) {\n    let name = file.split('/');\n    return name[name.length - 1];\n  }\n\n  onSelectFiles(files: File[]) {\n    this.uploadFiles = files;\n  }\n\n\n  onDownloadFile(file: PaymentFile) {\n    this.addition.add(file.id);\n    this.orderService.downloadFile(file.id).subscribe(response => {\n      const filename = this.getFileName(file.file);\n      this.adapterService.downloadFile(filename, response);\n      this.addition.clear();\n    });\n  }\n\n  onRemoveFile(id: number) {\n    this.modalService.confirm('danger').subscribe(confirm =>{\n      if (confirm) {\n        this.deletion.add(id)\n\n        this.orderService.deleteFile(id).subscribe(() => {\n          const index = this.files.findIndex(f => f.id === id)\n          this.files.splice(index, 1)\n          this.deletion.clear()\n        });\n      }\n    });\n  }\n\n  onUploadFiles() {\n    this.isPending = true;\n    this.orderService.severalUploadFiles(this.data.orderId, this.uploadFiles)\n      .pipe(\n        finalize(() => this.isPending = false)\n      )\n      .subscribe(files => this.dialogRef.close(files));\n  }\n\n  fileAdded(file: File) {\n    this.uploadFiles.push(file);\n  }\n}\n","<div pekPasteScreenImage (imageAdded)=\"fileAdded($event)\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      Order Files\n    </h2>\n  </div>\n\n  <mat-dialog-content >\n    <pek-upload-file\n      [uploadFiles]=\"uploadFiles\"\n      [multiple]=\"true\"\n      (selectFile)=\"onSelectFiles($event)\"\n    ></pek-upload-file>\n\n    <div class=\"product-files\">\n      <h3 class=\"product-files__caption\">Uploaded Files</h3>\n      <p-table\n        selectionMode=\"single\"\n        [value]=\"files\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 75%\">Name</th>\n            <th style=\"width: 20%\">Download</th>\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 75%\" class=\"word-break\">\n              <a [href]=\"link + file.file\">\n                {{getFileName(file.file)}}\n              </a>\n            </td>\n            <td style=\"width: 20%\">\n              <div class=\"d-flex\">\n                <button\n                  pButton\n                  (click)=\"onDownloadFile(file)\"\n                  [loading]=\"addition.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\n                  icon=\"pi pi-download\"\n                ></button>\n                <button\n                  pButton\n                  (click)=\"onRemoveFile(file.id)\"\n                  [loading]=\"deletion.has(file.id)\"\n                  type=\"button\"\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                  icon=\"pi pi-trash\"\n                ></button>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-2\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </mat-dialog-content>\n\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Upload\"\n      [loading]=\"isPending\"\n      [disabled]=\"uploadFiles.length === 0\"\n      (click)=\"onUploadFiles()\"\n    ></button>\n  </mat-dialog-actions>\n\n</div>\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {OrderType} from '@shared/components/order-page/order-page.component';\nimport {BehaviorSubject, Observable, switchMap} from 'rxjs';\nimport {finalize, map, tap} from 'rxjs/operators';\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\nimport {Order} from '../../../procurement/models/order';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {QuerySearch} from '@shared/models/other';\nimport {Paginator} from 'primeng/paginator';\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'pek-add-products-to-chain',\n  templateUrl: './add-products-to-chain.component.html',\n  styleUrls: ['./add-products-to-chain.component.scss']\n})\nexport class AddProductsToChainComponent implements OnInit {\n  @ViewChild('paginator') paginator: Paginator;\n\n  isSaving = false;\n  isStartFirstPage = false;\n\n  selectedOrder: Order;\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\n\n  searchForm: FormGroup = this.fb.group({\n    with_free_product: [false]\n  });\n\n  currentPage = 1;\n\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\n\n  query: QuerySearch[] = [];\n  isLoading = true;\n  productsCount = 0;\n\n  orders$: Observable<Order[]> = this.search$.pipe(\n    tap(() => this.prepareForSearch()),\n    switchMap(() => this.orderService.getForPagination(this.query)),\n    tap(response => this.productsCount = response.count),\n    map(response => response.results),\n    tap(() => this.paginateToFistPage()),\n    tap(() => this.isLoading = false),\n    untilDestroyed(this)\n  );\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderService: OrderService,\n    private readonly orderProductService: OrderProductService,\n    private readonly adapterService: AdapterService,\n    private dialogRef: MatDialogRef<AddProductsToChainComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { products: OrderProduct[], orderType: OrderType }\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  prepareForSearch() {\n    this.isLoading = true;\n    this.selectedOrder = null;\n\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\n\n    if (newQueryKey !== this.queryKey) {\n      this.currentPage = 1;\n      this.queryKey = newQueryKey;\n      this.isStartFirstPage = true;\n    }\n\n    if (this.data.orderType === 'procurement') {\n      this.query = [\n        {name: 'paginated', value: true},\n        {name: 'page', value: this.currentPage},\n        {name: 'exclude_with_active_final_status', value: true},\n        {name: 'accounting_type', value: 1},\n        {name: 'has_purchase_category', value: false},\n      ];\n    }\n\n    if (this.data.orderType === 'outsourcing') {\n      this.query = [\n        {name: 'paginated', value: true},\n        {name: 'page', value: this.currentPage},\n        {name: 'exclude_with_active_final_status', value: true},\n        {name: 'accounting_type', value: 2},\n      ];\n    }\n\n    if (this.data.orderType === 'purchase') {\n      this.query = [\n        {name: 'paginated', value: true},\n        {name: 'page', value: this.currentPage},\n        {name: 'exclude_with_active_final_status', value: true},\n        {name: 'accounting_type', value: 1},\n        {name: 'has_purchase_category', value: true},\n      ];\n    }\n\n    if (this.searchForm.get('with_free_product').value) {\n      this.query.push({name: 'with_free_product', value: this.data.products[0].nomenclature.id});\n    }\n  }\n\n  paginate(event: any) {\n    if (!this.isStartFirstPage) {\n      this.currentPage = event.page + 1;\n      this.search$.next();\n    }\n  }\n\n  paginateToFistPage() {\n    if (this.isStartFirstPage) {\n      this.paginator?.changePage(0);\n    }\n\n    this.isStartFirstPage = false;\n  }\n\n  onAdd() {\n    this.isSaving = true;\n\n    const send = this.data.products.map(p => {\n      return {\n        id: p.id,\n        order: this.selectedOrder.id,\n      };\n    });\n\n    this.orderProductService.addToOrder(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add To\n    <ng-container [ngSwitch]=\"data.orderType\">\n      <ng-container *ngSwitchCase=\"'procurement'\">Procurement</ng-container>\n      <ng-container *ngSwitchCase=\"'outsourcing'\">Outsourcing</ng-container>\n      <ng-container *ngSwitchCase=\"'purchase'\">Procurement</ng-container>\n    </ng-container>\n    Chain\n  </h2>\n  <div class=\"modal-header__tools\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"form-group\">\n        <p-checkbox\n          inputId=\"root\"\n          formControlName=\"with_free_product\"\n          (ngModelChange)=\"this.search$.next()\"\n          [binary]=\"true\"\n        ></p-checkbox>\n        <label class=\"ml-2 mb-0\" for=\"root\">With Free Items</label>\n      </div>\n    </form>\n  </div>\n</div>\n\n<div class=\"mb-3\"></div>\n\n<mat-dialog-content>\n  <div class=\"table-pagination-preloader\">\n    <p-table\n      selectionMode=\"single\"\n      dataKey=\"id\"\n      [value]=\"orders$ | async\"\n      [(selection)]=\"selectedOrder\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th style=\"width: 10%\" class=\"index-header text-center\">#</th>\n          <th style=\"width: 20%\" class=\"text-center\">ID</th>\n          <th style=\"width: 20%\" class=\"text-center\">Date</th>\n          <th style=\"width: 50%\">Company</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\" let-expanded=\"expanded\">\n        <tr [pSelectableRow]=\"order\" [pRowToggler]=\"order\">\n          <td style=\"width: 10%\" class=\"text-center\">{{(this.currentPage - 1) * 10 + i + 1}}</td>\n          <td style=\"width: 20%\" class=\"text-center\">{{order.id}}</td>\n          <td style=\"width: 20%\" class=\"text-center\">{{order.created|date:'dd/MM/yyyy'}}</td>\n          <td style=\"width: 50%\">{{order?.supplier?.name}}</td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n            <span>No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n    <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n\n  <div\n    class=\"paginator-wrapper\"\n    [class.paginator-wrapper_hide]=\"productsCount === 0\"\n  >\n    <p-paginator\n      #paginator\n      [rows]=\"10\"\n      [totalRecords]=\"productsCount\"\n      (onPageChange)=\"paginate($event)\"\n    >\n    </p-paginator>\n  </div>\n\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Add\"\n    [loading]=\"isSaving\"\n    [disabled]=\"!selectedOrder\"\n    (click)=\"onAdd()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport type ConfirmType = 'default' | 'success' | 'danger'\n\n@Component({\n  selector: 'pek-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public modalData: { type: ConfirmType, btnConfirmText: string }) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n  <div class=\"confirm\">\n    <div\n      class=\"confirm__icon\"\n      [class.confirm__icon_success]=\"modalData.type === 'success'\"\n      [class.confirm__icon_danger]=\"modalData.type === 'danger'\"\n      [ngSwitch]=\"modalData.type\"\n    >\n      <i *ngSwitchCase=\"'danger'\" class=\"pi pi-times-circle\"></i>\n      <i *ngSwitchCase=\"'default'\" class=\"pi fa-trash-alt\"></i>\n      <i *ngSwitchCase=\"'success'\" class=\"pi pi-check-circle\"></i>\n    </div>\n\n    <div class=\"confirm__text\">\n      Are you sure?\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-secondary\"></button>\n  <ng-container [ngSwitch]=\"modalData.type\">\n    <button\n      *ngSwitchCase=\"'danger'\"\n      pButton\n      type=\"button\"\n      [label]=\"modalData.btnConfirmText ? modalData.btnConfirmText : 'Remove'\"\n      [mat-dialog-close]=\"true\"\n      class=\"p-button-danger\"\n    ></button>\n    <button\n      *ngSwitchCase=\"'success'\"\n      pButton\n      type=\"button\"\n      [label]=\"modalData.btnConfirmText ? modalData.btnConfirmText : 'Confirm'\"\n      [mat-dialog-close]=\"true\"\n      class=\"p-button-success\"\n    ></button>\n  </ng-container>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {OrderProduct} from '../../../procurement/models/order-product';\nimport {OrderType} from '@shared/components/order-page/order-page.component';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {finalize} from 'rxjs/operators';\nimport {PurchaseCategory} from '../../../purchasing/models/purchase-category';\nimport {PurchasingCategoryService} from '../../../purchasing/services/purchasing-category.service';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\n\n@Component({\n  selector: 'pek-create-chain',\n  templateUrl: './create-chain.component.html',\n  styleUrls: ['./create-chain.component.scss']\n})\nexport class CreateChainComponent implements OnInit {\n  isSaving = false;\n  isLoadingCategories = true;\n\n  form: FormGroup = this.fb.group({\n    supplier: [null, Validators.required],\n    order_products_id: this.fb.array([]),\n  });\n\n  selectedProducts = {};\n\n  purchasingCategories: PurchaseCategory[] = [];\n  selectedPurchasingCategoryId: number;\n\n  orderProducts: OrderProduct[] = [];\n\n  get products() {\n    return this.form.get('order_products_id') as FormArray;\n  }\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly orderService: OrderService,\n    private dialogRef: MatDialogRef<CreateChainComponent>,\n    private readonly purchasingCategoryService: PurchasingCategoryService,\n    private readonly  warehouseProductService: WarehouseProductService,\n    @Inject(MAT_DIALOG_DATA) public data: { products: OrderProduct[], orderType: OrderType }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.orderProducts = this.data.products.map(p => p);\n\n    this.orderProducts.forEach(p => {\n      const product = this.fb.group({\n        id: p.id,\n        quantity: [p.initial_quantity, [Validators.required, Validators.min(1)]],\n      });\n\n      this.products.push(product);\n    });\n\n    if (this.data.orderType === 'purchase') {\n      this.getPurchasingCategories();\n    }\n  }\n\n  getPurchasingCategories() {\n    this.purchasingCategoryService.getAll().subscribe(categories => {\n      this.purchasingCategories = categories;\n      this.isLoadingCategories = false;\n    });\n  }\n\n  onCreate() {\n    this.isSaving = true;\n\n    const send = this.form.value;\n\n    if (this.data.orderType === 'purchase') {\n      Object.assign(send, {\n        purchase_category: this.selectedPurchasingCategoryId,\n        accounting_type: 1\n      });\n    }\n\n    this.orderService.createChain(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(order => {\n      this.dialogRef.close(order);\n    });\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('supplier').patchValue(id);\n  }\n\n  addControl(evt: { data: FormGroup }) {\n    const formArray = [this.fb.group({id: [null, [Validators.required]], quantity: [1, [Validators.min(1)]]})];\n    evt.data.addControl('warehouse_products', this.fb.array(formArray));\n  }\n\n  removeControl(evt: { data: FormGroup }) {\n    evt.data.removeControl('warehouse_products');\n  }\n\n  addWarehouseControl(group: FormGroup) {\n    console.log(group);\n    const arr = group.get('warehouse_products') as FormArray;\n    arr.push(this.fb.group({id: [null, [Validators.required]], quantity: [1, [Validators.min(1)]]}));\n  }\n\n  removeWarehouseControl(group: FormGroup, i: number) {\n    const arr = group.get('warehouse_products') as FormArray;\n    arr.removeAt(i);\n  }\n\n  onSearchProductsToWarehouse(item: FormControl) {\n    this.warehouseProductService.openSearchInWarehouseModal().subscribe(product => {\n      this.selectedProducts[product.id] = product;\n      item.patchValue(product.id);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Create\n    <ng-container [ngSwitch]=\"data.orderType\">\n      <ng-container *ngSwitchCase=\"'procurement'\">Procurement</ng-container>\n      <ng-container *ngSwitchCase=\"'outsourcing'\">Outsourcing</ng-container>\n      <ng-container *ngSwitchCase=\"'purchase'\">Procurement</ng-container>\n    </ng-container>\n    Chain\n  </h2>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label>Company*</label>\n      <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"data.orderType === 'purchase'\">\n    <div class=\"form-group\">\n      <label>Purchase Category</label>\n      <p-dropdown\n        *ngIf=\"!isLoadingCategories else spinner\"\n        [showClear]=\"true\"\n        [options]=\"purchasingCategories\"\n        optionValue=\"id\"\n        optionLabel=\"name\"\n        [(ngModel)]=\"selectedPurchasingCategoryId\"\n        placeholder=\"Choice Purchase Category\"\n      >\n      </p-dropdown>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <div class=\"mt-3\">\n    <div class=\"create-chain-table\">\n      <form [formGroup]=\"form\">\n        <p-table\n          selectionMode=\"single\"\n          dataKey=\"value.id\"\n          [value]=\"products.controls\"\n          rowExpandMode=\"multiple\"\n          (onRowExpand)=\"addControl($event)\"\n          (onRowCollapse)=\"removeControl($event)\"\n        >\n          <ng-template pTemplate=\"header\">\n            <ng-container *ngIf=\"data.orderType !== 'outsourcing'\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 20%\">Code</th>\n                <th style=\"width: 20%\">Name</th>\n                <th style=\"width: 15%\" class=\"text-center\">Request Quantity</th>\n                <th style=\"width: 15%\" class=\"text-center\">Ordered Quantity</th>\n                <th style=\"width: 25%\" class=\"text-center\">Quantity To Order</th>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf=\"data.orderType === 'outsourcing'\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 15%\">Code</th>\n                <th style=\"width: 15%\">Name</th>\n                <th style=\"width: 10%\" class=\"text-center\">Request Quantity</th>\n                <th style=\"width: 15%\" class=\"text-center\">Ordered Quantity</th>\n                <th style=\"width: 20%\" class=\"text-center\">Quantity To Order</th>\n                <th style=\"width: 20%\" class=\"text-center\">Our Material</th>\n              </tr>\n            </ng-container>\n          </ng-template>\n          <ng-template formArrayName=\"order_products_id\" let-product let-i=\"rowIndex\" pTemplate=\"body\">\n            <tr [formGroupName]=\"i\">\n              <td class=\"text-center\">{{i + 1}}</td>\n              <td>\n                <div class=\"word-break\">{{orderProducts[i].nomenclature.code}}</div>\n              </td>\n              <td>\n                <div class=\"word-break\">{{orderProducts[i].nomenclature.name}}</div>\n              </td>\n              <td class=\"text-center\">{{orderProducts[i].initial_quantity}}</td>\n              <td class=\"text-center\">{{orderProducts[i].ordered_quantity}}</td>\n              <td>\n                <div class=\"quantity\">\n                  <input pInputText min=\"1\" type=\"number\" formControlName=\"quantity\" class=\"form-control\">\n                </div>\n              </td>\n              <td *ngIf=\"data.orderType === 'outsourcing'\">\n                <div class=\"d-flex justify-content-center\">\n                  <p-checkbox\n                    [pRowToggler]=\"product\"\n                    [binary]=\"true\"\n                  ></p-checkbox>\n                </div>\n              </td>\n            </tr>\n          </ng-template>\n\n          <ng-template pTemplate=\"rowexpansion\" let-array>\n            <tr [formGroup]=\"array\">\n              <td colspan=\"7\" formArrayName=\"warehouse_products\">\n                <div class=\"expand-row expand-row_header row\">\n                  <div class=\"col-8\">\n                    <div class=\"form-group\">\n                      <label>Warehouse Product</label>\n                    </div>\n                  </div>\n                  <div class=\"col-2\">\n                    <div class=\"form-group\">\n                      <label>Quantity</label>\n                    </div>\n                  </div>\n                  <div class=\"col-2\">\n                    <button\n                      class=\"row-action-button\"\n                      type=\"button\"\n                      pButton\n                      icon=\"pi pi-plus\"\n                      (click)=\"addWarehouseControl(array)\"\n                    ></button>\n                  </div>\n                </div>\n                <div\n                  class=\"expand-row expand-row_content row\"\n                  *ngFor=\"let item of array.get('warehouse_products')['controls']; let i=index\"\n                  [formGroupName]=\"i\"\n                >\n                  <div class=\"col-8\">\n                    <button\n                      class=\"search-button\"\n                      type=\"button\"\n                      label=\"Search In Warehouse\"\n                      pButton\n                      icon=\"pi pi-plus\"\n                      (click)=\"onSearchProductsToWarehouse(item.controls['id'])\"\n                    ></button>\n\n                    <p class=\"selected-product\" *ngIf=\"item.get('id').value\">\n                      ({{selectedProducts[item.controls['id'].value].nomenclature.code}})\n                      {{selectedProducts[item.controls['id'].value].nomenclature.name}}\n                    </p>\n                  </div>\n                  <div class=\"col-2\">\n                    <div class=\"form-group\">\n                      <input\n                        [class.disabled]=\"!item.get('id').value\"\n                        pInputText\n                        formControlName=\"quantity\"\n                        min=\"1\"\n                        type=\"number\"\n                        class=\"form-control\"\n                        style=\"text-align: center\"\n                      >\n                    </div>\n                  </div>\n                  <div class=\"col-2\">\n                    <button\n                      *ngIf=\"i > 0\"\n                      class=\"row-action-button remove p-button-danger\"\n                      type=\"button\"\n                      pButton\n                      icon=\"pi pi-times\"\n                      (click)=\"removeWarehouseControl(array, i)\"\n                    ></button>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n                <span>No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </form>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Create\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onCreate()\"\n  ></button>\n</mat-dialog-actions>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Status} from '../../../procurement/models/status';\nimport {StatusService} from '../../../procurement/services/status.service';\n\n@Component({\n  selector: 'pek-create-edit-status',\n  templateUrl: './create-edit-status.component.html',\n  styleUrls: ['./create-edit-status.component.scss']\n})\nexport class CreateEditStatusComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    value: ['', [Validators.required]],\n    accounting_type: [<number>null, [Validators.required]],\n    description: [''],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly statusService: StatusService,\n    private dialogRef: MatDialogRef<CreateEditStatusComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, statusType: number, isAutoStatus: boolean, status: Status }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.patchValue(<any>this.data.status);\n      this.form.addControl(<any>'id', this.fb.control(this.data.status.id));\n    }\n\n    this.form.get('accounting_type').patchValue(this.data.statusType);\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createStatus();\n        break;\n      }\n      case 'edit': {\n        this.editStatus();\n        break;\n      }\n    }\n  }\n\n  createStatus() {\n    const send = <any>this.form.value;\n    this.statusService.create(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editStatus() {\n    const send = <any>this.form.value;\n    this.statusService.update(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Status\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input\n        pInputText\n        formControlName=\"value\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"name\"\n      />\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"!data.isAutoStatus\">\n      <label for=\"description\">Description</label>\n      <textarea\n        id=\"description\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"true\"\n        formControlName=\"description\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Order} from '../../../procurement/models/order';\nimport {FormArray, FormBuilder, Validators} from '@angular/forms';\nimport {Status} from '../../../procurement/models/status';\nimport {StatusService} from '../../../procurement/services/status.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {finalize} from 'rxjs/operators';\nimport {OrderType} from '@shared/components/order-page/order-page.component';\n\n@Component({\n  selector: 'pek-edit-order',\n  templateUrl: './edit-order.component.html',\n  styleUrls: ['./edit-order.component.scss']\n})\nexport class EditOrderComponent implements OnInit {\n  isSaving = false;\n  isLoadingStatuses = true;\n\n  form = this.fb.group({\n    promised_date: [null],\n    created: [<Date | string>null, Validators.required],\n    statuses: this.fb.array(<any[]>[]),\n    comment: [''],\n    supplier: [<number>null],\n  });\n\n  dropdownStatuses: Status[];\n\n  get statuses() {\n    return this.form.get('statuses') as FormArray;\n  }\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<EditOrderComponent>,\n    private readonly statusService: StatusService,\n    private readonly adapterService: AdapterService,\n    private readonly orderService: OrderService,\n    @Inject(MAT_DIALOG_DATA) public data: { order: Order, orderType: OrderType }\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getStatuses();\n    this.form.addControl(<any>'id', this.fb.control(this.data.order.id));\n\n    this.form.get('supplier').patchValue(this.data.order.supplier?.id);\n    this.form.get('created').patchValue(new Date(this.data.order.created));\n    this.form.get('comment').patchValue(this.data.order.comment);\n\n    this.data.order.statuses.map(status => this.fb.group({\n      id: [status.status.id, Validators.required],\n      is_active: status.is_active,\n      estimated_date: [new Date(status.estimated_date), Validators.required],\n      status: [status.status_id]\n    })).forEach(status => {\n      this.statuses.push(status);\n    });\n  }\n\n  getStatuses() {\n    let accountingType: number;\n\n    switch (this.data.orderType) {\n      case 'procurement':\n        accountingType = 4;\n        break;\n      case 'outsourcing':\n        accountingType = 2;\n        break;\n      case 'purchase': {\n        accountingType = 1;\n        break;\n      }\n    }\n\n    this.statusService.get([\n      {name: 'accounting_type', value: accountingType}\n    ]).subscribe(statuses => {\n      this.dropdownStatuses = statuses;\n      this.isLoadingStatuses = false;\n    });\n  }\n\n  onChangeActiveStatus(idx: number) {\n    this.statuses.controls.forEach(status => status.get('is_active').patchValue(false));\n    this.statuses.at(idx).get('is_active').patchValue(true);\n  }\n\n  onRemoveStatus(idx: number) {\n    if (this.statuses.at(idx).get('is_active').value) {\n      this.statuses.at(idx - 1).get('is_active').patchValue(true);\n    }\n\n    this.statuses.removeAt(idx);\n  }\n\n  onAddStatus() {\n    this.statuses.push(\n      this.fb.group({\n        id: [null, Validators.required],\n        is_active: false,\n        estimated_date: [null, Validators.required],\n        status: [null]\n      })\n    );\n  }\n\n  onSave() {\n    const send = this.form.value;\n\n    send.created = this.adapterService.dateAdapter(new Date(send.created));\n    delete send.supplier;\n\n    send.statuses = this.statuses.controls.map(status => {\n      return {\n        is_active: status.get('is_active').value,\n        estimated_date: this.adapterService.dateAdapter(status.get('estimated_date').value),\n        status: status.get('id').value,\n      };\n    });\n\n    this.isSaving = true;\n\n    this.orderService.updatePartly(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Change\n    <ng-container [ngSwitch]=\"data.orderType\">\n      <ng-container *ngSwitchCase=\"'procurement'\">Procurement</ng-container>\n      <ng-container *ngSwitchCase=\"'outsourcing'\">Outsourcing</ng-container>\n    </ng-container>\n    Chain\n  </h2>\n</div>\n\n<form [formGroup]=\"form\" class=\"statuses\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Supplier*</label>\n        <pek-company-picker\n          [isDisabled]=\"true\"\n          [currentCompanyId]=\"form.get('supplier').value\"\n        ></pek-company-picker>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Creation Date*</label>\n        <p-calendar\n          [firstDayOfWeek]=\"1\"\n          [showButtonBar]=\"true\"\n          formControlName=\"created\"\n          inputId=\"basic\"\n          dateFormat=\"dd/mm/yy\"\n          [readonlyInput]=\"true\"\n        ></p-calendar>\n      </div>\n    </div>\n  </div>\n  <label class=\"label-status\">Statuses</label>\n  <div formArrayName=\"statuses\" class=\"statuses-list\">\n    <div\n      class=\"row status-row\"\n      *ngFor=\"let status of statuses.controls; let idx = index\"\n      [formGroupName]=\"idx\"\n    >\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <label>Status*</label>\n          <div class=\"statuses-picker\">\n            <p-dropdown\n              *ngIf=\"!isLoadingStatuses; else spinner\"\n              [options]=\"dropdownStatuses\"\n              placeholder=\"Select Status\"\n              optionLabel=\"value\"\n              optionValue=\"id\"\n              formControlName=\"id\"\n              [showClear]=\"true\"\n            >\n            </p-dropdown>\n          </div>\n\n          <ng-template #spinner>\n            <div class=\"spinner-input\">\n              <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <label>Date*</label>\n          <p-calendar\n            [firstDayOfWeek]=\"1\"\n            [showButtonBar]=\"true\"\n            formControlName=\"estimated_date\"\n            inputId=\"basic\"\n            dateFormat=\"dd/mm/yy\"\n            [readonlyInput]=\"true\"\n          ></p-calendar>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"d-flex\">\n          <div class=\"form-group\">\n            <label>Active</label>\n            <p-checkbox\n              formControlName=\"is_active\"\n              [binary]=\"true\"\n              (onChange)=\"onChangeActiveStatus(idx)\"\n            ></p-checkbox>\n          </div>\n          <div class=\"form-group\" *ngIf=\"statuses.controls.length > 1\">\n            <button class=\"remove-button\" (click)=\"onRemoveStatus(idx)\">\n              <i class=\"pi pi-times\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"add-button custom-button\">\n      <p-button\n        icon=\"pi pi-plus\"\n        (click)=\"onAddStatus()\"\n        type=\"button\"\n        styleClass=\"p-button-text\"\n      >\n        Add Status\n      </p-button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"comment\">Comment*</label>\n        <textarea\n          id=\"comment\"\n          [rows]=\"3\"\n          pInputTextarea\n          [autoResize]=\"true\"\n          formControlName=\"comment\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <mat-dialog-content>\n\n  </mat-dialog-content>\n</form>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    [label]=\"'Edit'\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {NomenclatureImage} from '@shared/models/nomenclature';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\n\n@Component({\n  selector: 'pek-image-gallery',\n  templateUrl: './image-gallery.component.html',\n  styleUrls: ['./image-gallery.component.scss']\n})\nexport class ImageGalleryComponent implements OnInit {\n  images: NomenclatureImage[] = [];\n  offsetSlider = 0;\n  activeSlideIndex = 1;\n  galleryWidth = 1300;\n\n  isLoading = true;\n\n  constructor(\n    private readonly nomenclatureService: NomenclatureService,\n    @Inject(MAT_DIALOG_DATA) public data: { images: NomenclatureImage[], nomenclatureId: number, activeIdx: number },\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.nomenclatureId) {\n      this.loadingImages();\n      return;\n    }\n\n    if (this.data.images) {\n      this.images = this.data.images;\n      this.activeSlideIndex = this.data.activeIdx;\n\n      if (this.activeSlideIndex > 1) {\n        this.offsetSlider = this.galleryWidth * (this.activeSlideIndex - 1);\n      }\n\n      this.isLoading = false;\n    }\n  }\n\n  loadingImages() {\n    this.nomenclatureService.loadImages(this.data.nomenclatureId).subscribe(images => {\n      this.images = images;\n      this.isLoading = false;\n    });\n\n    this.activeSlideIndex = 1;\n  }\n\n  onSlideNext() {\n    if (this.activeSlideIndex === this.images.length) {\n      this.offsetSlider = 0;\n      this.activeSlideIndex = 1;\n    } else {\n      this.offsetSlider = this.galleryWidth * this.activeSlideIndex;\n      this.activeSlideIndex++;\n    }\n  }\n\n  onSlidePrev() {\n    if (this.activeSlideIndex === 1) {\n      this.offsetSlider = this.galleryWidth * (this.images.length - 1);\n      this.activeSlideIndex = this.images.length;\n    } else {\n      this.offsetSlider = (this.activeSlideIndex - 2) * this.galleryWidth;\n      this.activeSlideIndex--;\n    }\n  }\n}\n","<div class=\"image-gallery\" *ngIf=\"!isLoading && images.length > 0\">\n  <div class=\"image-gallery__wrapper\">\n    <div\n      class=\"image-gallery__inner\"\n      [style.width]=\"galleryWidth * images.length + 'px'\"\n      [style.transform]=\"'translateX(-' + offsetSlider + 'px)'\"\n    >\n      <div class=\"image-gallery__slide\" *ngFor=\"let image of images; let idx = index\">\n        <img [src]=\"image.image\" [alt]=\"'Изображение слайда ' + idx + 1\">\n      </div>\n    </div>\n  </div>\n\n  <i\n    *ngIf=\"images.length > 1\"\n    class=\"pi pi-chevron-left image-gallery__btn image-gallery__btn_prev\"\n    (click)=\"onSlidePrev()\"\n  >\n  </i>\n  <i\n    *ngIf=\"images.length > 1\"\n    class=\"pi pi-chevron-right image-gallery__btn image-gallery__btn_next\"\n    (click)=\"onSlideNext()\"\n  >\n  </i>\n</div>\n\n<div class=\"image-gallery__none\" *ngIf=\"isLoading\">\n  <i class=\"pi pi-images\"></i>\n  <p>Images are loading...</p>\n</div>\n\n<div class=\"image-gallery__none\" *ngIf=\"!isLoading && images.length === 0\">\n  <i class=\"pi pi-images\"></i>\n  <p>There are no Images</p>\n</div>\n","import {AfterViewInit, Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Paginator} from 'primeng/paginator';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-nomenclature-picker-modal',\n  templateUrl: './nomenclature-picker-modal.component.html',\n  styleUrls: ['./nomenclature-picker-modal.component.scss']\n})\nexport class NomenclaturePickerModalComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  countNomenclatures = 0;\n\n  isLoading = true;\n  isStartOnePage = false;\n  nomenclatures: Nomenclature[] = [];\n  selectedNomenclature: Nomenclature;\n\n  nomenclatureType = ENomenclatureType;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1],\n    name: [''],\n    code: [''],\n    type: [null],\n    categories: [null],\n  });\n\n  queryKey = 'name:/code:/type:null/categories:null';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true},\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private dialogRef: MatDialogRef<NomenclaturePickerModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ENomenclatureType }\n  ) {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      fromEvent(this.searchBoxName.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxName.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n\n      fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxCode.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.data.type !== null) {\n      this.searchForm.get('type').patchValue(this.data.type);\n\n      this.searchNomenclatures();\n      return;\n    }\n\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  searchNomenclatures() {\n    this.isLoading = true;\n    this.destroy$.next(true);\n    this.selectedNomenclature = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/type:${this.searchForm.get('type').value}/categories:${this.searchForm.get('categories').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true},\n    ];\n\n    if (this.searchForm.get('name').value) {\n      this.query.push({\n        name: 'name',\n        value: this.searchForm.get('name').value\n      });\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({\n        name: 'code',\n        value: this.searchForm.get('code').value\n      });\n    }\n\n    if (this.searchForm.get('type').value !== null) {\n      this.query.push({\n        name: 'type',\n        value: this.searchForm.get('type').value\n      });\n    }\n\n    if (this.searchForm.get('categories').value !== null) {\n      this.query.push({\n        name: 'categories',\n        value: this.searchForm.get('categories').value\n      });\n    }\n\n    this.getNomenclatures();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  selectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.searchNomenclatures();\n  }\n\n  onSelectNomenclature() {\n    this.dialogRef.close(this.selectedNomenclature);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  onSelectCategory(category: Category) {\n    if (category) {\n      this.searchForm.get('categories').patchValue(category.id)\n    } else {\n      this.searchForm.get('categories').patchValue(null)\n    }\n\n    this.searchNomenclatures();\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">Choice Nomenclature</h2>\n</div>\n\n<mat-dialog-content>\n  <div\n    class=\"nomenclature-picker-modal\"\n  >\n    <div class=\"nomenclature-picker-modal__form\">\n      <form [formGroup]=\"searchForm\">\n        <div\n          class=\"form-box form-box_3\"\n        >\n          <div class=\"form-group\">\n            <label for=\"code\">Code</label>\n            <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\n          </div>\n          <div class=\"form-group\" *ngIf=\"data.type === null\">\n            <label>Type</label>\n            <pek-nomenclature-type-picker\n              (choiceNomenclatureType)=\"selectNomenclatureType($event)\"\n            ></pek-nomenclature-type-picker>\n          </div>\n\n          <div class=\"form-group\" *ngIf=\"data.type === nomenclatureType.PURCHASED\">\n            <label>Category</label>\n            <pek-product-category-picker (choiceCategory)=\"onSelectCategory($event)\"></pek-product-category-picker>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        [value]=\"nomenclatures\"\n        [rows]=\"10\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedNomenclature\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 7%\">#</th>\n            <th style=\"width: 22%\">Code</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 10%\">UOM</th>\n            <th style=\"width: 15%;\">Technology</th>\n            <th style=\"width: 15%\" class=\"text-center\">Category</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n          <tr\n            [pSelectableRow]=\"nomenclature\"\n            [pSelectableRowDisabled]=\"nomenclature.approved === '0' && nomenclature.type === '0'\"\n          >\n            <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 22%\">{{nomenclature.code}}</td>\n            <td style=\"width: 30%\">\n              <span *ngIf=\"nomenclature.approved === '0' && nomenclature.type === '0'\" class=\"badge badge_warning\">NEW</span>\n              {{nomenclature.name}}\n            </td>\n            <td\n              style=\"width: 10%\">{{nomenclature.category?.unit_of_measure?.symbol ? nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\n            <td style=\"width: 15%\">\n              <div *ngFor=\"let technology of nomenclature.technologies\">\n                {{technology.name}}\n              </div>\n            </td>\n            <td style=\"width: 15%\" class=\"text-center\">{{nomenclature.category?.name}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n\n      <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <p-paginator\n    #paginator\n    [class.hide]=\"nomenclatures.length === 0\"\n    [rows]=\"10\"\n    [totalRecords]=\"countNomenclatures\"\n    (onPageChange)=\"paginate($event)\"\n  >\n  </p-paginator>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [disabled]=\"!selectedNomenclature\"\n    [label]=\"'Choice'\"\n    (click)=\"onSelectNomenclature()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'pek-paste-image',\r\n  templateUrl: './paste-image.component.html',\r\n  styleUrls: ['./paste-image.component.scss']\r\n})\r\nexport class PasteImageComponent implements OnInit {\r\n\r\n  form: FormGroup = this.fb.group({\r\n    name: [null]\r\n  });\r\n  file: File;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<PasteImageComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { imageSrc: string | ArrayBuffer, file: File }\r\n  ) {\r\n    this.file = data.file;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  acceptChanges() {\r\n    if (this.form.get('name').value) {\r\n      const name = this.form.get('name').value;\r\n      this.file = this.renameFile(this.file, name);\r\n    }\r\n    this.dialogRef.close(this.file);\r\n  }\r\n\r\n  renameFile(originalFile, newName): File {\r\n    const splited = originalFile.name.split('.');\r\n    const extension = splited[splited.length - 1];\r\n    return new File([originalFile], newName + '.' + extension, {\r\n      type: originalFile.type,\r\n      lastModified: originalFile.lastModified,\r\n    });\r\n  }\r\n}\r\n","<div class=\"paste-image\">\r\n  <img [src]=\"data.imageSrc\" alt=\"Изображение\">\r\n</div>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Cancel\"\r\n      [mat-dialog-close]=\"false\"\r\n      class=\"p-button-danger mr-3\"\r\n    ></button>\r\n  <form\r\n    [formGroup]=\"form\"\r\n    class=\"mr-3\"\r\n  >\r\n    <input class=\"form-control\" placeholder=\"Change File Name\" formControlName=\"name\" pInputText>\r\n  </form>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Paste Image\"\r\n      (click)=\"acceptChanges()\"\r\n      class=\"p-button-success\"\r\n    ></button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport {LocatorService} from '../../../../warehouse/services/locator.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ListService} from '../../../../warehouse/services/list.service';\r\n\r\n@Component({\r\n  selector: 'app-complete-list',\r\n  templateUrl: './complete-list.component.html',\r\n  styleUrls: ['./complete-list.component.scss']\r\n})\r\nexport class CompleteListComponent implements OnInit {\r\n\r\n  groupLocators = [];\r\n  locatorsMap = {};\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private locatorService: LocatorService,\r\n    private dialogRef: MatDialogRef<CompleteListComponent>,\r\n    fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private listService: ListService,\r\n    private adapterService:AdapterService) {\r\n    if(this.data.type=='edit'){\r\n      this.form = fb.group({\r\n        locator: [null, Validators.required]\r\n      });\r\n      this.locatorService.getAll().pipe(take(1)).subscribe(res => {\r\n\r\n        res.forEach(element => {\r\n          if (this.locatorsMap[element.warehouse.id]) {\r\n            this.locatorsMap[element.warehouse.id].items.push({ label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place, value: element.id });\r\n          } else {\r\n            this.locatorsMap[element.warehouse.id] = {};\r\n            this.locatorsMap[element.warehouse.id].label = element.warehouse.name;\r\n            this.locatorsMap[element.warehouse.id].value = element.warehouse.id;\r\n            this.locatorsMap[element.warehouse.id].items = [];\r\n            this.locatorsMap[element.warehouse.id].items.push({ label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place, value: element.id });\r\n          }\r\n        })\r\n        Object.keys(this.locatorsMap).forEach(id => {\r\n          this.groupLocators.push(this.locatorsMap[id])\r\n        })\r\n        this.groupLocators = this.groupLocators.filter(x => { return x.value == 5 || x.value == 6 || x.value == 7 })\r\n      })\r\n    }\r\n\r\n    if(this.data.type=='date'){\r\n      this.form = fb.group({\r\n        id: [this.data.entity.list, Validators.required],\r\n        completed: [new Date(this.data.entity.completed), Validators.required]\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  complete() {\r\n    this.listService.process(this.form.value, this.data.entity.id).subscribe(process => {\r\n      this.dialogRef.close(true)\r\n    })\r\n  }\r\n\r\n  setDate() {\r\n    let send = this.form.value;\r\n    send.completed = this.adapterService.dateTimeAdapter(this.form.value.completed);\r\n    this.listService.updatePartly(send).subscribe(process => {\r\n      this.dialogRef.close(true)\r\n    })\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span *ngIf=\"data.type==='edit'\">Set Locator</span>\r\n    <span *ngIf=\"data.type==='date'\">Set Date</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content class=\"overflow-visible\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\" *ngIf=\"data.type==='edit'\">\r\n      <label for=\"locator\">Locator</label>\r\n      <p-dropdown formControlName=\"locator\" [options]=\"groupLocators\" id=\"locator\" [filter]=\"true\"\r\n                  placeholder=\"Select Locator\" [group]=\"true\">\r\n        <ng-template let-group pTemplate=\"group\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{group.label}}</span>\r\n          </div>\r\n        </ng-template>\r\n      </p-dropdown>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"data.type==='date'\">\r\n      <label for=\"completed\">Locator</label>\r\n      <p-calendar formControlName=\"completed\" dataType=\"date\" dateFormat=\"dd/mm/yy\" [readonlyInput]=\"true\"></p-calendar>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\" d-flex justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n\r\n  <button\r\n    *ngIf=\"data.type==='edit'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Complete\"\r\n    class=\"p-button-success\"\r\n    (click)=\"complete()\"\r\n  ></button>\r\n\r\n  <button\r\n    *ngIf=\"data.type==='date'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Set Date\"\r\n    class=\"p-button-success\"\r\n    (click)=\"setDate()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {finalize, take} from 'rxjs/operators';\r\nimport {ListService} from '../../../../warehouse/services/list.service';\r\nimport {ListProductService} from '../../../../warehouse/services/list-product.service';\r\n\r\n@Component({\r\n  selector: 'app-list-products',\r\n  templateUrl: './list-products.component.html',\r\n  styleUrls: ['./list-products.component.scss']\r\n})\r\n\r\nexport class ListProductsComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  isSerial = false;\r\n  isLoading = true;\r\n\r\n  errorStr = '';\r\n\r\n  serialsWarehouse: { id: number, label: string }[] = [];\r\n  serialsProduction: { id: number, label: string }[] = [];\r\n\r\n  constructor(\r\n    private readonly listService: ListService,\r\n    private dialogRef: MatDialogRef<ListProductsComponent>,\r\n    fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: any,\r\n    private listProductService: ListProductService) {\r\n\r\n    console.log(this.data);\r\n    this.form = fb.group({\r\n      id: [data.entity.id],\r\n      isWarehouse: ['0'],\r\n      actual_quantity: [data.entity.actual_quantity],\r\n    });\r\n\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n      this.form.addControl('serial_product_ids', new FormControl([]));\r\n      this.form.addControl('root_serial_numbers_in_production', new FormControl([]));\r\n      // this.form.removeControl('actual_quantity');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n      this.loadInfo();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const send = this.form.value;\r\n\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n\r\n      if (send.isWarehouse === '0') {\r\n        delete send.root_serial_numbers_in_production;\r\n        send.actual_quantity = this.form.value.serial_product_ids.length;\r\n        send.serial_product_ids = this.form.get('serial_product_ids').value;\r\n      } else if (send.isWarehouse === '1') {\r\n        delete send.serial_product_ids;\r\n        delete send.actual_quantity;\r\n        send.root_serial_numbers_in_production = this.form.get('root_serial_numbers_in_production').value;\r\n        send.root_serial_numbers_in_production = send.root_serial_numbers_in_production.map(val => +val);\r\n      }\r\n    } else {\r\n      delete send.root_serial_numbers_in_production;\r\n    }\r\n    delete send.isWarehouse;\r\n\r\n    console.log(send);\r\n    this.listProductService.updatePartly(this.form.value).pipe(take(1)).subscribe(res => this.dialogRef.close(res));\r\n  }\r\n\r\n  loadInfo() {\r\n    this.listService.getNomenclatureInfo(this.data.entity.nomenclature.id).pipe(\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n        this.isSerial = true;\r\n      })\r\n    ).subscribe({\r\n      next: (res) => {\r\n        if (res) {\r\n          console.log(res);\r\n          res.warehouse_products.forEach(item => {\r\n            this.serialsWarehouse.push(\r\n              {id: item.id, label: item.serial_number.type_with_number ? item.serial_number.type_with_number : item.serial_number.id}\r\n            );\r\n          });\r\n\r\n          res.serial_numbers_in_production.forEach(item => {\r\n            this.serialsProduction.push(\r\n              {id: item.id, label: item.type_with_number ? item.type_with_number : item.id}\r\n            );\r\n          });\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.errorStr = 'There are no warehouse products on stock and in production';\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span>Edit Actual Quantity</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content class=\"overflow-visible\">\r\n  <form [formGroup]=\"form\" *ngIf=\"!errorStr\">\r\n    <div class=\"form-group\"\r\n         *ngIf=\"data.entity.available_serial_warehouse_products.length == 0 && data.entity.nomenclature.bulk_or_serial === '0'\">\r\n      <label>Actual Quantity</label>\r\n      <input formControlName=\"actual_quantity\" pInputText class=\"form-control\" type=\"number\">\r\n    </div>\r\n    <div *ngIf=\"(serialsWarehouse.length > 0 || serialsProduction.length > 0) && isSerial && !isLoading\">\r\n      <div class=\"d-flex mb-3\">\r\n        <div class=\"сol-6 mr-2\">\r\n          <input class=\"mr-2\" id=\"own\" type=\"radio\" value=\"0\" name=\"isWarehouse\" formControlName=\"isWarehouse\">\r\n          <label for=\"own\">Warehouses</label>\r\n        </div>\r\n        <div class=\"col-6\" *ngIf=\"data.entity.nomenclature.type === '1'\">\r\n          <input class=\"mr-2\" id=\"outsource\"  type=\"radio\" value=\"1\" name=\"isWarehouse\"\r\n                 formControlName=\"isWarehouse\">\r\n          <label for=\"outsource\">Production</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\" *ngIf=\"form.get('isWarehouse').value === '0'\">\r\n        <div *ngIf=\"serialsWarehouse.length > 0 && isSerial && !isLoading\">\r\n          <label>Warehouses Serial Numbers</label>\r\n          <p-multiSelect formControlName=\"serial_product_ids\" [options]=\"serialsWarehouse\"\r\n                         optionLabel=\"label\" optionValue=\"id\"></p-multiSelect>\r\n        </div>\r\n\r\n        <div *ngIf=\"serialsWarehouse.length === 0 && isSerial && !isLoading\" class=\"mb-2\">\r\n          <div class=\"empty\">Serial Numbers None</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\" *ngIf=\"form.get('isWarehouse').value === '1'\">\r\n        <div *ngIf=\"serialsProduction.length > 0 && isSerial && !isLoading\">\r\n          <label>Production Serial Numbers</label>\r\n          <p-multiSelect formControlName=\"root_serial_numbers_in_production\" [options]=\"serialsProduction\"\r\n                         optionLabel=\"label\" optionValue=\"id\"></p-multiSelect>\r\n        </div>\r\n\r\n        <div *ngIf=\"serialsProduction.length === 0 && isSerial && !isLoading\" class=\"mb-2\">\r\n          <div class=\"empty\">Serial Numbers None</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n  <div *ngIf=\"errorStr\">\r\n    <div class=\"empty mb-2\">{{errorStr}}</div>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\" d-flex justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n<!--  <div>-->\r\n<!--    <button (click)=\"edit()\" type=\"button\" class=\"btn btn-success ml-2\" [disabled]=\"errorStr\">Edit</button>-->\r\n<!--  </div>-->\r\n\r\n  <button\r\n    *ngIf=\"data.type==='edit'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Edit\"\r\n    class=\"p-button-success\"\r\n    [disabled]=\"errorStr\"\r\n    (click)=\"edit()\"\r\n  ></button>\r\n\r\n\r\n</mat-dialog-actions>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-search',\r\n  templateUrl: './warehouse-search.component.html',\r\n  styleUrls: ['./warehouse-search.component.scss']\r\n})\r\nexport class WarehouseSearchComponent implements OnInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  selectedNode;\r\n  searchResult: WarehouseProduct[] = [];\r\n  tableScrollHeight = '29.75rem';\r\n  link = environment.link_url + 'dash/';\r\n  isLoading = false;\r\n  isShowAll = false;\r\n  countProducts: number;\r\n  isStartOnePage = false;\r\n  formChanged: Subject<void> = new Subject<void>();\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    name: [null],\r\n    code: [null],\r\n    warehouse: [null],\r\n    category: [null],\r\n    locator: [null],\r\n    type: [null],\r\n    page: [1],\r\n  });\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'page', value: this.searchForm.get('page').value},\r\n    {name: 'paginated', value: true},\r\n    {name: 'at_area', value: false}\r\n  ];\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<WarehouseSearchComponent>,\r\n    private productService: WarehouseProductService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formChanged.pipe(debounceTime(500), takeUntil(this.destroy$)).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n  }\r\n\r\n  onSelectCategory(category: Category) {\r\n    if (category) {\r\n      this.searchForm.get('category').patchValue(category.id);\r\n    } else {\r\n      this.searchForm.get('category').patchValue(null);\r\n    }\r\n  }\r\n\r\n  searchProducts() {\r\n    this.isLoading = true;\r\n    this.selectedNode = null;\r\n\r\n    this.query = [];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query = [\r\n        {name: 'paginated', value: 'true'},\r\n        // {name: 'type', value: '0'},\r\n        {name: 'page', value: this.searchForm.get('page').value},\r\n      ];\r\n    }\r\n\r\n    this.query.push({name: 'at_area', value: false});\r\n\r\n    if (this.searchForm.get('name').value) this.query.push({\r\n      name: 'name',\r\n      value: this.searchForm.get('name').value.replace(/\\+/g, '%2b')\r\n    });\r\n\r\n    if (this.searchForm.get('code').value) this.query.push({name: 'code', value: this.searchForm.get('code').value});\r\n\r\n    if (this.searchForm.get('type').value) this.query.push({name: 'type', value: this.searchForm.get('type').value});\r\n\r\n    if (this.searchForm.get('warehouse').value) this.query.push({\r\n      name: 'warehouse',\r\n      value: this.searchForm.get('warehouse').value\r\n    });\r\n\r\n    if (this.searchForm.get('locator').value) this.query.push({\r\n      name: 'locator',\r\n      value: this.searchForm.get('locator').value\r\n    });\r\n    console.log('this.searchForm.get(\\'locator\\').value', this.searchForm.get('locator').value);\r\n\r\n    if (this.searchForm.get('category').value) this.query.push({\r\n      name: 'category',\r\n      value: this.searchForm.get('category').value\r\n    });\r\n\r\n    if (!this.isShowAll) {\r\n      this.getProductForPagination();\r\n    } else {\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.getProducts();\r\n    }\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (!this.isStartOnePage) {\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchProducts();\r\n    }\r\n  }\r\n\r\n  getProductForPagination() {\r\n    this.productService.getGroupedPagination(this.query).subscribe(response => {\r\n      response.results.forEach((product: any, idx) => {\r\n        if (!product.nomenclature) {\r\n          product.nomenclature = {\r\n            id: product.nomenclature_id,\r\n            code: product.code,\r\n            name: product.name,\r\n            type: product.type,\r\n            category: product.category,\r\n            description: product.description,\r\n          };\r\n        }\r\n\r\n        product.checkedForGeneration = false;\r\n        product.uid = idx;\r\n      });\r\n\r\n      this.searchResult = response.results;\r\n      this.countProducts = response.count;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onShowAll() {\r\n    this.isShowAll = true;\r\n    this.searchProducts();\r\n  }\r\n\r\n  onShowPartial() {\r\n    this.isShowAll = false;\r\n    this.searchProducts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private getProducts() {\r\n    this.productService.getGrouped(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      response.forEach((product: any, idx) => {\r\n        if (!product.nomenclature) {\r\n          product.nomenclature = {\r\n            id: product.nomenclature_id,\r\n            code: product.code,\r\n            name: product.name,\r\n            type: product.type,\r\n            category: product.category,\r\n            description: product.description,\r\n          };\r\n        }\r\n\r\n        product.checkedForGeneration = false;\r\n        product.uid = idx;\r\n      });\r\n\r\n      this.searchResult = response;\r\n      this.countProducts = response.length;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  locatorSelected($event: number) {\r\n    this.searchForm.get('warehouse').setValue($event);\r\n  }\r\n\r\n  select() {\r\n    this.dialogRef.close(this.selectedNode);\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <div class=\"page__content\">\r\n    <div class=\"page__card\">\r\n      <div class=\"warehouse-items\">\r\n        <i class=\"pi pi-times close-icon\" [mat-dialog-close]=\"false\"></i>\r\n        <div class=\"warehouse-items__left\">\r\n          <div class=\"form-group\">\r\n            <pek-categories-tree-picker (categorySelected)=\"onSelectCategory($event); formChanged.next()\"></pek-categories-tree-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"warehouse-items__right\">\r\n          <div class=\"page__table\">\r\n            <div class=\"filters-visibility\">\r\n              <div class=\"filters-visibility__header\"></div>\r\n              <form\r\n                [formGroup]=\"searchForm\"\r\n                class=\"warehouse-items__form mb-3\"\r\n              >\r\n                <div class=\"row\">\r\n                  <div class=\"col-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Code</label>\r\n                      <input class=\"form-control\" (ngModelChange)=\"formChanged.next()\" formControlName=\"code\" pInputText>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name</label>\r\n                      <input class=\"form-control\" (ngModelChange)=\"formChanged.next()\" formControlName=\"name\" pInputText>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <label>Warehouses</label>\r\n                          <pek-warehouse-picker (selectWarehouse)=\"this.searchForm.get('warehouse').setValue($event); formChanged.next()\"></pek-warehouse-picker>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <label>Locator</label>\r\n                          <pek-locator-picker\r\n                            [warehouseId]=\"searchForm.get('warehouse').value\"\r\n                            [isAllLocators]=\"false\"\r\n                            [isDisabled]=\"true\"\r\n                            (selectLocator)=\"locatorSelected($event); formChanged.next()\"\r\n                          ></pek-locator-picker>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                        <div class=\"form-group\">\r\n                          <label>Type</label>\r\n                          <pek-nomenclature-type-picker\r\n                            [currentNomenclatureType]=\"this.searchForm.get('type').value\"\r\n                            (choiceNomenclatureType)=\"this.searchForm.get('type').setValue($event); formChanged.next()\"\r\n                          ></pek-nomenclature-type-picker>\r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                        <div class=\"form-group\">\r\n                          <label>&nbsp;</label>\r\n                          <button\r\n                            pButton\r\n                            type=\"button\"\r\n                            class=\"p-button-success\"\r\n                            [label]=\"'Select'\"\r\n                            [disabled]=\"!this.selectedNode\"\r\n                            (click)=\"select()\"\r\n                          ></button>\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"table-pagination-preloader\">\r\n              <p-table\r\n                #dt\r\n                selectionMode=\"single\"\r\n                [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n                dataKey=\"uid\"\r\n                [scrollable]=\"true\"\r\n                [rows]=\"10\"\r\n                [(selection)]=\"selectedNode\"\r\n                [value]=\"searchResult\"\r\n              >\r\n                <ng-template pTemplate=\"header\">\r\n                  <tr>\r\n                    <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n                    <th style=\"width: 15%\">Code</th>\r\n                    <th style=\"width: 15%\">Name</th>\r\n                    <th class=\"text-center\" style=\"width: 10%\">Quantity</th>\r\n                    <th class=\"text-center\" style=\"width: 6%\">UOM</th>\r\n                    <th class=\"text-center\" style=\"width: 13%\">Category</th>\r\n                    <th class=\"text-center\" style=\"width: 12%\">Warehouse</th>\r\n                    <th class=\"text-center\" style=\"width: 14%\">Locator</th>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n                  <tr [pSelectableRow]=\"product\" [pRowToggler]=\"product\">\r\n                    <td style=\"width: 5%\" class=\"text-center\">\r\n                      {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\r\n                    </td>\r\n                    <td style=\"width: 15%\">\r\n                      {{product.nomenclature.code}}\r\n                    </td>\r\n                    <td style=\"width: 15%\" class=\"in-use\">\r\n                      <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n                      <b *ngIf=\"product.nomenclature.has_technical_equipment\">(T)</b>\r\n                      {{product.nomenclature.name}}\r\n                      <span class=\"text-danger\" *ngIf=\"product.used_by_order && product.used_by_order.length > 0\">\r\n                      <b>In Use</b>\r\n\r\n                      <div class=\"in-use-info\">\r\n                        <p>In use by orders:</p>\r\n                        <div *ngFor=\"let order of product.used_by_order\">\r\n                          <a *ngIf=\"order.accounting_type === 3\" [href]=\"link + 'production/orders/order/' + order.order_id\"\r\n                             target=\"_blank\">{{order.order_id}}\r\n                          </a>\r\n                          <a *ngIf=\"order.accounting_type === 2\" [href]=\"link + 'outsource/outsource-chain/products/' + order.order_id\"\r\n                             target=\"_blank\">{{order.order_id}}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </span>\r\n                    </td>\r\n                    <td style=\"width: 10%\" class=\"text-center\">\r\n                      {{product.total_locator_quantity}}\r\n                    </td>\r\n                    <td style=\"width: 6%\" class=\"text-center\">\r\n                      <ng-container *ngIf=\"product.nomenclature.category || product.nomenclature.root_category\">\r\n                        <ng-container *ngIf=\"product.nomenclature.category\">\r\n                          {{product.nomenclature.category?.unit_of_measure?.symbol ? product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"product.nomenclature.root_category\">\r\n                          {{product.nomenclature.root_category?.unit_of_measure?.symbol ? product.nomenclature.root_category?.unit_of_measure?.symbol : 'Pcs' }}\r\n                        </ng-container>\r\n                      </ng-container>\r\n\r\n                      <span *ngIf=\"!product.nomenclature.category && !product.nomenclature.root_category\">\r\n                    Pcs\r\n                  </span>\r\n                    </td>\r\n                    <td style=\"width: 13%\" class=\"text-center\">\r\n                      {{product.nomenclature.category?.name}}\r\n                      {{product.nomenclature.root_category?.name}}\r\n                    </td>\r\n                    <td style=\"width: 12%\" class=\"text-center\">\r\n                      <ng-container\r\n                        *ngIf=\"product.locator\">\r\n                        {{product.locator.warehouse.name}}\r\n                      </ng-container>\r\n                    </td>\r\n                    <td style=\"width: 14%\" class=\"text-center\">\r\n                      <ng-container *ngIf=\"product.locator\">\r\n                        {{product.locator.name}}\r\n                      </ng-container>\r\n                      <span class=\"d-block\" *ngIf=\"product.locator\"> R: {{product.locator.row}} Col:\r\n                        {{product.locator.column}} Sh: {{product.locator.shelf}} Pl:\r\n                        {{product.locator.place}}\r\n                  </span>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                  <tr>\r\n                    <td class=\"text-center p-4\" [attr.colspan]=\"9\">\r\n                      <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                      <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </p-table>\r\n              <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n                <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"paginator-wrapper\"\r\n              *ngIf=\"!isShowAll\"\r\n              [class.paginator-wrapper_hide]=\"searchResult.length === 0\"\r\n            >\r\n              <p-paginator\r\n                #paginator\r\n                [rows]=\"10\"\r\n                [totalRecords]=\"countProducts\"\r\n                (onPageChange)=\"paginate($event)\">\r\n              </p-paginator>\r\n              <p-button\r\n                (click)=\"onShowAll()\"\r\n                class=\"paginator-all\"\r\n                type=\"button\"\r\n                styleClass=\"p-button-text\"\r\n              >\r\n                All\r\n              </p-button>\r\n            </div>\r\n            <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"onShowPartial()\"\r\n                styleClass=\"p-button-text\"\r\n              >\r\n                Return pagination\r\n              </p-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n","import {Category} from '../../product-structure/models/category';\r\nimport {Technology} from '../../product-structure/models/technology';\r\nimport {TechnicalEquipment} from '../../product-structure/models/technical-equipment';\r\n\r\nexport class Nomenclature {\r\n  readonly id?: number;\r\n  code?: string;\r\n  name?: string;\r\n  status?: string;\r\n  parent?: number | Nomenclature;\r\n  technologies?: Technology[];\r\n  images?: NomenclatureImage[];\r\n  category?: Category;\r\n  // category?: any;\r\n  description?: string;\r\n  type?: ENomenclatureType;\r\n  approved?: ENomenclatureApproval;\r\n  fullName?: string;\r\n  // purchase_category?: PurchasingCategory;\r\n  accounting_number?: string;\r\n  is_fixed_asset?: boolean;\r\n  is_non_ressivable?: boolean;\r\n  has_technical_equipment?: boolean;\r\n  technical_equipments?: TechnicalEquipment[];\r\n  deleted_technical_equipments_ids?: number[];\r\n  qc_protocol?: number;\r\n  bulk_or_serial?: '1' | '0';\r\n  tasks?: Task[];\r\n  root_category?: Category;\r\n  price?: any\r\n}\r\n\r\nexport class NomenclatureImage {\r\n  readonly id: number;\r\n  image: string | ArrayBuffer;\r\n  file?: File;\r\n}\r\n\r\nexport class NomenclatureFile {\r\n  readonly id: number;\r\n  file: string;\r\n  nomenclature: number;\r\n}\r\n\r\n\r\nexport class Nomenclatures {\r\n  count: number;\r\n  next: string;\r\n  previous: string;\r\n  results: Nomenclature[];\r\n}\r\n\r\nexport class NewNomenclature {\r\n  readonly id: number;\r\n  name: string;\r\n  parents?: NomenclatureParent[];\r\n}\r\n\r\nexport class NomenclatureParent {\r\n  readonly id: number;\r\n  name: string;\r\n}\r\n\r\nexport enum ENomenclatureType {\r\n  PURCHASED = '0',\r\n  ASSEMBLY = '1',\r\n  MANUFACTURED = '2'\r\n}\r\n\r\nexport enum ENomenclatureApproval {\r\n  NEW = '0',\r\n  APPROVED = '1',\r\n  DECLINED = '2'\r\n}\r\n\r\nexport enum ENomenclatureBulk {\r\n  BULK = '0',\r\n  SERIAL = '1',\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'pek-accepted-type-picker',\n  templateUrl: './accepted-type-picker.component.html',\n  styleUrls: ['./accepted-type-picker.component.scss']\n})\nexport class AcceptedTypePickerComponent implements OnInit {\n  @Output() selectAcceptedType: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  acceptedTypes: {name: string, value: boolean}[] = [\n    {name: 'Invoices', value: true},\n    {name: 'Orders', value: false}\n  ];\n\n  selectedValue: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSelectAcceptedType() {\n    this.selectAcceptedType.next(this.selectedValue);\n  }\n\n}\n","<div class=\"accepted-type-picker\">\n  <p-dropdown\n    [(ngModel)]=\"selectedValue\"\n    (ngModelChange)=\"onSelectAcceptedType()\"\n    [options]=\"acceptedTypes\"\n    [showClear]=\"true\"\n    placeholder=\"Select Accepted\"\n    optionLabel=\"name\"\n    optionValue=\"value\"\n  >\n  </p-dropdown>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nexport enum EAccountingType {\n  OUTSOURCE = 2,\n  OWN = 3,\n}\n\n@Component({\n  selector: 'pek-accounting-type-picker',\n  templateUrl: './accounting-type-picker.component.html',\n  styleUrls: ['./accounting-type-picker.component.scss']\n})\nexport class AccountingTypePickerComponent implements OnInit {\n  @Input() currentAccountingType: EAccountingType = null;\n  @Input() isDisabled = false;\n  @Output() choiceAccountingType: EventEmitter<EAccountingType> = new EventEmitter<EAccountingType>();\n\n  selectAccountingType: EAccountingType = null;\n\n  accountingTypes: { label: string, value: EAccountingType }[] = [\n    {label: 'Outsource production', value: EAccountingType.OUTSOURCE},\n    {label: 'Own production', value: EAccountingType.OWN},\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.setCurrentProductionType();\n  }\n\n  setCurrentProductionType() {\n    if (this.currentAccountingType !== null) {\n      this.selectAccountingType = this.currentAccountingType;\n    }\n  }\n\n  onSelectProductionType() {\n    this.choiceAccountingType.emit(this.selectAccountingType);\n  }\n\n}\n","<div class=\"accounting-type-picker\">\n  <p-dropdown\n    [options]=\"accountingTypes\"\n    optionLabel=\"label\"\n    optionValue=\"value\"\n    placeholder=\"Select Type\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n    [(ngModel)]=\"selectAccountingType\"\n    (ngModelChange)=\"onSelectProductionType()\"\n  ></p-dropdown>\n</div>\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {AreaLocatorsService} from '@shared/services/area-locators.service';\r\nimport {take} from 'rxjs/operators';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\n\r\n@Component({\r\n  selector: 'pek-area-locator-picker',\r\n  templateUrl: './area-locator-picker.component.html',\r\n  styleUrls: ['./area-locator-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AreaLocatorPickerComponent), multi: false}]\r\n})\r\nexport class AreaLocatorPickerComponent implements OnInit, OnChanges, ControlValueAccessor, OnDestroy {\r\n  groupLocators = [];\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Input() locator: number;\r\n  @Input() areaId: number = null;\r\n  @Input() current_locator_id: number;\r\n  @Input() isDisabled = false;\r\n  private destroy$ = new Subject();\r\n  constructor(\r\n    private areaLocatorService: AreaLocatorsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadAreaLocators();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.locator = null;\r\n    if ('areaId' in changes) {\r\n      if (this.areaId) {\r\n        this.groupLocators = [];\r\n        this.loadByAreaId();\r\n      } else {\r\n        this.groupLocators = [];\r\n        this.loadAreaLocators();\r\n      }\r\n    }\r\n  }\r\n\r\n  loadAreaLocators() {\r\n    this.areaLocatorService.get().pipe(take(1))\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(res => {\r\n      let map = {};\r\n      res.forEach(element => {\r\n        if (map[element.area.id]) {\r\n          if (this.current_locator_id) {\r\n            if (element.id !== this.current_locator_id) {\r\n              map[element.area.id].items.push({ label: element.name, value: element.id });\r\n            }\r\n          } else {\r\n            map[element.area.id].items.push({ label: element.name, value: element.id });\r\n          }\r\n        } else {\r\n          map[element.area.id] = {};\r\n          map[element.area.id].label = element.area.name;\r\n          map[element.area.id].value = element.area.id;\r\n          map[element.area.id].items = [];\r\n          if (this.current_locator_id) {\r\n            if (element.id !== this.current_locator_id) {\r\n              map[element.area.id].items.push({ label: element.name, value: element.id });\r\n            }\r\n          } else {\r\n            map[element.area.id].items.push({ label: element.name, value: element.id });\r\n          }\r\n        }\r\n      });\r\n\r\n      Object.keys(map).forEach(id => {\r\n        this.groupLocators.push(map[id]);\r\n      });\r\n    });\r\n  }\r\n\r\n  loadByAreaId() {\r\n    const query: QuerySearch[] = [{\r\n      name: 'area',\r\n      value: this.areaId\r\n    }]\r\n    this.areaLocatorService.get(query).pipe(take(1))\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(res => {\r\n        this.groupLocators = res;\r\n      });\r\n  }\r\n\r\n\r\n  onChange(locator: number) {\r\n    this.setValue(locator);\r\n  }\r\n\r\n  private setValue(locator: number) {\r\n    this.locator = locator;\r\n    this.valueChange.emit(this.locator);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.locator = obj;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<p-dropdown\r\n  *ngIf=\"!this.areaId\"\r\n  [filter]=\"true\"\r\n  [(ngModel)]=\"locator\"\r\n  [showClear]=\"true\"\r\n  [options]=\"groupLocators\"\r\n  [disabled]=\"isDisabled\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  [group]=\"true\"\r\n  optionValue=\"value\"\r\n  optionLabel=\"label\"\r\n  [placeholder]=\"'Select Locator'\">\r\n</p-dropdown>\r\n<p-dropdown\r\n  *ngIf=\"this.areaId\"\r\n  [filter]=\"true\"\r\n  [showClear]=\"true\"\r\n  [(ngModel)]=\"locator\"\r\n  [options]=\"groupLocators\"\r\n  [disabled]=\"isDisabled\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  [group]=\"false\"\r\n  optionValue=\"id\"\r\n  optionLabel=\"name\"\r\n  [placeholder]=\"'Select Locator'\">\r\n</p-dropdown>\r\n","import {Component, EventEmitter, forwardRef, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {CRMEmployee} from '../../../crm/models/crm-employee';\r\nimport {Area} from '../../../warehouse/models/area-locator';\r\nimport {AreasService} from '@shared/services/areas.service';\r\nimport {take, tap} from 'rxjs/operators';\r\nimport {Subject, takeUntil} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-area-picker',\r\n  templateUrl: './area-picker.component.html',\r\n  styleUrls: ['./area-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AreaPickerComponent), multi: false}]\r\n})\r\nexport class AreaPickerComponent implements OnInit, ControlValueAccessor, OnDestroy  {\r\n\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Input() area: number;\r\n  @Input() isDisabled: boolean;\r\n  areas: Area[];\r\n  @Input() showClear = false;\r\n  isLoading = false;\r\n  private destroy$ = new Subject();\r\n  constructor(\r\n    private areasService: AreasService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.areasService.get().pipe(take(1),\r\n      tap(res => this.areas = res),\r\n      takeUntil(this.destroy$)).subscribe();\r\n  }\r\n\r\n  onChange(employee: number) {\r\n    this.setValue(employee);\r\n  }\r\n\r\n  private setValue(area: number) {\r\n    this.area = area;\r\n    this.valueChange.emit(this.area);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.area = obj;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<p-dropdown\r\n  [filter]=\"true\"\r\n  [showClear]=\"showClear\"\r\n  [(ngModel)]=\"area\"\r\n  [options]=\"areas\"\r\n  [disabled]=\"isDisabled\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  optionValue=\"id\"\r\n  optionLabel=\"name\"\r\n  [placeholder]=\"'Select Area'\">\r\n</p-dropdown>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {CompanyService} from '../../../crm/services/company.service';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {Company} from '../../../crm/models/company';\r\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\r\nimport {forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {CompanyCategory} from '../../../crm/models/company-category';\r\nimport {debounceTime, tap} from 'rxjs/operators';\r\nimport {logMessages} from '@angular-devkit/build-angular/src/builders/browser-esbuild/esbuild';\r\n\r\n@Component({\r\n  selector: 'pek-company-categorized-multi-picker',\r\n  templateUrl: './company-categorized-multi-picker.component.html',\r\n  styleUrls: ['./company-categorized-multi-picker.component.scss']\r\n})\r\nexport class CompanyCategorizedMultiPickerComponent implements OnInit, OnDestroy {\r\n  nodes: any[];\r\n  companyCategories: CompanyCategory[] = [];\r\n  companies: Partial<Company>[] = [];\r\n  @Input() currentCompaniesIds: number[] = [];\r\n  @Output() selectCompanies: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  groupedCategories: TreeNode<Company & CompanyCategory>[] = [];\r\n\r\n  selectedNode: TreeNode[] = [];\r\n  selectedUniqueNodes: TreeNode[] = [];\r\n  isLoading = true;\r\n  private destroy$ = new Subject();\r\n  private dataCollected = new Subject();\r\n\r\n  constructor(\r\n    private readonly companyService: CompanyService,\r\n    private readonly companyCategoryService: CompanyCategoryService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n  }\r\n\r\n  formTree() {\r\n    this.companyCategories.forEach(category => {\r\n      const companiesOfCategory = this.companies.filter(company => company.categories.findIndex(id => id === category.id) > -1);\r\n      const preparedCategory: TreeNode = {\r\n        label: category.name,\r\n        data: {category: category, type: 'category'},\r\n        key: 'category' + category.id,\r\n        expandedIcon: 'pi pi-folder-open',\r\n        collapsedIcon: 'pi pi-folder',\r\n        children: []\r\n      }\r\n      if (companiesOfCategory.length > 0) {\r\n        companiesOfCategory\r\n          .sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n          }).forEach(company => {\r\n          const preparedCompany: TreeNode = {\r\n            label: company.name,\r\n            data: {company: company, type: 'company'},\r\n            key: 'company' + company.id,\r\n            children: [],\r\n          }\r\n          preparedCategory.children.push(preparedCompany);\r\n        });\r\n      }\r\n      this.groupedCategories.push(preparedCategory)\r\n    })\r\n    this.nodes = this.groupedCategories;\r\n    this.setSelectedNode();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  setSelectedNode() {\r\n    const selectedCompanies: string[] = this.currentCompaniesIds.flatMap(id => 'company' + id?.toString()) as string[];\r\n\r\n    this.selectedNode = this.nodes.flatMap(n => n.children)\r\n      .filter(v => v?.key !== undefined && selectedCompanies.includes(v.key) &&\r\n        this.selectedNode.findIndex(node => node.key === v.key) < 0) as TreeNode[];\r\n\r\n    this.nodes.forEach(node => {\r\n      const childCount = (node as TreeNode).children.length;\r\n      let passedCount = 0;\r\n      (node as TreeNode).children.forEach(child => {\r\n        const isSelected = selectedCompanies.findIndex(id => id === (child as TreeNode).key) > -1;\r\n        if (isSelected) {\r\n          passedCount++;\r\n        }\r\n      });\r\n\r\n      if (childCount > 0 && childCount === passedCount) {\r\n        this.selectedNode.push(node as TreeNode);\r\n      }\r\n      if (childCount > 0 && passedCount > 0 && childCount > passedCount) {\r\n        (node as TreeNode).partialSelected = true;\r\n      }\r\n    });\r\n    this.selectedNode = [...this.selectedNode.filter(this.onlyUniqueByKey)];\r\n  }\r\n\r\n  getCategories() {\r\n    return this.companyCategoryService.get().pipe(tap(categories => {\r\n      this.companyCategories = categories;\r\n      this.dataCollected.next(true);\r\n    }), takeUntil(this.destroy$)).subscribe(() => {\r\n      this.getCompanies();\r\n    });\r\n  }\r\n\r\n  getCompanies() {\r\n    return this.companyService.getShorts().pipe(tap(companies => {\r\n      this.companies = companies;\r\n      this.dataCollected.next(true);\r\n      this.formTree();\r\n    }), takeUntil(this.destroy$)).subscribe();\r\n  }\r\n\r\n  selectionChanged() {\r\n    const selectedCompanies = this.selectedNode\r\n      .filter(node => node.data.type === 'company').map(node => node.data.company).filter(this.onlyUnique);\r\n    if (selectedCompanies?.length === 0) {\r\n      this.selectCompanies.emit(null);\r\n    } else {\r\n      this.selectCompanies.emit(selectedCompanies.map(c => c.id).join(','));\r\n    }\r\n  }\r\n\r\n  onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  onlyUniqueByKey(value, index, self) {\r\n    return self.findIndex(innerValue => innerValue.key === value.key) === index;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('Destroy');\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"company-categorized-multi-picker\">\r\n  <p-treeSelect\r\n    *ngIf=\"!isLoading; else spinner\"\r\n    selectionMode=\"checkbox\"\r\n    [metaKeySelection]=\"true\"\r\n    [filter]=\"true\"\r\n    [(ngModel)]=\"selectedNode\"\r\n    (ngModelChange)=\"selectionChanged()\" [options]=\"nodes\"\r\n    placeholder=\"Select Company\">\r\n    <ng-template pTemplate=\"value\" let-options>\r\n      <ng-template [ngIf]=\"selectedNode.length === 0\">\r\n        Select Company\r\n      </ng-template>\r\n      <ng-template ngFor [ngForOf]=\"options\" let-option let-last=last>\r\n        <ng-template [ngIf]=\"option.data.type === 'company'\">\r\n          {{option.data.company.name}} <span *ngIf=\"!last\">,</span>\r\n        </ng-template>\r\n      </ng-template>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"empty\">\r\n      Empty\r\n    </ng-template>\r\n  </p-treeSelect>\r\n  <ng-template #spinner>\r\n    <div class=\"spinner-input\">\r\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyCategoryModule} from '../../../crm/models/company-category';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\nimport {Technology} from '../../../product-structure/models/technology';\n\n@Component({\n  selector: 'pek-company-category-module-picker',\n  templateUrl: './company-category-module-picker.component.html',\n  styleUrls: ['./company-category-module-picker.component.scss']\n})\nexport class CompanyCategoryModulePickerComponent implements OnInit {\n  @Input() currentModulesIds: number[] = [];\n  @Output() selectModule: EventEmitter<CompanyCategoryModule[]> = new EventEmitter<CompanyCategoryModule[]>();\n\n  isLoading = true;\n  modules: CompanyCategoryModule[] = [];\n  selectedModules: CompanyCategoryModule[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyCategoryService: CompanyCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyCategoryService.getModules().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(modules => {\n      this.modules = modules;\n      this.findModules();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentModulesIds' in changes) {\n      this.selectedModules = [];\n      this.findModules();\n    }\n  }\n\n  onSelectModule(technologies: Technology[]) {\n    this.selectModule.emit(technologies);\n  }\n\n  findModules() {\n    if (this.currentModulesIds.length > 0) {\n      this.currentModulesIds.forEach(id => {\n        const findModule = this.modules.find(t => t.id === id);\n        console.log(this.modules)\n        console.log(id);\n\n        console.log(findModule);\n\n        if (findModule) {\n          this.selectedModules.push(findModule);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"company-category-module-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"modules\"\n    [(ngModel)]=\"selectedModules\"\n    optionLabel=\"name\"\n    placeholder=\"Select Modules\"\n    (ngModelChange)=\"onSelectModule($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {CompanyCategory} from '../../../crm/models/company-category';\r\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\r\n\r\n@Component({\r\n  selector: 'pek-company-category-picker',\r\n  templateUrl: './company-category-picker.component.html',\r\n  styleUrls: ['./company-category-picker.component.scss']\r\n})\r\nexport class CompanyCategoryPickerComponent implements OnInit {\r\n  @Output() selectCompanyCategory: EventEmitter<number> = new EventEmitter<number>();\r\n  isLoading = true;\r\n  categories: Partial<CompanyCategory>[] = [];\r\n  selectedCompanyCategoryId: number;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly companyCategoryService: CompanyCategoryService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyCategoryService.get().pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(categories => {\r\n      this.categories = categories;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onSelectCompanyCategory() {\r\n    this.selectCompanyCategory.emit(this.selectedCompanyCategoryId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"company-category-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categories\"\n    placeholder=\"Select Company Category\"\n    [(ngModel)]=\"selectedCompanyCategoryId\"\n    (ngModelChange)=\"onSelectCompanyCategory()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {Company} from '../../../crm/models/company';\r\nimport {CompanyService} from '../../../crm/services/company.service';\r\n\r\n@Component({\r\n  selector: 'pek-company-picker',\r\n  templateUrl: './company-picker.component.html',\r\n  styleUrls: ['./company-picker.component.scss']\r\n})\r\nexport class CompanyPickerComponent implements OnInit {\r\n  @Output() selectCompany: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectCompanyFull: EventEmitter<Partial<Company>> = new EventEmitter<Partial<Company>>();\r\n  @Input() currentCompanyId: any;\r\n  @Input() currentCompany: Partial<Company>;\r\n  @Input() isDisabled: boolean = false\r\n  isLoading = true;\r\n  companies: Partial<Company>[] = [];\r\n  selectedCompanyId: number;\r\n\r\n  constructor(\r\n    private readonly companyService: CompanyService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyService.getShorts().pipe(\r\n    ).subscribe(companies => {\r\n      this.companies = companies;\r\n\r\n      if (this.currentCompanyId) {\r\n        this.selectedCompanyId = this.currentCompanyId;\r\n      }\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onSelectCompany() {\r\n    this.currentCompany = this.companies.find(currency => currency.id === this.selectedCompanyId);\r\n    this.selectCompany.emit(this.selectedCompanyId);\r\n    this.selectCompanyFull.emit(this.currentCompany);\r\n  }\r\n}\r\n","<div class=\"company-picker\">\r\n  <p-dropdown\r\n    [filter]=\"true\"\r\n    *ngIf=\"!isLoading else spinner\"\r\n    [options]=\"companies\"\r\n    placeholder=\"Select Company\"\r\n    [(ngModel)]=\"selectedCompanyId\"\r\n    (ngModelChange)=\"onSelectCompany()\"\r\n    optionLabel=\"name\"\r\n    optionValue=\"id\"\r\n    [showClear]=\"true\"\r\n    [disabled]=\"isDisabled\"\r\n  >\r\n  </p-dropdown>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Country} from '@shared/models/country';\r\nimport {CountryService} from '@shared/services/country.service';\r\n\r\n@Component({\r\n  selector: 'pek-crm-company-picker',\r\n  templateUrl: './crm-company-picker.component.html',\r\n  styleUrls: ['./crm-company-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CrmCompanyPickerComponent), multi: false}]\r\n})\r\nexport class CrmCompanyPickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Output() valueChange = new EventEmitter<Country>();\r\n  @Input() country: number;\r\n  @Input() selectedCountry: Country;\r\n  @Input() placeholder = 'Choose Country';\r\n  @Input() showClear: boolean;\r\n\r\n  countries: Country[];\r\n  isLoading = true;\r\n\r\n  constructor(\r\n    private countryService: CountryService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.countryService\r\n      .get()\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.countries = res;\r\n        if (this.country) {\r\n          this.selectedCountry = this.countries.find(currency => currency.id === this.country);\r\n          console.log('this.selectedCountry', this.selectedCountry);\r\n        }\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onChange(value: number) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // okay\r\n  }\r\n\r\n  private setValue(value: number) {\r\n    this.country = value;\r\n    this.selectedCountry = this.countries.find(currency => currency.id === this.country);\r\n    this.valueChange.emit(this.selectedCountry);\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.country = obj;\r\n  }\r\n\r\n}\r\n","<p-dropdown\r\n  [filter]=\"true\"\r\n  [showClear]=\"showClear\"\r\n  [(ngModel)]=\"country\"\r\n  [options]=\"countries\"\r\n  [disabled]=\"isLoading\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  optionValue=\"id\"\r\n  optionLabel=\"name\"\r\n  [placeholder]=\"placeholder\">\r\n\r\n  <ng-template pTemplate=\"selectedItem\">\r\n    <div class=\"country-item country-item-value\" *ngIf=\"selectedCountry\">\r\n      <div>{{selectedCountry.name}}</div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template let-country pTemplate=\"item\">\r\n    <div class=\"country-item\">\r\n      <div>{{country.name}}</div>\r\n    </div>\r\n  </ng-template>\r\n</p-dropdown>\r\n","import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {CRMEmployee} from '../../../crm/models/crm-employee';\r\nimport {CrmEmployeeService} from '../../../crm/services/crm-employee.service';\r\n\r\n@Component({\r\n  selector: 'pek-crm-single-employee-picker',\r\n  templateUrl: './crm-single-employee-picker.component.html',\r\n  styleUrls: ['./crm-single-employee-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CrmSingleEmployeePickerComponent), multi: true}]\r\n})\r\nexport class CrmSingleEmployeePickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Output() valueChange = new EventEmitter<CRMEmployee>();\r\n  @Input() employee: number;\r\n  @Input() selectedEmployee: CRMEmployee;\r\n  @Input() placeholder = 'Choose Employee';\r\n  @Input() showProfession = false;\r\n  @Input() filters: QuerySearch[];\r\n  @Input() showClear: boolean;\r\n\r\n  employees: CRMEmployee[];\r\n  isLoading = true;\r\n\r\n  constructor(\r\n    private crmEmployeeService: CrmEmployeeService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.crmEmployeeService\r\n      .get(this.filters)\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.employees = res;\r\n        if (this.employee) {\r\n          this.selectedEmployee = this.employees.find(currency => currency.id === this.employee);\r\n        }\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onChange(employee: number) {\r\n    this.setValue(employee);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // okay\r\n  }\r\n\r\n  private setValue(employee: number) {\r\n    this.employee = employee;\r\n    this.selectedEmployee = this.employees.find(currency => currency.id === this.employee);\r\n    delete this.selectedEmployee.fullName;\r\n    this.valueChange.emit(this.selectedEmployee);\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.employee = obj;\r\n  }\r\n\r\n}\r\n","<p-dropdown\r\n  [filter]=\"true\"\r\n  [showClear]=\"showClear\"\r\n  [(ngModel)]=\"employee\"\r\n  [options]=\"employees\"\r\n  [disabled]=\"isLoading\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  optionValue=\"id\"\r\n  optionLabel=\"first_name\"\r\n  [placeholder]=\"placeholder\">\r\n\r\n  <ng-template pTemplate=\"selectedItem\">\r\n    <div class=\"country-item country-item-value\" *ngIf=\"selectedEmployee\">\r\n      <div *ngIf=\"showProfession\" >{{selectedEmployee.first_name}}</div>\r\n      <div *ngIf=\"!showProfession\">{{selectedEmployee.first_name}} {{selectedEmployee.last_name}}</div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template let-employee pTemplate=\"item\">\r\n    <div class=\"country-item\">\r\n      <div *ngIf=\"showProfession\" >{{employee.first_name}} {{employee.last_name}} ({{employee.position ? employee.position.title : 'No position'}})</div>\r\n      <div *ngIf=\"!showProfession\">{{employee.first_name}} {{employee.last_name}}</div>\r\n    </div>\r\n  </ng-template>\r\n</p-dropdown>\r\n","import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {CrmPositionsService} from '../../../crm/services/crm-positions.service';\r\nimport {CrmPosition} from '../../../business-trips/models/crm-position';\r\n\r\n@Component({\r\n  selector: 'app-crm-position-picker',\r\n  templateUrl: './crm-position-picker.component.html',\r\n  styleUrls: ['./crm-position-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CrmPositionPickerComponent), multi: true}]\r\n})\r\nexport class CrmPositionPickerComponent implements OnInit, ControlValueAccessor {\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Input() position: number;\r\n  @Input() isDisabled = false;\r\n\r\n  positions: CrmPosition[];\r\n  isLoading = true;\r\n\r\n  constructor(\r\n    private crmPositionService: CrmPositionsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.crmPositionService\r\n      .get()\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.positions = res;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onChange(position: number) {\r\n    this.setValue(position);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // okay\r\n  }\r\n\r\n  private setValue(position: number) {\r\n    this.position = position;\r\n    this.valueChange.emit(this.position);\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.position = obj;\r\n  }\r\n}\r\n","<p-dropdown\r\n  [filter]=\"true\"\r\n  [showClear]=\"true\"\r\n  [(ngModel)]=\"position\"\r\n  [options]=\"positions\"\r\n  [disabled]=\"isLoading || isDisabled\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  optionValue=\"id\"\r\n  optionLabel=\"title\"\r\n  placeholder=\"Choose Position\">\r\n</p-dropdown>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {Country} from '@shared/models/country';\r\nimport {RegionService} from '@shared/services/region.service';\r\nimport {CountryService} from '@shared/services/country.service';\r\nimport {Region} from '@shared/models/region';\r\n\r\n@Component({\r\n  selector: 'pek-crm-tree-company-picker',\r\n  templateUrl: './crm-tree-company-picker.component.html',\r\n  styleUrls: ['./crm-tree-company-picker.component.scss']\r\n})\r\nexport class CrmTreeCompanyPickerComponent implements OnInit, OnDestroy {\r\n  @Input() selectedRegion: Region;\r\n  @Output() regionSelected: EventEmitter<Region> = new EventEmitter<Region>();\r\n  regions: Region[] = [];\r\n  countries: Country[] = [];\r\n  tree: any[];\r\n\r\n  selectedNode: any;\r\n  private destroy$ = new Subject();\r\n  constructor(\r\n    private readonly regionService: RegionService,\r\n    private readonly countryService: CountryService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadInfo();\r\n  }\r\n\r\n  loadInfo() {\r\n    this.selectedNode = null;\r\n    forkJoin({\r\n      regions: this.regionService.get(),\r\n      countries: this.countryService.get()\r\n    }).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(({regions, countries}) => {\r\n      this.regions = regions;\r\n      this.countries = countries;\r\n      this.tree = [];\r\n      this.createTree();\r\n    });\r\n  }\r\n\r\n  createTree() {\r\n    this.tree.push({\r\n      label: 'Not Country',\r\n      selectable: false,\r\n      data: {country: {name: 'Not Country'}},\r\n      children: this.regions.filter(r => !r.country).map(region => {\r\n        return {\r\n          label: region.name,\r\n          data: {region: region},\r\n          children: [],\r\n        };\r\n      })\r\n    });\r\n\r\n    this.countries.forEach(country => {\r\n      this.tree.push({\r\n        label: country.name + ' (' + country.alpha2_code + ')',\r\n        selectable: false,\r\n        data: {country: country},\r\n        children: this.regions.filter(r => r.country).filter(r => (r.country as Country).id === country.id).map(region => {\r\n          return {\r\n            label: region.name,\r\n            data: {region: region},\r\n            children: [],\r\n          };\r\n        })\r\n      });\r\n    });\r\n\r\n    if (this.selectedRegion) {\r\n      this.tree.forEach(country => {\r\n        country.children.forEach(region => {\r\n          if (region.data.region.id === this.selectedRegion.id) {\r\n            this.selectedNode = region;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this.tree = this.tree.map(n => n);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  changed($event: any) {\r\n    this.regionSelected.emit($event.data.region);\r\n  }\r\n}\r\n","<p-treeSelect\r\n  [(ngModel)]=\"selectedNode\"\r\n  [options]=\"tree\"\r\n  [filter]=\"true\"\r\n  (ngModelChange)=\"changed($event)\"\r\n  placeholder=\"Select Region\">\r\n  <ng-template pTemplate=\"value\" let-options>\r\n    <ng-template [ngIf]=\"!selectedNode\">\r\n      Select Company\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"selectedNode\">\r\n      {{options.data.region.country ? options.data.region.country.name : 'Have No Country'}} - {{options.data.region.name}}\r\n    </ng-template>\r\n  </ng-template>\r\n</p-treeSelect>\r\n","import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport {Currency} from '@shared/models/currency';\r\nimport {CurrenciesService} from '@shared/services/currencies.service';\r\n\r\n@Component({\r\n  selector: 'pek-currency-picker',\r\n  templateUrl: './currency-picker.component.html',\r\n  styleUrls: ['./currency-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CurrencyPickerComponent), multi: true}]\r\n})\r\nexport class CurrencyPickerComponent implements OnInit, ControlValueAccessor {\r\n  @Output() valueChange = new EventEmitter<Currency>();\r\n  @Input() currency: string;\r\n  @Input() showClear: boolean;\r\n  @Input() isDisabled: boolean;\r\n\r\n  currencies: Currency[];\r\n  isLoading = true;\r\n\r\n  constructor(\r\n    private currencyService: CurrenciesService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.currencyService\r\n      .get()\r\n      .pipe(take(1))\r\n      .subscribe((res) => {\r\n        this.currencies = res;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onChange(value: string) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // okay\r\n  }\r\n\r\n  private setValue(value: string) {\r\n    this.currency = value;\r\n    this.valueChange.emit(this.currencies.find(currency => currency.code === this.currency));\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.currency = obj;\r\n  }\r\n}\r\n","<p-dropdown\r\n  [filter]=\"true\"\r\n  [showClear]=\"showClear\"\r\n  [(ngModel)]=\"currency\"\r\n  [options]=\"currencies\"\r\n  [disabled]=\"isLoading || isDisabled\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n  optionValue=\"code\"\r\n  optionLabel=\"name\"\r\n  placeholder=\"Choose Currency\">\r\n</p-dropdown>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pek-date-time-picker',\r\n  templateUrl: './date-time-picker.component.html',\r\n  styleUrls: ['./date-time-picker.component.scss']\r\n})\r\nexport class DateTimePickerComponent implements OnInit, OnChanges {\r\n  @Input() placeholder: string;\r\n  @Input() maxDate: Date;\r\n  @Input() minDate: Date;\r\n  @Output() setDate: EventEmitter<Date> = new EventEmitter<Date>();\r\n  @Output() clearDate: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() select: EventEmitter<Date> = new EventEmitter<Date>();\r\n  @Output() close: EventEmitter<Date> = new EventEmitter<Date>();\r\n  @ViewChild('dateInput') dateInput: ElementRef;\r\n  inputValue = '';\r\n  @Input() date: Date;\r\n  @Input() currentDate: Date;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.date) {\r\n      this.currentDate = this.date;\r\n      this.addDate(this.currentDate)\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // this.onChange();\r\n  }\r\n\r\n  clickOutside() {\r\n    if (!this.currentDate) {\r\n      this.date = null;\r\n      this.currentDate = null;\r\n    } else {\r\n      this.date = this.currentDate;\r\n    }\r\n  }\r\n\r\n  setValue() {\r\n    this.currentDate = this.date;\r\n    this.setDate.emit(this.currentDate);\r\n  }\r\n\r\n  show() {\r\n    if (!this.date) {\r\n      this.addDate();\r\n    }\r\n  }\r\n\r\n  onSelect() {\r\n    console.log('this.date onSelect', this.date);\r\n    this.select.emit(this.date)\r\n  }\r\n\r\n  addDate(date = new Date()) {\r\n    let hour = date.getHours() + '';\r\n    let minutes = date.getMinutes() + '';\r\n\r\n    if (+hour < 10) {\r\n      hour = `0${hour}`;\r\n    }\r\n\r\n    if (+minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    this.inputValue = `${hour}:${minutes}`;\r\n  }\r\n\r\n  onChange() {\r\n    const date = new Date(this.date).setHours(0, 0, 0, 0);\r\n    const hours = +this.inputValue.substring(0, 2);\r\n    const minutes = +this.inputValue.substring(2, 4);\r\n    this.date = new Date(minutes * 60000 + hours * 3600000 + date);\r\n\r\n    this.onSelect();\r\n  }\r\n\r\n  clear() {\r\n    this.addDate();\r\n    this.currentDate = null;\r\n    this.clearDate.emit(true);\r\n  }\r\n\r\n  clearClick() {\r\n    this.clearDate.emit(true);\r\n  }\r\n\r\n  onClose() {\r\n    this.close.emit(this.currentDate);\r\n  }\r\n}\r\n","<div class=\"date-time-picker\">\n  <p-calendar\n    [maxDate]=\"maxDate\"\n    [minDate]=\"minDate\"\n    [showTime]=\"true\"\n    [showClear]=\"true\"\n    [showButtonBar]=\"true\"\n    [(ngModel)]=\"date\"\n    [readonlyInput]=\"true\"\n    [hideOnDateTimeSelect]=\"false\"\n    (onShow)=\"show()\"\n    (onClickOutside)=\"clickOutside()\"\n    (onClear)=\"clear()\"\n    (onClearClick)=\"clearClick()\"\n    (onSelect)=\"onSelect()\"\n    (onClose)=\"onClose()\"\n    #dateInput\n    dateFormat=\"dd/mm/yy\"\n    hourFormat=\"24\"\n    [placeholder]=\"placeholder\"\n  >\n    <p-footer>\n      <div class=\"date-time-picker__footer\">\n        <input\n          type=\"text\"\n          [class.disabled]=\"!date\"\n          [(ngModel)]=\"inputValue\"\n          mask=\"Hh:m0\"\n          [leadZeroDateTime]=\"true\"\n          (input)=\"onChange()\"\n        >\n        <button\n          pButton\n          type=\"button\"\n          [disabled]=\"inputValue.length < 4 || !date\"\n          (click)=\"setValue(); dateInput.toggle()\"\n        >\n          Set Date\n        </button>\n      </div>\n    </p-footer>\n  </p-calendar>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {EmployeeService} from '@shared/services/employee.service';\nimport {Employee} from '@shared/models/employee';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-employee-picker',\n  templateUrl: './employee-picker.component.html',\n  styleUrls: ['./employee-picker.component.scss']\n})\nexport class EmployeePickerComponent implements OnInit, OnDestroy {\n  @Output() selectEmployee: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n\n  selectEmployeeId: number;\n  isLoading = true;\n\n  employees: Employee[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly employeeService: EmployeeService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getEmployees();\n  }\n\n  getEmployees() {\n    this.employeeService.getAll().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(employees => {\n      this.employees = employees;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectTechnology() {\n    this.selectEmployee.emit(this.selectEmployeeId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"employee-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"employees\"\n    placeholder=\"Select Employee\"\n    [(ngModel)]=\"selectEmployeeId\"\n    (ngModelChange)=\"onSelectTechnology()\"\n    optionLabel=\"fullName\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n    [filter]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {LocatorService} from '../../../warehouse/services/locator.service';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {Product} from '../../../product-structure/models/product';\r\nimport {Locator} from '../../../warehouse/models/locator';\r\n\r\n@Component({\r\n  selector: 'pek-group-locator-picker',\r\n  templateUrl: './group-locator-picker.component.html',\r\n  styleUrls: ['./group-locator-picker.component.scss']\r\n})\r\nexport class GroupLocatorPickerComponent implements OnInit {\r\n  @Input() selectedLocatorId: number;\r\n  @Input() product: Product;\r\n  @Input() uniqueLocators: Locator[];\r\n  locators: Locator[];\r\n  @Output() selectLocator: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectLocatorFull: EventEmitter<Locator> = new EventEmitter<Locator>();\r\n  isLoading = true;\r\n  groupLocators = [];\r\n  locatorsMap = {};\r\n\r\n  selectLocatorId: number;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private locatorService: LocatorService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.selectedLocatorId) {\r\n      this.selectLocatorId = this.selectedLocatorId;\r\n    }\r\n\r\n    this.getLocators();\r\n  }\r\n\r\n  getLocators() {\r\n    this.locatorService.getAll().pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(locators => {\r\n      this.locators = locators;\r\n      this.prepareLocators();\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  prepareLocators(): void {\r\n    this.locators.forEach(element => {\r\n\r\n      let isUnique = false;\r\n      if (this.locatorsMap[element.warehouse.id]) {\r\n        const warehouseId = element.warehouse.id;\r\n        const locatorId = element.id;\r\n        if (this.uniqueLocators) {\r\n          const uniquesWarehouse = this.uniqueLocators.find(locator => {\r\n            return locator.warehouse.id === warehouseId;\r\n          });\r\n          if (uniquesWarehouse) {\r\n            isUnique = true;\r\n          }\r\n          const isExists = this.uniqueLocators.find(locator => {\r\n            return locator.warehouse.id === warehouseId && locator.id === locatorId\r\n          });\r\n\r\n          if (!isExists && uniquesWarehouse) return;\r\n        }\r\n\r\n        this.locatorsMap[element.warehouse.id].items.push({\r\n          label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place,\r\n          value: element.id,\r\n          isUnique: isUnique\r\n        });\r\n      } else {\r\n        const warehouseId = element.warehouse.id;\r\n        const locatorId = element.id;\r\n        if (this.uniqueLocators) {\r\n          const uniquesWarehouse = this.uniqueLocators.find(locator => {\r\n            return locator.warehouse.id === warehouseId;\r\n          });\r\n          const isExists = this.uniqueLocators.find(locator => {\r\n            return locator.id === locatorId\r\n          });\r\n          if (uniquesWarehouse) {\r\n            isUnique = true;\r\n          }\r\n          if (!isExists && uniquesWarehouse) return;\r\n        }\r\n\r\n        this.locatorsMap[element.warehouse.id] = {};\r\n        this.locatorsMap[element.warehouse.id].label = element.warehouse.name;\r\n        this.locatorsMap[element.warehouse.id].value = warehouseId;\r\n        this.locatorsMap[element.warehouse.id].items = [];\r\n        this.locatorsMap[element.warehouse.id].items.push({\r\n          label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place,\r\n          value: element.id,\r\n          isUnique: isUnique\r\n        });\r\n      }\r\n    });\r\n\r\n    Object.keys(this.locatorsMap).forEach(id => {\r\n      this.groupLocators.push(this.locatorsMap[id]);\r\n    });\r\n  }\r\n\r\n  onSelectLocator() {\r\n    this.selectLocator.emit(this.selectLocatorId);\r\n    this.selectLocatorFull.emit(this.locators.find(locator => locator.id === this.selectLocatorId));\r\n  }\r\n}\r\n","<div class=\"group-locator-picker\">\r\n  <p-dropdown\r\n    *ngIf=\"!isLoading; else spinner\"\r\n    [options]=\"groupLocators\"\r\n    placeholder=\"Select Locator\"\r\n    [(ngModel)]=\"selectLocatorId\"\r\n    (ngModelChange)=\"onSelectLocator()\"\r\n    [showClear]=\"true\"\r\n    [filter]=\"true\"\r\n    [group]=\"true\"\r\n  >\r\n    <ng-template let-group pTemplate=\"group\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <span>{{group.label}}</span>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template let-item pTemplate=\"item\">\r\n      <div class=\"country-item\">\r\n        <div [class.unique]=\"item.isUnique\">{{item.label}}</div>\r\n      </div>\r\n    </ng-template>\r\n  </p-dropdown>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {LocatorService} from '../../../warehouse/services/locator.service';\nimport {Subject} from 'rxjs';\nimport {Locator} from '../../../warehouse/models/locator';\n\n@Component({\n  selector: 'pek-locator-picker',\n  templateUrl: './locator-picker.component.html',\n  styleUrls: ['./locator-picker.component.scss']\n})\nexport class LocatorPickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() selectLocator: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isAllLocators = true;\n  @Input() warehouseId: number = null;\n  @Input() isDisabled = false;\n\n  isLoading = false;\n  locators: Locator[] = [];\n\n  selectLocatorId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private locatorService: LocatorService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selectLocatorId = null;\n    if ('warehouseId' in changes) {\n      if (!this.isAllLocators && this.warehouseId) {\n        this.getLocatorsForWarehouse();\n      } else if (!this.warehouseId) {\n        this.locators = [];\n        this.isDisabled = true;\n      }\n    }\n  }\n\n  getLocatorsForWarehouse() {\n    this.isLoading = true;\n    this.locatorService.get([{name: 'warehouse', value: this.warehouseId}]).subscribe(locators => {\n      this.locators = locators;\n      this.isDisabled = false;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectLocator() {\n    this.selectLocator.emit(this.selectLocatorId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"locator-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"locators\"\n    placeholder=\"Select Locator\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [(ngModel)]=\"selectLocatorId\"\n    (ngModelChange)=\"onSelectLocator()\"\n    [showClear]=\"true\"\n    [disabled]=\"isDisabled\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\n\n@Component({\n  selector: 'pek-multi-categories-picker',\n  templateUrl: './multi-categories-picker.component.html',\n  styleUrls: ['./multi-categories-picker.component.scss']\n})\nexport class MultiCategoriesPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  categories: Category[] = [];\n  categoriesTree: TreeNode<Category>[] = [];\n\n  selectedCategories: TreeNode<Category>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productCategoriesService: CategoriesService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories || this.selectedCategories.length === 0) {\n      this.choiceCategories.next(null)\n    } else {\n      this.choiceCategories.next(this.selectedCategories.map(c => c.data.id).join(','))\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-categories-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    selectionMode=\"checkbox\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Company} from '../../../crm/models/company';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {CompanyCategory} from '../../../crm/models/company-category';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\n\n@Component({\n  selector: 'pek-multi-company-category-picker',\n  templateUrl: './multi-company-category-picker.component.html',\n  styleUrls: ['./multi-company-category-picker.component.scss']\n})\nexport class MultiCompanyCategoryPickerComponent implements OnInit, OnChanges {\n  @Input() isDisabled = false;\n  @Output() selectCompanyCategories: EventEmitter<string> = new EventEmitter<string>();\n  @Input() currentCompanyCategoriesIds: number[] = [];\n\n  isLoading = true;\n  companies: Partial<CompanyCategory>[] = [];\n  selectedCompanyCategories: Partial<CompanyCategory>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyCategoryService: CompanyCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.companies = categories;\n      this.findCompanyCategories();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentCompanyCategoriesIds' in changes) {\n      this.selectedCompanyCategories = [];\n      this.findCompanyCategories();\n    }\n  }\n\n  findCompanyCategories() {\n    if (this.currentCompanyCategoriesIds.length > 0) {\n      this.currentCompanyCategoriesIds.forEach(id => {\n        const findCompany = this.companies.find(t => t.id === id);\n\n        if (findCompany) {\n          this.selectedCompanyCategories.push(findCompany);\n        }\n      });\n    }\n  }\n\n  onSelectCompanyCategories() {\n    if (this.selectedCompanyCategories === null || this.selectedCompanyCategories?.length === 0) {\n      this.selectCompanyCategories.emit(null);\n    } else {\n      this.selectCompanyCategories.emit(this.selectedCompanyCategories.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-company-category-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedCompanyCategories\"\n    optionLabel=\"name\"\n    placeholder=\"Select Company Categories\"\n    (ngModelChange)=\"onSelectCompanyCategories()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\n\n@Component({\n  selector: 'pek-multi-company-picker',\n  templateUrl: './multi-company-picker.component.html',\n  styleUrls: ['./multi-company-picker.component.scss']\n})\nexport class MultiCompanyPickerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() isDisabled = false;\n  @Input() currentCompaniesIds: number[] = [];\n  @Output() selectCompanies: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  companies: Partial<Company>[] = [];\n  selectedCompanies: Partial<Company>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyService: CompanyService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyService.getShorts().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(companies => {\n      this.companies = companies;\n      this.findCompanies();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentCompaniesIds' in changes) {\n      this.selectedCompanies = [];\n      this.findCompanies();\n    }\n  }\n\n  findCompanies() {\n    if (this.currentCompaniesIds.length > 0) {\n      this.currentCompaniesIds.forEach(id => {\n        const findCompany = this.companies.find(t => t.id === id);\n\n        if (findCompany) {\n          this.selectedCompanies.push(findCompany);\n        }\n      });\n    }\n  }\n\n  onSelectCompanies() {\n    if (this.selectedCompanies === null || this.selectedCompanies?.length === 0) {\n      this.selectCompanies.emit(null);\n    } else {\n      this.selectCompanies.emit(this.selectedCompanies.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-company-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedCompanies\"\n    optionLabel=\"name\"\n    placeholder=\"Select Companies\"\n    (ngModelChange)=\"onSelectCompanies()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, forwardRef, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {ContactPerson} from '@shared/models/contact-person';\r\nimport {ContactPersonService} from '../../../crm/services/contact-person.service';\r\n\r\n@Component({\r\n  selector: 'pek-multi-contacts-picker',\r\n  templateUrl: './multi-contacts-picker.component.html',\r\n  styleUrls: ['./multi-contacts-picker.component.scss'],\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MultiContactsPickerComponent), multi: true}]\r\n})\r\nexport class MultiContactsPickerComponent implements OnInit, ControlValueAccessor, OnChanges {\r\n\r\n  @Output() valueChange = new EventEmitter<number[]>();\r\n  @Output() valueChangeFull = new EventEmitter<ContactPerson[]>();\r\n  contacts: ContactPerson[];\r\n  @Input() contactsList: number[];\r\n  @Input() contactsListFull: ContactPerson[];\r\n  @Input() searchByCompany = false;\r\n  @Input() companyId: number;\r\n\r\n  constructor(\r\n    private contactPersonsService: ContactPersonService,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('companyId' in changes) {\r\n      if (this.companyId) {\r\n        this.search();\r\n      }\r\n    }\r\n    if ('contactsListFull' in changes) {\r\n      this.contactsList = this.contactsListFull.map(contact => contact.id)\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  search() {\r\n    if (!this.searchByCompany) {\r\n      this.getContactPersons(null);\r\n    }\r\n\r\n    if (this.searchByCompany && this.companyId) {\r\n      const query: [{ name: string; value: any }] = [{\r\n        name: 'company',\r\n        value: this.companyId\r\n      }];\r\n      this.getContactPersons(query);\r\n    }\r\n  }\r\n\r\n  getContactPersons(query: [{ name: string; value: any }]) {\r\n    this.contactPersonsService.getForce(query).subscribe(contacts => {\r\n      this.contacts = contacts;\r\n      if (this.contactsList) {\r\n        const selectedContacts = this.contacts\r\n          .filter(contact => this.contactsList\r\n            .findIndex(contListId => contListId === contact.id) >= 0).map(el => el.id);\r\n        this.setValue(selectedContacts);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(contactPerson: number[]) {\r\n    this.setValue(contactPerson);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.valueChange.subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // okay\r\n  }\r\n\r\n  private setValue(contactPerson: number[]) {\r\n    this.contactsList = contactPerson;\r\n    this.valueChange.emit(this.contactsList);\r\n    const foundContacts = this.contacts.filter(contact => contactPerson.findIndex(el => el === contact.id) > -1);\r\n    this.valueChangeFull.emit(foundContacts);\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.contactsList = obj;\r\n  }\r\n}\r\n","<p-multiSelect\r\n  optionValue=\"id\"\r\n  optionLabel=\"first_name\"\r\n  [options]=\"contacts\"\r\n  [(ngModel)]=\"contactsList\"\r\n  (ngModelChange)=\"onChange($event)\"\r\n>\r\n  <ng-template let-contact pTemplate=\"item\">\r\n    <div class=\"contact-item\">\r\n      <div>{{contact.first_name}} {{contact.last_name}}</div>\r\n    </div>\r\n  </ng-template>\r\n</p-multiSelect>\r\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Locator} from '../../../warehouse/models/locator';\nimport {Subject, takeUntil} from 'rxjs';\nimport {LocatorService} from '../../../warehouse/services/locator.service';\n\n@Component({\n  selector: 'pek-multi-locator-picker',\n  templateUrl: './multi-locator-picker.component.html',\n  styleUrls: ['./multi-locator-picker.component.scss']\n})\nexport class MultiLocatorPickerComponent implements OnInit {\n  @Input() isDisabled = false;\n  @Input() currentWarehousesIds: number[] = [];\n  @Output() selectLocators: EventEmitter<Locator[]> = new EventEmitter<Locator[]>();\n\n  isLoading = false;\n  locators: Locator[] = [];\n  selectedLocators: Locator[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly locatorService: LocatorService\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  getLocatorsForWarehouses() {\n    this.isDisabled = false;\n    this.isLoading = true;\n    this.locatorService.get([{name: 'warehouses', value: this.currentWarehousesIds}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(locators => {\n      this.locators = locators;\n      this.isLoading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentWarehousesIds' in changes) {\n      this.selectedLocators = [];\n\n      if (this.currentWarehousesIds?.length > 0) {\n        this.getLocatorsForWarehouses();\n      } else {\n        this.locators = [];\n        this.isDisabled = true;\n      }\n    }\n  }\n\n  onSelectLocators(locators: Locator[]) {\n    this.selectLocators.emit(locators);\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"multi-locator-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"locators\"\n    [(ngModel)]=\"selectedLocators\"\n    optionLabel=\"name\"\n    placeholder=\"Select Locators\"\n    (ngModelChange)=\"onSelectLocators($event)\"\n    [disabled]=\"isDisabled\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\n\n@Component({\n  selector: 'pek-multi-product-categories-picker',\n  templateUrl: './multi-product-categories-picker.component.html',\n  styleUrls: ['./multi-product-categories-picker.component.scss']\n})\nexport class MultiProductCategoriesPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() ignoredCategoryId: number;\n  @Input() currentCategoryId: number;\n\n  isLoading = true;\n  categories: Category[] = [];\n  categoriesTree: TreeNode<Category>[] = [];\n\n  selectedCategories: TreeNode<Category>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productCategoriesService: CategoriesService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories) {\n      this.selectedCategories = [];\n    }\n\n    this.choiceCategories.emit(this.selectedCategories.map(n => n?.data?.id));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"product-category-picker\">\n  <p-treeSelect\n    selectionMode=\"checkbox\"\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-multi-product-structure-categories-picker',\n  templateUrl: './multi-product-structure-categories-picker.component.html',\n  styleUrls: ['./multi-product-structure-categories-picker.component.scss']\n})\nexport class MultiProductStructureCategoriesPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[] = [];\n\n  selectedCategories: TreeNode<ProductStructureCategory>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productStructureCategoryService: ProductStructureCategoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<ProductStructureCategory>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <ProductStructureCategory>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories || this.selectedCategories.length === 0) {\n      this.choiceCategories.next(null)\n    } else {\n      this.choiceCategories.next(this.selectedCategories.map(c => c.data.id).join(','))\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"multi-product-structure-categories-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    selectionMode=\"checkbox\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {PurchaseCategory} from '../../../purchasing/models/purchase-category';\nimport {PurchasingCategoryService} from '../../../purchasing/services/purchasing-category.service';\n\n@Component({\n  selector: 'pek-multi-purchase-category-picker',\n  templateUrl: './multi-purchase-category-picker.component.html',\n  styleUrls: ['./multi-purchase-category-picker.component.scss']\n})\nexport class MultiPurchaseCategoryPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() ignoredCategoryId: number;\n  @Input() currentCategoryId: number;\n\n  isLoading = true;\n  categories: PurchaseCategory[] = [];\n  categoriesTree: TreeNode<PurchaseCategory>[] = [];\n\n  selectedCategories: TreeNode<PurchaseCategory>[] = [];\n\n  constructor(\n    private readonly purchaseCategoryService: PurchasingCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.purchaseCategoryService.get().subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<PurchaseCategory>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<PurchaseCategory>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <PurchaseCategory>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories) {\n      this.selectedCategories = [];\n    }\n\n    this.choiceCategories.emit(this.selectedCategories.map(n => n?.data?.id));\n  }\n\n}\n","<div class=\"product-category-picker\">\n  <p-treeSelect\n    selectionMode=\"checkbox\"\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {SalesStatus} from '../../../sales/models/sales-chain';\nimport {SalesStatusService} from '../../../sales/services/sales-status.service';\n\n@Component({\n  selector: 'pek-multi-sales-status-picker',\n  templateUrl: './multi-sales-status-picker.component.html',\n  styleUrls: ['./multi-sales-status-picker.component.scss']\n})\nexport class MultiSalesStatusPickerComponent implements OnInit {\n\n  @Input() isDisabled = false;\n  @Output() selectStatuses: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  companies: Partial<SalesStatus>[] = [];\n  selectedStatuses: Partial<SalesStatus>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly salesStatusService: SalesStatusService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.salesStatusService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(statuses => {\n      this.companies = statuses;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectStatuses() {\n    if (this.selectedStatuses === null || this.selectedStatuses?.length === 0) {\n      this.selectStatuses.emit(null);\n    } else {\n      this.selectStatuses.emit(this.selectedStatuses.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-sales-status-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedStatuses\"\n    optionLabel=\"name\"\n    placeholder=\"Select Sales Statuses\"\n    (ngModelChange)=\"onSelectStatuses()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {Status} from '../../../procurement/models/status';\r\nimport {StatusService} from '../../../procurement/services/status.service';\r\n\r\n@Component({\r\n  selector: 'pek-multi-statuses-picker',\r\n  templateUrl: './multi-statuses-picker.component.html',\r\n  styleUrls: ['./multi-statuses-picker.component.scss']\r\n})\r\nexport class MultiStatusesPickerComponent implements OnInit {\r\n  @Output() selectStatuses: EventEmitter<number[]> = new EventEmitter<number[]>();\r\n  @Output() isFinalStatusSelected: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Input() accountingType: number;\r\n\r\n  isLoading = true;\r\n  statuses: Status[] = [];\r\n  selectedStatuses: Status[] = [];\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly statusService: StatusService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.statusService.get([\r\n      {name: 'accounting_type', value: this.accountingType}\r\n    ]).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(statuses => {\r\n      this.statuses = statuses;\r\n      console.log('statuses', this.statuses);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onSelectStatuses(statuses: Status[]) {\r\n    if (statuses) {\r\n      const isOnStockSelected = statuses.findIndex(status => status.is_final) > -1;\r\n      this.isFinalStatusSelected.emit(isOnStockSelected);\r\n      this.selectStatuses.emit(statuses.map(s => s.id));\r\n    } else {\r\n      this.isFinalStatusSelected.emit(false);\r\n      this.selectStatuses.emit(null);\r\n    }\r\n  }\r\n}\r\n","<div class=\"status-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"statuses\"\n    [(ngModel)]=\"selectedStatuses\"\n    optionLabel=\"value\"\n    placeholder=\"Select Statuses\"\n    (ngModelChange)=\"onSelectStatuses($event)\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {TechnologyService} from '../../../product-structure/services/technology.service';\nimport {Technology} from '../../../product-structure/models/technology';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-multi-technology-picker',\n  templateUrl: './multi-technology-picker.component.html',\n  styleUrls: ['./multi-technology-picker.component.scss']\n})\nexport class MultiTechnologyPickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() currentTechnologiesIds: number[] = [];\n  @Output() selectTechnologies: EventEmitter<Technology[]> = new EventEmitter<Technology[]>();\n\n  isLoading = true;\n  technologies: Technology[] = [];\n  selectedTechnologies: Technology[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly technologyService: TechnologyService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.findTechnologies();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentTechnologiesIds' in changes) {\n      this.selectedTechnologies = [];\n      this.findTechnologies();\n    }\n  }\n\n  onSelectTechnologies(technologies: Technology[]) {\n    if (technologies) {\n      this.selectTechnologies.emit(technologies);\n    } else {\n      this.selectTechnologies.emit(null);\n    }\n  }\n\n  findTechnologies() {\n    if (this.currentTechnologiesIds.length > 0) {\n      this.currentTechnologiesIds.forEach(id => {\n        const findTechnology = this.technologies.find(t => t.id === id);\n\n        if (findTechnology) {\n          this.selectedTechnologies.push(findTechnology);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"technology-picker\">\n  <p-multiSelect\n    [showClear]=\"true\"\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"technologies\"\n    [(ngModel)]=\"selectedTechnologies\"\n    optionLabel=\"name\"\n    placeholder=\"Select Technologies\"\n    (ngModelChange)=\"onSelectTechnologies($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {WarehouseService} from '../../../warehouse/services/warehouse.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\n\n@Component({\n  selector: 'pek-multi-warehouse-picker',\n  templateUrl: './multi-warehouse-picker.component.html',\n  styleUrls: ['./multi-warehouse-picker.component.scss']\n})\nexport class MultiWarehousePickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() currentWarehousesIds: number[] = [];\n  @Output() selectWarehouses: EventEmitter<Warehouse[]> = new EventEmitter<Warehouse[]>();\n\n  isLoading = true;\n  warehouses: Warehouse[] = [];\n  selectedWarehouses: Warehouse[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.findWarehouses();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentWarehousesIds' in changes) {\n      this.selectedWarehouses = [];\n      this.findWarehouses();\n    }\n  }\n\n  onSelectWarehouses(warehouses: Warehouse[]) {\n    this.selectWarehouses.emit(warehouses);\n  }\n\n  findWarehouses() {\n    if (this.currentWarehousesIds?.length > 0) {\n      this.currentWarehousesIds.forEach(id => {\n        const findWarehouses = this.warehouses.find(t => t.id === id);\n\n        if (findWarehouses) {\n          this.selectedWarehouses.push(findWarehouses);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-warehouse-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"warehouses\"\n    [(ngModel)]=\"selectedWarehouses\"\n    optionLabel=\"name\"\n    placeholder=\"Select Warehouses\"\n    (ngModelChange)=\"onSelectWarehouses($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ENomenclatureType} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-nomenclature-type-picker',\n  templateUrl: './nomenclature-type-picker.component.html',\n  styleUrls: ['./nomenclature-type-picker.component.scss']\n})\nexport class NomenclatureTypePickerComponent implements OnInit {\n  @Input() currentNomenclatureType: ENomenclatureType = null;\n  @Input() isDisabled = false;\n  @Output() choiceNomenclatureType: EventEmitter<ENomenclatureType> = new EventEmitter<ENomenclatureType>();\n  @Input() filteredNomenclatureTypes: ENomenclatureType[] = [];\n\n  selectNomenclatureType: ENomenclatureType = null;\n\n  nomenclatureTypes: { label: string, value: ENomenclatureType }[] = [\n    {label: 'Purchased', value: ENomenclatureType.PURCHASED},\n    {label: 'Assembly', value: ENomenclatureType.ASSEMBLY},\n    {label: 'Manufactured', value: ENomenclatureType.MANUFACTURED}\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    if (this.filteredNomenclatureTypes.length > 0) {\n      let types = [];\n\n      this.filteredNomenclatureTypes.forEach(type => {\n        types = [...types, ...this.nomenclatureTypes.filter(t => t.value === type)];\n      });\n\n      this.nomenclatureTypes = types;\n    }\n\n    this.setCurrentNomenclatureType();\n  }\n\n  setCurrentNomenclatureType() {\n    if (this.currentNomenclatureType !== null) {\n      this.selectNomenclatureType = this.currentNomenclatureType;\n    }\n  }\n\n  onSelectNomenclatureType() {\n    this.choiceNomenclatureType.emit(this.selectNomenclatureType);\n  }\n}\n","<div class=\"nomenclature-type-picker\">\n  <p-dropdown\n    [options]=\"nomenclatureTypes\"\n    optionLabel=\"label\"\n    optionValue=\"value\"\n    placeholder=\"Select Type\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n    [(ngModel)]=\"selectNomenclatureType\"\n    (ngModelChange)=\"onSelectNomenclatureType()\"\n  ></p-dropdown>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-product-category-picker',\n  templateUrl: './product-category-picker.component.html',\n  styleUrls: ['./product-category-picker.component.scss'],\n})\nexport class ProductCategoryPickerComponent implements OnInit, OnDestroy, OnChanges {\n  @Output() choiceCategory: EventEmitter<Category> = new EventEmitter<Category>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() isAllIds = false;\n  @Input() ignoredCategoryId: number;\n  @Input() currentCategoryId: number;\n\n  isLoading = true;\n  categories: Category[] = [];\n  categoriesTree: TreeNode<Category>[] = [];\n\n  selectedCategory: TreeNode<Category> = null;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productCategoriesService: CategoriesService,\n  ) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.findCategory();\n  }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.findCategory();\n      this.isLoading = false;\n    });\n  }\n\n  findCategory() {\n    if (this.currentCategoryId) {\n      const find = (nodes: TreeNode<Category>[]) => {\n        nodes.forEach(node => {\n          if (node.data.id === this.currentCategoryId) {\n            this.selectedCategory = node;\n            return;\n          } else if (node.children.length > 0) {\n            find(node.children);\n          }\n        });\n      };\n\n      find(this.categoriesTree);\n    } else {\n      this.selectedCategory = null;\n    }\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategory() {\n    if (!this.isAllIds) {\n      this.choiceCategory.emit(this.selectedCategory?.data ? this.selectedCategory.data : null);\n    } else {\n      this.choiceProductForAllIds();\n    }\n  }\n\n  choiceProductForAllIds() {\n    if (!this.selectedCategory) {\n      this.choiceCategoryFolAllIds.emit(null);\n      return;\n    }\n\n    const ids = [];\n\n    ids.push(this.selectedCategory.data.id);\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        ids.push(node.data.id);\n\n        if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.selectedCategory.children);\n    this.choiceCategoryFolAllIds.emit(ids);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"product-category-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategory\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategory()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\nimport {TreeNode} from 'primeng/api';\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-product-structure-category-picker',\n  templateUrl: './product-structure-category-picker.component.html',\n  styleUrls: ['./product-structure-category-picker.component.scss']\n})\nexport class ProductStructureCategoryPickerComponent implements OnInit, OnDestroy {\n  @Output() choiceCategory: EventEmitter<ProductStructureCategory> = new EventEmitter<ProductStructureCategory>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() isAllIds = false;\n  @Input() currentCategoryId: number;\n  @Input() ignoredCategoryId: number;\n  @Input() isDisabled = false;\n\n  isLoading = true;\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[] = [];\n\n  selectedCategory: TreeNode<ProductStructureCategory> = null;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productStructureCategoryService: ProductStructureCategoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.findCategory();\n      this.isLoading = false;\n    });\n  }\n\n  findCategory() {\n    const find = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === this.currentCategoryId) {\n          this.selectedCategory = node;\n          return;\n        } else if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<ProductStructureCategory>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <ProductStructureCategory>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategory() {\n    if (!this.isAllIds) {\n      this.choiceCategory.emit(this.selectedCategory?.data ? this.selectedCategory.data : null);\n    } else {\n      this.choiceProductForAllIds();\n    }\n  }\n\n  choiceProductForAllIds() {\n    if (!this.selectedCategory) {\n      this.choiceCategoryFolAllIds.emit(null);\n      return;\n    }\n\n    const ids = [];\n\n    ids.push(this.selectedCategory.data.id);\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        ids.push(node.data.id);\n\n        if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.selectedCategory.children);\n    this.choiceCategoryFolAllIds.emit(ids);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"product-root-category-picker\">\n<!--  <p-dropdown-->\n<!--    *ngIf=\"!isLoading; else spinner\"-->\n<!--    [showClear]=\"true\"-->\n<!--    [options]=\"categories\"-->\n<!--    optionLabel=\"name\"-->\n<!--    optionValue=\"id\"-->\n<!--    placeholder=\"Select Product Structure Category\"-->\n<!--    [(ngModel)]=\"selectCategoryId\"-->\n<!--    (ngModelChange)=\"onChangeCategory()\"-->\n<!--    [disabled]=\"isDisabled\"-->\n<!--  ></p-dropdown>-->\n\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategory\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategory()\"\n    [disabled]=\"isDisabled\"\n  ></p-treeSelect>\n\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Company} from '../../../crm/models/company';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {CompanyService} from '../../../crm/services/company.service';\r\nimport {Region} from '@shared/models/region';\r\nimport {RegionService} from '@shared/services/region.service';\r\n\r\n@Component({\r\n  selector: 'pek-region-picker',\r\n  templateUrl: './region-picker.component.html',\r\n  styleUrls: ['./region-picker.component.scss']\r\n})\r\nexport class RegionPickerComponent implements OnInit, OnChanges {\r\n\r\n  @Output() selectRegion: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectRegionFull: EventEmitter<Partial<Region>> = new EventEmitter<Partial<Region>>();\r\n  @Input() countrySelected: number;\r\n  @Input() isDisabled: boolean;\r\n  isLoading = true;\r\n  regions: Partial<Region>[] = [];\r\n  @Input() selectedRegionId: number;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly regionService: RegionService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRegions();\r\n  }\r\n\r\n  getRegions() {\r\n    this.regions = [];\r\n    let query;\r\n\r\n    if (this.countrySelected) {\r\n      query = [{\r\n          name: 'country_ids',\r\n          value: [this.countrySelected]\r\n        }];\r\n    }\r\n\r\n    this.regionService.get(query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(regions => {\r\n      this.regions = regions;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('countrySelected' in changes) {\r\n      this.getRegions();\r\n    }\r\n  }\r\n\r\n  onSelectRegion() {\r\n    this.selectRegion.emit(this.selectedRegionId);\r\n    const region = this.regions.find(region => region.id === this.selectedRegionId);\r\n    this.selectRegionFull.emit(region);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"region-picker\">\r\n  <p-dropdown\r\n    *ngIf=\"!isLoading; else spinner\"\r\n    [options]=\"regions\"\r\n    placeholder=\"Select Region\"\r\n    [(ngModel)]=\"selectedRegionId\"\r\n    (ngModelChange)=\"onSelectRegion()\"\r\n    optionLabel=\"name\"\r\n    optionValue=\"id\"\r\n    [showClear]=\"true\"\r\n    [disabled]=\"isDisabled\"\r\n  >\r\n  </p-dropdown>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {BehaviorSubject, switchMap} from 'rxjs';\nimport {Status} from '../../../procurement/models/status';\nimport {StatusService} from '../../../procurement/services/status.service';\nimport {tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-statuses-picker',\n  templateUrl: './statuses-picker.component.html',\n  styleUrls: ['./statuses-picker.component.scss']\n})\nexport class StatusesPickerComponent implements OnInit {\n  @Output() selectStatus: EventEmitter<number> = new EventEmitter<number>();\n  @Input() currentStatusId: number;\n  @Input() accountingType: number;\n  isLoading = true;\n  statuses: Status[] = [];\n  selectedStatusId: number;\n\n  get$ = new BehaviorSubject('');\n\n  constructor(\n    private readonly statusService: StatusService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.currentStatusId) {\n      this.selectedStatusId = this.currentStatusId;\n    }\n\n    this.get$.pipe(\n      switchMap(() => this.statusService.get([\n        {name: 'accounting_type', value: this.accountingType}\n      ])),\n      tap(statuses => this.statuses = statuses),\n      tap(() => this.isLoading = false)\n    ).subscribe();\n  }\n\n  onSelectStatus() {\n    this.selectStatus.emit(this.selectedStatusId);\n  }\n}\n","<div class=\"statuses-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"statuses\"\n    placeholder=\"Select Status\"\n    [(ngModel)]=\"selectedStatusId\"\n    (ngModelChange)=\"onSelectStatus()\"\n    optionLabel=\"value\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {RegionService} from '@shared/services/region.service';\r\nimport {SubRegion} from '@shared/models/sub-region';\r\nimport {SubRegionService} from '@shared/services/sub-region.service';\r\n\r\n@Component({\r\n  selector: 'pek-sub-region-picker',\r\n  templateUrl: './sub-region-picker.component.html',\r\n  styleUrls: ['./sub-region-picker.component.scss']\r\n})\r\nexport class SubRegionPickerComponent implements OnInit {\r\n  @Output() selectSubRegion: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() selectSubRegionFull: EventEmitter<Partial<SubRegion>> = new EventEmitter<Partial<SubRegion>>();\r\n  @Input() regionSelected: number;\r\n  @Input() isDisabled: boolean;\r\n  isLoading = true;\r\n  regions: Partial<SubRegion>[] = [];\r\n  @Input() selectedSubRegionId: number;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly subRegionService: SubRegionService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRegions();\r\n  }\r\n\r\n  getRegions() {\r\n    this.regions = [];\r\n    let query;\r\n\r\n    if (this.regionSelected) {\r\n      query = [{\r\n        name: 'region',\r\n        value: this.regionSelected\r\n      }];\r\n    }\r\n\r\n    this.subRegionService.get(query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(regions => {\r\n      this.regions = regions;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ('regionSelected' in changes) {\r\n      this.getRegions();\r\n    }\r\n  }\r\n\r\n  onSelectRegion() {\r\n    this.selectSubRegion.emit(this.selectedSubRegionId);\r\n    const region = this.regions.find(region => region.id === this.selectedSubRegionId);\r\n    this.selectSubRegionFull.emit(region);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"region-picker\">\r\n  <p-dropdown\r\n    *ngIf=\"!isLoading; else spinner\"\r\n    [options]=\"regions\"\r\n    placeholder=\"Select Region\"\r\n    [(ngModel)]=\"selectedSubRegionId\"\r\n    (ngModelChange)=\"onSelectRegion()\"\r\n    optionLabel=\"name\"\r\n    optionValue=\"id\"\r\n    [showClear]=\"true\"\r\n    [disabled]=\"isDisabled\"\r\n  >\r\n  </p-dropdown>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Technology} from '../../../product-structure/models/technology';\nimport {TechnologyService} from '../../../product-structure/services/technology.service';\n\n@Component({\n  selector: 'pek-technology-picker',\n  templateUrl: './technology-picker.component.html',\n  styleUrls: ['./technology-picker.component.scss']\n})\nexport class TechnologyPickerComponent implements OnInit {\n  @Output() selectTechnology: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n  @Input() acceptedTechnologyIds: number[] = [];\n\n  selectTechnologyId: number;\n\n  isLoading = true;\n  technologies: Technology[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly technologyService: TechnologyService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getTechnologies();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('acceptedTechnologyIds' in changes) {\n      this.filterTechnologies();\n    }\n  }\n\n  filterTechnologies() {\n    if (this.acceptedTechnologyIds.length > 0) {\n      let newTechnologies: Technology[] = [];\n\n      this.acceptedTechnologyIds.forEach(id => {\n        newTechnologies = [...newTechnologies, ...this.technologies.filter(w => w.id === id)];\n      });\n\n      this.technologies = [...newTechnologies];\n    }\n  }\n\n  getTechnologies() {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.filterTechnologies();\n      this.isLoading = false;\n    });\n  }\n\n  onSelectTechnology() {\n    this.selectTechnology.emit(this.selectTechnologyId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"technology-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"technologies\"\n    placeholder=\"Select Technology\"\n    [(ngModel)]=\"selectTechnologyId\"\n    (ngModelChange)=\"onSelectTechnology()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\nimport {Subject, takeUntil} from 'rxjs';\nimport {UnitMeasureService} from '../../../warehouse/services/unit-measure.service';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\n\n@Component({\n  selector: 'pek-unit-measure-picker',\n  templateUrl: './unit-measure-picker.component.html',\n  styleUrls: ['./unit-measure-picker.component.scss']\n})\nexport class UnitMeasurePickerComponent implements OnInit {\n  @Input() currentMeasureUnitId: number;\n  @Output() selectMeasureUnit: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n\n  selectMeasureUnitId: number;\n\n  isLoading = true;\n  unitsMeasure: UnitMeasure[];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly measureUnitService: UnitMeasureService\n  ) { }\n\n  ngOnInit(): void {\n    this.getMeasureUnit();\n\n    if (this.currentMeasureUnitId) {\n      this.selectMeasureUnitId = this.currentMeasureUnitId;\n    }\n  }\n\n  getMeasureUnit() {\n    this.measureUnitService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(unitsMeasure => {\n      this.unitsMeasure = unitsMeasure;\n      this.isLoading = false;\n    })\n  }\n\n  onSelectWarehouse() {\n    this.selectMeasureUnit.emit(this.selectMeasureUnitId)\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"unit-measure-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"unitsMeasure\"\n    placeholder=\"Select Unit of Measure\"\n    [(ngModel)]=\"selectMeasureUnitId\"\n    (ngModelChange)=\"onSelectWarehouse()\"\n    optionLabel=\"label\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {UserProfile} from '../../../crm/models/user-profile';\nimport {UserProfileService} from '../../../crm/services/user-profile.service';\n\n@Component({\n  selector: 'pek-user-profile-picker',\n  templateUrl: './user-profile-picker.component.html',\n  styleUrls: ['./user-profile-picker.component.scss']\n})\nexport class UserProfilePickerComponent implements OnInit {\n  @Output() selectUserProfile: EventEmitter<number> = new EventEmitter<number>();\n  @Input() currentUserProfileId: number;\n  isLoading = true;\n  userProfiles: UserProfile[] = [];\n  selectedUserProfileId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly userProfileService: UserProfileService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userProfileService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(userProfiles => {\n      this.userProfiles = userProfiles;\n      console.log(this.currentUserProfileId);\n\n      if (this.currentUserProfileId) this.selectedUserProfileId = this.currentUserProfileId;\n\n      this.isLoading = false;\n    });\n  }\n\n  onSelectCompany() {\n    this.selectUserProfile.emit(this.selectedUserProfileId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"user-profile-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"userProfiles\"\n    placeholder=\"Select User Profile\"\n    [(ngModel)]=\"selectedUserProfileId\"\n    (ngModelChange)=\"onSelectCompany()\"\n    optionLabel=\"fullName\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {WarehouseService} from '../../../warehouse/services/warehouse.service';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-picker',\n  templateUrl: './warehouse-picker.component.html',\n  styleUrls: ['./warehouse-picker.component.scss']\n})\nexport class WarehousePickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() selectWarehouse: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n  @Input() acceptedWarehouseIds: number[] = [];\n  @Input() selectedWarehouseId: number;\n\n  selectWarehouseId: number;\n\n  isLoading = true;\n  warehouses: Warehouse[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n\n    if (this.selectedWarehouseId) {\n      this.selectWarehouseId = this.selectedWarehouseId;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('acceptedWarehouseIds' in changes) {\n      this.filterWarehouses();\n    }\n  }\n\n  filterWarehouses() {\n    if (this.acceptedWarehouseIds.length > 0) {\n      let newWarehouses: Warehouse[] = [];\n\n      this.acceptedWarehouseIds.forEach(id => {\n        newWarehouses = [...newWarehouses, ...this.warehouses.filter(w => w.id === id)];\n      });\n\n      this.warehouses = [...newWarehouses];\n    }\n  }\n\n  getWarehouses() {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.filterWarehouses();\n      this.isLoading = false;\n    });\n  }\n\n  onSelectWarehouse() {\n    this.selectWarehouse.emit(this.selectWarehouseId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"warehouse-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"warehouses\"\n    placeholder=\"Select Warehouse\"\n    [(ngModel)]=\"selectWarehouseId\"\n    (ngModelChange)=\"onSelectWarehouse()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'moneyFormat'\r\n})\r\nexport class MoneyFormatPipe implements PipeTransform {\r\n\r\n  transform(value: number, ...args: any[]): string {\r\n    return parseFloat(value as any).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ').split('.').join(',');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {GlossaryItem} from '../../guide/guide-glossary/guide-glossary.component';\n\n@Pipe({\n  name: 'glossarySearch'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(items: GlossaryItem[], search = ''): GlossaryItem[] {\n    if (!search.trim()) {\n      return items\n    }\n\n    return items.filter(i => i.title.toLowerCase().includes(search.toLowerCase()))\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdapterService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  removeDuplicates(data: any[], key: any) {\r\n    return [...new Map(data.map(x => [key(x), x])).values()];\r\n  }\r\n\r\n  isValidHttpUrl(string: string): boolean {\r\n    return string.includes('http:') || string.includes('https:');\r\n  }\r\n\r\n  dateAdapter(date: Date) {\r\n    if (date === null) {\r\n      return null;\r\n    } else {\r\n      return (date.getFullYear() + '-' +\r\n        ('0' + (date.getMonth() + 1)).slice(-2) + '-' +\r\n        ('0' + date.getDate()).slice(-2));\r\n    }\r\n  }\r\n\r\n  dateTimeAdapter(date: Date) {\r\n    if (date === null) {\r\n      return null;\r\n    } else {\r\n      return date.toISOString();\r\n    }\r\n  }\r\n\r\n  generateQueryKey(form: FormGroup) {\r\n    let queryKeyString = '';\r\n\r\n    for (const key in form.controls) {\r\n      queryKeyString += `${key}:${form.controls[key].value}/`\r\n    }\r\n\r\n    return queryKeyString.slice(0, -1);\r\n  }\r\n\r\n  downloadFile(filename: string, response: Blob) {\r\n    const dataType = response.type;\r\n    const binaryData = [];\r\n    binaryData.push(response);\r\n    const downloadLink = document.createElement('a');\r\n    downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\r\n    downloadLink.setAttribute('download', filename);\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AreaLocator} from '../../warehouse/models/area-locator';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '@env/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AreaLocatorsService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'area_locators/';\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n  get(query?: { name: string, value: any }[]): Observable<AreaLocator[]> {\r\n    let q_string = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          q_string += '&' + element.name + '=' + element.value\r\n        } else {\r\n          q_string += '?' + element.name + '=' + element.value\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: AreaLocator[] }>(this.API_URL + this.url + q_string).pipe(map(response => {\r\n      return response.data;\r\n    }))\r\n  }\r\n\r\n  create(entity) {\r\n    return this.httpClient.post<{ data: AreaLocator }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: AreaLocator) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: AreaLocator) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {Area, AreaLocator, AreaPaginated} from '../../warehouse/models/area-locator';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AreasService {\r\n\r\n  count: number = -1;\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'areas/';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  get(): Observable<Area[]> {\r\n    return this.httpClient.get<{ data: Area[] }>(this.API_URL + this.url).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  get_paginated(query?: QuerySearch[]): Observable<AreaPaginated> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient\r\n      .get<{ data: AreaPaginated }>(this.API_URL + this.url + qString)\r\n      .pipe(\r\n        map((response) => {\r\n          return response.data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getLocators(): Observable<AreaLocator[]> {\r\n    return this.httpClient.get<{ data: AreaLocator[] }>(this.API_URL + 'area_locators/').pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getById(id): Observable<Area> {\r\n    return this.httpClient.get<{ data: Area }>(this.API_URL + this.url + id + '/').pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  create(entity) {\r\n    return this.httpClient.post<{ data: Area }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: Area) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: Area) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Country} from '@shared/models/country';\r\nimport {Area} from '../../warehouse/models/area-locator';\r\nimport {Currency} from '@shared/models/currency';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'countries/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Country[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Country[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity: Partial<Country>) {\r\n    return this.httpClient.post<{ data: Country }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: Partial<Country>) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: Partial<Country>) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {Currency} from '@shared/models/currency';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrenciesService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'currencies/';\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  get(query?: { name: string, value: any }[]): Observable<Currency[]> {\r\n    let q_string = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          q_string += '&' + element.name + '=' + element.value\r\n        } else {\r\n          q_string += '?' + element.name + '=' + element.value\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{data:Currency[]}>(this.API_URL + this.url + q_string).pipe(map(response => {\r\n      return response.data;\r\n    }))\r\n  }\r\n\r\n  create(entity) {\r\n    return this.httpClient.post<{data:Currency}>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: Currency, last: string) {\r\n    return this.httpClient.put(this.API_URL + this.url + last + '/', entity);\r\n  }\r\n\r\n  updatePartly(entity: Currency, last: string) {\r\n    return this.httpClient.patch(this.API_URL + this.url + last + '/', entity);\r\n  }\r\n\r\n  delete(entity: Currency) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.code + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {Employee} from '@shared/models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  API_URL = environment.base_url + environment.staff_url;\n  readonly url = 'employees/';\n\n  employees: Employee[];\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n\n  }\n\n  get(query?: QuerySearch[]): Observable<Employee[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Employee[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getAll(): Observable<Employee[]> {\n    if (this.employees) {\n      return of(this.employees);\n    }\n\n    return this.httpClient.get<{ data: Employee[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const employees = response.data;\n        employees.forEach(e => e.fullName = `${e.first_name} ${e.last_name}`);\n        this.employees = employees;\n        return employees;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ConfirmComponent, ConfirmType} from '@shared/modals/confirm/confirm.component';\r\nimport {Observable} from 'rxjs';\r\nimport {GuideComponent} from '../../guide/guide/guide.component';\r\nimport {PasteImageComponent} from '@shared/modals/paste-image/paste-image.component';\r\nimport {ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\r\nimport {ImageGalleryComponent} from '@shared/modals/image-gallery/image-gallery.component';\r\nimport {\r\n  NomenclaturePickerModalComponent\r\n} from '@shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component';\r\nimport {CompleteListComponent} from '@shared/modals/refactoring/complete-list/complete-list.component';\r\nimport {ListProductsComponent} from '@shared/modals/refactoring/list-products/list-products.component';\r\nimport {Overlay} from '@angular/cdk/overlay';\r\nimport {AddFileToOrderComponent} from '@shared/modals/add-file-to-order/add-file-to-order.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n\r\n  constructor(\r\n    private dialog: MatDialog\r\n  ) {\r\n  }\r\n\r\n  confirm(type: ConfirmType = 'default', btnConfirmText: string = ''): Observable<boolean> {\r\n    return this.dialog\r\n      .open<ConfirmComponent>(ConfirmComponent, {\r\n        width: '25rem',\r\n        height: '22.5rem',\r\n        data: {type, btnConfirmText},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  showPasteImageModal(imageSrc: string | ArrayBuffer, file: File) {\r\n    return this.dialog\r\n      .open<PasteImageComponent>(PasteImageComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        data: {imageSrc, file},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  showImageGallery(images?: NomenclatureImage[], nomenclatureId?: number, activeIdx = 1) {\r\n    return this.dialog\r\n      .open<ImageGalleryComponent>(ImageGalleryComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        panelClass: 'gallery-modal',\r\n        data: {images, nomenclatureId, activeIdx},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  showBusinessGuide(): Observable<any> {\r\n    return this.dialog\r\n      .open<GuideComponent>(GuideComponent, {\r\n        width: '100%',\r\n        height: '77%',\r\n        autoFocus: false,\r\n        disableClose: false,\r\n        backdropClass: 'guide-modalbox',\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  choiceNomenclatureModal(type: ENomenclatureType = null): Observable<Nomenclature> {\r\n    return this.dialog\r\n      .open<NomenclaturePickerModalComponent>(NomenclaturePickerModalComponent, {\r\n        width: '90rem',\r\n        height: 'auto',\r\n        data: {type},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms',\r\n        panelClass: 'modal-overflow-visible',\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  completeList(entity) {\r\n    return this.dialog\r\n      .open<CompleteListComponent>(CompleteListComponent, {\r\n        width: '800px',\r\n        data: { type: 'edit', entity: entity },\r\n        disableClose: false,\r\n        panelClass: 'modal-overflow-visible'\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  editListProduct(entity) {\r\n    return this.dialog\r\n      .open<ListProductsComponent>(ListProductsComponent, {\r\n        width: '800px',\r\n        data: { type: 'edit', entity: entity },\r\n        disableClose: false,\r\n        panelClass: 'modal-overflow-visible',\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  openAddFileToOrderModal(orderId: number) {\r\n    return this.dialog\r\n      .open<AddFileToOrderComponent>(AddFileToOrderComponent, {\r\n        width: '800px',\r\n        data: { orderId },\r\n        disableClose:false,\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {NewNomenclature, Nomenclature, NomenclatureImage, Nomenclatures} from '@shared/models/nomenclature';\r\nimport {map} from 'rxjs/operators';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {TechnicalEquipment} from '../../product-structure/models/technical-equipment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NomenclatureService {\r\n  API_URL = environment.base_url + environment.product_structure_url;\r\n  readonly url = 'nomenclatures/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Nomenclature[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Nomenclature[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<Nomenclatures> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Nomenclatures }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<Nomenclature> {\r\n    return this.httpClient.get<{ data: Nomenclature }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\r\n    const formData = new FormData();\r\n\r\n    if (nomenclature.technologies && nomenclature.technologies.length > 0) {\r\n      nomenclature.technologies.forEach(technology => {\r\n        formData.append('technologies', technology.id + '');\r\n      });\r\n    }\r\n\r\n    for (const key in nomenclature) {\r\n      if (nomenclature[key] !== null && key !== 'technologies') {\r\n        formData.append(key, nomenclature[key]);\r\n      }\r\n    }\r\n\r\n    if (nomenclature.category === null) {\r\n      formData.append('category', '');\r\n    }\r\n\r\n    return this.httpClient.post<{ data: Nomenclature }>(this.API_URL + this.url, formData).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updatePartly(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\r\n    return this.httpClient.patch<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, nomenclature).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  update(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\r\n    const formData = new FormData();\r\n\r\n    if (nomenclature.technologies && nomenclature.technologies.length > 0) {\r\n      nomenclature.technologies.forEach(technology => {\r\n        formData.append('technologies', technology.id + '');\r\n      });\r\n    }\r\n\r\n    for (const key in nomenclature) {\r\n      if (nomenclature[key] !== null && key !== 'technologies') {\r\n        formData.append(key, nomenclature[key]);\r\n      }\r\n    }\r\n\r\n    if (nomenclature.category === null) {\r\n      formData.append('category', '');\r\n    }\r\n\r\n    return this.httpClient.put<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, formData).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  searchWhereUsed(id: number): Observable<Nomenclature[]> {\r\n    return this.httpClient.get<{ data: Nomenclature[] }>(this.API_URL + this.url + id + '/used_in_list/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  // updateRoot(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\r\n  //   const formData = new FormData();\r\n  //\r\n  //   if (nomenclature.technologies && nomenclature.technologies.length > 0) {\r\n  //     nomenclature.technologies.forEach(technology => {\r\n  //       formData.append('technologies', technology.id + '');\r\n  //     });\r\n  //   }\r\n  //\r\n  //   for (const key in nomenclature) {\r\n  //     if (nomenclature[key] !== null && key !== 'technologies') {\r\n  //       formData.append(key, nomenclature[key]);\r\n  //     }\r\n  //   }\r\n  //\r\n  //   if (nomenclature.category === null) {\r\n  //     formData.append('category', '');\r\n  //   }\r\n  //\r\n  //   return this.httpClient.put<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, formData).pipe(\r\n  //     map(response => response.data)\r\n  //   );\r\n  // }\r\n\r\n  // Nomenclatures for confirmation\r\n  getNewNomenclatures(): Observable<NewNomenclature[]> {\r\n    return this.httpClient.get<{ data: NewNomenclature[] }>(this.API_URL + 'products_new_nomenclatures/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updateSeveralPartly(nomenclatures: Partial<Nomenclature>[]): Observable<Nomenclature[]> {\r\n    return forkJoin(...nomenclatures.map(nomenclature =>\r\n      this.httpClient.patch<{ data: Nomenclature }>(this.API_URL + this.url + nomenclature.id + '/', nomenclature).pipe(\r\n        map(response => response.data)\r\n      ))\r\n    );\r\n  }\r\n\r\n  uploadImage(send: any): Observable<NomenclatureImage> {\r\n    const formData = new FormData();\r\n\r\n    for (const key in send) {\r\n      if (send[key] !== null) {\r\n        formData.append(key, send[key]);\r\n      }\r\n    }\r\n\r\n    return this.httpClient.post<{ data: NomenclatureImage }>(this.API_URL + 'nomenclature_images/', formData).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  loadImages(id: number): Observable<NomenclatureImage[]> {\r\n    return this.httpClient.get<{ data: NomenclatureImage[] }>(this.API_URL + `nomenclature_images/?nomenclature=${id}`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  uploadImagesSeveral(send: any[]): Observable<NomenclatureImage[]> {\r\n    const data = [];\r\n\r\n    send.forEach(s => {\r\n      const formData = new FormData();\r\n\r\n      for (const key in s) {\r\n        if (s[key] !== null) {\r\n          formData.append(key, s[key]);\r\n        }\r\n      }\r\n\r\n      data.push(formData);\r\n    });\r\n\r\n    return forkJoin(...data.map(d => this.httpClient.post<{ data: NomenclatureImage }>(this.API_URL + 'nomenclature_images/', d).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  removeImage(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + `nomenclature_images/${id}/`);\r\n  }\r\n\r\n  bulkCreateUpdateTechnicalEquipments(nomenclatureId: number, data): Observable<any> {\r\n    return this.httpClient.post<{ data: TechnicalEquipment }>(this.API_URL  + this.url + nomenclatureId + '/bulk_update_technical_equipments/', data).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {\r\n  NewNomenclature,\r\n  Nomenclature,\r\n  NomenclatureFile,\r\n  NomenclatureImage,\r\n  Nomenclatures\r\n} from '@shared/models/nomenclature';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NomenclaturesFileService {\r\n\r\n  API_URL = environment.base_url + environment.product_structure_url;\r\n  readonly url = 'nomenclature_files/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<NomenclatureFile[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: NomenclatureFile[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<NomenclatureFile> {\r\n    return this.httpClient.get<{ data: NomenclatureFile }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(send: { nomenclature: number, file: File }): Observable<NomenclatureFile> {\r\n    const formData = new FormData();\r\n\r\n    for (const key in send) {\r\n      if (send[key] !== null) {\r\n        formData.append(key, send[key]);\r\n      }\r\n    }\r\n\r\n    return this.httpClient.post<{ data: NomenclatureFile }>(this.API_URL + this.url, formData).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Observable} from 'rxjs';\r\nimport {Region} from '@shared/models/region';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {Country} from '@shared/models/country';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegionService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'regions/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<Region[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Region[] }>(this.API_URL + this.url + queryParams).pipe(\r\n        map(response => response.data)\r\n      );\r\n  }\r\n\r\n  create(entity: Partial<Region>) {\r\n    return this.httpClient.post<{ data: Country }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: Partial<Region>) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: Partial<Region>) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {Invoice, InvoiceFile} from '../../procurement/models/invoice';\r\nimport {map} from 'rxjs/operators';\r\nimport {InvoiceFilesComponent} from '../../procurement/modals/invoice-files/invoice-files.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  ServiceInvoiceFilesComponent\r\n} from '../../procurement/modals/service-invoice-files/service-invoice-files.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceInvoiceService {\r\n\r\n  API_URL = environment.base_url + environment.procurement_url;\r\n  readonly url = 'service_invoices/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n\r\n  }\r\n\r\n  get(query?: { name: string, value: any }[]): Observable<Invoice[]> {\r\n    let q_string = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          q_string += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          q_string += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: Invoice[] }>(this.API_URL + this.url + 'all/' + q_string).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  create(invoice: Partial<any>): Observable<Invoice> {\r\n    return this.httpClient.post<{ data: Invoice }>(this.API_URL + this.url, invoice).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getFiles(invoiceId: number): Observable<InvoiceFile[]> {\r\n    return this.httpClient.get<{ data: InvoiceFile[] }>(this.API_URL + 'service_invoice_files/' + invoiceId + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  severalUploadFiles(invoiceId: number, files: File[]): Observable<InvoiceFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData()\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData)\r\n    })\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{data: InvoiceFile}>(this.API_URL + `service_invoice_files/${invoiceId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  downloadFile(id: number): Observable<any> {\r\n    return this.httpClient.get(this.API_URL + 'service_invoice_file_download/' + id + '/', {responseType: 'blob'});\r\n  }\r\n\r\n  removeFile(fileId: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'service_invoice_file_delete/' + fileId + '/', null);\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\r\n  }\r\n\r\n  openInvoiceFilesModal(invoice: Invoice): Observable<any> {\r\n    return this.dialog\r\n      .open<ServiceInvoiceFilesComponent>(ServiceInvoiceFilesComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: invoice,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Country} from '@shared/models/country';\r\nimport {SubRegion} from '@shared/models/sub-region';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubRegionService {\r\n  API_URL = environment.base_url + environment.business_partners_url;\r\n  readonly url = 'sub_regions/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<SubRegion[]> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: SubRegion[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity: Partial<SubRegion>) {\r\n    return this.httpClient.post<{ data: Country }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: Partial<SubRegion>) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: Partial<SubRegion>) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Task} from '@shared/models/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'tasks/';\n\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n  get(query?: QuerySearch[]): Observable<Task[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Task[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {TreeNode} from 'primeng/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  constructor() { }\n\n  createTree(items: any[], expanseMap?: any): TreeNode[] {\n    const prepareNodes: Partial<TreeNode>[] = [];\n\n    items.forEach(element => {\n      const ins = {data: element, expanded: false, children: []};\n\n      if (expanseMap) {\n        ins.expanded = expanseMap[element.id];\n      }\n      prepareNodes.push(ins);\n    });\n\n    const root: TreeNode[] = [];\n\n    const idMapping = prepareNodes.reduce((acc, el, i) => {\n      acc[el.data.id] = i;\n      return acc;\n    }, {});\n\n    prepareNodes.forEach(el => {\n      if (el.data.parent === null) {\n        root.push(el);\n        return;\n      }\n\n      const parentEl = prepareNodes[idMapping[el.data.parent]];\n      parentEl.children = [...(parentEl.children || []), el];\n\n      if (parentEl.children.length === 0) {\n        // delete parentEl.children;\n      }\n    });\n\n    return root;\n  }\n\n  mapExpansion(nodes: TreeNode[], expanseMap: any): void {\n    const createExpanseMap = (node: TreeNode) => {\n      if (node.expanded) {\n        expanseMap[node.data.id] = node.expanded;\n      } else {\n        expanseMap[node.data.id] = false;\n      }\n\n      if (node.children) {\n        node.children.forEach(element => {\n          createExpanseMap(element);\n        });\n      }\n    }\n\n    nodes.forEach(element => {\n      createExpanseMap(element);\n    });\n  }\n\n  findSelectedNode(selectedNode: TreeNode, tree: TreeNode[]): TreeNode {\n    let newSelectedNode: TreeNode;\n\n    if (selectedNode.parent) {\n      let parent = selectedNode.parent;\n      let parentIds = [];\n\n      while (parent) {\n        parentIds.push(parent.data.id);\n        parent = parent.parent;\n      }\n\n      parentIds = parentIds.reverse();\n      let node = tree.find(cat => cat.data.id === parentIds[0]);\n\n      let i = 1;\n      while (node.data.id !== parentIds[parentIds.length - 1]) {\n        node = node.children.find(t => t.data.id === parentIds[i]);\n        i++;\n      }\n\n      newSelectedNode = node.children.find(item => item.data.id === selectedNode.data.id);\n    } else {\n      newSelectedNode = tree.find(category => category.data.id === selectedNode.data.id);\n    }\n\n    return newSelectedNode;\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModuleIconComponent } from './icons/module-icon/module-icon.component';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {TreeTableModule} from 'primeng/treetable';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MenubarModule} from 'primeng/menubar';\r\nimport { ConfirmComponent } from './modals/confirm/confirm.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {TableModule} from 'primeng/table';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {TabViewModule} from 'primeng/tabview';\r\nimport {MoneyFormatPipe} from '@shared/pipes/money-format.pipe';\r\nimport {TieredMenuModule} from 'primeng/tieredmenu';\r\nimport { InIconComponent } from './icons/in-icon/in-icon.component';\r\nimport { NomenclaturePickerComponent } from './components/nomenclature-picker/nomenclature-picker.component';\r\nimport { ProductCategoryPickerComponent } from './pickers/product-category-picker/product-category-picker.component';\r\nimport {TreeSelectModule} from 'primeng/treeselect';\r\nimport {PaginatorModule} from 'primeng/paginator';\r\nimport { PasteImageComponent } from './modals/paste-image/paste-image.component';\r\nimport {ImagesSliderComponent} from '@shared/components/images-slider/images-slider.component';\r\nimport { ImageGalleryComponent } from './modals/image-gallery/image-gallery.component';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport {\r\n  MultiTechnologyPickerComponent\r\n} from '@shared/pickers/multi-technology-picker/multi-technology-picker.component';\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\nimport { WarehousePickerComponent } from './pickers/warehouse-picker/warehouse-picker.component';\r\nimport { LocatorPickerComponent } from './pickers/locator-picker/locator-picker.component';\r\nimport { NomenclatureTypePickerComponent } from './pickers/nomenclature-type-picker/nomenclature-type-picker.component';\r\nimport {\r\n  ProductStructureCategoryPickerComponent\r\n} from '@shared/pickers/product-structure-category-picker/product-structure-category-picker.component';\r\nimport { UnitMeasurePickerComponent } from './pickers/unit-measure-picker/unit-measure-picker.component';\r\nimport { AcceptedTypePickerComponent } from './pickers/accepted-type-picker/accepted-type-picker.component';\r\nimport {MultiWarehousePickerComponent} from '@shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component';\r\nimport { MultiLocatorPickerComponent } from './pickers/multi-locator-picker/multi-locator-picker.component';\r\nimport { GroupLocatorPickerComponent } from './pickers/group-locator-picker/group-locator-picker.component';\r\nimport { TechnologyPickerComponent } from './pickers/technology-picker/technology-picker.component';\r\nimport { NomenclaturePickerModalComponent } from './modals/nomenclature-picker-modal/nomenclature-picker-modal.component';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport { EmployeePickerComponent } from './pickers/employee-picker/employee-picker.component';\r\nimport {CompleteListComponent} from '@shared/modals/refactoring/complete-list/complete-list.component';\r\nimport {ListProductsComponent} from '@shared/modals/refactoring/list-products/list-products.component';\r\nimport {AccountingTypePickerComponent} from '@shared/pickers/accounting-type-picker/accounting-type-picker.component';\r\nimport { MultiCategoriesPickerComponent } from './pickers/multi-categories-picker/multi-categories-picker.component';\r\nimport { MultiProductStructureCategoriesPickerComponent } from './pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component';\r\nimport { MultiCompanyPickerComponent } from './pickers/multi-company-picker/multi-company-picker.component';\r\nimport { MultiSalesStatusPickerComponent } from './pickers/multi-sales-status-picker/multi-sales-status-picker.component';\r\nimport { MultiCompanyCategoryPickerComponent } from './pickers/multi-company-category-picker/multi-company-category-picker.component';\r\nimport { CompanyPickerComponent } from './pickers/company-picker/company-picker.component';\r\nimport { CompanyCategoryPickerComponent } from './pickers/company-category-picker/company-category-picker.component';\r\nimport { RegionPickerComponent } from './pickers/region-picker/region-picker.component';\r\nimport { CompanyCategoryModulePickerComponent } from './pickers/company-category-module-picker/company-category-module-picker.component';\r\nimport { UserProfilePickerComponent } from './pickers/user-profile-picker/user-profile-picker.component';\r\nimport { SortIconComponent } from './icons/sort-icon/sort-icon.component';\r\nimport { DateTimePickerComponent } from './pickers/date-time-picker/date-time-picker.component';\r\nimport {NgxMaskModule} from 'ngx-mask';\r\nimport { CategoriesTreePickerComponent } from './components/categories-tree-picker/categories-tree-picker.component';\r\nimport { CompanyCategorizedMultiPickerComponent } from './pickers/company-categorized-multi-picker/company-categorized-multi-picker.component';\r\nimport {CrmSingleEmployeePickerComponent} from '@shared/pickers/crm-employee-picker/crm-single-employee-picker.component';\r\nimport { MultiContactsPickerComponent } from './pickers/multi-contacts-picker/multi-contacts-picker.component';\r\nimport { UploadFilePickerComponent } from './components/upload-file-picker/upload-file-picker.component';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport {CurrencyPickerComponent} from '@shared/pickers/currency-picker/currency-picker.component';\r\nimport { AreaPickerComponent } from './pickers/area-picker/area-picker.component';\r\nimport { AreaLocatorPickerComponent } from './pickers/area-locator-picker/area-locator-picker.component';\r\nimport { WarehouseSearchComponent } from './modals/warehouse-search/warehouse-search.component';\r\nimport { PasteScreenImageDirective } from './directives/paste-screen-image.directive';\r\nimport { OrderPageComponent } from './components/order-page/order-page.component';\r\nimport { AddFileToOrderComponent } from './modals/add-file-to-order/add-file-to-order.component';\r\nimport { EditOrderComponent } from './modals/edit-order/edit-order.component';\r\nimport {ProcurementModule} from '../procurement/procurement.module';\r\nimport {MultiStatusesPickerComponent} from '@shared/pickers/multi-statuses-picker/multi-statuses-picker.component';\r\nimport { StatusesPickerComponent } from './pickers/statuses-picker/statuses-picker.component';\r\nimport { OrderStatusesComponent } from './components/order-statuses/order-statuses.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { CreateEditStatusComponent } from './modals/create-edit-status/create-edit-status.component';\r\nimport { CreateChainComponent } from './modals/create-chain/create-chain.component';\r\nimport { AddProductsToChainComponent } from './modals/add-products-to-chain/add-products-to-chain.component';\r\nimport { MultiProductCategoriesPickerComponent } from './pickers/multi-product-categories-picker/multi-product-categories-picker.component';\r\nimport { MultiPurchaseCategoryPickerComponent } from './pickers/multi-purchase-category-picker/multi-purchase-category-picker.component';\r\nimport { CrmCompanyPickerComponent } from './pickers/crm-company-picker/crm-company-picker.component';\r\nimport { CrmTreeCompanyPickerComponent } from './pickers/crm-tree-company-picker/crm-tree-company-picker.component';\r\nimport { SubRegionPickerComponent } from './pickers/sub-region-picker/sub-region-picker.component';\r\nimport { OrderStatusesTableComponent } from './components/order-statuses-table/order-statuses-table.component';\r\nimport { OrderStatusesChartComponent } from './components/order-statuses-chart/order-statuses-chart.component';\r\nimport { SearchPipe } from './pipes/search.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ModuleIconComponent,\r\n    ConfirmComponent,\r\n    ProductStructureCategoryPickerComponent,\r\n    MoneyFormatPipe,\r\n    InIconComponent,\r\n    NomenclaturePickerComponent,\r\n    ProductCategoryPickerComponent,\r\n    ImagesSliderComponent,\r\n    PasteImageComponent,\r\n    ImageGalleryComponent,\r\n    MultiTechnologyPickerComponent,\r\n    UploadFileComponent,\r\n    WarehousePickerComponent,\r\n    LocatorPickerComponent,\r\n    NomenclatureTypePickerComponent,\r\n    UnitMeasurePickerComponent,\r\n    AcceptedTypePickerComponent,\r\n    MultiWarehousePickerComponent,\r\n    MultiLocatorPickerComponent,\r\n    GroupLocatorPickerComponent,\r\n    TechnologyPickerComponent,\r\n    NomenclaturePickerModalComponent,\r\n    EmployeePickerComponent,\r\n    CompleteListComponent,\r\n    ListProductsComponent,\r\n    AccountingTypePickerComponent,\r\n    MultiCategoriesPickerComponent,\r\n    MultiProductStructureCategoriesPickerComponent,\r\n    MultiCompanyPickerComponent,\r\n    MultiSalesStatusPickerComponent,\r\n    MultiCompanyCategoryPickerComponent,\r\n    CompanyPickerComponent,\r\n    CompanyCategoryPickerComponent,\r\n    RegionPickerComponent,\r\n    CompanyCategoryModulePickerComponent,\r\n    UserProfilePickerComponent,\r\n    SortIconComponent,\r\n    DateTimePickerComponent,\r\n    CategoriesTreePickerComponent,\r\n    CompanyCategorizedMultiPickerComponent,\r\n    CrmSingleEmployeePickerComponent,\r\n    MultiContactsPickerComponent,\r\n    UploadFilePickerComponent,\r\n    CurrencyPickerComponent,\r\n    AreaPickerComponent,\r\n    AreaLocatorPickerComponent,\r\n    WarehouseSearchComponent,\r\n    PasteScreenImageDirective,\r\n    OrderPageComponent,\r\n    AddFileToOrderComponent,\r\n    EditOrderComponent,\r\n    MultiStatusesPickerComponent,\r\n    StatusesPickerComponent,\r\n    OrderStatusesComponent,\r\n    CreateEditStatusComponent,\r\n    CreateChainComponent,\r\n    AddProductsToChainComponent,\r\n    MultiProductCategoriesPickerComponent,\r\n    MultiPurchaseCategoryPickerComponent,\r\n    CrmCompanyPickerComponent,\r\n    CrmTreeCompanyPickerComponent,\r\n    SubRegionPickerComponent,\r\n    OrderStatusesTableComponent,\r\n    OrderStatusesChartComponent,\r\n    SearchPipe,\r\n  ],\r\n  exports: [\r\n    MultiStatusesPickerComponent,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    TreeTableModule,\r\n    ReactiveFormsModule,\r\n    MenubarModule,\r\n    MatDialogModule,\r\n    InputTextareaModule,\r\n    DropdownModule,\r\n    FormsModule,\r\n    CheckboxModule,\r\n    ProductStructureCategoryPickerComponent,\r\n    TableModule,\r\n    RadioButtonModule,\r\n    ModuleIconComponent,\r\n    TabViewModule,\r\n    MoneyFormatPipe,\r\n    TieredMenuModule,\r\n    InIconComponent,\r\n    NomenclaturePickerComponent,\r\n    PaginatorModule,\r\n    ProductCategoryPickerComponent,\r\n    ImagesSliderComponent,\r\n    MultiTechnologyPickerComponent,\r\n    UploadFileComponent,\r\n    WarehousePickerComponent,\r\n    LocatorPickerComponent,\r\n    NomenclatureTypePickerComponent,\r\n    UnitMeasurePickerComponent,\r\n    AcceptedTypePickerComponent,\r\n    MultiWarehousePickerComponent,\r\n    MultiLocatorPickerComponent,\r\n    GroupLocatorPickerComponent,\r\n    TechnologyPickerComponent,\r\n    CalendarModule,\r\n    EmployeePickerComponent,\r\n    AccountingTypePickerComponent,\r\n    MultiCategoriesPickerComponent,\r\n    MultiProductStructureCategoriesPickerComponent,\r\n    MultiCompanyPickerComponent,\r\n    MultiSalesStatusPickerComponent,\r\n    MultiCompanyCategoryPickerComponent,\r\n    CompanyPickerComponent,\r\n    CompanyCategoryPickerComponent,\r\n    RegionPickerComponent,\r\n    CompanyCategoryModulePickerComponent,\r\n    UserProfilePickerComponent,\r\n    SortIconComponent,\r\n    NomenclaturePickerModalComponent,\r\n    DateTimePickerComponent,\r\n    CategoriesTreePickerComponent,\r\n    CompanyCategorizedMultiPickerComponent,\r\n    CrmSingleEmployeePickerComponent,\r\n    MultiContactsPickerComponent,\r\n    UploadFilePickerComponent,\r\n    CurrencyPickerComponent,\r\n    AreaPickerComponent,\r\n    AreaLocatorPickerComponent,\r\n    PasteScreenImageDirective,\r\n    MultiSelectModule,\r\n    OrderPageComponent,\r\n    OrderStatusesComponent,\r\n    MultiProductCategoriesPickerComponent,\r\n    MultiPurchaseCategoryPickerComponent,\r\n    CrmCompanyPickerComponent,\r\n    CrmTreeCompanyPickerComponent,\r\n    SubRegionPickerComponent,\r\n    OrderStatusesTableComponent,\r\n    SearchPipe,\r\n  ],\r\n  imports: [\r\n    MultiSelectModule,\r\n    CommonModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    TreeTableModule,\r\n    ReactiveFormsModule,\r\n    MenubarModule,\r\n    MatDialogModule,\r\n    InputTextareaModule,\r\n    DropdownModule,\r\n    FormsModule,\r\n    CheckboxModule,\r\n    TableModule,\r\n    RadioButtonModule,\r\n    TabViewModule,\r\n    TieredMenuModule,\r\n    TreeSelectModule,\r\n    PaginatorModule,\r\n    MultiSelectModule,\r\n    CalendarModule,\r\n    NgxMaskModule.forRoot(),\r\n    FileUploadModule,\r\n    DragDropModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {PhysicalInventoryService} from '../../../services/physical-inventory.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {debounceTime, map, switchMap, tap} from 'rxjs/operators';\r\nimport {finalize, fromEvent, Subject, takeUntil} from 'rxjs';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Product} from '../../../../product-structure/models/product';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {InventoryProduct, PhysicalInventory} from '../../../models/physical-inventory';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {QrCodeService} from '../../../../qr-code/qr-code.service';\r\nimport {SortEvent} from 'primeng/api';\r\nimport {Category} from '../../../../product-structure/models/category';\r\n\r\nexport class PreparedPhysicalInventory {\r\n  nomenclature: Nomenclature;\r\n  isSerializerProduct: boolean;\r\n  product: InventoryProduct[];\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-physical-inventory-products',\r\n  templateUrl: './physical-inventory-products.component.html',\r\n  styleUrls: ['./physical-inventory-products.component.scss']\r\n})\r\nexport class PhysicalInventoryProductsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('searchBoxName') searchBoxName;\r\n  @ViewChild('searchBoxCode') searchBoxCode;\r\n  @ViewChild('searchBoxDescription') searchBoxDescription;\r\n\r\n  isCompleting = false;\r\n  isCancelation = false;\r\n  isGenerating = false;\r\n\r\n  stopScanned$: Subject<any> = new Subject();\r\n  scanningEnd = false;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    name: [null],\r\n    code: [null],\r\n    description: [null],\r\n    warehouse: [null],\r\n    category: [null],\r\n    locator: [null],\r\n    type: [null],\r\n    found_row_id: [null],\r\n    accepted_by_invoices: [null],\r\n    order_by_code: [null],\r\n    order_by_name: [null],\r\n    order_by_initial_quantity: [null],\r\n    order_by_new_quantity: [null],\r\n    order_by_category: [null],\r\n    order_by_warehouse: [null],\r\n    order_by_locator: [null],\r\n    page: [1],\r\n  });\r\n\r\n  isShowAll = false;\r\n  warehousesIds: number[] = [];\r\n\r\n  selectedInventoryProducts: Product[] = [];\r\n  inventoryProducts: Product[] = [];\r\n\r\n  isLoadingCurrentInventory = true;\r\n  isLoadingInventoryList = true;\r\n\r\n  queryKey = 'name:null/code:null/description:null/type:null/accepted_by_invoices:null/warehouse:null/locator:null/category:null';\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'paginated', value: true},\r\n    {name: 'page', value: this.searchForm.get('page').value},\r\n  ];\r\n\r\n  isStartOnePage = false;\r\n  countProducts = 0;\r\n  inventoryId: number;\r\n  currentInventory: PhysicalInventory = null;\r\n\r\n  ignoringPagination = false;\r\n\r\n  // foundInventoryProductId\r\n  findItemId: number;\r\n\r\n  newQuantity$ = new Subject<InventoryProduct>();\r\n\r\n  private destroy$ = new Subject();\r\n  isScanned: boolean = false;\r\n  preparedProducts: Product[] = [];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly fb: FormBuilder,\r\n    private readonly modalService: ModalService,\r\n    private readonly physicalInventoryService: PhysicalInventoryService,\r\n    private readonly qrCodeService: QrCodeService,\r\n    private readonly router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedInventoryProducts = []),\r\n        map(() => this.searchBoxName.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n\r\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedInventoryProducts = []),\r\n        map(() => this.searchBoxCode.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n\r\n    fromEvent(this.searchBoxDescription.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedInventoryProducts = []),\r\n        map(() => this.searchBoxDescription.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.inventoryId = +id),\r\n      switchMap(() => this.physicalInventoryService.getById(this.inventoryId)),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(inventory => {\r\n      this.currentInventory = inventory;\r\n      this.warehousesIds = this.currentInventory.warehouses.map(w => w.id);\r\n      this.isLoadingCurrentInventory = false;\r\n    });\r\n\r\n    this.onChangeQuantity();\r\n    this.getInventoryProductsForPagination();\r\n  }\r\n\r\n  onChangeQuantity() {\r\n    this.newQuantity$.pipe(\r\n      tap(inventoryProduct => this.prepareForSave(inventoryProduct)),\r\n      debounceTime(350),\r\n      switchMap(inventoryProduct => this.physicalInventoryService.updateQuantityInventoryProduct(inventoryProduct)),\r\n    ).subscribe();\r\n  }\r\n\r\n  prepareForSave(inventoryProduct: InventoryProduct) {\r\n    if (inventoryProduct.new_quantity === null || inventoryProduct.new_quantity < 0) {\r\n      inventoryProduct.new_quantity = 0;\r\n    }\r\n  }\r\n\r\n  searchProducts() {\r\n    this.isLoadingInventoryList = true;\r\n    this.destroy$.next(true);\r\n    this.selectedInventoryProducts = [];\r\n\r\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/description:${this.searchForm.get('description').value}/type:${this.searchForm.get('type').value}/accepted_by_invoices:${this.searchForm.get('accepted_by_invoices').value}/warehouse:${this.searchForm.get('warehouse').value}/locator:${this.searchForm.get('locator').value}/category:${this.searchForm.get('category').value}`;\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.isStartOnePage = true;\r\n    }\r\n\r\n    this.query = [];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query = [\r\n        {name: 'paginated', value: 'true'},\r\n        {name: 'page', value: this.searchForm.get('page').value},\r\n      ];\r\n    }\r\n\r\n    if (this.searchForm.get('code').value) {\r\n      this.query.push({name: 'code', value: this.searchForm.get('code').value});\r\n    }\r\n\r\n    if (this.searchForm.get('name').value) this.query.push({name: 'name', value: this.searchForm.get('name').value});\r\n\r\n    if (this.searchForm.get('description').value) this.query.push({\r\n      name: 'description',\r\n      value: this.searchForm.get('description').value\r\n    });\r\n\r\n    if (this.searchForm.get('warehouse').value) this.query.push({\r\n      name: 'warehouse',\r\n      value: this.searchForm.get('warehouse').value\r\n    });\r\n\r\n    if (this.searchForm.get('locator').value) this.query.push({\r\n      name: 'locator',\r\n      value: this.searchForm.get('locator').value\r\n    });\r\n\r\n    if (this.searchForm.get('type').value !== null) this.query.push({\r\n      name: 'type',\r\n      value: this.searchForm.get('type').value\r\n    });\r\n\r\n    if (this.searchForm.get('accepted_by_invoices').value !== null) this.query.push({\r\n      name: 'accepted_by_invoices',\r\n      value: this.searchForm.get('accepted_by_invoices').value\r\n    });\r\n\r\n    if (this.searchForm.get('found_row_id').value) {\r\n      this.query.push({\r\n        name: 'found_row_id',\r\n        value: this.searchForm.get('found_row_id').value\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('category').value) this.query.push({\r\n      name: 'category',\r\n      value: this.searchForm.get('category').value\r\n    });\r\n\r\n    const ordering = this.prepareSortingField();\r\n    if (ordering) {\r\n      this.query.push({\r\n        name: 'ordering',\r\n        value: ordering\r\n      });\r\n    }\r\n\r\n    if (!this.isShowAll) {\r\n      this.getInventoryProductsForPagination();\r\n    } else {\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.getInventoryProducts();\r\n    }\r\n  }\r\n\r\n  getInventoryProductsForPagination() {\r\n    const newInventoryProducts = [];\r\n\r\n    this.physicalInventoryService.getInventoryProductsListsForPagination(this.inventoryId, this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(inventoryLists => {\r\n      console.log('inventoryLists', inventoryLists);\r\n      const preparedProducts = [];\r\n      inventoryLists.results.forEach(product => {\r\n        preparedProducts.push(...product.products)\r\n      });\r\n      this.preparedProducts = [...preparedProducts];\r\n      inventoryLists.results.forEach(list => {\r\n        list.products[0].countProducts = list.products.length;\r\n        list.products[0].products = [...list.products];\r\n        list.products[0].is_scanned_root = list.is_scanned;\r\n        list.products[0].root_id = list.id;\r\n        newInventoryProducts.push(list.products[0]);\r\n      });\r\n\r\n      if (this.searchForm.get('found_row_id').value) {\r\n        this.ignoringPagination = true;\r\n        this.searchForm.get('found_row_id').patchValue(null);\r\n        let page: number;\r\n\r\n        if (!inventoryLists.previous) {\r\n          page = 1;\r\n        } else if (!inventoryLists.next) {\r\n          page = Math.ceil(inventoryLists.count / 10);\r\n        } else {\r\n          page = parseInt(\r\n            inventoryLists.next\r\n              .split('?')\r\n              .find(s => s.includes('page'))\r\n              .split('&')\r\n              .find(s => s.includes('page'))\r\n              .replace(/[^0-9]/g, ''),\r\n            10) - 1;\r\n        }\r\n\r\n        this.searchForm.get('page').patchValue(page);\r\n        this.paginator.changePage(page - 1);\r\n        newInventoryProducts.sort((a, b) => a.root_id === this.findItemId ? -1 : 1);\r\n      }\r\n\r\n      this.findItemId = null;\r\n\r\n\r\n\r\n\r\n      this.inventoryProducts = [...newInventoryProducts];\r\n      this.countProducts = inventoryLists.count;\r\n\r\n      console.log('this.inventoryProducts', this.inventoryProducts);\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoadingInventoryList = false;\r\n    });\r\n  }\r\n\r\n  getInventoryProducts() {\r\n    const newInventoryProducts = [];\r\n\r\n    this.physicalInventoryService.getInventoryProducts(this.inventoryId, this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(inventoryLists => {\r\n      inventoryLists.forEach(list => {\r\n        list.products[0].countProducts = list.products.length;\r\n        list.products[0].products = [...list.products];\r\n        list.products[0].is_scanned_root = list.is_scanned;\r\n        list.products[0].root_id = list.id;\r\n        newInventoryProducts.push(list.products[0]);\r\n      });\r\n\r\n      this.inventoryProducts = [...newInventoryProducts];\r\n      this.countProducts = inventoryLists.length;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoadingInventoryList = false;\r\n    });\r\n  }\r\n\r\n  onSelectWarehouse(id: number) {\r\n    this.searchForm.get('warehouse').patchValue(id);\r\n    this.searchForm.get('locator').patchValue(null);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectLocator(id: number) {\r\n    this.searchForm.get('locator').patchValue(id);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectNomenclatureType(type: ENomenclatureType) {\r\n    this.searchForm.get('type').patchValue(type);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectAcceptedByInvoices(value: boolean) {\r\n    this.searchForm.get('accepted_by_invoices').patchValue(value);\r\n    this.searchProducts();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (this.ignoringPagination) {\r\n      this.ignoringPagination = false;\r\n      return;\r\n    }\r\n\r\n    if (!this.isStartOnePage) {\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchProducts();\r\n    }\r\n  }\r\n\r\n  onComplete() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.physicalInventoryService.getChangedPhysicalInventoryProductsHaveBeenChanged(+this.inventoryId).subscribe((res: { data: InventoryProduct[] }) => {\r\n          if (res.data.length > 0) {\r\n            this.physicalInventoryService.changesInInventory(res.data).subscribe(res => {\r\n              if (res) {\r\n                this.completePhysicalInventory();\r\n              }\r\n            });\r\n          } else {\r\n            this.completePhysicalInventory();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  completePhysicalInventory() {\r\n    this.isCompleting = true;\r\n    this.physicalInventoryService.completePhysicalInventory(+this.inventoryId).pipe(\r\n      finalize(() => this.isCompleting = false)\r\n    ).subscribe(() => {\r\n      this.router.navigateByUrl('/warehouse/physical-inventory').then();\r\n    });\r\n  }\r\n\r\n  onRemovePhysicalInventory() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isCancelation = true;\r\n        this.physicalInventoryService.removePhysicalInventory(+this.inventoryId).pipe(\r\n          finalize(() => this.isCancelation = false)\r\n        ).subscribe(() => {\r\n          this.router.navigateByUrl('/warehouse/physical-inventory').then();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowAll() {\r\n    this.isShowAll = true;\r\n    this.searchProducts();\r\n  }\r\n\r\n  onShowPartial() {\r\n    this.isShowAll = false;\r\n    this.searchProducts();\r\n  }\r\n\r\n  onMoveProduct() {\r\n    this.physicalInventoryService.openPhysicalInventoryProductMoveModal(this.selectedInventoryProducts[0]).subscribe(res => {\r\n      if (res) {\r\n        this.searchProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  onOpenAddProductModal() {\r\n    this.physicalInventoryService.openAddProductToPhysicalInventory(this.inventoryId).subscribe(res => {\r\n      if (res) {\r\n        this.searchProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedInventoryProducts.forEach(p => {\r\n      if (p.product) {\r\n        send.by_nomenclatures_list.push({\r\n          nomenclature_id: p.product.nomenclature.id,\r\n          serial_number_ids:\r\n            p.product.nomenclature.bulk_or_serial === '1' ?\r\n              p.products.filter(product => product.serial_number).map(product => +product.serial_number.id) : [],\r\n          order_product_ids: [p.id],\r\n          invoice_product_ids: [],\r\n        });\r\n      } else {\r\n        send.by_nomenclatures_list.push({\r\n          nomenclature_id: p.nomenclature.id,\r\n          serial_number_ids: [],\r\n          order_product_ids: [],\r\n          invoice_product_ids: [],\r\n        });\r\n      }\r\n    });\r\n\r\n    this.qrCodeService.generateQrCodes(send).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.isScanned = true;\r\n    this.findItemId = null;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.physicalInventoryService.scanPhysicalInventoryQrCode(this.inventoryId, data).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      if (!this.scanningEnd) {\r\n        if (response) {\r\n          this.scanningComplete(response);\r\n        } else {\r\n          this.scanningEnd = true;\r\n          this.isScanned = false;\r\n\r\n          setTimeout(() => {\r\n            alert('Not Found');\r\n          }, 1000);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  scanningComplete(data: { item_id_changed: number, list_id_changed: number }) {\r\n    const listId = data.item_id_changed;\r\n    const itemId = data.list_id_changed;\r\n\r\n    if (listId) {\r\n      this.findItemId = listId;\r\n      const findEl = this.inventoryProducts.find(p => p.root_id === this.findItemId);\r\n\r\n      if (findEl) {\r\n        if (findEl.product.nomenclature.bulk_or_serial === '1') {\r\n        } else {\r\n          findEl.is_scanned = true;\r\n          findEl.is_scanned_root = true;\r\n          this.inventoryProducts.sort((a, b) => a.root_id === this.findItemId ? -1 : 1);\r\n        }\r\n      } else {\r\n        this.searchForm.get('found_row_id').patchValue(listId);\r\n        this.searchProducts();\r\n      }\r\n    }\r\n\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n  }\r\n\r\n  getWarehouseLocators(warehouseId: number) {\r\n    // @ts-ignore\r\n    return this.currentInventory.locators.filter(loc => loc.warehouse === warehouseId).map(loc => loc.name);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stopScanned$.next(true);\r\n    this.stopScanned$.complete();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  prepareSortingField(): string {\r\n    let sorting = '';\r\n    if (this.searchForm.get('order_by_code').value !== null) {\r\n      if (this.searchForm.get('order_by_code').value) {\r\n        sorting += '-physicalinventoryproduct__nomenclature__code,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__nomenclature__code,';\r\n      }\r\n    }\r\n\r\n    if (this.searchForm.get('order_by_name').value !== null) {\r\n      if (this.searchForm.get('order_by_name').value) {\r\n        sorting += '-physicalinventoryproduct__nomenclature__name,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__nomenclature__name,';\r\n      }\r\n    }\r\n\r\n    if (this.searchForm.get('order_by_initial_quantity').value !== null) {\r\n      if (this.searchForm.get('order_by_initial_quantity').value) {\r\n        sorting += '-physicalinventoryproduct__initial_quantity,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__initial_quantity,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_new_quantity').value !== null) {\r\n      if (this.searchForm.get('order_by_new_quantity').value) {\r\n        sorting += '-physicalinventoryproduct__new_quantity,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__new_quantity,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_category').value !== null) {\r\n      if (this.searchForm.get('order_by_category').value) {\r\n        sorting += '-physicalinventoryproduct__nomenclature__category__name,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__nomenclature__category__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_warehouse').value !== null) {\r\n      if (this.searchForm.get('order_by_warehouse').value) {\r\n        sorting += '-physicalinventoryproduct__locator__warehouse__name,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__locator__warehouse__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_locator').value !== null) {\r\n      if (this.searchForm.get('order_by_locator').value) {\r\n        sorting += '-physicalinventoryproduct__locator__name,';\r\n      } else {\r\n        sorting += 'physicalinventoryproduct__locator__name,';\r\n      }\r\n    }\r\n\r\n    return sorting;\r\n  }\r\n\r\n  sorting(value: boolean, field: string) {\r\n    if (value === null) {\r\n      this.searchForm.get(field).patchValue(false);\r\n    } else if (value === false) {\r\n      this.searchForm.get(field).patchValue(true);\r\n    } else if (value === true) {\r\n      this.searchForm.get(field).patchValue(null);\r\n    }\r\n    this.searchProducts();\r\n  }\r\n\r\n  customSort(event: SortEvent) {\r\n    event.data.sort((data1, data2) => {\r\n      let value1 = data1[event.field];\r\n      let value2 = data2[event.field];\r\n      let result = null;\r\n\r\n      if (value1 == null && value2 != null)\r\n        result = -1;\r\n      else if (value1 != null && value2 == null)\r\n        result = 1;\r\n      else if (value1 == null && value2 == null)\r\n        result = 0;\r\n      else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n        result = value1.localeCompare(value2);\r\n      else\r\n        result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n      return (event.order * result);\r\n    });\r\n  }\r\n\r\n  onSelectCategory(category: Category) {\r\n    if (category) {\r\n      this.searchForm.get('category').patchValue(category.id);\r\n    } else {\r\n      this.searchForm.get('category').patchValue(null);\r\n    }\r\n    this.searchProducts();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        Physical Inventory Products of Warehouses:\r\n        <ng-container *ngIf=\"isLoadingCurrentInventory\">...</ng-container>\r\n        <ng-container *ngIf=\"!isLoadingCurrentInventory\">\r\n          <ng-container *ngFor=\"let warehouse of currentInventory.warehouses; let idx = index\">\r\n            {{warehouse.name}}\r\n            locators(\r\n            <ng-container *ngFor=\"let locator of getWarehouseLocators(warehouse.id); let locatorIdx = index\">\r\n              {{locator}}<span *ngIf=\"locatorIdx !== getWarehouseLocators(warehouse.id).length - 1\">,</span>\r\n            </ng-container>\r\n            )\r\n            <span *ngIf=\"idx !== currentInventory.warehouses.length - 1\">,</span>\r\n          </ng-container>\r\n        </ng-container>\r\n        <div>Date Created {{ currentInventory?.system_creation_date | date:'dd/MM/yyyy'}}</div>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"Add Product\"\r\n        class=\"mr-2\"\r\n        (click)=\"onOpenAddProductModal()\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        class=\"mr-2 p-button-icon\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        (click)=\"onComplete()\"\r\n        [loading]=\"isCompleting\"\r\n        [disabled]=\"!currentInventory || (isLoadingCurrentInventory && currentInventory.status === '0')\">\r\n      </button>\r\n\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-times\"\r\n        label=\"Cancel Physical Inventory\"\r\n        class=\"p-button-danger p-button-icon\"\r\n        [loading]=\"isCancelation\"\r\n        (click)=\"onRemovePhysicalInventory()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"left-side\">\r\n      <div class=\"form-group\">\r\n        <pek-categories-tree-picker\r\n          [currentCategoryId]=\"searchForm.get('category').value\"\r\n          (categorySelected)=\"onSelectCategory($event)\"\r\n        >\r\n        </pek-categories-tree-picker>\r\n      </div>\r\n    </div>\r\n    <div class=\"right-side\">\r\n      <form\r\n        [formGroup]=\"searchForm\"\r\n        class=\"physical-inventory-products__form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>Code</label>\r\n              <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>Name</label>\r\n              <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"form-group\">\r\n              <label>Description</label>\r\n              <input class=\"form-control\" formControlName=\"description\" pInputText #searchBoxDescription>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Warehouses</label>\r\n                  <pek-warehouse-picker\r\n                    [acceptedWarehouseIds]=\"warehousesIds\"\r\n                    (selectWarehouse)=\"onSelectWarehouse($event)\"\r\n                  ></pek-warehouse-picker>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Locator</label>\r\n                  <pek-locator-picker\r\n                    (selectLocator)=\"onSelectLocator($event)\"\r\n                    [warehouseId]=\"searchForm.get('warehouse').value\"\r\n                    [isAllLocators]=\"false\"\r\n                    [isDisabled]=\"true\"\r\n                  ></pek-locator-picker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Type</label>\r\n                  <pek-nomenclature-type-picker\r\n                    (choiceNomenclatureType)=\"onSelectNomenclatureType($event)\"\r\n                  ></pek-nomenclature-type-picker>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Accepted Type</label>\r\n                  <pek-accepted-type-picker\r\n                    (selectAcceptedType)=onSelectAcceptedByInvoices($event)\r\n                  ></pek-accepted-type-picker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <div class=\"action-buttons\">\r\n              <button\r\n                class=\"ml-auto mr-2 p-button-icon\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-camera\"\r\n                label=\"Scan QR Codes\"\r\n                (click)=\"onStartScanning()\"\r\n              >\r\n              </button>\r\n              <button\r\n                class=\"mr-2 p-button-icon\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-qrcode\"\r\n                label=\"Generate QR Codes\"\r\n                [loading]=\"isGenerating\"\r\n                (click)=\"onGenerateQrCodes()\"\r\n                [disabled]=\"selectedInventoryProducts.length === 0\"\r\n              >\r\n              </button>\r\n              <button\r\n                class=\"\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-angle-double-right p-button-icon\"\r\n                label=\"Move product\"\r\n                [disabled]=\"selectedInventoryProducts.length === 0 || selectedInventoryProducts.length > 1\"\r\n                (click)=\"onMoveProduct()\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"table-pagination-preloader\">\r\n        <p-table\r\n          #dt\r\n          selectionMode=\"multiple\"\r\n          scrollHeight=\"calc(100vh - 30.25rem)\"\r\n          [scrollable]=\"true\"\r\n          dataKey=\"id\"\r\n          groupRowsBy=\"nomenclature.id\"\r\n          rowGroupMode=\"rowspan\"\r\n          (sortFunction)=\"customSort($event)\"\r\n          [customSort]=\"true\"\r\n          [rows]=\"preparedProducts.length\"\r\n          [(selection)]=\"selectedInventoryProducts\"\r\n          [value]=\"preparedProducts\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 3%\">\r\n                <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n              </th>\r\n              <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n              <th style=\"width: 14%\"\r\n                  class=\"sort-label\"\r\n                  pSortableColumn=\"nomenclature.code\"\r\n                  (click)=\"sorting(searchForm.get('order_by_code').value, 'order_by_code')\">\r\n                Code\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_code').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 10%\"\r\n                  pSortableColumn=\"nomenclature.name\"\r\n                  class=\"sort-label\"\r\n                  (click)=\"sorting(searchForm.get('order_by_name').value, 'order_by_name')\">\r\n                Name\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_name').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Technology</th>\r\n              <th style=\"width: 9%\" class=\"text-center sort-label\"\r\n                  pSortableColumn=\"initial_quantity\"\r\n                  (click)=\"sorting(searchForm.get('order_by_initial_quantity').value, 'order_by_initial_quantity')\"\r\n              >\r\n                Initial Quantity\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_initial_quantity').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 11%\"\r\n                  class=\"text-center sort-label\"\r\n                  pSortableColumn=\"new_quantity\"\r\n                  (click)=\"sorting(searchForm.get('order_by_new_quantity').value, 'order_by_new_quantity')\"\r\n              >\r\n                Entered Quantity\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_new_quantity').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 11%\" class=\"text-center sort-label\"\r\n                  pSortableColumn=\"nomenclature.category.name\"\r\n                  (click)=\"sorting(searchForm.get('order_by_category').value, 'order_by_category')\"\r\n              >\r\n                Category\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_category').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 6%\" class=\"text-center\">UOM</th>\r\n              <th style=\"width: 11%\" class=\"text-center sort-label\"\r\n                  pSortableColumn=\"locator.warehouse.name\"\r\n                  (click)=\"sorting(searchForm.get('order_by_warehouse').value, 'order_by_warehouse')\"\r\n              >\r\n                Warehouse\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_warehouse').value\"></pek-sort-icon>\r\n              </th>\r\n              <th style=\"width: 14%\"\r\n                  class=\"sort-label\"\r\n                  pSortableColumn=\"locator.name\"\r\n                  (click)=\"sorting(searchForm.get('order_by_locator').value, 'order_by_locator')\"\r\n              >\r\n                Locator\r\n                <pek-sort-icon [value]=\"searchForm.get('order_by_locator').value\"></pek-sort-icon>\r\n              </th>\r\n            </tr>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate=\"body\" let-inventoryProduct let-i=\"rowIndex\" let-rowgroup=\"rowgroup\"\r\n                       let-rowspan=\"rowspan\">\r\n            <tr\r\n              [class.qr-code-item-scanned]=\"inventoryProduct.is_scanned\"\r\n              [class.qr-code-item-found]=\"inventoryProduct.id === findItemId\"\r\n            >\r\n              <td style=\"width: 3%\">\r\n                <p-tableCheckbox [value]=\"inventoryProduct\"></p-tableCheckbox>\r\n              </td>\r\n              <td style=\"width: 5%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">#</h3>\r\n                {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\r\n              </td>\r\n              <td style=\"width: 14%\" *ngIf=\"rowgroup\" [attr.rowspan]=\"rowspan\">\r\n                <h3 class=\"td-title\">Code</h3>\r\n                <ng-container *ngIf=\"inventoryProduct.product && !inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.product.nomenclature.code}}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.nomenclature.code}}\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"inventoryProduct.root_id === findItemId\">\r\n                  <span>(found)</span>\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 10%\" *ngIf=\"rowgroup\" [attr.rowspan]=\"rowspan\">\r\n                <h3 class=\"td-title\">Name</h3>\r\n                <b *ngIf=\"inventoryProduct.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n                {{inventoryProduct.nomenclature.name}}\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Technology</h3>\r\n                <ng-container *ngIf=\"inventoryProduct.product\">\r\n                  {{inventoryProduct.product.current_technology?.name}}\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!inventoryProduct.product && inventoryProduct.technology\">\r\n                  {{inventoryProduct.technology?.name}}\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 9%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Initial Quantity</h3>\r\n                <span>\r\n                  <span *ngIf=\"inventoryProduct.initial_quantity === inventoryProduct.current_available_quantity\">\r\n                  {{inventoryProduct.initial_quantity}}\r\n                </span>\r\n                <span *ngIf=\"inventoryProduct.initial_quantity !== inventoryProduct.current_available_quantity\">\r\n                  {{inventoryProduct.initial_quantity}} <span\r\n                  class=\"warning-quantity-less\">({{inventoryProduct.current_available_quantity}})</span>\r\n                </span>\r\n                </span>\r\n              </td>\r\n              <td pEditableColumn class=\"text-center\" style=\"width: 11%\">\r\n                <h3 class=\"td-title\">Entered Quantity</h3>\r\n                <p-cellEditor\r\n                  *ngIf=\"inventoryProduct.nomenclature.bulk_or_serial !== '1' && currentInventory && currentInventory.status === '0'\">\r\n                  <ng-template pTemplate=\"input\">\r\n                    <input\r\n                      pInputText\r\n                      style=\"width: 100%; text-align: center\"\r\n                      type=\"number\"\r\n                      step=\"1\"\r\n                      [(ngModel)]=\"inventoryProduct.new_quantity\"\r\n                      (ngModelChange)=\"newQuantity$.next(inventoryProduct)\"\r\n                    >\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"output\">\r\n                    {{inventoryProduct.new_quantity}}\r\n                  </ng-template>\r\n                </p-cellEditor>\r\n\r\n                <span *ngIf=\"currentInventory && currentInventory.status === '1'\">{{inventoryProduct.new_quantity}}</span>\r\n              </td>\r\n              <td style=\"width: 11%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Category</h3>\r\n                <ng-container *ngIf=\"inventoryProduct.product && !inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.product.nomenclature.category?.name}}\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.nomenclature.category?.name}}\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 6%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">UOM</h3>\r\n                <ng-container *ngIf=\"inventoryProduct.product  && !inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.product.nomenclature.category?.unit_of_measure?.symbol ? inventoryProduct.product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"inventoryProduct.nomenclature\">\r\n                  {{inventoryProduct.nomenclature.category?.unit_of_measure?.symbol ? inventoryProduct.nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 11%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Warehouse</h3>\r\n                <ng-container *ngIf=\"inventoryProduct.locator; else productWarehouse\">\r\n                  {{inventoryProduct.locator.warehouse.name}}\r\n                </ng-container>\r\n              </td>\r\n              <td style=\"width: 14%\">\r\n                <h3 class=\"td-title\">Locator</h3>\r\n                <div *ngIf=\"inventoryProduct.locator; else productLocator\">\r\n                  {{inventoryProduct.locator.name}}\r\n\r\n                  <span class=\"d-block\">\r\n                    R: {{inventoryProduct.locator.row}}\r\n                    Col: {{inventoryProduct.locator.column}}\r\n                    Sh: {{inventoryProduct.locator.shelf}}\r\n                    Pl: {{inventoryProduct.locator.place}}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n\r\n              <ng-template #productLocator>\r\n                <div *ngIf=\"inventoryProduct.product.locator\">\r\n                  {{inventoryProduct.product.locator.name}}\r\n                  <span class=\"d-block\">\r\n                    R: {{inventoryProduct.product.locator.row}}\r\n                    Col: {{inventoryProduct.product.locator.column}}\r\n                    Sh: {{inventoryProduct.product.locator.shelf}}\r\n                    Pl: {{inventoryProduct.product.locator.place}}\r\n                  </span>\r\n                </div>\r\n              </ng-template>\r\n\r\n              <ng-template #productWarehouse>\r\n                {{inventoryProduct.product.locator.warehouse.name}}\r\n              </ng-template>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n                <i *ngIf=\"isLoadingInventoryList\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingInventoryList\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoadingInventoryList\">\r\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"paginator-wrapper\"\r\n        *ngIf=\"!isShowAll\"\r\n        [class.paginator-wrapper_hide]=\"preparedProducts.length === 0\"\r\n      >\r\n        <p-paginator\r\n          #paginator\r\n          [rows]=\"10\"\r\n          [totalRecords]=\"countProducts\"\r\n          (onPageChange)=\"paginate($event)\"\r\n        >\r\n        </p-paginator>\r\n        <p-button\r\n          (click)=\"onShowAll()\"\r\n          class=\"paginator-all\"\r\n          type=\"button\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          All\r\n        </p-button>\r\n      </div>\r\n\r\n      <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"onShowPartial()\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<pek-qr-code-scanner\r\n  *ngIf=\"isScanned\"\r\n  (scanned)=\"onScanned($event)\"\r\n  (cancel)=\"onCancelScanned()\"\r\n></pek-qr-code-scanner>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PhysicalInventory} from '../../models/physical-inventory';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-physical-inventory',\n  templateUrl: './physical-inventory.component.html',\n  styleUrls: ['./physical-inventory.component.scss']\n})\nexport class PhysicalInventoryComponent implements OnInit, OnDestroy {\n  isLoading = true;\n\n  physicalInventories: PhysicalInventory[] = [];\n  selectedPhysicalInventory: PhysicalInventory;\n  countPhysicalInventory = 0;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1]\n  });\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private readonly physicalInventoryService: PhysicalInventoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPhysicalInventoryForPagination();\n  }\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  getPhysicalInventoryForPagination() {\n    this.physicalInventoryService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(physicalInventories => {\n      this.physicalInventories = physicalInventories.results;\n      this.countPhysicalInventory = physicalInventories.count;\n      this.isLoading = false;\n    });\n  }\n\n  searchPhysicalInventory() {\n    this.isLoading = true;\n    this.selectedPhysicalInventory = null;\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true}\n    ];\n\n    this.getPhysicalInventoryForPagination();\n  }\n\n  onCreatePhysicalInventory() {\n    this.physicalInventoryService.openCreatePhysicalInventoryModal().subscribe(response => {\n      if (response) {\n        this.searchPhysicalInventory();\n      }\n    })\n  }\n\n  paginate(evt: any) {\n    this.searchForm.get('page').patchValue(evt.page + 1);\n    this.searchPhysicalInventory();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Physical Inventory</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-plus\"\n        label=\"Create Physical Inventory\"\n        (click)=\"onCreatePhysicalInventory()\"\n      >\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__block\">\n      <button\n        pButton\n        type=\"button\"\n        class=\"ml-auto\"\n        icon=\"pi pi-bars\"\n        label=\"Inventory Products\"\n        [routerLink]=\"[selectedPhysicalInventory?.id]\"\n        [disabled]=\"!selectedPhysicalInventory\"\n      ></button>\n    </div>\n    <div class=\"page__table\">\n      <div class=\"table-pagination-preloader\">\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          scrollHeight=\"calc(100vh - 18.8rem)\"\n          [scrollable]=\"true\"\n          [rows]=\"10\"\n          [(selection)]=\"selectedPhysicalInventory\"\n          [value]=\"physicalInventories\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th class=\"text-center\" style=\"width: 5%\">#</th>\n              <th class=\"text-center\" style=\"width: 25%\">ID</th>\n              <th class=\"text-center\" style=\"width: 35%\">Date</th>\n              <th class=\"text-center\" style=\"width: 35%\">Status</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-physicalInventory let-i=\"rowIndex\">\n            <tr [pSelectableRow]=\"physicalInventory\">\n              <td style=\"width: 5%\" class=\"text-center\">\n                <h3 class=\"td-title\">#</h3>\n                {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\n              </td>\n              <td style=\"width: 25%\" class=\"text-center\">\n                <h3 class=\"td-title\">ID</h3>\n                {{physicalInventory.id}}\n              </td>\n              <td style=\"width: 35%\" class=\"text-center\">\n                <h3 class=\"td-title\">Date</h3>\n                {{physicalInventory?.system_creation_date | date:'dd/MM/yyyy'}}\n              </td>\n              <td style=\"width: 35%\" class=\"text-center\">\n                <h3 class=\"td-title\">Status</h3>\n                <span *ngIf=\"physicalInventory.status === '1'\">Completed</span>\n                <span *ngIf=\"physicalInventory.status === '0'\">In Progress</span>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"paginatorright\">\n            <p-button\n              type=\"button\"\n              (click)=\"dt.paginator=false\"\n              styleClass=\"p-button-text\"\n            >\n              All\n            </p-button>\n          </ng-template>\n        </p-table>\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </div>\n    </div>\n    <div class=\"paginator-wrapper\" *ngIf=\"physicalInventories.length > 0\">\n      <p-paginator\n        #paginator\n        [rows]=\"10\"\n        [totalRecords]=\"countPhysicalInventory\"\n        (onPageChange)=\"paginate($event)\">\n      </p-paginator>\n      <p-button\n        class=\"paginator-all\"\n        type=\"button\"\n        styleClass=\"p-button-text\"\n      >\n        All\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TreePrint} from '../production-list/production-list.component';\r\n\r\n@Component({\r\n  selector: 'app-list-product-print-item',\r\n  templateUrl: './list-product-print-item.component.html',\r\n  styleUrls: ['./list-product-print-item.component.scss']\r\n})\r\nexport class ListProductPrintItemComponent implements OnInit {\r\n  @Input() product: TreePrint;\r\n  statuses = {'0': 'Not Processed', '1': 'Completed', '2': 'Deficit', '3': 'Reserved'};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"list-product-print-item\" *ngIf=\"product.children.length > 0\">\r\n  <h2>Production List {{product.data.nomenclature.code}} ({{product.data.list}}) {{product.data.nomenclature.name}}</h2>\r\n\r\n  <div class=\"list-product-print-item__row\">\r\n    <div class=\"list-product-print-item__col\">#</div>\r\n    <div class=\"list-product-print-item__col\">Code</div>\r\n    <div class=\"list-product-print-item__col\">Name</div>\r\n    <div class=\"list-product-print-item__col\">UOM</div>\r\n    <div class=\"list-product-print-item__col\">Total Req Qty</div>\r\n    <div class=\"list-product-print-item__col\">Locator</div>\r\n    <div class=\"list-product-print-item__col\">Status</div>\r\n  </div>\r\n\r\n  <div *ngFor=\"let product of product.children; let idx = index\" class=\"list-product-print-item__row\">\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{idx + 1}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{product.nomenclature.code}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{product.nomenclature.name}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{product.nomenclature?.category?.unit_of_measure?.symbol ? product.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{product.total_required_quantity}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{product.available_on_locator}}</div>\r\n    <div class=\"list-product-print-item__col list-product-print-item__col_body\">{{statuses[product.status]}}</div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {List} from '../../../models/list';\r\nimport {ListProduct} from '../../../models/list-product';\r\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {ListService} from '../../../services/list.service';\r\nimport {take} from 'rxjs/operators';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {Location} from '@angular/common';\r\nimport {MenuItem, MessageService, TreeNode} from 'primeng/api';\r\nimport {ListProductService} from '../../../services/list-product.service';\r\nimport {ScanResult} from '../../../../qr-code/models/scan-result';\r\n\r\nexport class TreePrint {\r\n  data: ListProduct;\r\n  children: ListProduct[];\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-production-list',\r\n  templateUrl: './production-list.component.html',\r\n  styleUrls: ['./production-list.component.scss']\r\n})\r\n\r\nexport class ProductionListComponent implements OnInit {\r\n\r\n  selectedNodeMenuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Production List',\r\n      items: [\r\n        {\r\n          label: 'Show Images',\r\n          icon: 'pi pi-images',\r\n          command: () => this.showImages(this.selectedNode),\r\n        },\r\n        {\r\n          label: 'Set Actual Quantity',\r\n          icon: 'pi pi-angle-double-right',\r\n          command: () => this.editQuantity(this.selectedNode),\r\n        },\r\n        {\r\n          label: 'Cancel Actual Quantities',\r\n          icon: 'pi pi-times',\r\n          command: () => this.cancelQuantities(this.selectedNode),\r\n        },\r\n        {\r\n          label: 'Make Request',\r\n          icon: 'pi pi-caret-right',\r\n          command: () => this.makeDeficitOne(this.selectedNode),\r\n        },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  selectedNodeTreeMenuItems: MenuItem[] = [\r\n    {\r\n      label: 'Selected Production List',\r\n      items: [\r\n        {\r\n          label: 'Show Images',\r\n          icon: 'pi pi-images',\r\n          command: () => this.showImages(this.selectedNodeTree.data),\r\n        },\r\n        {\r\n          label: 'Set Actual Quantity',\r\n          icon: 'pi pi-angle-double-right',\r\n          command: () => this.editQuantity(this.selectedNodeTree.data),\r\n        },\r\n        {\r\n          label: 'Cancel Actual Quantities',\r\n          icon: 'pi pi-times',\r\n          command: () => this.cancelQuantities(this.selectedNodeTree.data),\r\n        },\r\n        {\r\n          label: 'Make Request',\r\n          icon: 'pi pi-caret-right',\r\n          command: () => this.makeDeficitOne(this.selectedNodeTree.data),\r\n        },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  mode: 'hierarchy' | 'list' = 'hierarchy';\r\n\r\n  addedTree = [];\r\n\r\n  isSetAllActualQuantities = false;\r\n  products: ListProduct[];\r\n  selectedNode;\r\n  selectedNodeTree;\r\n  isLoading = true;\r\n  list: List = null;\r\n  listId = this.route.snapshot.paramMap.get('id');\r\n  statuses = {'0': 'Not Processed', '1': 'Completed', '2': 'Deficit', '3': 'Reserved'};\r\n  showComplete = false;\r\n  routerHandler$;\r\n\r\n  copyProducts: ListProduct[];\r\n  isLoadingTree = true;\r\n\r\n  tree: any;\r\n\r\n  isShowPrint = false;\r\n\r\n  isLoadingListsForPrint = false;\r\n  productsForPrint: TreePrint[];\r\n\r\n  menuItems: MenuItem[] = [\r\n    {\r\n      label: 'Root Production List',\r\n      items: [\r\n        {\r\n          label: 'Print',\r\n          icon: 'pi pi-print',\r\n          command: () => this.printPage(),\r\n          disabled: true,\r\n        },\r\n        {\r\n          label: 'Set Actual Quantities',\r\n          icon: 'pi pi-angle-double-right',\r\n          command: () => this.setQuantities(),\r\n        },\r\n        {\r\n          label: 'Make Requests',\r\n          icon: 'pi pi-caret-right',\r\n          command: () => this.makeDeficit(),\r\n        },\r\n        {\r\n          label: 'Make request for all',\r\n          icon: 'pi pi-caret-right',\r\n          command: () => this.makeRequestsForAll(),\r\n        },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  foundRowsIds: number[] = [];\r\n  currentDisplayRowId: number;\r\n  isScanned = false;\r\n  scanningEnd = true;\r\n  elementsRowsIds: string[] = [];\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private modalService: ModalService,\r\n    private listService: ListService,\r\n    private listProductService: ListProductService,\r\n    private router: Router,\r\n    public _location: Location,\r\n    private messageService: MessageService,\r\n  ) {\r\n    this.routerHandler$ = router.events.subscribe(res => {\r\n      if (res instanceof NavigationEnd) {\r\n        this.listId = this.route.snapshot.paramMap.get('id');\r\n        this.getAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.routerHandler$.unsubscribe();\r\n  }\r\n\r\n  getAll() {\r\n    this.selectedNodeTree = null;\r\n    this.selectedNode = null;\r\n    this.tree = [];\r\n    this.addedTree = [];\r\n    this.copyProducts = [];\r\n\r\n    this.menuItems[0].items[0].disabled = true;\r\n\r\n    this.products = [];\r\n    this.isLoading = true;\r\n    this.isLoadingTree = true;\r\n    this.listService.getById(+this.listId).pipe(take(1)).subscribe(res => {\r\n      this.list = JSON.parse(JSON.stringify(res));\r\n    });\r\n\r\n    this.listProductService.get([{name: 'list', value: this.listId}]).pipe(take(1)).subscribe(res => {\r\n        this.products = res.filter(x => {\r\n          return x.level > 0;\r\n        });\r\n        this.isSetAllActualQuantities = this.products.every(product => product.status !== '0');\r\n        this.showComplete = true;\r\n        this.products.forEach(element => {\r\n          if (element.actual_quantity === null) {\r\n            this.showComplete = false;\r\n          }\r\n        });\r\n        let ss = {'0': 3, '1': 1, '2': 2};\r\n        this.products.sort((a, b) => ss[a.nomenclature.type] - ss[b.nomenclature.type]);\r\n\r\n        this.copyProducts = [...this.products];\r\n\r\n        this.getTree();\r\n\r\n        this.menuItems[0].items[0].disabled = false;\r\n\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getTree() {\r\n    this.copyProducts.forEach(p => {\r\n      if (p.actual_quantity === null) {\r\n        p.actual_quantity = 0;\r\n      }\r\n    });\r\n\r\n    this.addedTree = this.copyProducts.map(p => {\r\n      return {\r\n        data: p,\r\n        children: [],\r\n        expanded: false,\r\n        parent: null,\r\n      };\r\n    });\r\n\r\n    const productIds = this.copyProducts.filter(p => p.has_children).map(p => p.list) as number[];\r\n\r\n    const get = (ids: number[]) => {\r\n      this.listProductService.getPartly(ids).subscribe(response => {\r\n        // @ts-ignore\r\n        const newProducts = response.flat();\r\n        newProducts.forEach(p => {\r\n          if (p.actual_quantity === null) {\r\n            p.actual_quantity = 0;\r\n          }\r\n        });\r\n\r\n        const newIds = newProducts.filter(p => p.has_children).map(p => p.list) as number[];\r\n\r\n        this.copyProducts = [...this.copyProducts, ...newProducts];\r\n\r\n        if (newIds.length > 0) {\r\n          get(newIds);\r\n        } else {\r\n          this.generateTree();\r\n          this.isLoadingTree = false;\r\n        }\r\n      });\r\n    };\r\n\r\n    if (productIds.length > 0) {\r\n      get(productIds);\r\n    } else {\r\n      this.tree = [...this.addedTree];\r\n      this.isLoadingTree = false;\r\n    }\r\n  }\r\n\r\n  generateTree() {\r\n    const getChildren = (nodes) => {\r\n      nodes.forEach(node => {\r\n        const children = this.copyProducts.filter(c => c.parent === node.data.id);\r\n        if (children.length > 0) {\r\n          node.children = children.map(product => {\r\n            return {\r\n              data: product,\r\n              children: [],\r\n              expanded: false,\r\n              parent: node,\r\n            };\r\n          });\r\n\r\n          getChildren(node.children);\r\n        }\r\n      });\r\n    };\r\n\r\n    getChildren(this.addedTree);\r\n\r\n    this.tree = [...this.addedTree];\r\n  }\r\n\r\n  printPage() {\r\n    this.productsForPrint = [];\r\n    this.isLoadingListsForPrint = true;\r\n    // const ids = this.products.filter(p => p.list_url).map(p => p.list) as number[Ск];\r\n\r\n    this.productsForPrint = this.products.map(p => {\r\n      return {\r\n        children: [],\r\n        data: p,\r\n      };\r\n    });\r\n\r\n    this.list.list = this.listId as any;\r\n\r\n    this.productsForPrint.unshift({\r\n      data: this.list as any,\r\n      children: this.products\r\n    });\r\n\r\n    console.log(this.productsForPrint);\r\n\r\n    const getProducts = (products) => {\r\n      const ids = products.filter(p => p.has_children).map(p => p.list) as number[];\r\n\r\n      if (ids.length > 0) {\r\n        this.listProductService.getPartly(ids).subscribe(response => {\r\n          // @ts-ignore\r\n          const newProducts = response.flat();\r\n\r\n          newProducts.forEach(product => {\r\n            if (product.list_url) {\r\n              this.productsForPrint.push({\r\n                data: product,\r\n                children: [],\r\n              });\r\n            }\r\n\r\n            const index = this.productsForPrint.findIndex(p => p.data.id === product.parent);\r\n            this.productsForPrint[index]?.children.push(product);\r\n          });\r\n\r\n          getProducts(newProducts.filter(p => p.list_url));\r\n        });\r\n      } else {\r\n        this.isShowPrint = true;\r\n        setTimeout(() => {\r\n          window.print();\r\n        });\r\n      }\r\n    };\r\n\r\n    getProducts(this.products);\r\n  }\r\n\r\n  setQuantities() {\r\n    if (this.mode === 'list') {\r\n      this.listService.setQuantities(+this.listId).pipe(take(1)).subscribe(res => this.getAll());\r\n    } else {\r\n      if (!this.selectedNodeTree) {\r\n        this.listService.setQuantities(+this.listId).subscribe(() => {\r\n          this.getAll();\r\n        });\r\n      } else {\r\n        if (this.selectedNodeTree.data.list_url) {\r\n          this.listService.setQuantities(this.selectedNodeTree.data.list).subscribe(() => {\r\n            this.getAll();\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  editQuantity(node) {\r\n    this.modalService.editListProduct(node).subscribe(response => {\r\n      console.log(response);\r\n      // if (node.list_url) {\r\n      //   this.getAll();\r\n      // } else {\r\n      if (response.actual_quantity === null) {\r\n        response.actual_quantity = 0;\r\n      }\r\n\r\n      const index = this.products.findIndex(p => p.id === response.id);\r\n      this.products[index] = response;\r\n\r\n      const find = (nodes) => {\r\n        nodes.forEach(n => {\r\n          if (n.data.id === response.id) {\r\n            n.data = response;\r\n          } else if (n.children.length > 0) {\r\n            find(n.children);\r\n          }\r\n        });\r\n      };\r\n\r\n      find(this.tree);\r\n      // }\r\n    });\r\n  }\r\n\r\n  process() {\r\n    this.modalService.completeList(this.list).subscribe(conf => {\r\n      if (conf) {\r\n        this._location.back();\r\n      }\r\n    });\r\n  }\r\n\r\n  makeDeficit() {\r\n    this.modalService.confirm('success').subscribe(res => {\r\n      if (res) {\r\n        this.listService.make_deficit(this.list.id).subscribe(res => {\r\n          this.getAll();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  makeRequestsForAll() {\r\n    this.listService.makeRequestsForAll(this.list).subscribe();\r\n  }\r\n\r\n  showImages(node) {\r\n    console.log(node);\r\n    this.modalService.showImageGallery([], node.nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  cancelQuantities(node) {\r\n    this.modalService.confirm('success').subscribe(res => {\r\n      if (res) {\r\n        const id = node.id;\r\n        this.listService.canceledActualQuantity(id).subscribe(response => {\r\n          // if (node.list_url) {\r\n          //   this.getAll();\r\n          //   node = null;\r\n          // } else {\r\n          if (response.actual_quantity === null) {\r\n            response.actual_quantity = 0;\r\n          }\r\n\r\n          const index = this.products.findIndex(p => p.id === response.id);\r\n          this.products[index] = response;\r\n\r\n          const find = (nodes) => {\r\n            nodes.forEach(n => {\r\n              if (n.data.id === response.id) {\r\n                n.data = response;\r\n              } else if (n.children.length > 0) {\r\n                find(n.children);\r\n              }\r\n            });\r\n          };\r\n\r\n          find(this.tree);\r\n          // }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  expandAll(): void {\r\n    const temp = cloneDeep(this.tree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, true);\r\n    });\r\n    this.tree = temp;\r\n  }\r\n\r\n  collapseAll(): void {\r\n    const temp = cloneDeep(this.tree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, false);\r\n    });\r\n    this.tree = temp;\r\n    this.selectedNodeTree = null;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    if (node.data.status != 1) {\r\n      node.expanded = isExpand;\r\n      if (node.children) {\r\n        node.children.forEach(childNode => {\r\n          this.expandCollapseRecursive(childNode, isExpand);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  selectMode(mode: any) {\r\n    this.mode = mode;\r\n    this.onSelectTreeNode()\r\n  }\r\n\r\n  makeDeficitOne(node: any) {\r\n    // /list_products/{id}/deficit_request/\r\n\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.listService.makeDeficitOne(node.id).subscribe(() => {\r\n          this.getAll();\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onSelectTreeNode() {\r\n    if (this.mode === 'list' && this.selectedNode) {\r\n      this.menuItems[0].items[1].disabled = !this.selectedNode?.list_url;\r\n    } else if (this.mode === 'hierarchy' && this.selectedNodeTree) {\r\n      this.menuItems[0].items[1].disabled = !this.selectedNodeTree?.data?.list_url || (this.selectedNodeTree?.data.status === '1' || this.selectedNodeTree.data.status === '3');\r\n    } else {\r\n      this.menuItems[0].items[1].disabled = false;\r\n    }\r\n  }\r\n\r\n  scanForListProduct(data: ScanResult = null) {\r\n    this.expandAll();\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id)\r\n      });\r\n    });\r\n\r\n    this.listService.getScanned(this.listId, data).subscribe(res => {\r\n      if (res.ids_found.length > 0) {\r\n        this.elementsRowsIds.forEach(elementId => {\r\n          const idArray = elementId.split('-');\r\n          const foundId = res.ids_found.find(el => el.toString() === idArray[1]);\r\n          if (foundId) {\r\n            this.foundRowsIds.push(foundId);\r\n          }\r\n        });\r\n        if (this.foundRowsIds.length > 0) {\r\n          this.currentDisplayRowId = this.foundRowsIds[0];\r\n          this.scrollToElement('row-' + this.currentDisplayRowId);\r\n        }\r\n      } else {\r\n        this.messageService.add({severity: 'error', summary: 'No matching found.', detail: `No product lists was found with scanned QR code!`});\r\n      }\r\n    });\r\n  }\r\n\r\n  scrollToElement(rowId: string): void {\r\n    const element = document.getElementById(rowId);\r\n    element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n  }\r\n\r\n  isFoundRow(productId: number): boolean {\r\n    return this.foundRowsIds.length > 0 && this.foundRowsIds.findIndex(id => id === productId) > -1;\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.clearQrResults();\r\n    this.expandAll();\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id)\r\n      });\r\n    });\r\n    this.isScanned = true;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n    this.scanForListProduct(data)\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n  }\r\n\r\n  goToNext() {\r\n    let currentIndex = this.foundRowsIds.findIndex(id => id === this.currentDisplayRowId);\r\n    if (currentIndex < this.foundRowsIds.length - 1) {\r\n      this.currentDisplayRowId = this.foundRowsIds[currentIndex + 1];\r\n    } else {\r\n      this.currentDisplayRowId = this.foundRowsIds[0];\r\n    }\r\n    this.scrollToElement('row-' + this.currentDisplayRowId);\r\n  }\r\n\r\n  goToPrev() {\r\n    let currentIndex = this.foundRowsIds.findIndex(id => id === this.currentDisplayRowId);\r\n    if (currentIndex > 0) {\r\n      this.currentDisplayRowId = this.foundRowsIds[currentIndex - 1];\r\n    } else {\r\n      this.currentDisplayRowId = this.foundRowsIds[this.foundRowsIds.length - 1];\r\n    }\r\n    this.scrollToElement('row-' + this.currentDisplayRowId);\r\n  }\r\n\r\n  clearQrResults() {\r\n    this.currentDisplayRowId = null;\r\n    this.foundRowsIds = [];\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <div class=\"header-wrapper\">\r\n        <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n        <h1>\r\n          Production List\r\n          <ng-container *ngIf=\"list\">\r\n            ({{list.id}}) {{list.nomenclature.code}} ({{list.nomenclature.name}})\r\n          </ng-container>\r\n          <ng-container *ngIf=\"!list\">...</ng-container>\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"colors\">\r\n        <div class=\"colors__color\">\r\n          <div class=\"colors__color-block colors__color-block_deficit\"></div>\r\n          <p>Deficit Accepted</p>\r\n        </div>\r\n        <div class=\"colors__color\">\r\n          <div class=\"colors__color-block colors__color-block_free-products\"></div>\r\n          <p>Free Warehouse Products</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <p-menubar\r\n        class=\"production-list-bar ml-auto mr-2\"\r\n        [model]=\"menuItems\"\r\n      ></p-menubar>\r\n      <!--      <button-->\r\n      <!--        class=\"mr-2\"-->\r\n      <!--        pButton-->\r\n      <!--        type=\"button\"-->\r\n      <!--        icon=\"pi pi-print\"-->\r\n      <!--        label=\"Print\"-->\r\n      <!--        (click)=\"printPage()\"-->\r\n      <!--      ></button>-->\r\n      <!--      <button-->\r\n      <!--        (click)=\"setQuantities()\"-->\r\n      <!--        class=\"mr-2\"-->\r\n      <!--        pButton-->\r\n      <!--        type=\"button\"-->\r\n      <!--        icon=\"pi pi-angle-double-right\"-->\r\n      <!--        label=\"Set Actual Quantities\"-->\r\n      <!--        [disabled]=\"(selectedNodeTree && !selectedNodeTree.data.list_url) || list?.completed\"-->\r\n      <!--      ></button>-->\r\n      <!--      <button-->\r\n      <!--        class=\"mr-2\"-->\r\n      <!--        pButton-->\r\n      <!--        type=\"button\"-->\r\n      <!--        label=\"Make Requests\"-->\r\n      <!--        (click)=\"makeDeficit()\"-->\r\n      <!--        *ngIf=\"list && !list?.completed && !list?.is_deficit_requested && isSetAllActualQuantities\"-->\r\n      <!--      ></button>-->\r\n\r\n      <!--      <button-->\r\n      <!--        class=\"mr-2\"-->\r\n      <!--        pButton-->\r\n      <!--        type=\"button\"-->\r\n      <!--        label=\"Make request for all\"-->\r\n      <!--        (click)=\"makeRequestsForAll()\"-->\r\n      <!--        *ngIf=\"list && !list?.completed && !list?.is_deficit_requested && isSetAllActualQuantities\"-->\r\n      <!--      ></button>-->\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-table\"\r\n        label=\"Hierarchy\"\r\n        [disabled]=\"mode === 'hierarchy'\"\r\n        (click)=\"selectMode('hierarchy')\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-list\"\r\n        label=\"List\"\r\n        [disabled]=\"mode === 'list'\"\r\n        (click)=\"selectMode('list')\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content locators\">\r\n  <div class=\"page__card\">\r\n    <ng-container *ngIf=\"mode === 'list'\">\r\n      <p-table\r\n        #dt\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"calc(100vh - 16.625rem)\"\r\n        [value]=\"products\"\r\n        selectionMode=\"single\"\r\n        [(selection)]=\"selectedNode\"\r\n        (selectionChange)=\"onSelectTreeNode()\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex table-caption\">\r\n            <p-menubar\r\n              [class.disabled]=\"!selectedNode\"\r\n              class=\"production-list-bar ml-auto\"\r\n              [model]=\"selectedNodeMenuItems\"\r\n            ></p-menubar>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\" class=\"text-center\">#</th>\r\n            <th style=\"width: 16%\">\r\n              <button class=\"back\" (click)=\"_location.back()\">\r\n                <i class=\"pi pi-arrow-left\"></i>\r\n              </button>\r\n              Code\r\n            </th>\r\n            <th style=\"width: 16%\">Name</th>\r\n            <th style=\"width: 8%\" class=\"text-center\">Total Req Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Req Qty Per One</th>\r\n            <th style=\"width: 8%\" class=\"text-center\">Free Wh Qty</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Reserved Qty</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Actual Qty</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Locator</th>\r\n            <th style=\"width: 10%\" class=\"d-print-none text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr\r\n            [pSelectableRow]=\"product\"\r\n            [class.deficit]=\"(product.descendants_has_deficit_accepted || product.is_deficit_accepted) && product.total_required_quantity > product.actual_quantity\"\r\n            [class.free-products]=\"(product.has_free_warehouse_products || product.descendants_has_free_warehouse_products) && product.total_required_quantity > product.actual_quantity\"\r\n          >\r\n            <td style=\"width: 3%\" class=\"index-header text-center\">\r\n              <h3 class=\"td-title\">#</h3>\r\n              {{i + 1}}\r\n            </td>\r\n            <td style=\"width: 16%\" class=\"code-column\">\r\n              <h3 class=\"td-title\">Code</h3>\r\n              <a\r\n                *ngIf=\"product.list_url\"\r\n                class=\"list-parent\"\r\n                [routerLink]=\"['/warehouse/production-lists/', product.list]\"\r\n                [class.disabled]=\"product.list_url && (product.status == 1 || product.status == 3)\"\r\n              >\r\n                {{product.nomenclature?.code}}\r\n              </a>\r\n              <span\r\n                *ngIf=\"!product.list_url\">\r\n                {{product.nomenclature?.code}}\r\n              </span>\r\n            </td>\r\n            <td style=\"width: 16%\" class=\"serial-number-cont\">\r\n              <h3 class=\"td-title\">Name</h3>\r\n              <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n              ({{product.id}})\r\n              {{product.nomenclature?.name}}\r\n\r\n              <div *ngIf=\"product.reserved_serial_numbers.length > 0 || product.future_serial_numbers.length > 0\" class=\"serial-numbers\">\r\n                <div *ngFor=\"let serialNumber of product.reserved_serial_numbers\">\r\n                  {{serialNumber.type_with_number}} (R)\r\n                </div>\r\n                <div *ngFor=\"let serialNumber of product.future_serial_numbers\">\r\n                  {{serialNumber.type_with_number}} (F)\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 8%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Total Req Qty</h3>\r\n              {{product.total_required_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Req Qty Per One</h3>\r\n              {{product.required_quantity_per_one}}\r\n            </td>\r\n            <td style=\"width: 8%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Free Wh Qty</h3>\r\n              {{product.warehouse_quantity}}\r\n            </td>\r\n            <td style=\"width: 7%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Reserved Qty</h3>\r\n              {{product.reserved_quantity ? product.reserved_quantity : 0}}\r\n            </td>\r\n            <td style=\"width: 7%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Actual Qty</h3>\r\n              {{product.actual_quantity}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">UOM</h3>\r\n              {{product.nomenclature.category?.unit_of_measure?.symbol ? product.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Locator</h3>\r\n              {{product.available_on_locator}}\r\n            </td>\r\n            <td\r\n              style=\"width: 10%\"\r\n              class=\"d-print-none text-center\">\r\n              <h3 class=\"td-title\">Status</h3>\r\n              <span\r\n                class=\"badge\"\r\n                [ngClass]=\"{\r\n                'badge_secondary': product.status == 0,\r\n                'badge_success': product.status == 1,\r\n                'badge_danger': product.status == 2,\r\n                'badge_reserved': product.status == 3}\"\r\n              >\r\n                {{statuses[product.status]}}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr class=\"tr-spinner\">\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"11\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"mode === 'hierarchy'\">\r\n      <p-treeTable\r\n        class=\"categories-tree\"\r\n        [value]=\"tree\"\r\n        selectionMode=\"single\"\r\n        [(selection)]=\"selectedNodeTree\"\r\n        scrollHeight=\"calc(100vh - 19.125rem)\"\r\n        [scrollable]=\"true\"\r\n        (selectionChange)=\"onSelectTreeNode()\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex table-caption\">\r\n            <p-menubar\r\n              [class.disabled]=\"!selectedNodeTree\"\r\n              class=\"production-list-bar ml-auto mr-2\"\r\n              [model]=\"selectedNodeTreeMenuItems\"\r\n            ></p-menubar>\r\n            <button\r\n              [disabled]=\"isLoadingTree\"\r\n              class=\"mr-2 p-button-icon\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-camera\"\r\n              label=\"Scan QR Codes\"\r\n              (click)=\"onStartScanning()\"\r\n            >\r\n            </button>\r\n            <button\r\n              class=\"mr-2\"\r\n              pButton\r\n              type=\"button\"\r\n              label=\"Expand All\"\r\n              icon=\"pi pi-angle-down\"\r\n              (click)=\"expandAll()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-3\"\r\n              label=\"Collapse All\"\r\n              icon=\"pi pi-angle-up\"\r\n              (click)=\"collapseAll()\"\r\n            ></button>\r\n            <p *ngIf=\"this.foundRowsIds.length > 0\" class=\"d-flex align-items-center mr-2\">\r\n              Found {{foundRowsIds.length}} products\r\n            </p>\r\n            <button\r\n              pButton\r\n              *ngIf=\"this.foundRowsIds.length > 1\"\r\n              type=\"button\"\r\n              label=\"Go to previous\"\r\n              icon=\"pi pi-backward\"\r\n              class=\"p-button-secondary mr-2\"\r\n              (click)=\"goToPrev()\"\r\n            ></button>\r\n            <button\r\n              *ngIf=\"this.foundRowsIds.length > 1\"\r\n              pButton\r\n              type=\"button\"\r\n              label=\"Go to next\"\r\n              icon=\"pi pi-forward\"\r\n              class=\"p-button-secondary mr-2\"\r\n              (click)=\"goToNext()\"\r\n            ></button>\r\n            <button\r\n              *ngIf=\"this.foundRowsIds.length > 0\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-times-circle\"\r\n              class=\"p-button-danger\"\r\n              (click)=\"clearQrResults()\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"padding-left: 16px; width: 19%\">\r\n              <button class=\"back\" (click)=\"_location.back()\">\r\n                <i class=\"pi pi-arrow-left\"></i>\r\n              </button>\r\n              Code\r\n            </th>\r\n            <th style=\"width: 16%\">Name</th>\r\n            <th style=\"width: 8%\" class=\"text-center\">Total Req Qty</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Req Qty Per One</th>\r\n            <th style=\"width: 8%\" class=\"text-center\">Free Wh Qty</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Reserved Qty</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Actual Qty</th>\r\n            <th style=\"width: 5%\" class=\"text-center\">UOM</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Locator</th>\r\n            <th style=\"width: 10%\" class=\"d-print-none text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n          <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\"\r\n              [class.deficit]=\"(rowData.descendants_has_deficit_accepted || rowData.is_deficit_accepted) && rowData.total_required_quantity > rowData.actual_quantity\"\r\n              [class.is-found-row]=\"isFoundRow(rowData.id)\"\r\n              [class.selected-for-change]=\"rowData.id === currentDisplayRowId\"\r\n              [id]=\"'row-' + rowData.id\"\r\n              [class.free-products]=\"(rowData.has_free_warehouse_products || rowData.descendants_has_free_warehouse_products) && rowData.total_required_quantity > rowData.actual_quantity\"\r\n          >\r\n            <td style=\"width: 19%\">\r\n              <h3 class=\"td-title\">Code</h3>\r\n              <div class=\"toggle-row\">\r\n                <p-treeTableToggler [rowNode]=\"rowNode\"\r\n                                    [class.disabled-toggler]=\"rowData.status == 1\"></p-treeTableToggler>\r\n                <a\r\n                  [class.disabled]=\"rowData.list_url && (rowData.status == 1 || rowData.status == 3)\"\r\n                  *ngIf=\"rowData.list_url\"\r\n                  class=\"list-parent\"\r\n                  [routerLink]=\"['/warehouse/production-lists/', rowData.list]\"\r\n                >\r\n                  {{rowData.nomenclature.code}}\r\n                </a>\r\n                <span *ngIf=\"!rowData.list_url\">{{rowData.nomenclature.code}}</span>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 16%\" class=\"serial-number-cont\">\r\n              <h3 class=\"td-title\">Name</h3>\r\n              <b *ngIf=\"rowData.nomenclature.bulk_or_serial === '1'\">(S)</b> ({{rowData.id}}\r\n              ) {{rowData.nomenclature.name}}\r\n\r\n              <div *ngIf=\"rowData.reserved_serial_numbers.length > 0 || rowData.future_serial_numbers.length > 0\" class=\"serial-numbers\">\r\n                <div *ngFor=\"let serialNumber of rowData.reserved_serial_numbers\">\r\n                  {{serialNumber.type_with_number}} (R)\r\n                </div>\r\n                <div *ngFor=\"let serialNumber of rowData.future_serial_numbers\">\r\n                  {{serialNumber.type_with_number}} (F)\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 8%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Total Req Qty</h3>\r\n              {{rowData.total_required_quantity}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Req Qty Per One</h3>\r\n              {{rowData.required_quantity_per_one}}\r\n            </td>\r\n            <td style=\"width: 8%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Free Wh Qty</h3>\r\n              {{rowData.warehouse_quantity}}\r\n            </td>\r\n            <td style=\"width: 8%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Reserved Qty</h3>\r\n              {{rowData.reserved_quantity ? rowData.reserved_quantity : 0}}\r\n            </td>\r\n            <td style=\"width: 7%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Actual Qty</h3>\r\n              {{rowData.actual_quantity}}\r\n            </td>\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">UOM</h3>\r\n              {{rowData.nomenclature.category?.unit_of_measure?.symbol ? rowData.nomenclature?.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Locator</h3>\r\n              {{rowData.available_on_locator}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"d-print-none text-center\">\r\n              <h3 class=\"td-title\">Status</h3>\r\n              <span\r\n                class=\"badge\"\r\n                [ngClass]=\"{\r\n                'badge_secondary': rowData.status == 0,\r\n                'badge_success': rowData.status == 1,\r\n                'badge_danger': rowData.status == 2,\r\n                'badge_reserved': rowData.status == 3}\"\r\n              >\r\n                {{statuses[rowData.status]}}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\" let-columns>\r\n          <tr class=\"tr-spinner\">\r\n            <td class=\"text-center p-5\" [attr.colspan]=\"10\">\r\n              <i *ngIf=\"isLoadingTree\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTree\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-treeTable>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"print-list-product\" *ngIf=\"isShowPrint\">\r\n  <div class=\"print-list-product__list\">\r\n    <div class=\"print-list-product__item\" *ngFor=\"let product of productsForPrint\">\r\n      <app-list-product-print-item [product]=\"product\"></app-list-product-print-item>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<pek-qr-code-scanner\r\n  *ngIf=\"isScanned\"\r\n  (scanned)=\"onScanned($event)\"\r\n  (cancel)=\"onCancelScanned()\"\r\n></pek-qr-code-scanner>\r\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ModalService} from '@shared/services/modal.service';\nimport {Paginator} from 'primeng/paginator';\nimport {ListService} from '../../services/list.service';\nimport {QuerySearch} from '@shared/models/other';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {List} from '../../models/list';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {debounceTime, map, tap} from 'rxjs/operators';\n\nexport enum ViewMode {\n  LIST = 0,\n  HIERARCHY = 1\n}\n\n@Component({\n  selector: 'pek-production-lists',\n  templateUrl: './production-lists.component.html',\n  styleUrls: ['./production-lists.component.scss']\n})\nexport class ProductionListsComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  isShowAll = false;\n  isStartOnePage = false;\n  isLoading = true;\n\n  tableScrollHeight = '29.625rem';\n  isHideFilters = false;\n\n  viewModeType = ViewMode;\n  viewMode: ViewMode = ViewMode.LIST;\n  queryKey = 'name:/code:/responsible_employee_id:null/date_created_after:null/date_created_before:null/category_ids:null/root_categories:null';\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1],\n    name: [''],\n    code: [''],\n    responsible_employee_id: [null],\n    date_created_after: [null],\n    date_created_before: [null],\n    category_ids: null,\n    root_categories: null,\n  });\n\n  selectedList: List;\n  lists: List[] = [];\n  count = 0;\n\n  query: QuerySearch[] = [\n    {name: 'paginated', value: true},\n    {name: 'page', value: this.searchForm.get('page').value},\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private modalService: ModalService,\n    private listService: ListService,\n    private readonly adapterService: AdapterService,\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedList = null),\n        map(() => this.searchBoxName.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchLists();\n    });\n\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedList = null),\n        map(() => this.searchBoxCode.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchLists();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getProductionListsForPagination();\n  }\n\n  getProductionListsForPagination() {\n    this.listService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(lists => {\n      this.lists = lists.results;\n      this.count = lists.count;\n\n      if (this.isStartOnePage) {\n        this.paginator?.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  getProductionLists() {\n    this.listService.get(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(lists => {\n      this.lists = lists;\n      this.count = lists.length;\n\n      if (this.isStartOnePage) {\n        this.paginator?.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  searchLists() {\n    this.isLoading = true;\n    this.destroy$.next(true);\n    this.selectedList = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/responsible_employee_id:${this.searchForm.get('responsible_employee_id').value}/date_created_after:${this.searchForm.get('date_created_after').value}/date_created_before:${this.searchForm.get('date_created_before').value}/category_ids:${this.searchForm.get('category_ids').value}/root_categories:${this.searchForm.get('root_categories').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [];\n\n    if (!this.isShowAll) {\n      this.query = [\n        {name: 'paginated', value: 'true'},\n        {name: 'page', value: this.searchForm.get('page').value},\n      ];\n    }\n\n    if (this.searchForm.get('name').value) {\n      this.query.push({name: 'name', value: this.searchForm.get('name').value});\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({name: 'code', value: this.searchForm.get('code').value});\n    }\n\n    if (this.searchForm.get('responsible_employee_id').value) {\n      this.query.push({name: 'responsible_employee_id', value: this.searchForm.get('responsible_employee_id').value});\n    }\n\n    if (this.searchForm.get('root_categories').value) {\n      this.query.push({name: 'root_categories', value: this.searchForm.get('root_categories').value});\n    }\n\n    if (this.searchForm.get('date_created_after').value) {\n      this.query.push({\n        name: 'date_created_after',\n        value: this.adapterService.dateAdapter(this.searchForm.get('date_created_after').value)\n      });\n    }\n\n    if (this.searchForm.get('date_created_before').value) {\n      this.query.push({\n        name: 'date_created_before',\n        value: this.adapterService.dateAdapter(this.searchForm.get('date_created_before').value)\n      });\n    }\n\n    if (this.searchForm.get('category_ids').value) {\n      this.query.push({name: 'category_ids', value: this.searchForm.get('category_ids').value});\n    }\n\n    if (!this.isShowAll) {\n      this.getProductionListsForPagination();\n    } else {\n      this.searchForm.get('page').patchValue(1);\n      this.getProductionLists();\n    }\n  }\n\n  onShowAll() {\n    this.isShowAll = true;\n    this.setTableScrollHeight();\n    this.searchLists();\n  }\n\n  onShowPartial() {\n    this.isShowAll = false;\n    this.setTableScrollHeight();\n    this.searchLists();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchLists();\n    }\n  }\n\n  onSelectProductStructureCategories(ids: string) {\n    this.searchForm.get('root_categories').patchValue(ids);\n    this.searchLists();\n  }\n\n  onSelectCategories(ids: string) {\n    this.searchForm.get('category_ids').patchValue(ids);\n    this.searchLists();\n  }\n\n  onSelectEmployee(id: number) {\n    this.searchForm.get('responsible_employee_id').patchValue(id);\n    this.searchLists();\n  }\n\n  onChoiceViewType(mode: ViewMode) {\n    this.viewMode = mode;\n    this.selectedList = null;\n  }\n\n  onSetListLocator() {\n    this.listService.openSetProductionListLocatorModal(this.selectedList.id).subscribe(response => {\n      if (response) {\n        this.searchLists();\n      }\n    });\n  }\n\n  setTableScrollHeight() {\n    if (this.isHideFilters && !this.isShowAll) {\n      this.tableScrollHeight = '20.875rem';\n      return;\n    }\n\n    if (this.isHideFilters && this.isShowAll) {\n      this.tableScrollHeight = '18.75rem';\n      return;\n    }\n\n    if (!this.isHideFilters && this.isShowAll) {\n      this.tableScrollHeight = '27.5rem';\n      return;\n    }\n\n    if (!this.isHideFilters && !this.isShowAll) {\n      this.tableScrollHeight = '29.625rem';\n      return;\n    }\n  }\n\n  toggleFilterVisibility() {\n    this.isHideFilters = !this.isHideFilters;\n\n    this.setTableScrollHeight();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <div class=\"header-wrapper\">\n        <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n        <h1>Production Lists</h1>\n      </div>\n\n      <div class=\"colors\">\n        <div class=\"colors__color\">\n          <div class=\"colors__color-block colors__color-block_deficit\"></div>\n          <p>Deficit Accepted</p>\n        </div>\n        <div class=\"colors__color\">\n          <div class=\"colors__color-block colors__color-block_free-products\"></div>\n          <p>Free Warehouse Products</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        class=\"ml-auto mr-2\"\n        pButton\n        type=\"button\"\n        icon=\"pi pi-table\"\n        label=\"Hierarchy\"\n        [disabled]=\"viewMode === viewModeType.HIERARCHY\"\n        (click)=\"onChoiceViewType(viewModeType.HIERARCHY)\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-list\"\n        label=\"List\"\n        [disabled]=\"viewMode === viewModeType.LIST\"\n        (click)=\"onChoiceViewType(viewModeType.LIST)\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content locators\">\n  <div class=\"page__card\">\n\n    <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\n      <div class=\"filters-visibility__header\">\n        <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n      </div>\n\n      <button\n        class=\"icon pi\"\n        [class.pi-angle-double-up]=\"!isHideFilters\"\n        [class.pi-angle-double-down]=\"isHideFilters\"\n        (click)=\"toggleFilterVisibility()\"\n      ></button>\n\n      <form\n        [formGroup]=\"searchForm\"\n        class=\"form mb-3\"\n      >\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Code</label>\n              <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Name</label>\n              <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Categories</label>\n              <pek-multi-categories-picker\n                (choiceCategories)=\"onSelectCategories($event)\"\n              ></pek-multi-categories-picker>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Product Structure Category</label>\n              <pek-multi-product-structure-categories-picker\n                (choiceCategories)=\"onSelectProductStructureCategories($event)\"\n              ></pek-multi-product-structure-categories-picker>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Created Date From</label>\n              <p-calendar\n                formControlName=\"date_created_after\"\n                [showButtonBar]=\"true\"\n                (ngModelChange)=\"searchLists()\"\n                dataType=\"date\"\n                dateFormat=\"dd/mm/yy\"\n                [readonlyInput]=\"true\"\n              ></p-calendar>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Created Date To</label>\n              <p-calendar\n                formControlName=\"date_created_before\"\n                (ngModelChange)=\"searchLists()\"\n                [showButtonBar]=\"true\"\n                dataType=\"date\"\n                dateFormat=\"dd/mm/yy\"\n                [readonlyInput]=\"true\"\n              ></p-calendar>\n            </div>\n          </div>\n          <div class=\"col-3\"></div>\n          <div class=\"col-3\">\n            <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\n          </div>\n        </div>\n      </form>\n    </div>\n    <ng-container *ngIf=\"viewMode === viewModeType.LIST\">\n      <div class=\"table-pagination-preloader\">\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\n          [scrollable]=\"true\"\n          dataKey=\"id\"\n          [rows]=\"10\"\n          [(selection)]=\"selectedList\"\n          [value]=\"lists\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 5%\" class=\"text-center\">#</th>\n              <th style=\"width: 15%\">Code</th>\n              <th style=\"width: 15%\">Name</th>\n              <th style=\"width: 10%\" class=\"text-center\">Date Of Creation</th>\n              <th style=\"width: 6%\" class=\"text-center\">Sets</th>\n              <th style=\"width: 9%\">Locator</th>\n              <th style=\"width: 6%\" class=\"text-center\">Total</th>\n              <th style=\"width: 7%\" class=\"text-center\">Not Processed</th>\n              <th style=\"width: 6%\" class=\"text-center\">Deficit</th>\n              <th style=\"width: 7%\" class=\"text-center\">Outsource</th>\n              <th style=\"width: 7%\" class=\"text-center\">Own Production</th>\n              <th style=\"width: 7%\" class=\"text-center\">Purchased</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-list let-i=\"rowIndex\">\n            <tr\n              [pSelectableRow]=\"list\"\n              [class.deficit]=\"list.descendants_has_deficit_accepted\"\n              [class.free-products]=\"list.descendants_has_free_warehouse_products\"\n            >\n              <td style=\"width: 5%\" class=\"text-center\">\n                <h3 class=\"td-title\">#</h3>\n                {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\n              </td>\n              <td style=\"width: 15%\">\n                <h3 class=\"td-title\">Code</h3>\n                ({{list.id}}) {{list.nomenclature.code}}\n              </td>\n              <td style=\"width: 15%\">\n                <h3 class=\"td-title\">Name</h3>\n                {{list.nomenclature.name}}\n              </td>\n              <td style=\"width: 10%\" class=\"text-center\">\n                <h3 class=\"td-title\">Date Of Creation</h3>\n                {{list.created|date:'dd/MM/yyyy'}}\n              </td>\n              <td style=\"width: 6%\" class=\"text-center\">\n                <h3 class=\"td-title\">Sets</h3>\n                {{list.sets_number}}\n              </td>\n              <td style=\"width: 9%\">\n                <h3 class=\"td-title\">Locator</h3>\n                <ng-container *ngIf=\"list.locator\">\n                  {{list.locator.name + ' '}}<br>\n                  R: {{list.locator.row}}\n                  Col: {{list.locator.column}}\n                  Sh: {{list.locator.shelf}}\n                  Pl: {{list.locator.place}}\n                </ng-container>\n              </td>\n              <td class=\"text-center\" style=\"width: 6%\">\n                <h3 class=\"td-title\">Total</h3>\n                {{list.statistics.total_products_count}}\n              </td>\n              <td class=\"text-center\" style=\"width: 7%\">\n                <h3 class=\"td-title\">Not Processed</h3>\n                {{list.statistics.not_processed_products_count}}\n              </td>\n              <td class=\"text-center\" style=\"width: 6%\">\n                <h3 class=\"td-title\">Deficit</h3>\n                {{list.statistics.deficit_products_count}}\n              </td>\n              <td class=\"text-center\" style=\"width: 7%\">\n                <h3 class=\"td-title\">Outsource</h3>\n                {{list.statistics.outsource_production_count}}\n              </td>\n              <td class=\"text-center\" style=\"width: 7%\">\n                <h3 class=\"td-title\">Own Production</h3>\n                {{list.statistics.own_production_count}}\n              </td>\n              <td class=\"text-center\" style=\"width: 7%\">\n                <h3 class=\"td-title\">Purchased</h3>\n                {{list.statistics.purchased_ordered_count}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"12\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </div>\n\n      <div\n        class=\"paginator-wrapper\"\n        *ngIf=\"!isShowAll\"\n        [class.hide]=\"lists.length === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"count\"\n          (onPageChange)=\"paginate($event)\"\n        >\n        </p-paginator>\n        <p-button\n          (click)=\"onShowAll()\"\n          class=\"paginator-all\"\n          type=\"button\"\n          styleClass=\"p-button-text\"\n        >\n          All\n        </p-button>\n      </div>\n\n      <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\n        <p-button\n          type=\"button\"\n          (click)=\"onShowPartial()\"\n          styleClass=\"p-button-text\"\n        >\n          Return pagination\n        </p-button>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"viewMode === viewModeType.HIERARCHY\">\n      In development\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #actionButtons>\n  <div class=\"action-buttons\">\n    <a\n      class=\"ml-auto mt-auto mr-2\"\n      [class.disabled]=\"!selectedList\"\n      [routerLink]=\"[selectedList?.id]\"\n      target=\"_blank\"\n      pButton\n      type=\"button\"\n      icon=\"pi pi-bars\"\n      label=\"Production List\"\n    >\n    </a>\n    <button\n      class=\"mt-auto\"\n      pButton\n      type=\"button\"\n      icon=\"pi pi-angle-double-right\"\n      label=\"Set List Locator\"\n      (click)=\"onSetListLocator()\"\n      [disabled]=\"!selectedList\"\n    >\n    </button>\n  </div>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {Category} from '../../../product-structure/models/category';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {cloneDeep} from 'lodash-es';\nimport {finalize, Subject, takeUntil} from 'rxjs';\nimport {TreeService} from '@shared/services/tree.service';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-categories',\n  templateUrl: './warehouse-categories.component.html',\n  styleUrls: ['./warehouse-categories.component.scss']\n})\nexport class WarehouseCategoriesComponent implements OnInit, OnDestroy {\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Selected Category',\n      items: [\n        {\n          label: 'Edit',\n          icon: 'pi pi-pencil',\n          command: () => this.onEditCategory()\n        },\n        {\n          label: 'Remove',\n          icon: 'pi pi-trash',\n          command: () => this.onRemoveCategory()\n        }\n      ]\n    }\n  ];\n\n  isMovingUp = false;\n  isMovingDown = false;\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  categoriesTree: TreeNode<Category>[];\n  selectedCategory: TreeNode<Category>;\n  categories: Category[] = [];\n  expanseMap = {};\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private readonly treeService: TreeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.categoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  onAddCategory() {\n    this.categoriesService.createEditWarehouseCategoryModal('create').subscribe(category => {\n      if (category) {\n        this.categories.unshift(category);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditCategory() {\n    this.categoriesService.createEditWarehouseCategoryModal('edit', this.selectedCategory.data).subscribe(category => {\n      if (category) {\n        const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n        this.categories[index] = category;\n        this.createTree();\n        this.selectedCategory = this.treeService.findSelectedNode(this.selectedCategory, this.categoriesTree);\n      }\n    });\n  }\n\n  onRemoveCategory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.categoriesService.delete(this.selectedCategory.data).subscribe(() => {\n          const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n          this.categories.splice(index, 1);\n          this.selectedCategory = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, this.expanseMap);\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, this.expanseMap);\n  }\n\n  getMeasure(measure) {\n    if (measure != null) {\n      return measure.name + ' (' + measure.symbol + ')';\n    } else {\n      return '_';\n    }\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.categoriesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.categoriesTree = temp;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  down() {\n    const node = this.selectedCategory;\n\n    const index = this.findIndexToMove(node.data.id);\n\n    if ((index < node.parent?.children.length - 1 || (!node.parent && index < this.categoriesTree.length - 1)) && !this.isMovingDown) {\n      this.isMovingDown = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index + 1].data.id : this.categoriesTree[index + 1].data.id,\n        move_to: 'right'\n      };\n      this.categoriesService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingDown = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'down');\n      });\n    }\n  }\n\n  up() {\n    const node = this.selectedCategory;\n    const index = this.findIndexToMove(node.data.id);\n\n    if (index > 0 && !this.isMovingUp) {\n      this.isMovingUp = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index - 1].data.id : this.categoriesTree[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.categoriesService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingUp = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'up');\n      });\n    }\n  }\n\n  findIndexToMove(selectedNodeId) {\n    let index;\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach((node, i) => {\n        if (node.data.id === selectedNodeId) {\n          index = i;\n          return;\n        } else {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n    return index;\n  }\n\n  productMoved(category: Category, direction: 'up' | 'down') {\n    let findedProduct: TreeNode<Category>;\n    let parentProduct: TreeNode<Category>;\n\n    const findProduct = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === category.id) {\n          findedProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findProduct(node.children);\n          }\n        }\n      });\n    };\n\n    const findParent = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === findedProduct.parent.data.id) {\n          parentProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findParent(node.children);\n          }\n        }\n      });\n    };\n\n    findProduct(this.categoriesTree);\n\n    if (findedProduct.parent) {\n      findParent(this.categoriesTree);\n    } else {\n      parentProduct = findedProduct;\n    }\n\n    if (findedProduct.parent) {\n      const index = parentProduct.children.findIndex(child => child.data.id === category.id);\n\n      if (direction === 'down') {\n        [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\n      } else {\n        [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\n      }\n    } else {\n      const index = this.categoriesTree.findIndex(node => node.data.id === category.id);\n\n      if (direction === 'down') {\n        [this.categoriesTree[index], this.categoriesTree[index + 1]] = [this.categoriesTree[index + 1], this.categoriesTree[index]];\n      } else {\n        [this.categoriesTree[index], this.categoriesTree[index - 1]] = [this.categoriesTree[index - 1], this.categoriesTree[index]];\n      }\n    }\n\n    this.categoriesTree = this.categoriesTree.map(node => node);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouse Categories</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Category\" (click)=\"onAddCategory()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-treeTable\n        [value]=\"categoriesTree\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedCategory\"\n        [scrollable]=\"true\"\n        scrollHeight=\"calc(100vh - 19.2rem)\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-arrow-up\"\n              class=\"p-button-rounded mr-2\"\n              [disabled]=\"!selectedCategory\"\n              [loading]=\"isMovingUp\"\n              (click)=\"up()\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-arrow-down\"\n              class=\"p-button-rounded mr-2\"\n              [disabled]=\"!selectedCategory\"\n              [loading]=\"isMovingDown\"\n              (click)=\"down()\"\n            ></button>\n            <p class=\"ml-1 subtitle\" *ngIf=\"!selectedCategory\">Choose the Category to edit</p>\n            <p-menubar\n              class=\"product-structure-bar ml-auto mr-2\"\n              [model]=\"menuItems\"\n              [class.disabled]=\"!selectedCategory\"\n            ></p-menubar>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-angle-down\"\n              label=\"Expand All\"\n              class=\"mr-2\"\n              (click)=\"onExpandAll()\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-angle-up\"\n              label=\"Collapse All\"\n              (click)=\"onCollapseAll()\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"padding-left: 52px; width: 40%\">Name</th>\n            <th style=\"width: 35%\" class=\"text-center\">Unit of Measure</th>\n            <th style=\"width: 35%\">Description</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n          <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n            <td style=\"width: 40%\">\n              <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n              {{rowData.name}}\n            </td>\n            <td style=\"width: 35%\" class=\"text-center\">\n              {{getMeasure(rowData.unit_of_measure)}}\n            </td>\n            <td style=\"width: 35%\">\n              <ng-container>\n                {{rowData.description}}\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-treeTable>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {InvoiceProduct} from '../../../../../procurement/models/invoice-product';\r\nimport {map, switchMap, take, tap} from 'rxjs/operators';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {InvoiceProductService} from '../../../../../procurement/services/invoice-product.service';\r\nimport {InvoiceService} from '../../../../../procurement/services/invoice.service';\r\nimport {OrderTechnicalEquipment} from '../../../../models/order-technical-equipment';\r\nimport {TechnicalEquipmentsInUseService} from '../../../../services/technical-equipments-in-use.service';\r\nimport {OrderTechnicalEquipmentsService} from '../../../../services/order-technical-equipments.service';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-isolator-invoices',\r\n  templateUrl: './warehouse-isolator-invoices.component.html',\r\n  styleUrls: ['./warehouse-isolator-invoices.component.scss']\r\n})\r\nexport class WarehouseIsolatorInvoicesComponent implements OnInit, OnDestroy {\r\n  invoiceId: number;\r\n  isLoading = true;\r\n  invoiceProducts: InvoiceProduct[] = [];\r\n\r\n  orderId: number;\r\n  orderTechnicalEquipments: OrderTechnicalEquipment[] = [];\r\n  isLoadingTechnicalEquipment = true;\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly invoiceProductService: InvoiceProductService,\r\n    private readonly invoiceService: InvoiceService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(invoiceId => {\r\n      this.invoiceId = +invoiceId;\r\n      this.loadInvoiceProducts();\r\n      this.getInvoiceInfo();\r\n    });\r\n  }\r\n\r\n  loadInvoiceProducts() {\r\n    this.invoiceProductService.get(\r\n      [\r\n        {name: 'invoice', value: this.invoiceId},\r\n        {name: 'not_passed_quantity__gt', value: 0}\r\n      ]\r\n    ).pipe(takeUntil(this.destroy$)).subscribe(invoiceProducts => {\r\n      this.invoiceProducts = invoiceProducts;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getInvoiceInfo() {\r\n    this.invoiceService.getById(this.invoiceId).subscribe(invoice => {\r\n      if (invoice.order.id) {\r\n        this.orderId = invoice.order.id;\r\n        this.getOrderTechnicalEquipments();\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    this.orderTechnicalEquipmentsService.get([\r\n      {name: 'order', value: this.orderId},\r\n      {name: 'not_passed_quantity__gt', value: 0},\r\n    ]).pipe(take(1), takeUntil(this.destroy$)).subscribe(technicalEquipments => {\r\n      this.orderTechnicalEquipments = technicalEquipments;\r\n      this.isLoadingTechnicalEquipment = false;\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Invoice Isolator Items</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"invoiceProducts.length > 0\"\r\n        [rows]=\"10\"\r\n        [value]=\"invoiceProducts\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"mt-1\"></div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 35%\">Name</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && invoiceProducts.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt2\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"orderTechnicalEquipments.length > 0\"\r\n        [rows]=\"10\"\r\n        [value]=\"orderTechnicalEquipments\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"mt-1\"></div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 35%\">Name</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt2.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt2.paginator && !isLoading && orderTechnicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt2.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {InvoiceProduct} from '../../../../../procurement/models/invoice-product';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {InvoiceProductService} from '../../../../../procurement/services/invoice-product.service';\r\nimport {map, switchMap, take} from 'rxjs/operators';\r\nimport {OrderProduct} from '../../../../../procurement/models/order-product';\r\nimport {OrderProductService} from '../../../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../../models/order-technical-equipment';\r\nimport {OrderTechnicalEquipmentsService} from '../../../../services/order-technical-equipments.service';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-isolator-orders',\r\n  templateUrl: './warehouse-isolator-orders.component.html',\r\n  styleUrls: ['./warehouse-isolator-orders.component.scss']\r\n})\r\nexport class WarehouseIsolatorOrdersComponent implements OnInit, OnDestroy {\r\n\r\n  isLoading = true;\r\n  orderProducts: OrderProduct[] = [];\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  isLoadingTechnicalEquipment = true;\r\n  private destroy$ = new Subject();\r\n\r\n  orderId: number;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly orderProductService: OrderProductService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(orderId => {\r\n      this.orderId = +orderId;\r\n      this.loadIsolatedProducts();\r\n      this.getOrderTechnicalEquipments();\r\n    });\r\n  }\r\n\r\n  loadIsolatedProducts() {\r\n    this.orderProductService.get(\r\n      [\r\n        {name: 'not_passed_quantity__gt', value: '0'},\r\n        {name: 'order', value: this.orderId}\r\n      ]\r\n    ).pipe(takeUntil(this.destroy$)).subscribe(orderProducts => {\r\n      this.orderProducts = orderProducts;\r\n      this.isLoading = false;\r\n    })\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    this.orderTechnicalEquipmentsService.get([\r\n      {name: 'order', value: this.orderId},\r\n      {name: 'not_passed_quantity__gt', value: 0},\r\n    ]).pipe(take(1), takeUntil(this.destroy$)).subscribe(technicalEquipments => {\r\n      this.technicalEquipments = technicalEquipments;\r\n      this.isLoadingTechnicalEquipment = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Order Isolator Items</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <h2 class=\"page__caption\">Ordered Items</h2>\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"orderProducts.length > 0\"\r\n        [rows]=\"10\"\r\n        [value]=\"orderProducts\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"mt-1\"></div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 35%\">Name</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && orderProducts.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <h2 class=\"page__caption\">Technical Equipment</h2>\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt2\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"technicalEquipments.length > 0\"\r\n        [rows]=\"10\"\r\n        [value]=\"technicalEquipments\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"mt-1\"></div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\r\n            <th style=\"width: 35%\">Name</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Quantity</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Passed</th>\r\n            <th class=\"text-center\" style=\"width: 20%\">Not Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\r\n            <td style=\"width: 35%\">{{product.nomenclature.name}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.passed_quantity}}</td>\r\n            <td class=\"text-center\" style=\"width: 20%\">{{product.not_passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\r\n              <i *ngIf=\"isLoadingTechnicalEquipment\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoadingTechnicalEquipment\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt2.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt2.paginator && !isLoadingTechnicalEquipment && technicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt2.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Order} from '../../../procurement/models/order';\nimport {Invoice} from '../../../procurement/models/invoice';\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\nimport {OrderService} from '../../../procurement/services/order.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-isolator',\n  templateUrl: './warehouse-isolator.component.html',\n  styleUrls: ['./warehouse-isolator.component.scss']\n})\nexport class WarehouseIsolatorComponent implements OnInit, OnDestroy {\n  isLoadingInvoices = true;\n  isLoadingOrders = true;\n\n  invoices: Invoice[] = [];\n  orders: Order[] = [];\n\n  selectedInvoice: Invoice;\n  selectedOrder: Order;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private orderService: OrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getInvoices();\n    this.getOrders();\n  }\n\n  getInvoices() {\n    this.invoiceService.get([{name: 'contains_isolated_products', value: true}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(invoices => {\n      this.invoices = invoices;\n      this.isLoadingInvoices = false;\n    });\n  }\n\n  getOrders() {\n    this.orderService.get([{name: 'contains_isolated_products', value: true}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(orders => {\n      this.orders = orders;\n      this.isLoadingOrders = false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouse Isolator</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__tabs\">\n    <p-tabView class=\"custom-tabs\">\n      <p-tabPanel header=\"Invoices Isolator\" [selected]=\"true\">\n        <div class=\"page__table\">\n          <p-table\n            #dt\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 18.8rem)\"\n            [scrollable]=\"true\"\n            [paginator]=\"invoices.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedInvoice\"\n            [value]=\"invoices\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p class=\"subtitle\" *ngIf=\"!selectedInvoice\">Choose the Invoice to view Items</p>\n                <button\n                  class=\"ml-auto\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Isolator Items\"\n                  [disabled]=\"!selectedInvoice\"\n                  [routerLink]=\"['invoices', selectedInvoice?.id]\"\n                ></button>\n              </div>\n            </ng-template>\n\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 20%\" class=\"text-center\">Date</th>\n                <th style=\"width: 25%\" class=\"text-center\">Invoice Number</th>\n                <th style=\"width: 25%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 25%\" class=\"text-center\">Supplier</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\n              <tr [pSelectableRow]=\"invoice\">\n                <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{invoice.system_creation_date | date:'dd/MM/yyyy'}}</td>\n                <td style=\"width: 25%\"\n                    class=\"text-center\">{{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{invoice.order?.id}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{invoice.supplier?.name}}</td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n                  <i *ngIf=\"isLoadingInvoices\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingInvoices\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"dt.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n        </div>\n        <div *ngIf=\"!dt.paginator && !isLoadingInvoices && invoices.length > 0\" class=\"paginator-return-pagination\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=true\"\n            styleClass=\"p-button-text\"\n          >\n            Return pagination\n          </p-button>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Orders Isolator\">\n        <div class=\"page__table\">\n          <p-table\n            #st\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 18.8rem)\"\n            [scrollable]=\"true\"\n            [paginator]=\"orders.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedOrder\"\n            [value]=\"orders\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex\">\n                <p class=\"subtitle\" *ngIf=\"!selectedOrder\">Choose the Order to view Items</p>\n                <button\n                  class=\"ml-auto\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-bars\"\n                  label=\"Isolator Items\"\n                  [disabled]=\"!selectedOrder\"\n                  [routerLink]=\"['orders', selectedOrder?.id]\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 5%\" class=\"text-center\">#</th>\n                <th style=\"width: 20%\" class=\"text-center\">Date</th>\n                <th style=\"width: 25%\" class=\"text-center\">Order ID</th>\n                <th style=\"width: 25%\" class=\"text-center\">Root List</th>\n                <th style=\"width: 25%\" class=\"text-center\">Items Reception Date</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n              <tr [pSelectableRow]=\"order\">\n                <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{order.created | date:'dd/MM/yyyy'}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">{{order.id}}</td>\n                <td style=\"width: 25%\" class=\"text-center\">\n                  <ng-container *ngIf=\"order.root_production_list_products.length > 0\">\n                    {{order.root_production_list_products[0].nomenclature.code}}\n                    ~{{order.root_production_list_products[0].nomenclature.name}}\n                  </ng-container>\n                </td>\n                <td style=\"width: 25%\" class=\"text-center\">{{order.items_reception_date | date: 'dd/MM/yyyy'}}</td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n                  <i *ngIf=\"isLoadingOrders\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingOrders\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"st.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n        </div>\n        <div *ngIf=\"!st.paginator && !isLoadingOrders && orders.length > 0\" class=\"paginator-return-pagination\">\n          <p-button\n            type=\"button\"\n            (click)=\"st.paginator=true\"\n            styleClass=\"p-button-text\"\n          >\n            Return pagination\n          </p-button>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {WarehouseProduct} from '../../models/warehouse-product';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\r\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {WarehouseProductService} from '../../services/warehouse-product.service';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {debounceTime, map, tap} from 'rxjs/operators';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {environment} from '@env/environment';\r\nimport {QrCodeService} from '../../../qr-code/qr-code.service';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-items',\r\n  templateUrl: './warehouse-items.component.html',\r\n  styleUrls: ['./warehouse-items.component.scss', './warehouse-items.mobile.component.scss']\r\n})\r\nexport class WarehouseItemsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('searchBoxName') searchBoxName;\r\n  @ViewChild('searchBoxCode') searchBoxCode;\r\n  @ViewChild('searchBoxDescription') searchBoxDescription;\r\n\r\n  tableScrollHeight = '29.75rem';\r\n\r\n  isHideFilters = false;\r\n  isShowAll = false;\r\n  isLoading = false;\r\n  isStartOnePage = false;\r\n\r\n  selectedProducts: WarehouseProduct[] = [];\r\n  products: WarehouseProduct[] = [];\r\n  countProducts: number = 0;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    name: [null],\r\n    code: [null],\r\n    description: [null],\r\n    warehouse: [null],\r\n    category: [null],\r\n    root_categories: [null],\r\n    locator: {value: null, disabled: true},\r\n    type: [null],\r\n    acceptedByInvoices: [null],\r\n    order_by_code: [null],\r\n    order_by_name: [null],\r\n    order_by_category: [null],\r\n    order_by_warehouse: [null],\r\n    order_by_locator: [null],\r\n    order_by_quantity: [null],\r\n    exclude_zero: [null],\r\n    exclude_empty: [null],\r\n    page: [1],\r\n  });\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'page', value: this.searchForm.get('page').value},\r\n    {name: 'paginated', value: true},\r\n    {name: 'at_area', value: false}\r\n  ];\r\n\r\n  queryKey = 'name:null/code:null/description:null/type:null/acceptedByInvoices:null/warehouse:null/locator:null/category:null';\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  link = environment.link_url + 'dash/';\r\n  isGenerating = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly productCategoriesService: CategoriesService,\r\n    private readonly warehouseProductService: WarehouseProductService,\r\n    private readonly qrCodeService: QrCodeService,\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedProducts = []),\r\n        map(() => this.searchBoxName.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n\r\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedProducts = []),\r\n        map(() => this.searchBoxCode.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n\r\n    fromEvent(this.searchBoxDescription.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedProducts = []),\r\n        map(() => this.searchBoxDescription.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n      this.searchProducts();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getProductsForPagination();\r\n  }\r\n\r\n  getProductsForPagination() {\r\n    this.warehouseProductService.getGroupedPagination(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      response.results.forEach((product: any, idx) => {\r\n        if (!product.nomenclature) {\r\n          product.nomenclature = {\r\n            id: product.nomenclature_id,\r\n            code: product.code,\r\n            name: product.name,\r\n            type: product.type,\r\n            category: product.category,\r\n            description: product.description,\r\n          };\r\n        }\r\n\r\n        product.checkedForGeneration = false;\r\n        product.uid = idx;\r\n      });\r\n\r\n      this.products = response.results;\r\n      this.countProducts = response.count;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getProducts() {\r\n    this.warehouseProductService.getGrouped(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(response => {\r\n      response.forEach((product: any, idx) => {\r\n        if (!product.nomenclature) {\r\n          product.nomenclature = {\r\n            id: product.nomenclature_id,\r\n            code: product.code,\r\n            name: product.name,\r\n            type: product.type,\r\n            category: product.category,\r\n            description: product.description,\r\n          };\r\n        }\r\n\r\n        product.checkedForGeneration = false;\r\n        product.uid = idx;\r\n      });\r\n\r\n      this.products = response;\r\n      this.countProducts = response.length;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  searchProducts() {\r\n    this.isLoading = true;\r\n    this.destroy$.next(true);\r\n    this.selectedProducts = [];\r\n\r\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/description:${this.searchForm.get('description').value}/type:${this.searchForm.get('type').value}/acceptedByInvoices:${this.searchForm.get('acceptedByInvoices').value}/warehouse:${this.searchForm.get('warehouse').value}/locator:${this.searchForm.get('locator').value}/category:${this.searchForm.get('category').value}`;\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.isStartOnePage = true;\r\n    }\r\n\r\n    this.query = [];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query = [\r\n        {name: 'paginated', value: 'true'},\r\n        {name: 'page', value: this.searchForm.get('page').value},\r\n      ];\r\n    }\r\n\r\n    this.query.push({name: 'at_area', value: false});\r\n\r\n    if (this.searchForm.get('name').value) this.query.push({\r\n      name: 'name',\r\n      value: this.searchForm.get('name').value.replace(/\\+/g, '%2b')\r\n    });\r\n\r\n    if (this.searchForm.get('code').value) this.query.push({name: 'code', value: this.searchForm.get('code').value});\r\n\r\n    if (this.searchForm.get('description').value) this.query.push({\r\n      name: 'description',\r\n      value: this.searchForm.get('description').value\r\n    });\r\n\r\n    if (this.searchForm.get('type').value) this.query.push({name: 'type', value: this.searchForm.get('type').value});\r\n\r\n    if (this.searchForm.get('warehouse').value) this.query.push({\r\n      name: 'warehouse',\r\n      value: this.searchForm.get('warehouse').value\r\n    });\r\n\r\n    if (this.searchForm.get('locator').value) this.query.push({\r\n      name: 'locator',\r\n      value: this.searchForm.get('locator').value\r\n    });\r\n\r\n    if (this.searchForm.get('category').value) this.query.push({\r\n      name: 'category',\r\n      value: this.searchForm.get('category').value\r\n    });\r\n\r\n    if (this.searchForm.get('root_categories').value) this.query.push({\r\n      name: 'root_categories',\r\n      value: this.searchForm.get('root_categories').value\r\n    });\r\n\r\n    if (this.searchForm.get('acceptedByInvoices').value !== null) this.query.push({\r\n      name: 'accepted_by_invoices',\r\n      value: this.searchForm.get('acceptedByInvoices').value\r\n    });\r\n\r\n    if (this.searchForm.get('exclude_zero').value !== null) this.query.push({\r\n      name: 'exclude_zero',\r\n      value: this.searchForm.get('exclude_zero').value\r\n    });\r\n\r\n    if (this.searchForm.get('exclude_empty').value !== null) this.query.push({\r\n      name: 'exclude_empty',\r\n      value: this.searchForm.get('exclude_empty').value\r\n    });\r\n\r\n    const ordering = this.prepareSortingField();\r\n    if (ordering) {\r\n      this.query.push({\r\n        name: 'ordering',\r\n        value: ordering\r\n      });\r\n    }\r\n\r\n    if (!this.isShowAll) {\r\n      this.getProductsForPagination();\r\n    } else {\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.getProducts();\r\n    }\r\n  }\r\n\r\n  onAddItem() {\r\n    this.warehouseProductService.openCreateEditWarehouseProductModal('create').subscribe(response => {\r\n      if (response) {\r\n        this.searchProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  selectWarehouse(warehouseId: number) {\r\n    let value = null;\r\n    if (warehouseId) value = warehouseId;\r\n    this.searchForm.get('warehouse').patchValue(value);\r\n    this.searchProducts();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (!this.isStartOnePage) {\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchProducts();\r\n    }\r\n  }\r\n\r\n  onEditItem() {\r\n    this.warehouseProductService.openCreateEditWarehouseProductModal('edit', this.selectedProducts[0].nomenclature.id).subscribe(response => {\r\n      if (response) {\r\n        this.searchProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  onMoveProduct() {\r\n    this.warehouseProductService.openMoveWarehouseProductModal(this.selectedProducts[0]).subscribe(response => {\r\n      if (response) {\r\n        this.searchProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowAll() {\r\n    this.isShowAll = true;\r\n    this.setTableScrollHeight();\r\n    this.searchProducts();\r\n  }\r\n\r\n  onShowPartial() {\r\n    this.isShowAll = false;\r\n    this.setTableScrollHeight();\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectLocator(id: number) {\r\n    this.searchForm.get('locator').patchValue(id);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectNomenclatureType(type: ENomenclatureType) {\r\n    this.searchForm.get('type').patchValue(type);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onSelectAcceptedType(type: boolean) {\r\n    this.searchForm.get('acceptedByInvoices').patchValue(type);\r\n    this.searchProducts();\r\n  }\r\n\r\n\r\n  onSelectProductStructureCategory(ids: number[]) {\r\n    if (ids) {\r\n      this.searchForm.get('root_categories').patchValue(ids.join(','));\r\n    } else {\r\n      this.searchForm.get('root_categories').patchValue('');\r\n    }\r\n\r\n    this.searchProducts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  toggleFilterVisibility() {\r\n    this.isHideFilters = !this.isHideFilters;\r\n\r\n    this.setTableScrollHeight();\r\n  }\r\n\r\n  onSelectCategory(category: Category) {\r\n    if (category) {\r\n      this.searchForm.get('category').patchValue(category.id);\r\n    } else {\r\n      this.searchForm.get('category').patchValue(null);\r\n    }\r\n\r\n    this.searchProducts();\r\n  }\r\n\r\n  setTableScrollHeight() {\r\n    if (this.isHideFilters && !this.isShowAll) {\r\n      this.tableScrollHeight = '20.875rem';\r\n      return;\r\n    }\r\n\r\n    if (this.isHideFilters && this.isShowAll) {\r\n      this.tableScrollHeight = '18.25rem';\r\n      return;\r\n    }\r\n\r\n    if (!this.isHideFilters && this.isShowAll) {\r\n      this.tableScrollHeight = '27.5rem';\r\n      return;\r\n    }\r\n\r\n    if (!this.isHideFilters && !this.isShowAll) {\r\n      this.tableScrollHeight = '29.75rem';\r\n      return;\r\n    }\r\n  }\r\n\r\n  showSerialsInfo() {\r\n    if (this.selectedProducts) {\r\n      this.warehouseProductService.openNomenclatureInfoModal(this.selectedProducts[0].extra_info, this.selectedProducts[0].nomenclature as Nomenclature).subscribe();\r\n    }\r\n  }\r\n\r\n  prepareSortingField(): string {\r\n    let sorting = '';\r\n    if (this.searchForm.get('order_by_code').value !== null) {\r\n      if (this.searchForm.get('order_by_code').value) {\r\n        sorting += '-nomenclature__code,';\r\n      } else {\r\n        sorting += 'nomenclature__code,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_name').value !== null) {\r\n      if (this.searchForm.get('order_by_name').value) {\r\n        sorting += '-nomenclature__name,';\r\n      } else {\r\n        sorting += 'nomenclature__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_category').value !== null) {\r\n      if (this.searchForm.get('order_by_category').value) {\r\n        sorting += '-nomenclature__category__name,';\r\n      } else {\r\n        sorting += 'nomenclature__category__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_warehouse').value !== null) {\r\n      if (this.searchForm.get('order_by_warehouse').value) {\r\n        sorting += '-locator__warehouse__name,';\r\n      } else {\r\n        sorting += 'locator__warehouse__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_locator').value !== null) {\r\n      if (this.searchForm.get('order_by_locator').value) {\r\n        sorting += '-locator__name,';\r\n      } else {\r\n        sorting += 'locator__name,';\r\n      }\r\n    }\r\n    if (this.searchForm.get('order_by_quantity').value !== null) {\r\n      if (this.searchForm.get('order_by_quantity').value) {\r\n        sorting += '-total_locator_quantity,';\r\n      } else {\r\n        sorting += 'total_locator_quantity,';\r\n      }\r\n    }\r\n\r\n    return sorting;\r\n  }\r\n\r\n  showIsReserved(items: any[]) {\r\n    if (items) return items.some(i => i.reserved_by_opened_production_lists_quantity > 0)\r\n  }\r\n\r\n  sorting(value: boolean, field: string) {\r\n    this.resetAllSorting();\r\n    if (value === null) {\r\n      this.searchForm.get(field).patchValue(false);\r\n    } else if (value === false) {\r\n      this.searchForm.get(field).patchValue(true);\r\n    } else if (value === true) {\r\n      this.searchForm.get(field).patchValue(null);\r\n    }\r\n    this.searchProducts();\r\n  }\r\n\r\n  resetAllSorting() {\r\n    this.searchForm.get('order_by_code').setValue(null);\r\n    this.searchForm.get('order_by_name').setValue(null);\r\n    this.searchForm.get('order_by_category').setValue(null);\r\n    this.searchForm.get('order_by_warehouse').setValue(null);\r\n    this.searchForm.get('order_by_locator').setValue(null);\r\n    this.searchForm.get('order_by_quantity').setValue(null);\r\n  }\r\n\r\n  onGenerateQrCodes() {\r\n    // this.isGenerating = true;\r\n\r\n    const send = {\r\n      by_nomenclatures_list: [],\r\n    };\r\n\r\n    this.selectedProducts.forEach(p => {\r\n      console.log('product', p);\r\n      if (p.nomenclature.bulk_or_serial !== '1') {\r\n        send.by_nomenclatures_list.push({\r\n          nomenclature_id: p.nomenclature.id,\r\n          serial_number_ids: [],\r\n          order_product_ids: [],\r\n          invoice_product_ids: [],\r\n        });\r\n      } else {\r\n        send.by_nomenclatures_list.push({\r\n          nomenclature_id: p.nomenclature.id,\r\n          serial_number_ids: p.extra_info && p.extra_info.length > 0 ? p.extra_info.map(product => +product.serial_number_id) : [],\r\n          order_product_ids: [],\r\n          invoice_product_ids: [],\r\n        });\r\n      }\r\n    });\r\n\r\n    this.qrCodeService.generateQrCodes(send).subscribe(() => this.isGenerating = false);\r\n  }\r\n\r\n  isReservedDisable(): boolean {\r\n    return Boolean(this.selectedProducts[0]?.extra_info.reduce((sum, item) => sum += item.quantity, 0) === this.selectedProducts[0]?.extra_info.reduce((sum, item) => sum += item.reserved_by_opened_production_lists_quantity, 0));\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Warehouse Items</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-qrcode\"\r\n        label=\"Generate QR Codes\"\r\n        [loading]=\"isGenerating\"\r\n        (click)=\"onGenerateQrCodes()\"\r\n        [disabled]=\"!selectedProducts || selectedProducts?.length === 0\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-info-circle\"\r\n        label=\"Serial Info\"\r\n        [disabled]=\"!selectedProducts || (selectedProducts?.length === 0 || selectedProducts?.length > 1) ||\r\n         selectedProducts[0]?.nomenclature?.bulk_or_serial !== '1'\"\r\n        (click)=\"showSerialsInfo()\"\r\n      >\r\n      </button>\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-angle-double-right\"\r\n        label=\"Move\"\r\n        [disabled]=\"!selectedProducts || (selectedProducts?.length === 0 || selectedProducts?.length > 1) ||\r\n         (selectedProducts?.length === 1 && (!selectedProducts[0]?.total_locator_quantity &&\r\n          !selectedProducts[0]?.total_area_locator_quantity))\"\r\n        (click)=\"onMoveProduct()\"\r\n      >\r\n<!--       add in NgIf || isReservedDisable()-->\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-pencil\"\r\n        class=\"mr-2\"\r\n        label=\"Edit Item\"\r\n        (click)=\"onEditItem()\"\r\n        [disabled]=\"!selectedProducts || (selectedProducts?.length === 0 || selectedProducts?.length > 1)\"\r\n      ></button>\r\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Item\" (click)=\"onAddItem()\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"warehouse-items\">\r\n      <div class=\"warehouse-items__left\">\r\n        <div class=\"form-group\">\r\n          <pek-categories-tree-picker\r\n            [currentCategoryId]=\"searchForm.get('category').value\"\r\n            (categorySelected)=\"onSelectCategory($event)\"\r\n          >\r\n          </pek-categories-tree-picker>\r\n        </div>\r\n      </div>\r\n      <div class=\"warehouse-items__right\">\r\n        <div class=\"page__table\">\r\n          <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\r\n            <div class=\"filters-visibility__header\"></div>\r\n\r\n            <button\r\n              class=\"icon pi\"\r\n              [class.pi-angle-double-up]=\"!isHideFilters\"\r\n              [class.pi-angle-double-down]=\"isHideFilters\"\r\n              (click)=\"toggleFilterVisibility()\"\r\n            ></button>\r\n\r\n            <form\r\n              [formGroup]=\"searchForm\"\r\n              class=\"warehouse-items__form mb-3\"\r\n            >\r\n              <div class=\"row\">\r\n                <div class=\"col-4 warehouse-items__categories\">\r\n                  <div class=\"form-group\">\r\n                    <label>Categories</label>\r\n                    <pek-product-category-picker\r\n                      (choiceCategory)=\"onSelectCategory($event)\"\r\n                      [currentCategoryId]=\"searchForm.get('category').value\"\r\n                    ></pek-product-category-picker>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Code</label>\r\n                    <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-3\">\r\n                  <div class=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input class=\"form-control\" formControlName=\"description\" pInputText #searchBoxDescription>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-1\">\r\n                  <div class=\"form-group\">\r\n                      <label>Exclude Zero's</label>\r\n                      <p-checkbox class=\"mt-1\" formControlName=\"exclude_zero\" [binary]=\"true\" (ngModelChange)=\"searchProducts()\"></p-checkbox>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-1\">\r\n                  <div class=\"form-group\">\r\n                    <label>Exclude Empty</label>\r\n                    <p-checkbox class=\"mt-1\" formControlName=\"exclude_empty\" [binary]=\"true\" (ngModelChange)=\"searchProducts()\"></p-checkbox>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Warehouses</label>\r\n                        <pek-warehouse-picker (selectWarehouse)=\"selectWarehouse($event)\"></pek-warehouse-picker>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Locator</label>\r\n                        <pek-locator-picker\r\n                          [warehouseId]=\"searchForm.get('warehouse').value\"\r\n                          [isAllLocators]=\"false\"\r\n                          [isDisabled]=\"true\"\r\n                          (selectLocator)=\"onSelectLocator($event)\"\r\n                        ></pek-locator-picker>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Type</label>\r\n                        <pek-nomenclature-type-picker\r\n                          (choiceNomenclatureType)=\"onSelectNomenclatureType($event)\"\r\n                        ></pek-nomenclature-type-picker>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Accepted Type</label>\r\n                        <pek-accepted-type-picker\r\n                          (selectAcceptedType)=\"onSelectAcceptedType($event)\"\r\n                        ></pek-accepted-type-picker>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"form-group\">\r\n                    <label>Product Structure Category</label>\r\n                    <pek-product-structure-category-picker\r\n                      [isAllIds]=\"true\"\r\n                      (choiceCategoryFolAllIds)=\"onSelectProductStructureCategory($event)\"\r\n                    ></pek-product-structure-category-picker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"table-pagination-preloader\">\r\n            <p-table\r\n              #dt\r\n              selectionMode=\"multiple\"\r\n              [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n              dataKey=\"uid\"\r\n              [scrollable]=\"true\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedProducts\"\r\n              [value]=\"products\"\r\n            >\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 3%\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                  </th>\r\n                  <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\r\n                  <th style=\"width: 15%\"\r\n                      class=\"sort-label\"\r\n                      pSortableColumn=\"nomenclature.code\"\r\n                      (click)=\"sorting(searchForm.get('order_by_code').value, 'order_by_code')\">\r\n                    Code\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_code').value\"></pek-sort-icon>\r\n                  </th>\r\n                  <th style=\"width: 15%\"\r\n                      pSortableColumn=\"nomenclature.name\"\r\n                      class=\"sort-label\"\r\n                      (click)=\"sorting(searchForm.get('order_by_name').value, 'order_by_name')\">\r\n                    Name\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_name').value\"></pek-sort-icon>\r\n                  </th>\r\n                  <th class=\"text-center\" style=\"width: 10%\">Technology</th>\r\n                  <th class=\"text-center\" style=\"width: 10%\"\r\n                      pSortableColumn=\"nomenclature.total_locator_quantity\"\r\n                      (click)=\"sorting(searchForm.get('order_by_quantity').value, 'order_by_quantity')\">\r\n                    Quantity\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_quantity').value\"></pek-sort-icon>\r\n                  </th>\r\n\r\n                  <th class=\"text-center\" style=\"width: 6%\">UOM</th>\r\n                  <th class=\"text-center sort-label\" style=\"width: 13%\"\r\n                      pSortableColumn=\"nomenclature.category.name\"\r\n                      (click)=\"sorting(searchForm.get('order_by_category').value, 'order_by_category')\">\r\n                    Category\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_category').value\"></pek-sort-icon>\r\n                  </th>\r\n                  <th class=\"text-center sort-label\" style=\"width: 12%\"\r\n                      pSortableColumn=\"locator.warehouse.name\"\r\n                      (click)=\"sorting(searchForm.get('order_by_warehouse').value, 'order_by_warehouse')\">\r\n                    Warehouse\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_warehouse').value\"></pek-sort-icon>\r\n                  </th>\r\n                  <th class=\"text-center\" style=\"width: 14%\"\r\n                      pSortableColumn=\"locator.name\"\r\n                      (click)=\"sorting(searchForm.get('order_by_locator').value, 'order_by_locator')\">\r\n                    Locator\r\n                    <pek-sort-icon [value]=\"searchForm.get('order_by_locator').value\"></pek-sort-icon>\r\n                  </th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"product\" [pRowToggler]=\"product\">\r\n                  <td style=\"width: 3%\">\r\n                    <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n                  </td>\r\n                  <td style=\"width: 5%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">#</h3>\r\n                    {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\r\n                  </td>\r\n                  <td style=\"width: 15%\">\r\n                    <h3 class=\"td-title\">Code</h3>\r\n                    {{product.nomenclature.code}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"in-use\">\r\n                    <h3 class=\"td-title\">Name</h3>\r\n                    <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n                    <b *ngIf=\"product.nomenclature.has_technical_equipment\">(T)</b>\r\n                    <b *ngIf=\"showIsReserved(product.extra_info)\">(R)</b>\r\n                    {{product.nomenclature.name}}\r\n                    <span class=\"text-danger\" *ngIf=\"product.used_by_order && product.used_by_order.length > 0\">\r\n                      <b>In Use</b>\r\n\r\n                      <div class=\"in-use-info\">\r\n                        <p>In use by orders:</p>\r\n                        <div *ngFor=\"let order of product.used_by_order\">\r\n                          <a *ngIf=\"order.accounting_type === 3\" [href]=\"link + 'production/orders/order/' + order.order_id\"\r\n                              target=\"_blank\">{{order.order_id}}\r\n                          </a>\r\n                          <a *ngIf=\"order.accounting_type === 2\" [href]=\"link + 'outsource/outsource-chain/products/' + order.order_id\"\r\n                             target=\"_blank\">{{order.order_id}}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Technology</h3>\r\n                    {{product.current_technology?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Quantity</h3>\r\n                    {{product.total_locator_quantity}}\r\n                  </td>\r\n                  <td style=\"width: 6%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Uom</h3>\r\n                    <ng-container *ngIf=\"product.nomenclature.category || product.nomenclature.root_category\">\r\n                      <ng-container *ngIf=\"product.nomenclature.category\">\r\n                        {{product.nomenclature.category?.unit_of_measure?.symbol ? product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"product.nomenclature.root_category\">\r\n                        {{product.nomenclature.root_category?.unit_of_measure?.symbol ? product.nomenclature.root_category?.unit_of_measure?.symbol : 'Pcs' }}\r\n                      </ng-container>\r\n                    </ng-container>\r\n\r\n                    <span *ngIf=\"!product.nomenclature.category && !product.nomenclature.root_category\">\r\n                    Pcs\r\n                  </span>\r\n                  </td>\r\n                  <td style=\"width: 13%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Category</h3>\r\n                    {{product.nomenclature.category?.name}}\r\n                    {{product.nomenclature.root_category?.name}}\r\n                  </td>\r\n                  <td style=\"width: 12%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Warehouse</h3>\r\n                    <ng-container\r\n                      *ngIf=\"product.locator\">\r\n                      {{product.locator.warehouse.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td style=\"width: 14%\" class=\"text-center\">\r\n                    <h3 class=\"td-title\">Locator</h3>\r\n                    <ng-container *ngIf=\"product.locator\">\r\n                      {{product.locator.name}}\r\n                    </ng-container>\r\n                    <span class=\"d-block\" *ngIf=\"product.locator\"> R: {{product.locator.row}} Col:\r\n                      {{product.locator.column}} Sh: {{product.locator.shelf}} Pl:\r\n                      {{product.locator.place}}\r\n                  </span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center tr-spinner p-4\" [attr.colspan]=\"10\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-table>\r\n            <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n              <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"paginator-wrapper\"\r\n            *ngIf=\"!isShowAll\"\r\n            [class.paginator-wrapper_hide]=\"products.length === 0\"\r\n          >\r\n            <p-paginator\r\n              #paginator\r\n              [rows]=\"10\"\r\n              [totalRecords]=\"countProducts\"\r\n              (onPageChange)=\"paginate($event)\">\r\n            </p-paginator>\r\n            <p-button\r\n              (click)=\"onShowAll()\"\r\n              class=\"paginator-all\"\r\n              type=\"button\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </div>\r\n          <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"onShowPartial()\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NavigationLink} from '../../../layout/navigation-route';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-layout',\r\n  templateUrl: './warehouse-layout.component.html',\r\n  styleUrls: ['./warehouse-layout.component.scss']\r\n})\r\nexport class WarehouseLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Items', commands: ['items']},\r\n    {label: 'QC-Warehouse', commands: ['warehouse-qc']},\r\n    {label: 'Production Lists', commands: ['production-lists']},\r\n    {label: 'Production Requests', commands: ['production-requests']},\r\n    {label: 'Tool Requests', commands: ['tool-requests']},\r\n    {label: 'Shipment Requests', commands: ['shipments-requests']},\r\n    {label: 'Where Used', commands: ['where-used']},\r\n    {label: 'Physical Inventory', commands: ['physical-inventory']},\r\n  ]\r\n\r\n  settingsRoutes: NavigationLink[] = [\r\n    {label: 'Warehouses', commands: ['warehouses']},\r\n    {label: 'Categories', commands: ['categories']},\r\n    {label: 'Units of Measure', commands: ['measure']},\r\n    {label: 'Serial Number Types', commands: ['serial-types']},\r\n    {label: 'Isolator', commands: ['isolator']},\r\n  ]\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<pek-header\n  [module]=\"'Warehouse'\"\n  [routes]=\"routes\"\n  [settingsRoutes]=\"settingsRoutes\"\n></pek-header>\n\n<router-outlet></router-outlet>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {map, switchMap, tap} from 'rxjs/operators';\nimport {LocatorService} from '../../services/locator.service';\nimport {Locator} from '../../models/locator';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Warehouse} from '../../models/warehouse';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-locators',\n  templateUrl: './warehouse-locators.component.html',\n  styleUrls: ['./warehouse-locators.component.scss']\n})\nexport class WarehouseLocatorsComponent implements OnInit, OnDestroy {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Locator',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditLocator()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveLocator()\n      }\n    ]\n  }];\n\n  warehouseId: number;\n  currentWarehouse: Warehouse;\n\n  locators: Locator[] = [];\n  selectedLocator: Locator;\n\n  isLoading = true;\n  isLoadingWarehouse = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private locatorService: LocatorService,\n    private readonly warehouseService: WarehouseService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getLocators();\n    this.getCurrentWarehouse();\n  }\n\n  getLocators() {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.warehouseId = +id),\n      switchMap(() => this.locatorService.get([{name: 'warehouse', value: this.warehouseId}])),\n      takeUntil(this.destroy$)\n    ).subscribe(locators => {\n      this.locators = locators;\n      this.isLoading = false;\n    });\n  }\n\n  getCurrentWarehouse() {\n    this.warehouseService.getById(this.warehouseId).subscribe(warehouse => {\n      this.currentWarehouse = warehouse;\n      this.isLoadingWarehouse = false;\n    });\n  }\n\n  onAddLocator() {\n    this.locatorService.createEditLocatorModal('create').subscribe(locator => {\n      if (locator) {\n        this.locators.unshift(locator);\n      }\n    });\n  }\n\n  onEditLocator() {\n    this.locatorService.createEditLocatorModal('edit', this.selectedLocator).subscribe(locator => {\n      if (locator) {\n        const index = this.locators.findIndex(t => t.id === this.selectedLocator.id);\n        this.locators[index] = locator;\n        this.selectedLocator = this.locators[index];\n      }\n    });\n  }\n\n  onRemoveLocator() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.locatorService.delete(this.selectedLocator).subscribe(() => {\n          const index = this.locators.findIndex(w => w.id === this.selectedLocator.id);\n          this.locators.splice(index, 1);\n            this.selectedLocator = null;\n        });\n      }\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Locators (Warehouse: {{isLoadingWarehouse ? '...' : currentWarehouse.name}})</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Locator\" (click)=\"onAddLocator()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"locators.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedLocator\"\n        [value]=\"locators\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedLocator\">Choose the Locator to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedLocator\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 20%\">Name</th>\n            <th style=\"width: 20%\" class=\"text-center\">Description</th>\n            <th style=\"width: 15%\" class=\"text-center\">Row</th>\n            <th style=\"width: 15%\" class=\"text-center\">Column</th>\n            <th style=\"width: 15%\" class=\"text-center\">Shelf</th>\n            <th style=\"width: 10%\" class=\"text-center\">Place</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-locator let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"locator\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1 }}</td>\n            <td style=\"width: 20%\">{{locator.name}}</td>\n            <td style=\"width: 20%;\" class=\"text-center\">{{locator.description}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.row}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.column}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{locator.shelf}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{locator.place}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && locators.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Request} from '../../models/request';\r\nimport {ENomenclatureType} from '@shared/models/nomenclature';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {SerialNumber} from '../../../procurement/models/invoice';\r\nimport {GroupedRequest} from '../../models/grouped-request';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-production-request-print-page',\r\n  templateUrl: './warehouse-production-request-print-page.component.html',\r\n  styleUrls: ['./warehouse-production-request-print-page.component.scss']\r\n})\r\nexport class WarehouseProductionRequestPrintPageComponent implements OnInit {\r\n  @Input() requests: GroupedRequest[] = [];\r\n  @Input() rootList: any;\r\n  @Input() orderId: number;\r\n  @Input() technologies: string[];\r\n  currentDate = new Date();\r\n  @Input() currentReqDate: Date = null;\r\n\r\n  constructor(\r\n    public readonly auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getType(type: ENomenclatureType) {\r\n    switch (type) {\r\n      case ENomenclatureType.ASSEMBLY:\r\n        return 'Assembly'\r\n      case ENomenclatureType.PURCHASED:\r\n        return 'Outsourcing'\r\n      case ENomenclatureType.MANUFACTURED:\r\n        return 'Own Production'\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"warehouse-production-request-print-page\" *ngIf=\"rootList\">\r\n  <div class=\"warehouse-production-request-print-page__header\">\r\n    <div>\r\n      <h2>Code</h2>\r\n      <p>{{rootList.nomenclature.code}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Name</h2>\r\n      <p>{{rootList.nomenclature.name}}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Order ID</h2>\r\n      <p>{{orderId}}</p>\r\n    </div>\r\n    <div>\r\n      <h2></h2>\r\n      <p></p>\r\n    </div>\r\n    <div>\r\n      <h2>Production List Creation Date</h2>\r\n      <p>{{rootList.list.created | date: 'dd.MM.y' }}</p>\r\n    </div>\r\n    <div>\r\n      <h2>Request Creation Date</h2>\r\n      <p>\r\n        <ng-container *ngIf=\"currentReqDate\">\r\n          {{currentReqDate | date: 'dd.MM.y' }}\r\n        </ng-container>\r\n      </p>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <h2>Technologies</h2>\r\n      <p>\r\n        <span *ngFor=\"let tech of technologies; let last=last\">\r\n          {{tech}} {{last ? '' : ','}}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"warehouse-production-request-print-page__table\">\r\n    <div\r\n      *ngFor=\"let request of requests\"\r\n      class=\"warehouse-production-request-print-page__row\"\r\n    >\r\n      <div class=\"warehouse-production-request-print-page__box\">\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>ID</h3>\r\n          <p>{{request.id}} <span *ngIf=\"request.ids.length > 0\">L({{request.ids.length + 1}})</span></p>\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Code</h3>\r\n          <div *ngIf=\"request.material_nomenclature\">\r\n            {{request.material_nomenclature.code}}\r\n          </div>\r\n          <div *ngIf=\"request.order_product_nomenclature\">\r\n            {{request.order_product_nomenclature.code}}\r\n          </div>\r\n          <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n            {{request.list_product.nomenclature.code}}\r\n          </div>\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Name</h3>\r\n          <div *ngIf=\"request.material_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.material_nomenclature.name}}\r\n          </div>\r\n          <div *ngIf=\"request.order_product_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.order_product_nomenclature.name}}\r\n          </div>\r\n          <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n            <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n            {{request.list_product.nomenclature.name}}\r\n          </div>\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Technology</h3>\r\n          <span *ngIf=\"request.technology\">{{request.technology}}</span>\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Required Quantity</h3>\r\n          {{request.total_required_quantity}}\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Locator</h3>\r\n          <div *ngIf=\"request.locators\">\r\n            <div *ngFor=\"let locator of request.unique_locators; let last=last\">\r\n              {{locator.name}}<span *ngIf=\"!last\">,</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Available Quantity</h3>\r\n          {{request.warehouse_quantity}}\r\n        </div>\r\n        <div class=\"warehouse-production-request-print-page__col\">\r\n          <h3>Type</h3>\r\n          <p>{{getType(request.list_product?.nomenclature?.type)}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"warehouse-production-request-print-page__bottom\">\r\n    <div class=\"warehouse-production-request-print-page__column\">\r\n      <div class=\"warehouse-production-request-print-page__left\">\r\n        <div>\r\n          <h3>Sent</h3>\r\n          <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"warehouse-production-request-print-page__right\">\r\n        <div>\r\n          <h3>Retrieved</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Date</h3>\r\n          <p></p>\r\n        </div>\r\n        <div>\r\n          <h3>Signed</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {AuthService} from '../../../auth/auth.service';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {RequestService} from '../../services/request.service';\r\nimport {Table} from 'primeng/table';\r\nimport {MenuItem, TreeNode} from 'primeng/api';\r\nimport {Request} from '../../models/request';\r\nimport {List} from '../../models/list';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {Task} from '@shared/models/task';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {environment} from '@env/environment';\r\nimport {find, forkJoin, Subject, takeUntil} from 'rxjs';\r\nimport {OrderTechnicalEquipment} from '../../models/order-technical-equipment';\r\nimport {OrderTechnicalEquipmentsService} from '../../services/order-technical-equipments.service';\r\nimport {take} from 'rxjs/operators';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {SerialNumber} from '../../../procurement/models/invoice';\r\nimport {ScanResult} from '../../../qr-code/models/scan-result';\r\nimport {GroupedRequest} from '../../models/grouped-request';\r\n\r\n\r\nenum ViewMode {\r\n  LIST = 0,\r\n  HIERARCHY = 1,\r\n  DETAILED_HIERARCHY = 2,\r\n}\r\n\r\nclass ProductRequestListOrder extends Order {\r\n  ordered_items_technologies?: string[];\r\n}\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-warehouse-production-request',\r\n  templateUrl: './warehouse-production-request.component.html',\r\n  styleUrls: ['./warehouse-production-request.component.scss']\r\n})\r\nexport class WarehouseProductionRequestComponent implements OnInit, OnDestroy {\r\n  link = environment.link_url + 'dash/';\r\n  viewModes = ViewMode;\r\n  viewMode: ViewMode = ViewMode.LIST;\r\n  @ViewChild('dt') dateTable: Table;\r\n\r\n  isShowPrint = true;\r\n\r\n  destroy$ = new Subject();\r\n  lastScannedId: number;\r\n\r\n  requestNodeMenuItems: MenuItem[] = [{\r\n    label: 'Selected Request',\r\n    items: [\r\n      {\r\n        label: 'Show Images',\r\n        icon: 'pi pi-images',\r\n        command: () => this.showImages(this.selectedRequestNode.data.request)\r\n      },\r\n      {\r\n        label: 'Cancel',\r\n        icon: 'pi pi-times',\r\n        command: () => this.onCancelItem(this.selectedRequestNode.data.request)\r\n      }\r\n    ]\r\n  }];\r\n\r\n  requestMenuItems: MenuItem[] = [{\r\n    label: 'Selected Request',\r\n    items: [\r\n      {\r\n        label: 'Show Images',\r\n        icon: 'pi pi-images',\r\n        command: () => this.showImages(this.selectedRequest)\r\n      },\r\n      {\r\n        label: 'Cancel',\r\n        icon: 'pi pi-times',\r\n        command: () => this.onCancelItem(this.selectedRequest)\r\n      }\r\n    ]\r\n  }];\r\n\r\n  rootList: any = null;\r\n  currentDate: Date = new Date();\r\n  selectedRequest: GroupedRequest;\r\n  currentReqDate: Date = null;\r\n\r\n  isLoading = true;\r\n  requests: GroupedRequest[] = [];\r\n  listRequests: GroupedRequest[] = [];\r\n  hierarchyRequests: GroupedRequest[] = [];\r\n  order: ProductRequestListOrder;\r\n  orderId = this.route.snapshot.paramMap.get('id');\r\n\r\n  requestTree: TreeNode[] = [];\r\n  selectedRequestNode: TreeNode;\r\n\r\n  detailedRequestTree: TreeNode[] = [];\r\n  selectedDetailedRequestNode: TreeNode;\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n  isLoadingTree = true;\r\n  elementsRowsIds: any[] = [];\r\n  isScanned = false;\r\n  scanningEnd: boolean;\r\n  currentDisplayRowId: null;\r\n  foundRowsIds: any[] = [];\r\n  firstPage = 0;\r\n\r\n  constructor(\r\n    private requestsService: RequestService,\r\n    public readonly auth: AuthService,\r\n    private ordersService: OrderService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private readonly modalService: ModalService,\r\n    private readonly tasksService: TaskService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrderInfo(+this.orderId);\r\n    this.getRequests();\r\n    this.getOrderTechnicalEquipments();\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    const query = [{name: 'order', value: +this.orderId}, {name: 'in_use', value: false}];\r\n    this.orderTechnicalEquipmentsService.get(query).pipe(take(1), untilDestroyed(this)).subscribe(technicalEquipments => {\r\n      this.technicalEquipments = technicalEquipments;\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.modalService.confirm('danger', 'Confirm').subscribe(res => {\r\n      if (res) {\r\n        this.requestsService.cancel(+this.orderId).pipe(untilDestroyed(this)).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderInfo(orderId: number): void {\r\n    this.ordersService.getById(orderId).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).pipe(untilDestroyed(this)).subscribe(order => {\r\n\r\n      this.order = order;\r\n      this.order.ordered_items_technologies = [];\r\n      this.order.order_products.forEach(product => {\r\n        if (product.current_technology) {\r\n          const canAddTechnology = this.order.ordered_items_technologies\r\n            .findIndex(el => el === product.current_technology.name) < 0;\r\n          if (canAddTechnology) {\r\n            this.order.ordered_items_technologies.push(product.current_technology.name);\r\n          }\r\n        }\r\n      });\r\n      this.prepareDetailedCategoryTree();\r\n    });\r\n  }\r\n\r\n  prepareDetailedCategoryTree(): void {\r\n    const categoriesTemp: {\r\n      id: number,\r\n      level: number,\r\n      parentId: number,\r\n      name: string,\r\n      serialNumber: string,\r\n      planId?: number,\r\n      code?: number\r\n    }[] = [];\r\n\r\n    this.order.root_production_plans.forEach(plan => {\r\n      const isAdded = categoriesTemp.findIndex(el => el.id === plan.list_product.id);\r\n      const hasSerialNumber = plan.serial_numbers.length > 0;\r\n      let serialNumber;\r\n      if (hasSerialNumber) {\r\n        const planInfo = plan.serial_numbers[0];\r\n        serialNumber = planInfo.type_with_number ? planInfo.type_with_number : planInfo.id;\r\n      }\r\n      if (isAdded < 0) {\r\n        categoriesTemp.push({\r\n          name: plan.list_product.nomenclature.name,\r\n          code: plan.list_product.nomenclature.code,\r\n          serialNumber,\r\n          id: plan.list_product.id,\r\n          planId: plan.id,\r\n          level: 0,\r\n          parentId: null\r\n        });\r\n      }\r\n    });\r\n\r\n    this.detailedRequestTree = [];\r\n    categoriesTemp.forEach(cat => {\r\n      this.detailedRequestTree.push({\r\n        data: cat,\r\n        children: [{\r\n          data: {loading: 'Loading data ...'}\r\n        }],\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n    this.detailedRequestTree.forEach(node => {\r\n      console.log('node', node);\r\n      // this.loadPlanInfo(node);\r\n    });\r\n\r\n  }\r\n\r\n  changeView(view: ViewMode) {\r\n    this.selectedRequest = null;\r\n    this.selectedRequestNode = null;\r\n    this.viewMode = view;\r\n  }\r\n\r\n  getRequests() {\r\n    this.isLoading = true;\r\n    this.requests = [];\r\n    // this.requestTree = [];\r\n\r\n    this.requestsService.getByOrder(+this.orderId).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(requests => {\r\n      this.isLoading = false;\r\n      this.requests = requests;\r\n      this.listRequests = [...this.requests];\r\n      this.hierarchyRequests = [...this.requests];\r\n      this.listRequests.forEach(request => {\r\n\r\n        request.requests = this.listRequests.filter(req => {\r\n          return this.getSameRequests(req, request) && req.id !== request.id;\r\n        });\r\n\r\n        request.ids = request.requests.map(req => req.id);\r\n        request.all_reserved_serial_products = [];\r\n        request.unique_locators = [...request.locators]\r\n        if (request.reserved_serial_products) {\r\n          request.all_reserved_serial_products.push(...request.reserved_serial_products.map(serial_number => serial_number.serial_number));\r\n        }\r\n        request.requests.forEach(req => {\r\n          if (req.reserved_serial_products?.length > 0) {\r\n            request.all_reserved_serial_products.push(...req.reserved_serial_products.map(serial_number => serial_number.serial_number))\r\n          }\r\n          request.unique_locators.push(...req.locators);\r\n        });\r\n        request.total_required_quantity = request.requests.reduce(\r\n          (accumulator, currentValue) => accumulator + currentValue.required_quantity, request.required_quantity\r\n        )\r\n        request.unique_locators = request.unique_locators.filter((locator, index, self) => self.findIndex(innerLocator => innerLocator.id === locator.id) === index)\r\n\r\n        request.ids.forEach(id => {\r\n          const index = this.listRequests.findIndex(req => req.id === id);\r\n          this.listRequests.splice(index, 1)\r\n        });\r\n      });\r\n\r\n      this.hierarchyRequests.forEach(request => {\r\n        request.requests = this.hierarchyRequests.filter(req => {\r\n          return this.getSameRequests(req, request) && req.id !== request.id &&\r\n            (req.for_order_product?.nomenclature.id === request.for_order_product?.nomenclature.id ||\r\n              req.list_product?.nomenclature.id === request.list_product?.nomenclature.id);\r\n        });\r\n\r\n        request.ids = request.requests.map(req => req.id);\r\n\r\n        request.total_required_quantity = request.requests.reduce(\r\n          (accumulator, currentValue) => accumulator + currentValue.required_quantity, request.required_quantity\r\n        )\r\n\r\n        request.ids.forEach(id => {\r\n          const index = this.hierarchyRequests.findIndex(req => req.id === id);\r\n          this.hierarchyRequests.splice(index, 1)\r\n        });\r\n      });\r\n\r\n      this.prepareTreeCategories();\r\n      if (this.listRequests.length > 0) {\r\n        this.rootList = this.listRequests[0].root_production_list_products[0];\r\n        this.currentReqDate = this.listRequests[0].created;\r\n      }\r\n    });\r\n  }\r\n\r\n  getSameRequests(req: GroupedRequest, request: GroupedRequest): boolean {\r\n    let codeName = this.getCodeAndName(req)\r\n\r\n    let codeNameSecond = this.getCodeAndName(request);\r\n\r\n    return codeName.code === codeNameSecond.code && codeName.name === codeNameSecond.name;\r\n  }\r\n\r\n  getCodeAndName(request: GroupedRequest): {name: string, code: string} {\r\n    let codeSecond = '';\r\n    let nameSecond = '';\r\n    if (request.material_nomenclature) {\r\n      codeSecond = request.material_nomenclature.code;\r\n      nameSecond = request.material_nomenclature.name;\r\n    } else if (request.order_product_nomenclature) {\r\n      codeSecond = request.order_product_nomenclature.code;\r\n      nameSecond = request.order_product_nomenclature.name;\r\n    } else if (!request.material_nomenclature && !request.order_product_nomenclature) {\r\n      codeSecond = request.list_product.nomenclature.code;\r\n      nameSecond = request.list_product.nomenclature.name;\r\n    }\r\n    return {code: codeSecond, name: nameSecond}\r\n  }\r\n\r\n  expandCollapseAllOrders(isToExpand = true): void {\r\n    const temp = cloneDeep(this.requestTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.requestTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  prepareTreeCategories(): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    this.hierarchyRequests.forEach(request => {\r\n      if (request.for_order_product) {\r\n        const parentProducts = request.for_order_product.nomenclature;\r\n        const isAdded = categoriesTemp.findIndex(el => el.id === parentProducts.id);\r\n        if (isAdded < 0) {\r\n          categoriesTemp.push({name: parentProducts.name, id: parentProducts.id, level: 0, parentId: null});\r\n        }\r\n      } else if (request.list_product) {\r\n        const parentProducts = request.list_product.list as List;\r\n        const isAdded = categoriesTemp.findIndex(el => el.id === parentProducts.nomenclature.id);\r\n        if (isAdded < 0) {\r\n          categoriesTemp.push({\r\n            name: parentProducts.nomenclature.name,\r\n            id: parentProducts.nomenclature.id,\r\n            level: 0,\r\n            parentId: null\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.requestTree = [];\r\n    categoriesTemp.forEach(cat => {\r\n      this.requestTree.push({\r\n        data: cat,\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    this.fillTree();\r\n  }\r\n\r\n  fillTree(): void {\r\n    this.requestTree = this.requestTree.map(node => {\r\n      return {\r\n        ...node,\r\n        children: []\r\n      };\r\n    });\r\n\r\n    this.hierarchyRequests.forEach(request => {\r\n        this.requestTree.forEach(node => {\r\n          let parentNomenclature;\r\n          if (request.for_order_product) {\r\n            parentNomenclature = request.for_order_product.nomenclature;\r\n          } else if (request.list_product) {\r\n            // @ts-ignore\r\n            parentNomenclature = request.list_product.list.nomenclature;\r\n          }\r\n\r\n          if (node.data.id === parentNomenclature.id) {\r\n            node.children.push({\r\n              data: {request, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  onNodeExpand($event: any) {\r\n    if ($event.node.data.level === 0 && $event.node.children.length === 1) {\r\n      this.loadPlanInfo($event.node);\r\n    }\r\n  }\r\n\r\n  loadPlanInfo(rowNode: any) {\r\n    const planId = rowNode.data.planId;\r\n    this.loadRootListTree(planId);\r\n  }\r\n\r\n  loadRootListTree(planId: number) {\r\n    this.tasksService.get([{name: 'for_root', value: planId}]).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(res => {\r\n      this.buildDetailedPlanTree(res, planId);\r\n    });\r\n  }\r\n\r\n  buildDetailedPlanTree(tasks: Task[], planId: number): void {\r\n    const planIndex = this.detailedRequestTree.findIndex(el => el.data.planId === planId);\r\n    this.detailedRequestTree[planIndex].children = [];\r\n    tasks.sort((a, b) => a.list_product.level - b.list_product.level);\r\n    tasks.filter(task => task.list_product.level !== 0).forEach(task => {\r\n      this.findLevelParent(task.list_product.level - 1, task);\r\n    });\r\n\r\n    // this.detailedRequestTree = [...this.detailedRequestTree];\r\n  }\r\n\r\n  findLevelParent(level: number, task: Task): void {\r\n    const temp = cloneDeep(this.detailedRequestTree);\r\n    temp.forEach(node => {\r\n      this.addToParentTree(node, level, task);\r\n    });\r\n    this.detailedRequestTree = temp;\r\n  }\r\n\r\n  addToParentTree(node: TreeNode, level: number, task: Task): void {\r\n    if (node.data.level === level && node.data.id === task.list_product.parent) {\r\n      const existingIndex = node.children.findIndex(el => el.data.id === task.list_product?.id);\r\n      if (existingIndex < 0) {\r\n        // const foundInRequest = this.requests.find(el => el.task === task.id);\r\n        const foundInRequest = this.requests.find(el => el.list_product?.id === task.list_product?.id);\r\n        // if (task.list_product.nomenclature.name .includes('Washer 6 DIN 125 Zn')) {\r\n        //   console.log('foundInRequest', foundInRequest);\r\n        //   console.log('task', task);\r\n        //   console.log('this.requests', this.requests);\r\n        // }\r\n\r\n\r\n        node.children.push({\r\n          data: {\r\n            id: task.list_product.id,\r\n            code: task.list_product.nomenclature.code,\r\n            name: task.list_product.nomenclature.name,\r\n            level: task.list_product.level,\r\n            request: foundInRequest\r\n          },\r\n          children: []\r\n        });\r\n      }\r\n    } else if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.addToParentTree(childNode, level, task);\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancelItem(request: GroupedRequest) {\r\n    const requestId = request.id;\r\n    this.modalService.confirm('danger', 'Confirm').subscribe(res => {\r\n      if (res) {\r\n        const call = [];\r\n        const ids = request.ids ? request.ids : [];\r\n        const requestIds = [request, ...ids ];\r\n        requestIds.forEach(id => {\r\n          call.push(this.requestsService.cancelRequest(requestId));\r\n        });\r\n\r\n        forkJoin([\r\n          ...call\r\n        ]).pipe(untilDestroyed(this)).subscribe(res => {\r\n          this.selectedRequest = null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  expandCollapseDetailedView(isToExpand = true): void {\r\n    const temp = cloneDeep(this.detailedRequestTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.detailedRequestTree = temp;\r\n  }\r\n\r\n  showImages(request: GroupedRequest) {\r\n    let nomenclature: Nomenclature;\r\n\r\n    if (request.material_nomenclature) {\r\n      nomenclature = request.material_nomenclature;\r\n    } else if (request.order_product_nomenclature) {\r\n      nomenclature = request.order_product_nomenclature;\r\n    } else if (!request.material_nomenclature && !request.order_product_nomenclature) {\r\n      nomenclature = request.list_product.nomenclature;\r\n    }\r\n    const nomenclatureId = nomenclature.id;\r\n    this.modalService.showImageGallery([], nomenclatureId, 1).pipe(untilDestroyed(this)).subscribe();\r\n  }\r\n\r\n  complete() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isLoading = false;\r\n        this.requestsService.complete(+this.orderId).pipe(untilDestroyed(this)).subscribe(() => this.router.navigate(['../'], {relativeTo: this.route}));\r\n      }\r\n    });\r\n  }\r\n\r\n  onGoProd(id: number) {\r\n    window.open(`${this.link}production/plan/tasks/` + id, '_blank');\r\n  }\r\n\r\n  goOrder(type, id) {\r\n    let link = '';\r\n\r\n    if (type == 1) {\r\n      link = `${this.link}procurement/orders/products/` + id;\r\n    }\r\n\r\n    if (type == 2) {\r\n      link = `${this.link}outsource/outsource-chain/products/` + id;\r\n    }\r\n\r\n    if (type == 3) {\r\n      link = `${this.link}production/orders/order/` + id;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  goToOrder() {\r\n    let link = '';\r\n\r\n    if (this.order.accounting_type == 1) {\r\n      link = `${this.link}procurement/orders/products/` + this.order.id;\r\n    }\r\n\r\n    if (this.order.accounting_type == 2) {\r\n      link = `${this.link}outsource/outsource-chain/products/` + this.order.id;\r\n    }\r\n\r\n    if (this.order.accounting_type == 3) {\r\n      link = `${this.link}production/orders/order/` + this.order.id;\r\n    }\r\n\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  printPage() {\r\n    this.isShowPrint = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onStartScanning() {\r\n    this.clearQrResults();\r\n    this.expandCollapseAllOrders();\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id)\r\n      });\r\n    });\r\n    this.isScanned = true;\r\n    this.scanningEnd = false;\r\n  }\r\n\r\n  clearQrResults() {\r\n    this.currentDisplayRowId = null;\r\n    this.foundRowsIds = [];\r\n  }\r\n\r\n  onScanned(data: any) {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n    this.scanForListProduct(data)\r\n  }\r\n\r\n  onCancelScanned() {\r\n    this.scanningEnd = true;\r\n    this.isScanned = false;\r\n  }\r\n\r\n  scanForListProduct(data: ScanResult = null) {\r\n    this.expandCollapseAllOrders();\r\n    this.lastScannedId = null;\r\n\r\n    requestAnimationFrame(() => {\r\n      this.elementsRowsIds = [];\r\n      const elements = document.querySelectorAll(`[id^=row-]`);\r\n      elements.forEach((element) => {\r\n        this.elementsRowsIds.push(element.id)\r\n      });\r\n    });\r\n\r\n    if (this.viewMode === ViewMode.HIERARCHY) {\r\n      this.expandCollapseAllOrders();\r\n    }\r\n\r\n    this.requestsService.sendDataProductionRequests(this.orderId, data).pipe(untilDestroyed(this)).subscribe(res => {\r\n      this.testFoundIdsOnScan(res)\r\n    });\r\n  }\r\n\r\n  testFoundIdsOnScan(res) {\r\n    const ids = res.map(el => el.item_id_changed);\r\n\r\n    let elementIndex;\r\n    this.listRequests.forEach((request, index) => {\r\n      const isMainIdChecked = ids.findIndex(id => id === request.id) > -1;\r\n      if (isMainIdChecked) {\r\n        request.is_scanned = true;\r\n        elementIndex = index;\r\n        this.lastScannedId = request.id;\r\n      }\r\n      request.requests.forEach(req => {\r\n        if (ids.findIndex(id => id === req.id) > -1 ) {\r\n          req.is_scanned = true;\r\n          elementIndex = index;\r\n          this.lastScannedId = request.id;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (this.viewMode === ViewMode.LIST) {\r\n\r\n      if (elementIndex) {\r\n        this.firstPage = Math.floor(elementIndex / 10) * 10;\r\n      }\r\n    }\r\n\r\n    this.requestTree.forEach(node => {\r\n      node.children.forEach(child => {\r\n        const request = child.data.request;\r\n        const isMainIdChecked = ids.findIndex(id => id === request.id) > -1;\r\n        if (isMainIdChecked) {\r\n          request.is_scanned = true;\r\n          this.lastScannedId = request.id;\r\n        }\r\n        request.requests?.forEach(req => {\r\n          if (ids.findIndex(id => id === req.id) > -1 ) {\r\n            req.is_scanned = true;\r\n            this.lastScannedId = request.id;\r\n          }\r\n        });\r\n      });\r\n    });\r\n    if (this.viewMode === ViewMode.HIERARCHY) {\r\n\r\n      if (this.lastScannedId) {\r\n        this.scrollToElement('row-' + this.lastScannedId);\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollToElement(rowId: string): void {\r\n    const element = document.getElementById(rowId);\r\n    element.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n  }\r\n\r\n  isFullyScanned(request: any) {\r\n    if (request.requests?.length === 0) {\r\n      return request.is_scanned;\r\n    }\r\n    const mainScanned = request.is_scanned;\r\n    const allInnerScanned = !(request.requests?.findIndex(req => !req.is_scanned) > -1);\r\n    return mainScanned && allInnerScanned;\r\n  }\r\n\r\n  isPartlyScanned(request: any) {\r\n      if (request?.requests?.length === 0) {\r\n        return false;\r\n      }\r\n      const mainScanned = request.is_scanned;\r\n      const innerNeedScan = request.requests?.findIndex(req => !req.is_scanned) > -1;\r\n      return !this.isFullyScanned(request) && (mainScanned || !innerNeedScan);\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1 class=\"align-items-center d-flex\">\r\n        Requests for Order\r\n\r\n        <a\r\n          *ngIf=\"order?.accounting_type == 1\"\r\n          (click)=\"goOrder(1, order.id)\"\r\n          class=\"ml-2\"\r\n        >\r\n          {{orderId}}\r\n        </a>\r\n\r\n        <a *ngIf=\"order?.accounting_type == 2\"\r\n           (click)=\"goOrder(2, order.id)\"\r\n           class=\"ml-2\"\r\n        >\r\n          {{orderId}}\r\n        </a>\r\n\r\n        <a *ngIf=\"order?.accounting_type == 3\"\r\n           (click)=\"goOrder(3, order.id)\"\r\n           class=\"ml-2\"\r\n        >\r\n          {{orderId}}\r\n        </a>\r\n\r\n        <span *ngIf=\"order?.root_production_plans\" class=\"ml-2\">\r\n      <span *ngIf=\"order?.root_production_plans.length === 1\">\r\n        <a (click)=\"onGoProd(order?.root_production_plans[0].id)\">\r\n          {{order?.root_production_plans[0].list_product.nomenclature.name}}\r\n        </a>\r\n      </span>\r\n    </span>\r\n        <div class=\"colors\">\r\n          <div class=\"colors__color\">\r\n            <div class=\"colors__color-block colors__color-block_scanned\"></div>\r\n            <p>Scanned</p>\r\n          </div>\r\n          <div class=\"colors__color\">\r\n            <div class=\"colors__color-block colors__color-block_partly-scanned\"></div>\r\n            <p>Partly Scanned</p>\r\n          </div>\r\n        </div>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        icon=\"pi pi-print\"\r\n        class=\"mr-2\"\r\n        type=\"button\"\r\n        label=\"Print\"\r\n        (click)=\"printPage()\"\r\n        [disabled]=\"isLoading\"\r\n      >\r\n      </button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Complete\"\r\n        (click)=\"complete()\"\r\n      ></button>\r\n\r\n      <button\r\n        pButton\r\n        class=\"p-button-danger ml-2\"\r\n        icon=\"pi pi-times\"\r\n        type=\"button\"\r\n        label=\"Cancelation\"\r\n        (click)=\"onCancel()\"\r\n      ></button>\r\n\r\n      <a\r\n        pButton\r\n        class=\"ml-2\"\r\n        type=\"button\"\r\n        icon=\"pi pi-angle-double-right\"\r\n        [class.disabled]=\"!order\"\r\n        label=\"Go to Order\"\r\n        (click)=\"goToOrder()\"\r\n      >\r\n      </a>\r\n\r\n      <!--      <a-->\r\n      <!--        pButton-->\r\n      <!--        class=\"ml-2\"-->\r\n      <!--        type=\"button\"-->\r\n      <!--        target=\"blank\"-->\r\n      <!--        *ngIf=\"order?.accounting_type == 1\"-->\r\n      <!--        [routerLink]=\"['/dash/procurement/orders/products', order.id]\"-->\r\n      <!--        label=\"Go to Order\"-->\r\n      <!--      >-->\r\n      <!--      </a>-->\r\n\r\n      <!--      <a-->\r\n      <!--        pButton-->\r\n      <!--        class=\"ml-2\"-->\r\n      <!--        type=\"button\"-->\r\n      <!--        target=\"blank\"-->\r\n      <!--        *ngIf=\"order?.accounting_type == 2\"-->\r\n      <!--        [routerLink]=\"['/dash/outsource/outsource-chain/products', order.id]\"-->\r\n      <!--        label=\"Go to Order\"-->\r\n      <!--      >-->\r\n      <!--      </a>-->\r\n\r\n      <!--      <a-->\r\n      <!--        pButton-->\r\n      <!--        class=\"ml-2\"-->\r\n      <!--        type=\"button\"-->\r\n      <!--        target=\"blank\"-->\r\n      <!--        *ngIf=\"order?.accounting_type == 3\"-->\r\n      <!--        [routerLink]=\"['/dash/production/orders/order', order.id]\"-->\r\n      <!--        label=\"Go to Order\"-->\r\n      <!--      >-->\r\n      <!--      </a>-->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <ng-container *ngIf=\"viewMode === viewModes.LIST\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #dt\r\n          [paginator]=\"listRequests.length > 0\"\r\n          scrollHeight=\"calc(100vh - 18.8rem)\"\r\n          [scrollable]=\"!dt.paginator\"\r\n          class=\"adaptive-table print-table\"\r\n          [rows]=\"10\"\r\n          [value]=\"listRequests\"\r\n          [(first)]=\"firstPage\"\r\n          [globalFilterFields]=\"['name']\"\r\n          selectionMode=\"single\" [(selection)]=\"selectedRequest\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex table-caption\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedRequest\">Choose the Request to edit</p>\r\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"requestMenuItems\"\r\n                         [class.disabled]=\"!selectedRequest\"></p-menubar>\r\n\r\n              <!--      [disabled]=\"isLoadingTree\"        -->\r\n              <button\r\n                class=\"mr-2 p-button-icon\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-camera\"\r\n                label=\"Scan QR Codes\"\r\n                (click)=\"onStartScanning()\"\r\n              >\r\n              </button>\r\n              <button\r\n                [disabled]=\"viewMode === viewModes.LIST\"\r\n                pButton\r\n                type=\"button\"\r\n                class=\"mr-2\"\r\n                label=\"List\"\r\n                icon=\"pi pi-list\"\r\n                (click)=\"changeView(viewModes.LIST)\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"mr-2\"\r\n                label=\"Hierarchy\"\r\n                icon=\"pi pi-table\"\r\n                (click)=\"changeView(viewModes.HIERARCHY)\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-th-large\"\r\n                label=\"Detailed Hierarchy\"\r\n                (click)=\"changeView(viewModes.DETAILED_HIERARCHY)\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"colgroup\">\r\n            <colgroup>\r\n              <col class=\"index-header\">\r\n            </colgroup>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n              <th class=\"text-center\" style=\"width: 5%;\">ID</th>\r\n              <th style=\"width: 18%;\">Code</th>\r\n              <th style=\"width: 21%;\">Name</th>\r\n              <th style=\"width: 12%;\" class=\"text-center\">Technology</th>\r\n              <th class=\"text-center\" style=\"width: 14%;\">Required Quantity</th>\r\n              <th class=\"text-center\" style=\"width: 13%;\">Locator</th>\r\n              <th class=\"text-center\" style=\"width: 12%;\">Available Quantity</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-request let-i=\"rowIndex\">\r\n            <tr class=\"pagebreak\" [pSelectableRow]=\"request\"\r\n                [class.last-scanned]=\"request.id === lastScannedId\"\r\n                [class.partly-scanned]=\"isPartlyScanned(request)\"\r\n                [class.qr-code-scanned]=\"isFullyScanned(request)\">\r\n              <td style=\"width: 5%;\" class=\"text-center\">\r\n                <h3 class=\"td-title\">#</h3>\r\n                {{i + 1}}\r\n              </td>\r\n              <td style=\"width: 5%;\" class=\"text-center ids-container\">\r\n                <h3 class=\"td-title\">ID</h3>\r\n                {{request.id}} <span *ngIf=\"request.ids?.length > 0\">L({{request.ids?.length + 1}})</span>\r\n                <span *ngIf=\"request.ids?.length > 0\" class=\"ids\">\r\n                  <div>\r\n                    {{request.id}}\r\n                  </div>\r\n                  <div *ngFor=\"let id of request.ids\">\r\n                    {{id}}\r\n                  </div>\r\n                </span>\r\n              </td>\r\n              <td style=\"width: 18%;\">\r\n                <h3 class=\"td-title\">Code</h3>\r\n                <div *ngIf=\"request.material_nomenclature\">\r\n                  {{request.material_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"request.order_product_nomenclature\">\r\n                  {{request.order_product_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n                  {{request.list_product.nomenclature.code}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 21%;\" class=\"serial-numbers-container\">\r\n                <h3 class=\"td-title\">Name</h3>\r\n                <div *ngIf=\"request.material_nomenclature\">\r\n                  <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{request.material_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"request.order_product_nomenclature\">\r\n                  <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{request.order_product_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"!request.material_nomenclature && !request.order_product_nomenclature\">\r\n                  <b *ngIf=\"request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{request.list_product.nomenclature.name}}\r\n                </div>\r\n\r\n\r\n                <span *ngIf=\"request.all_reserved_serial_products?.length > 0\" class=\"serial-numbers\">\r\n                  <div *ngFor=\"let serialNumber of request.all_reserved_serial_products\">\r\n                    {{serialNumber.type_with_number}}\r\n                  </div>\r\n                </span>\r\n              </td>\r\n              <td style=\"width: 12%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Technology</h3>\r\n                <span *ngIf=\"request.technology\">{{request.technology}}</span>\r\n              </td>\r\n              <td style=\"width: 14%;\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Required Quantity</h3>\r\n                {{request.total_required_quantity}}\r\n              </td>\r\n              <td style=\"width: 13%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Locator</h3>\r\n                <div *ngIf=\"request.locators\">\r\n                  <div *ngFor=\"let locator of request.unique_locators; let last=last\">\r\n                    {{locator.name}} <span *ngIf=\"!last\">,</span>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 12%;\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Available Quantity</h3>\r\n                {{request.warehouse_quantity}}\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr class=\"tr-spinner\">\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"8\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!dt.paginator && !isLoading && listRequests.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"dt.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"viewMode === viewModes.HIERARCHY\">\r\n      <p-treeTable\r\n        class=\"orders-tree\"\r\n        [value]=\"requestTree\"\r\n        selectionMode=\"single\"\r\n        [(selection)]=\"selectedRequestNode\"\r\n        scrollHeight=\"calc(100vh - 16.5rem)\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex table-caption\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedRequestNode\">Choose the Request to edit</p>\r\n            <p-menubar class=\"ml-auto mr-2\" [model]=\"requestNodeMenuItems\"\r\n                       [class.disabled]=\"!selectedRequestNode\"></p-menubar>\r\n            <button\r\n              class=\"mr-2 p-button-icon\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-camera\"\r\n              label=\"Scan QR Codes\"\r\n              (click)=\"onStartScanning()\"\r\n            >\r\n            </button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              icon=\"pi pi-angle-down\"\r\n              label=\"Expand all\"\r\n              (click)=\"expandCollapseAllOrders()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              icon=\"pi pi-angle-up\"\r\n              label=\"Collapse all\"\r\n              (click)=\"expandCollapseAllOrders(false)\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              icon=\"pi pi-list\"\r\n              label=\"List\"\r\n              (click)=\"changeView(viewModes.LIST)\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              label=\"Hierarchy\"\r\n              icon=\"pi pi-table\"\r\n              (click)=\"changeView(viewModes.HIERARCHY)\"\r\n              [disabled]=\"viewMode === viewModes.HIERARCHY\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              label=\"Detailed Hierarchy\"\r\n              icon=\"pi pi-th-large\"\r\n              (click)=\"changeView(viewModes.DETAILED_HIERARCHY)\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 16%; padding-left: 3.3125rem\">ID</th>\r\n            <th style=\"width: 18%;\">Code</th>\r\n            <th style=\"width: 20%;\">Name</th>\r\n            <th style=\"width: 10%;\" class=\"text-center\">Technology</th>\r\n            <th class=\"text-center\" style=\"width: 14%;\">Required Quantity</th>\r\n            <th class=\"text-center\" style=\"width: 10%;\">Locator</th>\r\n            <th class=\"text-center\" style=\"width: 12%;\">Available Quantity</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n          <tr\r\n            class=\"pagebreak\"\r\n            [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\" [ttSelectableRowDisabled]=\"rowData.level < 4\"\r\n            [class.last-scanned]=\"rowData.request?.id === lastScannedId\"\r\n            [id]=\"rowData.request ? 'row-' + rowData.request?.id : null\"\r\n            [class.partly-scanned]=\"rowData.request ? isPartlyScanned(rowData.request) : false\"\r\n            [class.qr-code-scanned]=\"rowData.request ? isFullyScanned(rowData.request) : false\"\r\n            [class.tr-toggler]=\"rowNode.node.children.length > 0\"\r\n          >\r\n            <td style=\"width: 16%;\" class=\"text-center ids-container\">\r\n              <h3 class=\"td-title\">ID</h3>\r\n              <div class=\"toggle-row\">\r\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                <span [class.bold]=\"rowData.level < 4\">\r\n                    {{rowData.name}}\r\n                  </span>\r\n                <span *ngIf=\"rowData.level === 4\">\r\n                     {{rowData.request.id}}\r\n                  <span *ngIf=\"rowData.request.ids.length > 0\">L({{rowData.request.ids.length + 1}})</span>\r\n                <span *ngIf=\"rowData.request.ids.length > 0\" class=\"ids hierarchy\">\r\n                  <div>\r\n                    {{rowData.request.id}}\r\n                  </div>\r\n                  <div *ngFor=\"let id of rowData.request.ids\">\r\n                    {{id}}\r\n                  </div>\r\n                </span>\r\n                  </span>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 18%;\">\r\n              <h3 class=\"td-title\">Code</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                  {{rowData.request.material_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                  {{rowData.request.order_product_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                  {{rowData.request.list_product.nomenclature.code}}\r\n                </div>\r\n\r\n                <span *ngIf=\"rowData.request.ids.length > 0\">L({{rowData.request.ids.length + 1}})</span>\r\n\r\n              </div>\r\n\r\n            </td>\r\n            <td style=\"width: 20%;\" class=\"serial-numbers-container\">\r\n              <h3 class=\"td-title\">Name</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                  <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{rowData.request.material_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                  <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{rowData.request.order_product_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                  <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                  {{rowData.request.list_product.nomenclature.name}}\r\n                </div>\r\n\r\n                <span *ngIf=\"rowData.request.all_reserved_serial_products.length > 0\" class=\"serial-numbers\">\r\n                  <div *ngFor=\"let serialNumber of rowData.request.all_reserved_serial_products\">\r\n                    {{serialNumber.type_with_number}}\r\n                  </div>\r\n                </span>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Technology</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                <span *ngIf=\"rowData.request.technology\">{{rowData.request.technology}}</span>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 14%;\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Required Quantity</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                {{rowData.request.total_required_quantity}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Locator</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                <div *ngIf=\"rowData.request.locators\">\r\n                  <div *ngFor=\"let locator of rowData.request.unique_locators; let last=last\">\r\n                    {{locator.name}}<span *ngIf=\"!last\">,</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 12%;\" class=\"text-center\">\r\n              <h3 class=\"td-title\">Available Quantity</h3>\r\n              <div *ngIf=\"rowData.level === 4\">\r\n                {{rowData.request.warehouse_quantity}}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr class=\"tr-spinner\">\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"8\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-treeTable>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"viewMode === viewModes.DETAILED_HIERARCHY\">\r\n      <div class=\"page__table\">\r\n        <p-treeTable\r\n          class=\"orders-tree\"\r\n          [value]=\"detailedRequestTree\"\r\n          (onNodeExpand)=\"onNodeExpand($event)\"\r\n          scrollHeight=\"calc(100vh - 16.5rem)\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex table-caption\">\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"ml-auto mr-2\"\r\n                label=\"Expand all\"\r\n                icon=\"pi pi-angle-down\"\r\n                (click)=\"expandCollapseDetailedView()\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"mr-2\"\r\n                label=\"Collapse all\"\r\n                icon=\"pi pi-angle-up\"\r\n                (click)=\"expandCollapseDetailedView(false)\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"mr-2\"\r\n                label=\"List\"\r\n                icon=\"pi pi-list\"\r\n                (click)=\"changeView(viewModes.LIST)\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"mr-2\"\r\n                label=\"Hierarchy\"\r\n                icon=\"pi pi-table\"\r\n                (click)=\"changeView(viewModes.HIERARCHY)\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                label=\"Detailed Hierarchy\"\r\n                icon=\"pi pi-th-large\"\r\n                [disabled]=\"viewMode === viewModes.DETAILED_HIERARCHY\"\r\n                (click)=\"changeView(viewModes.DETAILED_HIERARCHY)\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 16%; padding-left: 3.3125rem\">ID</th>\r\n              <th style=\"width: 18%;\">Code</th>\r\n              <th style=\"width: 20%;\">Name</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">Technology</th>\r\n              <th class=\"text-center\" style=\"width: 14%;\">Required Quantity</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">Locator</th>\r\n              <th class=\"text-center\" style=\"width: 12%;\">Available Quantity</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n            <tr\r\n              class=\"pagebreak\"\r\n              [ttRow]=\"rowNode\"\r\n              [class.in-plan]=\"rowData.request\"\r\n              [class.placeholder]=\"!rowData.request\"\r\n              [class.tr-toggler]=\"rowNode.node.children?.length > 0\"\r\n            >\r\n              <td style=\"width: 16%;\" class=\"text-center\">\r\n                <div class=\"toggle-row\">\r\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                  <span *ngIf=\"rowData.loading\" [class.bold]=\"!rowData.request\">\r\n                      {{rowData.loading}}\r\n                    </span>\r\n                  <span *ngIf=\"!rowData.request\" [class.bold]=\"!rowData.request\">\r\n                      {{rowData.id}}\r\n                    </span>\r\n                  <span *ngIf=\"rowData.request\">\r\n                     {{rowData.request.id}}\r\n                    </span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 18%;\">\r\n                   <span *ngIf=\"!rowData.request\" [class.bold]=\"!rowData.request\">\r\n                      {{rowData.code}}\r\n                  </span>\r\n                <div *ngIf=\"rowData.request\">\r\n                  <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                    {{rowData.request.material_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                    {{rowData.request.order_product_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                    {{rowData.request.list_product.nomenclature.code}}\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 20%;\">\r\n                   <span *ngIf=\"!rowData.request\" [class.bold]=\"!rowData.request\">\r\n                      {{rowData.name}}\r\n                     {{rowData.serialNumber}}\r\n                  </span>\r\n                <div *ngIf=\"rowData.request\">\r\n                  <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.material_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.order_product_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.list_product.nomenclature.name}}\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <div *ngIf=\"rowData.request\">\r\n                  <span *ngIf=\"rowData.request.technology\">{{rowData.request.technology}}</span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 14%;\" class=\"text-center\">\r\n                <div *ngIf=\"rowData.request\">\r\n                  {{rowData.request.required_quantity}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <div *ngIf=\"rowData.request\">\r\n                  <div *ngIf=\"rowData.request.locators\">\r\n                    <div *ngFor=\"let locator of rowData.request.locators\">\r\n                      {{locator.name}}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 12%;\" class=\"text-center\">\r\n                <div *ngIf=\"rowData.request\">\r\n                  {{rowData.request.warehouse_quantity}}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr class=\"tr-spinner\">\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"8\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-treeTable>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table selectionMode=\"single\" [value]=\"technicalEquipments\">\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"table-tools\" *ngIf=\"technicalEquipments\">\r\n            <h2 class=\"subtitle\">Technical Equipments</h2>\r\n            <div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 35%\">Code</th>\r\n            <th style=\"width: 30%\">Name</th>\r\n            <th style=\"width: 30%\">Locator</th>\r\n            <th style=\"width: 30%\" class=\"text-center\">Quantity</th>\r\n            <!--              <th>Price Per Unit</th>-->\r\n            <!--              <th>Total Price</th>-->\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-technicalEquipment let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"technicalEquipment\" class=\"table-row\">\r\n            <td class=\"text-center\">{{i + 1}}</td>\r\n            <td>{{technicalEquipment.nomenclature.code}}</td>\r\n            <td>{{technicalEquipment.nomenclature.name}}</td>\r\n            <td>\r\n              <div *ngIf=\"technicalEquipment.locators.length > 0\">\r\n                <div *ngFor=\"let locator of technicalEquipment.locators; let last=last\">\r\n                  {{locator.name}}<span *ngIf=\"!last\">, </span>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"technicalEquipment.locators.length < 1\">\r\n                <span *ngFor=\"let locator of technicalEquipment.available_locators; let last=last\">\r\n                  {{locator.name}}<span *ngIf=\"!last\">, </span>\r\n                </span>\r\n              </div>\r\n              <!--              {{technicalEquipment.warehouse_product ? technicalEquipment.warehouse_product.locator.name : ''}}-->\r\n            </td>\r\n            <td class=\"text-center\">{{technicalEquipment.max_initial_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td colspan=\"5\">\r\n              Choice ordered item\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\" let-columns>\r\n          <tr class=\"tr-spinner\">\r\n            <td class=\"text-center p-5\" [attr.colspan]=\"6\">\r\n              <i *ngIf=\"isLoading\" class=\"fas fa-circle-notch fa-spin fa-3x \"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"print-page\" *ngIf=\"isShowPrint\">\r\n  <div>\r\n    <pek-warehouse-production-request-print-page\r\n      [rootList]=\"rootList\"\r\n      [orderId]=\"+orderId\"\r\n      [requests]=\"listRequests\"\r\n      [currentReqDate]=\"currentReqDate\"\r\n      [technologies]=\"order?.ordered_items_technologies\"\r\n    ></pek-warehouse-production-request-print-page>\r\n  </div>\r\n</div>\r\n\r\n<pek-qr-code-scanner\r\n  *ngIf=\"isScanned\"\r\n  (scanned)=\"onScanned($event)\"\r\n  (cancel)=\"onCancelScanned()\"\r\n></pek-qr-code-scanner>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ViewMode} from '../production-lists/production-lists.component';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {EAccountingType} from '@shared/pickers/accounting-type-picker/accounting-type-picker.component';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {environment} from '@env/environment';\r\nimport {\r\n  logExperimentalWarnings\r\n} from '@angular-devkit/build-angular/src/builders/browser-esbuild/experimental-warnings';\r\n\r\nclass ProductRequestListOrder extends Order {\r\n  ordered_items_technologies?: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-production-requests',\r\n  templateUrl: './warehouse-production-requests.component.html',\r\n  styleUrls: ['./warehouse-production-requests.component.scss']\r\n})\r\nexport class WarehouseProductionRequestsComponent implements OnInit, OnDestroy {\r\n  link = environment.link_url + 'dash/';\r\n\r\n  @ViewChild('paginator') paginator: Paginator;\r\n\r\n  viewModeType = ViewMode;\r\n  viewMode: ViewMode = ViewMode.LIST;\r\n\r\n  isShowAll = false;\r\n  isStartOnePage = false;\r\n  count = 0;\r\n\r\n  tableScrollHeight = '29.625rem';\r\n  isHideFilters = false;\r\n\r\n  isLoading = true;\r\n  orders: ProductRequestListOrder[] = [];\r\n  selectedOrder: ProductRequestListOrder;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    page: 1,\r\n    created_after: [null],\r\n    created_before: [null],\r\n    category__in: [null],\r\n    root_categories: [null],\r\n    accounting_type: [null],\r\n    is_closed: [false],\r\n    is_production_requests_fully_completed: [null],\r\n  });\r\n\r\n  queryKey = 'created_after:null/created_before:null/category__in:null/root_categories:null/accounting_type:null/is_production_requests_fully_completed:null'\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'accounting_type__in', value: '2,3'},\r\n    {name: 'is_prepared', value: false},\r\n    {name: 'paginated', value: true},\r\n    {name: 'page', value: this.searchForm.get('page').value}\r\n  ];\r\n\r\n  requestsTypes = [\r\n    {name: 'Open Requests', value: false},\r\n    {name: 'Closed Requests', value: true},\r\n  ];\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly orderService: OrderService,\r\n    private readonly fb: FormBuilder,\r\n    private adapterService: AdapterService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrdersForPagination();\r\n  }\r\n\r\n  getOrdersForPagination() {\r\n    this.orderService.getForPagination(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(orders => {\r\n      this.count = orders.count;\r\n      this.orders = orders.results;\r\n      this.orders.forEach(order => {\r\n        // console.log('order', order);\r\n        order.ordered_items_technologies = [];\r\n        order.order_products.forEach(product => {\r\n          if (product.current_technology) {\r\n            const canAddTechnology = order.ordered_items_technologies\r\n              .findIndex(el => el === product.current_technology.name) < 0;\r\n            if (canAddTechnology) {\r\n              order.ordered_items_technologies.push(product.current_technology.name);\r\n            }\r\n          }\r\n        });\r\n\r\n        order.root_production_plans.forEach(plan => {\r\n          if (order.root_production_plans_display) {\r\n            const index = order.root_production_plans_display.findIndex(el =>\r\n              el.root_list.list_product.nomenclature.id === plan.list_product.nomenclature.id);\r\n            if (index >= 0) {\r\n              order.root_production_plans_display[index].list.push(plan);\r\n            } else {\r\n              order.root_production_plans_display.push({root_list: plan, list: [plan]})\r\n            }\r\n          } else {\r\n            order.root_production_plans_display = [\r\n              {root_list: plan, list: [plan]}\r\n            ]\r\n          }\r\n\r\n        });\r\n      });\r\n      console.log('orders', this.orders);\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  getOrders() {\r\n    this.orderService.get(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(orders => {\r\n      this.count = orders.length;\r\n      this.orders = orders;\r\n\r\n      this.orders.forEach(order => {\r\n        order.ordered_items_technologies = [];\r\n        order.order_products.forEach(product => {\r\n          if (product.current_technology) {\r\n            const canAddTechnology = order.ordered_items_technologies\r\n              .findIndex(el => el === product.current_technology.name) < 0;\r\n            if (canAddTechnology) {\r\n              order.ordered_items_technologies.push(product.current_technology.name);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator?.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  searchProducts() {\r\n    this.isLoading = true;\r\n    this.destroy$.next(true);\r\n    this.selectedOrder = null;\r\n\r\n    const newQueryKey = `created_after:${this.searchForm.get('created_after').value}/created_before:${this.searchForm.get('created_before').value}/category__in:${this.searchForm.get('category__in').value}/root_categories:${this.searchForm.get('root_categories').value}/accounting_type:${this.searchForm.get('accounting_type').value}/is_production_requests_fully_completed:${this.searchForm.get('is_production_requests_fully_completed').value}`;\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.isStartOnePage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'accounting_type__in', value: '2,3'},\r\n      {name: 'is_prepared', value: false},\r\n    ];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query.push({name: 'paginated', value: 'true'})\r\n      this.query.push({name: 'page', value: this.searchForm.get('page').value})\r\n    }\r\n\r\n    if (this.searchForm.get('accounting_type').value !== null) {\r\n      this.query.push({name: 'accounting_type', value: this.searchForm.get('accounting_type').value});\r\n    }\r\n\r\n    if (this.searchForm.get('is_closed').value !== null) {\r\n      this.query.push({name: 'is_prepared', value: this.searchForm.get('is_closed').value});\r\n    }\r\n\r\n    if (this.searchForm.get('category__in').value) {\r\n      this.query.push({name: 'category__in', value: this.searchForm.get('category__in').value});\r\n    }\r\n\r\n    if (this.searchForm.get('is_production_requests_fully_completed').value !== null) {\r\n      this.query.push({\r\n        name: 'is_production_requests_fully_completed',\r\n        value: this.searchForm.get('is_production_requests_fully_completed').value\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('root_categories').value) {\r\n      this.query.push({name: 'root_categories', value: this.searchForm.get('root_categories').value});\r\n    }\r\n\r\n    if (this.searchForm.get('root_categories').value) {\r\n      this.query.push({name: 'root_categories', value: this.searchForm.get('root_categories').value});\r\n    }\r\n\r\n    if (this.searchForm.get('root_categories').value) {\r\n      this.query.push({name: 'root_categories', value: this.searchForm.get('root_categories').value});\r\n    }\r\n\r\n    if (this.searchForm.get('created_after').value) {\r\n      this.query.push({\r\n        name: 'created_after',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('created_after').value)\r\n      });\r\n    }\r\n\r\n    if (this.searchForm.get('created_before').value) {\r\n      this.query.push({\r\n        name: 'created_before',\r\n        value: this.adapterService.dateAdapter(this.searchForm.get('created_before').value)\r\n      });\r\n    }\r\n\r\n    if (!this.isShowAll) {\r\n      console.log(this.query);\r\n      this.getOrdersForPagination();\r\n    } else {\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.getOrders();\r\n    }\r\n  }\r\n\r\n  showProductionLists(plans: any[]): void {\r\n  }\r\n\r\n\r\n  getRootLists(rootLists: any[]): { list: any, count?: number }[] {\r\n    const lists: { list: any, count?: number }[] = [];\r\n\r\n    if (rootLists) {\r\n      rootLists.forEach((res: any) => {\r\n        if (res) {\r\n          const found = lists.find(el => el.list.root_nomenclature?.id === res.root_nomenclature?.id);\r\n          if (found) {\r\n            found.count++;\r\n          } else {\r\n            lists.push({list: res, count: 1});\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return lists;\r\n  }\r\n\r\n  onChoiceViewType(mode: ViewMode) {\r\n    this.viewMode = mode;\r\n    this.selectedOrder = null;\r\n  }\r\n\r\n  setTableScrollHeight() {\r\n    if (this.isHideFilters && !this.isShowAll) {\r\n      this.tableScrollHeight = '20.875rem';\r\n      return;\r\n    }\r\n\r\n    if (this.isHideFilters && this.isShowAll) {\r\n      this.tableScrollHeight = '18.75rem';\r\n      return;\r\n    }\r\n\r\n    if (!this.isHideFilters && this.isShowAll) {\r\n      this.tableScrollHeight = '27.5rem';\r\n      return;\r\n    }\r\n\r\n    if (!this.isHideFilters && !this.isShowAll) {\r\n      this.tableScrollHeight = '29.625rem';\r\n      return;\r\n    }\r\n  }\r\n\r\n  toggleFilterVisibility() {\r\n    this.isHideFilters = !this.isHideFilters;\r\n    this.setTableScrollHeight();\r\n  }\r\n\r\n  onChoiceAccountingType(value: EAccountingType) {\r\n    this.searchForm.get('accounting_type').patchValue(value);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onChoiceCategories(ids: string) {\r\n    this.searchForm.get('category__in').patchValue(ids);\r\n    this.searchProducts();\r\n  }\r\n\r\n  onChoiceProductStructureCategories(ids: string) {\r\n    this.searchForm.get('root_categories').patchValue(ids);\r\n    this.searchProducts();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (!this.isStartOnePage) {\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchProducts();\r\n    }\r\n  }\r\n\r\n  onShowAll() {\r\n    this.isShowAll = true;\r\n    this.setTableScrollHeight();\r\n    this.searchProducts();\r\n  }\r\n\r\n  onShowPartial() {\r\n    this.isShowAll = false;\r\n    this.setTableScrollHeight();\r\n    this.searchProducts();\r\n  }\r\n\r\n  goProductionList(id: number) {\r\n    const link = `${this.link}production/plan/tasks/${id}`;\r\n    window.open(link, '_blank')\r\n  }\r\n\r\n\r\n  onGoProd(id: number) {\r\n    window.open(`${this.link}production/plan/tasks/` + id, '_blank');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Production Requests</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-table\"\r\n        label=\"Hierarchy\"\r\n        [disabled]=\"viewMode === viewModeType.HIERARCHY\"\r\n        (click)=\"onChoiceViewType(viewModeType.HIERARCHY)\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-list\"\r\n        label=\"List\"\r\n        [disabled]=\"viewMode === viewModeType.LIST\"\r\n        (click)=\"onChoiceViewType(viewModeType.LIST)\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n\r\n    <div class=\"filters-visibility\" [class.filters-visibility_hide]=\"isHideFilters\">\r\n      <div class=\"filters-visibility__header\">\r\n        <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n      </div>\r\n\r\n      <button\r\n        class=\"icon pi\"\r\n        [class.pi-angle-double-up]=\"!isHideFilters\"\r\n        [class.pi-angle-double-down]=\"isHideFilters\"\r\n        (click)=\"toggleFilterVisibility()\"\r\n      ></button>\r\n\r\n      <form\r\n        [formGroup]=\"searchForm\"\r\n        class=\"form mb-3\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Type</label>\r\n              <pek-accounting-type-picker\r\n                (choiceAccountingType)=\"onChoiceAccountingType($event)\"\r\n              ></pek-accounting-type-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Categories</label>\r\n              <pek-multi-categories-picker\r\n                (choiceCategories)=\"onChoiceCategories($event)\"\r\n              ></pek-multi-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Requests State</label>\r\n              <p-dropdown\r\n                [options]=\"requestsTypes\"\r\n                formControlName=\"is_production_requests_fully_completed\"\r\n                optionValue=\"value\"\r\n                optionLabel=\"name\"\r\n                placeholder=\"Select state\"\r\n                (ngModelChange)=\"searchProducts()\"\r\n                [showClear]=\"true\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Product Structure Categories</label>\r\n              <pek-multi-product-structure-categories-picker\r\n                (choiceCategories)=\"onChoiceProductStructureCategories($event)\"\r\n              ></pek-multi-product-structure-categories-picker>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Created Date From</label>\r\n              <p-calendar\r\n                formControlName=\"created_after\"\r\n                (ngModelChange)=\"searchProducts()\"\r\n                [showButtonBar]=\"true\"\r\n                dataType=\"date\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n              ></p-calendar>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Created Date From</label>\r\n              <p-calendar\r\n                formControlName=\"created_before\"\r\n                (ngModelChange)=\"searchProducts()\"\r\n                [showButtonBar]=\"true\"\r\n                dataType=\"date\"\r\n                dateFormat=\"dd/mm/yy\"\r\n                [readonlyInput]=\"true\"\r\n              ></p-calendar>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-3\">\r\n            <div class=\"form-group\">\r\n              <label>Is Prepared</label>\r\n              <p-checkbox class=\"mt-1\" formControlName=\"is_closed\" [binary]=\"true\" (ngModelChange)=\"searchProducts()\"></p-checkbox>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <ng-container *ngTemplateOutlet=\"actionButtons\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"viewMode === viewModeType.LIST\">\r\n      <div class=\"page__table\">\r\n        <div class=\"table-pagination-preloader\">\r\n          <p-table\r\n            #dt\r\n            selectionMode=\"single\"\r\n            [scrollHeight]=\"'calc(100vh - ' + tableScrollHeight + ')'\"\r\n            dataKey=\"id\"\r\n            [rows]=\"10\"\r\n            [(selection)]=\"selectedOrder\"\r\n            [value]=\"orders\"\r\n          >\r\n            <ng-template pTemplate=\"header\">\r\n              <tr>\r\n                <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n                <th class=\"text-center\" style=\"width: 5%;\">ID</th>\r\n                <th class=\"text-center\" style=\"width: 15%;\">Created Date</th>\r\n                <th class=\"text-center\" style=\"width: 15%;\">Closing Date</th>\r\n                <th style=\"width: 25%;\">Root Lists</th>\r\n                <th style=\"width: 25%;\">Technologies</th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n              <tr [pSelectableRow]=\"order\">\r\n                <td class=\"text-center\" style=\"width: 5%;\">\r\n                  <h3 class=\"td-title\">#</h3>\r\n                  {{(this.searchForm.get('page').value - 1) * 10 + i + 1}}\r\n                </td>\r\n                <td class=\"text-center\" style=\"width: 5%;\">\r\n                  <h3 class=\"td-title\">ID</h3>\r\n                  <a [routerLink]=\"[order.id]\" target=\"_blank\">\r\n                    {{order.id}}\r\n                  </a>\r\n                </td>\r\n                <td class=\"text-center\" style=\"width: 15%;\">\r\n                  <h3 class=\"td-title\">Created Date</h3>\r\n                  {{order.created | date:'dd/MM/yyyy HH:MM'}}\r\n                </td>\r\n                <td class=\"text-center\" style=\"width: 15%;\">\r\n                  <h3 class=\"td-title\">Closing Date</h3>\r\n                  {{order.production_requests_fully_completed | date:'dd/MM/yyyy HH:MM'}}\r\n                </td>\r\n                <td style=\"width: 25%;\">\r\n                  <h3 class=\"td-title\">Root Lists</h3>\r\n                  <div class=\"root_product\" *ngFor=\"let plan of order.root_production_plans_display\">\r\n                    <a (click)=\"goProductionList(plan.root_list.id)\">\r\n                      {{plan.root_list.list_product.nomenclature.name}} ({{plan.list.length}})\r\n                      <div *ngIf=\"plan.list.length > 1\" class=\"root_list_products\">\r\n                        <div class=\"d-flex flex-column\">\r\n                          <a *ngFor=\"let list of plan.list\" (click)=\"goProductionList(list.id);\r\n                         $event.preventDefault();\r\n                          $event.stopPropagation()\">\r\n                            {{list.list_product.nomenclature.name}}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n\r\n                  </div>\r\n                  <!--                  <div class=\"d-block\"-->\r\n                  <!--                       *ngFor=\"let item of getRootLists(order.root_production_plans); let idx = index\">-->\r\n\r\n                  <!--                    <ng-template [ngIf]=\"item.count === 1\">-->\r\n                  <!--                      <a-->\r\n                  <!--                        *ngIf=\"item.list.serial_numbers.length < 1\"-->\r\n                  <!--                        (click)=\"onGoProd(item.list.id)\"-->\r\n                  <!--                      >-->\r\n                  <!--                        {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}-->\r\n                  <!--                        ({{item.count}})-->\r\n                  <!--                      </a>-->\r\n\r\n                  <!--                      <ng-template *ngIf=\"item.list.serial_numbers.length >= 1\">-->\r\n                  <!--                        <a-->\r\n                  <!--                          *ngFor=\"let serial of item.list.serial_numbers\"-->\r\n                  <!--                          (click)=\"onGoProd(item.list.id)\"-->\r\n                  <!--                        >-->\r\n                  <!--                          {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}-->\r\n                  <!--                          ({{item.count}})-->\r\n                  <!--                        </a>-->\r\n                  <!--                      </ng-template>-->\r\n                  <!--                    </ng-template>-->\r\n\r\n                  <!--                    <ng-template [ngIf]=\"item.count > 1\">-->\r\n                  <!--                      <a (click)=\"showProductionLists(order.root_production_plans)\">-->\r\n                  <!--                        {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}-->\r\n                  <!--                        ({{item.count}})-->\r\n                  <!--                      </a>-->\r\n\r\n                  <!--                      <ng-template *ngIf=\"item.list.serial_numbers.length >= 1\">-->\r\n                  <!--                        <a (click)=\"showProductionLists(order.root_production_plans)\">-->\r\n                  <!--                          {{item.list.list_product.nomenclature.code}}~{{item.list.list_product.nomenclature.name}}-->\r\n                  <!--                          ({{item.count}})-->\r\n                  <!--                        </a>-->\r\n                  <!--                      </ng-template>-->\r\n                  <!--                    </ng-template>-->\r\n                  <!--                  </div>-->\r\n                </td>\r\n                <td style=\"width: 25%;\">\r\n                  <h3 class=\"td-title\">Technologies</h3>\r\n                  <span *ngFor=\"let tech of order.ordered_items_technologies; let last=last\">\r\n                    {{tech}}<span *ngIf=\"!last\">,</span>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n              <tr>\r\n                <td class=\"text-center tr-spinner p-4\" [attr.colspan]=\"5\">\r\n                  <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                  <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"paginatorright\">\r\n              <p-button\r\n                type=\"button\"\r\n                (click)=\"dt.paginator=false\"\r\n                styleClass=\"p-button-text\"\r\n              >\r\n                All\r\n              </p-button>\r\n            </ng-template>\r\n          </p-table>\r\n          <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"paginator-wrapper\"\r\n          *ngIf=\"!isShowAll\"\r\n          [class.paginator-wrapper_hide]=\"orders.length === 0\"\r\n        >\r\n          <p-paginator\r\n            #paginator\r\n            [rows]=\"10\"\r\n            [totalRecords]=\"count\"\r\n            (onPageChange)=\"paginate($event)\"\r\n          >\r\n          </p-paginator>\r\n          <p-button\r\n            (click)=\"onShowAll()\"\r\n            class=\"paginator-all\"\r\n            type=\"button\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            All\r\n          </p-button>\r\n        </div>\r\n\r\n        <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"onShowPartial()\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            Return pagination\r\n          </p-button>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"viewMode === viewModeType.HIERARCHY\">\r\n      In development\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #actionButtons>\r\n  <div class=\"action-buttons\">\r\n    <a\r\n      pButton\r\n      class=\"ml-auto\"\r\n      type=\"button\"\r\n      icon=\"pi pi-bars\"\r\n      label=\"Parts/Materials List\"\r\n      target=\"_blank\"\r\n      [class.disabled]=\"!selectedOrder\"\r\n      [routerLink]=\"[selectedOrder?.id]\"\r\n    ></a>\r\n  </div>\r\n</ng-template>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {InvoiceProduct} from '../../../../procurement/models/invoice-product';\r\nimport {InvoiceService} from '../../../../procurement/services/invoice.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {QcListModalService} from '../../../services/qc-list-modal.service';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {WarehouseProduct} from '../../../models/warehouse-product';\r\nimport {OrderService} from '../../../../procurement/services/order.service';\r\nimport {TechnicalEquipmentsInUseService} from '../../../services/technical-equipments-in-use.service';\r\nimport {OrderTechnicalEquipment} from '../../../models/order-technical-equipment';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-qc-invoice',\r\n  templateUrl: './warehouse-qc-invoice.component.html',\r\n  styleUrls: ['./warehouse-qc-invoice.component.scss']\r\n})\r\nexport class WarehouseQcInvoiceComponent implements OnInit, OnDestroy {\r\n  isLoading = true;\r\n\r\n  invoiceId: number;\r\n  invoiceProducts: InvoiceProduct[] = [];\r\n  selectedInvoiceProducts: InvoiceProduct[] = [];\r\n\r\n  orderTechnicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedOrderTechnicalEquipment: OrderTechnicalEquipment[] = [];\r\n  orderId;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly invoiceService: InvoiceService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly modalService: ModalService,\r\n    private qcListModalService: QcListModalService,\r\n    private readonly orderService: OrderService,\r\n    private technicalEquipmentsInUseService: TechnicalEquipmentsInUseService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInvoices();\r\n\r\n\r\n    this.qcListModalService.notCompatibleItems$\r\n      .pipe(takeUntil(this.destroy$)).subscribe(items => {\r\n      items.forEach(item => {\r\n        const foundIndex = this.selectedInvoiceProducts.findIndex(product => product.id === item.id);\r\n        if (foundIndex > -1) {\r\n          this.selectedInvoiceProducts.splice(foundIndex, 1);\r\n          this.selectedInvoiceProducts = [...this.selectedInvoiceProducts];\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInvoices() {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.invoiceId = +id),\r\n      switchMap(() => this.invoiceService.getProductsToAccept(this.invoiceId)),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(invoiceProducts => {\r\n      this.invoiceProducts = invoiceProducts;\r\n      this.isLoading = false;\r\n      this.getInvoiceInfo();\r\n    });\r\n  }\r\n\r\n  getInvoiceInfo() {\r\n    this.invoiceService.getById(this.invoiceId).subscribe(invoice => {\r\n      if (invoice.order.id) {\r\n        this.orderId = invoice.order.id;\r\n        this.loadTechnicalEquipments();\r\n      }\r\n    });\r\n  }\r\n\r\n  onAcceptToWarehouse() {\r\n    this.invoiceService.openAcceptToWarehouseModal(this.selectedInvoiceProducts, this.invoiceId).subscribe(response => {\r\n      if (response) {\r\n        this.selectedInvoiceProducts.forEach(product => {\r\n          this.invoiceProducts = this.invoiceProducts.filter(p => p.id !== product.id);\r\n        });\r\n\r\n        if (this.invoiceProducts.length === 0 && this.orderTechnicalEquipments.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n        }\r\n\r\n        this.selectedInvoiceProducts = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedInvoiceProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  loadTechnicalEquipments() {\r\n    this.orderService.getTechnicalEquipmentToAccept(this.orderId).subscribe(technicalProducts => {\r\n      this.orderTechnicalEquipments = technicalProducts;\r\n      this.loadTechnicalEquipmentInUse();\r\n    });\r\n  }\r\n\r\n\r\n  loadTechnicalEquipmentInUse() {\r\n    const query = [{name: 'order_id', value: this.orderId}, {name: 'need_qc', value: true}]\r\n    this.technicalEquipmentsInUseService.get(query).subscribe(equipmentForQc => {\r\n      this.orderTechnicalEquipments.forEach(equipment => {\r\n        equipment.in_use_product_id = [];\r\n        const nomenclatureId = (equipment.nomenclature as Nomenclature).id;\r\n        let requiredQuantity = equipment.passed_quantity;\r\n        equipmentForQc.forEach(forQcEquipment => {\r\n          const canProcees = (forQcEquipment.warehouse_product as WarehouseProduct).nomenclature === nomenclatureId\r\n            && requiredQuantity > 0 && forQcEquipment.quantity > 0;\r\n          if (canProcees) {\r\n            const quantity = forQcEquipment.quantity;\r\n            if (quantity >= requiredQuantity) {\r\n              forQcEquipment.quantity -= requiredQuantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: requiredQuantity, isolated_quantity: 0});\r\n\r\n              requiredQuantity = 0;\r\n            } else {\r\n              forQcEquipment.quantity -= quantity;\r\n              requiredQuantity -= quantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: quantity, isolated_quantity: 0});\r\n            }\r\n          }\r\n        });\r\n\r\n        let isolateQuantity = equipment.not_passed_quantity;\r\n        equipmentForQc.forEach(forQcEquipment => {\r\n          const canProcees = (forQcEquipment.warehouse_product as WarehouseProduct).nomenclature === nomenclatureId\r\n            && isolateQuantity > 0 && forQcEquipment.quantity > 0;\r\n          if (canProcees) {\r\n            const quantity = forQcEquipment.quantity;\r\n            if (quantity >= isolateQuantity) {\r\n              forQcEquipment.quantity -= isolateQuantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: 0, isolated_quantity: isolateQuantity});\r\n\r\n              isolateQuantity = 0;\r\n            } else {\r\n              forQcEquipment.quantity -= quantity;\r\n              isolateQuantity -= quantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: 0, isolated_quantity: isolateQuantity});\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onAcceptTechnicalEquipmentToWarehouse() {\r\n    this.orderService.openAcceptToWarehouseModalTechnicalEquipment(this.selectedOrderTechnicalEquipment, this.orderId).subscribe(response => {\r\n      if (response) {\r\n        this.selectedOrderTechnicalEquipment.forEach(product => {\r\n          this.orderTechnicalEquipments = this.orderTechnicalEquipments.filter(p => p.id !== product.id);\r\n        });\r\n\r\n        if (this.orderTechnicalEquipments.length === 0 && this.invoiceProducts.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n        }\r\n\r\n        this.selectedOrderTechnicalEquipment = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Invoice Items</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"invoiceProducts.length > 0\"\r\n        [(selection)]=\"selectedInvoiceProducts\"\r\n        [value]=\"invoiceProducts\"\r\n        [rows]=\"10\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedInvoiceProducts.length === 0\">Choose the Invoice Products to Accept Warehouse</p>\r\n\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              class=\"ml-auto mr-2\"\r\n              [disabled]=\"selectedInvoiceProducts.length > 1 || selectedInvoiceProducts.length === 0\"\r\n              (click)=\"onShowImages()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Accept to warehouse\"\r\n              [disabled]=\"selectedInvoiceProducts.length === 0\"\r\n              (click)=\"onAcceptToWarehouse()\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n            <th style=\"width: 17%;\">Code</th>\r\n            <th style=\"width: 20%;\">Name</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 15%;\" class=\"text-center\">Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"invoice\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%;\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 17%;\">{{invoice.nomenclature.code}}</td>\r\n            <td style=\"width: 20%;\">{{invoice.nomenclature.name}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{invoice.current_technology}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{invoice.quantity}}</td>\r\n            <td style=\"width: 15%;\" class=\"text-center\">{{invoice.passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && invoiceProducts.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt2\r\n        selectionMode=\"multiple\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"orderTechnicalEquipments.length > 0\"\r\n        [(selection)]=\"selectedOrderTechnicalEquipment\"\r\n        [value]=\"orderTechnicalEquipments\"\r\n        [rows]=\"10\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedOrderTechnicalEquipment.length === 0\">Choose the Technical equipment to Accept Warehouse</p>\r\n\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              class=\"ml-auto mr-2\"\r\n              [disabled]=\"selectedOrderTechnicalEquipment.length > 1 || selectedOrderTechnicalEquipment.length === 0\"\r\n              (click)=\"onShowImages()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Accept to warehouse\"\r\n              [disabled]=\"selectedOrderTechnicalEquipment.length === 0\"\r\n              (click)=\"onAcceptTechnicalEquipmentToWarehouse()\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n            <th style=\"width: 17%;\">Code</th>\r\n            <th style=\"width: 20%;\">Name</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 15%;\" class=\"text-center\">Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-orderTechnicalEquipments let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"orderTechnicalEquipments\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%;\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 17%;\">{{orderTechnicalEquipments.nomenclature.code}}</td>\r\n            <td style=\"width: 20%;\">{{orderTechnicalEquipments.nomenclature.name}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{orderTechnicalEquipments.quantity}}</td>\r\n            <td style=\"width: 15%;\" class=\"text-center\">{{orderTechnicalEquipments.passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt2.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt2.paginator && !isLoading && orderTechnicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt2.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Subject, takeUntil} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {OrderProduct} from '../../../../procurement/models/order-product';\r\nimport {OrderService} from '../../../../procurement/services/order.service';\r\nimport {QcListModalService} from '../../../services/qc-list-modal.service';\r\nimport {OrderTechnicalEquipmentsService} from '../../../services/order-technical-equipments.service';\r\nimport {OrderTechnicalEquipment} from '../../../models/order-technical-equipment';\r\nimport {TechnicalEquipmentsInUseService} from '../../../services/technical-equipments-in-use.service';\r\nimport {WarehouseProduct} from '../../../models/warehouse-product';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-qc-order',\r\n  templateUrl: './warehouse-qc-order.component.html',\r\n  styleUrls: ['./warehouse-qc-order.component.scss']\r\n})\r\nexport class WarehouseQcOrderComponent implements OnInit {\r\n\r\n  isLoading = true;\r\n\r\n  orderId: number;\r\n  orderProducts: OrderProduct[] = [];\r\n  selectedOrderProducts: OrderProduct[] = [];\r\n\r\n  orderTechnicalEquipments: OrderTechnicalEquipment[] = [];\r\n  selectedOrderTechnicalEquipment: OrderTechnicalEquipment[] = [];\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly orderService: OrderService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly modalService: ModalService,\r\n    private qcListModalService: QcListModalService,\r\n    private technicalEquipmentsInUseService: TechnicalEquipmentsInUseService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getInvoices();\r\n\r\n    this.qcListModalService.notCompatibleItems$\r\n      .pipe(takeUntil(this.destroy$)).subscribe(items => {\r\n      items.forEach(item => {\r\n        const foundIndex = this.selectedOrderProducts.findIndex(product => product.id === item.id);\r\n        if (foundIndex > -1) {\r\n          this.selectedOrderProducts.splice(foundIndex, 1);\r\n          this.selectedOrderProducts = [...this.selectedOrderProducts];\r\n        }\r\n      });\r\n    });\r\n\r\n    this.qcListModalService.notCompatibleTechnicalEquipments$\r\n      .pipe(takeUntil(this.destroy$)).subscribe(items => {\r\n      items.forEach(item => {\r\n        const foundIndex = this.selectedOrderTechnicalEquipment.findIndex(product => product.id === item.id);\r\n        if (foundIndex > -1) {\r\n          this.selectedOrderTechnicalEquipment.splice(foundIndex, 1);\r\n          this.selectedOrderTechnicalEquipment = [...this.selectedOrderTechnicalEquipment];\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getInvoices() {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.orderId = +id),\r\n      switchMap(() => this.orderService.getProductsToAccept(this.orderId)),\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(orderProducts => {\r\n      this.orderProducts = orderProducts;\r\n      this.isLoading = false;\r\n      this.loadTechnicalEquipments();\r\n    });\r\n  }\r\n\r\n  loadTechnicalEquipments() {\r\n    this.orderService.getTechnicalEquipmentToAccept(this.orderId).subscribe(technicalProducts => {\r\n      this.orderTechnicalEquipments = technicalProducts;\r\n      this.loadTechnicalEquipmentInUse();\r\n    });\r\n  }\r\n\r\n  loadTechnicalEquipmentInUse() {\r\n    const query = [{name: 'order_id', value: this.orderId}, {name: 'need_qc', value: true}]\r\n    this.technicalEquipmentsInUseService.get(query).subscribe(equipmentForQc => {\r\n      this.orderTechnicalEquipments.forEach(equipment => {\r\n\r\n        equipment.in_use_product_id = [];\r\n        const nomenclatureId = (equipment.nomenclature as Nomenclature).id;\r\n        let requiredQuantity = equipment.passed_quantity;\r\n        equipmentForQc.forEach(forQcEquipment => {\r\n          const canProcees = (forQcEquipment.warehouse_product as WarehouseProduct).nomenclature === nomenclatureId\r\n            && requiredQuantity > 0 && forQcEquipment.quantity > 0;\r\n          if (canProcees) {\r\n            const quantity = forQcEquipment.quantity;\r\n            if (quantity >= requiredQuantity) {\r\n              forQcEquipment.quantity -= requiredQuantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: requiredQuantity, isolated_quantity: 0});\r\n\r\n              requiredQuantity = 0;\r\n            } else {\r\n              forQcEquipment.quantity -= quantity;\r\n              requiredQuantity -= quantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: quantity, isolated_quantity: 0});\r\n            }\r\n          }\r\n        });\r\n\r\n        let isolateQuantity = equipment.not_passed_quantity;\r\n        equipmentForQc.forEach(forQcEquipment => {\r\n          const canProcees = (forQcEquipment.warehouse_product as WarehouseProduct).nomenclature === nomenclatureId\r\n            && isolateQuantity > 0 && forQcEquipment.quantity > 0;\r\n          if (canProcees) {\r\n            const quantity = forQcEquipment.quantity;\r\n            if (quantity >= isolateQuantity) {\r\n              forQcEquipment.quantity -= isolateQuantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: 0, isolated_quantity: isolateQuantity});\r\n\r\n              isolateQuantity = 0;\r\n            } else {\r\n              forQcEquipment.quantity -= quantity;\r\n              isolateQuantity -= quantity;\r\n              equipment.in_use_product_id.push({technicalEquipment: forQcEquipment, quantity: 0, isolated_quantity: isolateQuantity});\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onAcceptToWarehouse() {\r\n    this.orderService.openAcceptToWarehouseModal(this.selectedOrderProducts, this.orderId).subscribe(response => {\r\n      if (response) {\r\n        this.selectedOrderProducts.forEach(product => {\r\n          this.orderProducts = this.orderProducts.filter(p => p.id !== product.id);\r\n        });\r\n\r\n        if (this.orderProducts.length === 0 && this.orderTechnicalEquipments.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n        }\r\n\r\n        this.selectedOrderProducts = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  onAcceptTechnicalEquipmentToWarehouse() {\r\n    this.orderService.openAcceptToWarehouseModalTechnicalEquipment(this.selectedOrderTechnicalEquipment, this.orderId).subscribe(response => {\r\n      if (response) {\r\n        this.selectedOrderTechnicalEquipment.forEach(product => {\r\n          this.orderTechnicalEquipments = this.orderTechnicalEquipments.filter(p => p.id !== product.id);\r\n        });\r\n\r\n        if (this.orderTechnicalEquipments.length === 0 && this.orderProducts.length === 0) {\r\n          this.router.navigate(['../../'], {relativeTo: this.route});\r\n        }\r\n\r\n        this.selectedOrderTechnicalEquipment = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowImages() {\r\n    this.modalService.showImageGallery([], this.selectedOrderProducts[0].nomenclature.id, 1).subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Order Items</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"multiple\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"orderProducts.length > 0\"\r\n        [(selection)]=\"selectedOrderProducts\"\r\n        [value]=\"orderProducts\"\r\n        [rows]=\"10\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedOrderProducts.length === 0\">Choose the Order Products to Accept Warehouse</p>\r\n\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              class=\"ml-auto mr-2\"\r\n              [disabled]=\"selectedOrderProducts.length > 1 || selectedOrderProducts.length === 0\"\r\n              (click)=\"onShowImages()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Accept to warehouse\"\r\n              [disabled]=\"selectedOrderProducts.length === 0\"\r\n              (click)=\"onAcceptToWarehouse()\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n            <th style=\"width: 17%;\">Code</th>\r\n            <th style=\"width: 20%;\">Name</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 15%;\" class=\"text-center\">Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"order\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%;\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 17%;\">{{order.nomenclature.code}}</td>\r\n            <td style=\"width: 20%;\">{{order.nomenclature.name}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{order.current_technology}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{order.quantity}}</td>\r\n            <td style=\"width: 15%;\" class=\"text-center\">{{order.passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && orderProducts.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt2\r\n        selectionMode=\"multiple\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"orderTechnicalEquipments.length > 0\"\r\n        [(selection)]=\"selectedOrderTechnicalEquipment\"\r\n        [value]=\"orderTechnicalEquipments\"\r\n        [rows]=\"10\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"selectedOrderTechnicalEquipment.length === 0\">Choose the Technical equipment to Accept Warehouse</p>\r\n\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-images\"\r\n              label=\"Show Images\"\r\n              class=\"ml-auto mr-2\"\r\n              [disabled]=\"selectedOrderTechnicalEquipment.length > 1 || selectedOrderTechnicalEquipment.length === 0\"\r\n              (click)=\"onShowImages()\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-double-right\"\r\n              label=\"Accept to warehouse\"\r\n              [disabled]=\"selectedOrderTechnicalEquipment.length === 0\"\r\n              (click)=\"onAcceptTechnicalEquipmentToWarehouse()\"\r\n            ></button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 3%\">\r\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n            </th>\r\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n            <th style=\"width: 17%;\">Code</th>\r\n            <th style=\"width: 20%;\">Name</th>\r\n            <th style=\"width: 20%;\" class=\"text-center\">Quantity</th>\r\n            <th style=\"width: 15%;\" class=\"text-center\">Passed</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-orderTechnicalEquipments let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 3%\">\r\n              <p-tableCheckbox [value]=\"orderTechnicalEquipments\"></p-tableCheckbox>\r\n            </td>\r\n            <td style=\"width: 5%;\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 17%;\">{{orderTechnicalEquipments.nomenclature.code}}</td>\r\n            <td style=\"width: 20%;\">{{orderTechnicalEquipments.nomenclature.name}}</td>\r\n            <td style=\"width: 20%;\" class=\"text-center\">{{orderTechnicalEquipments.quantity}}</td>\r\n            <td style=\"width: 15%;\" class=\"text-center\">{{orderTechnicalEquipments.passed_quantity}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt2.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt2.paginator && !isLoading && orderTechnicalEquipments.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt2.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {InvoiceService} from '../../../procurement/services/invoice.service';\r\nimport {Invoice} from '../../../procurement/models/invoice';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nimport {TreeService} from '@shared/services/tree.service';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\r\nimport {forkJoin} from 'rxjs';\r\n\r\ntype ViewType = 'list' | 'hierarchy'\r\n\r\n@Component({\r\n  selector: 'pek-warehouse-qc',\r\n  templateUrl: './warehouse-qc.component.html',\r\n  styleUrls: ['./warehouse-qc.component.scss']\r\n})\r\nexport class WarehouseQcComponent implements OnInit {\r\n  isLoading = true;\r\n\r\n  categories: TreeNode[];\r\n\r\n  invoices: Invoice[] = [];\r\n  orders: Order[] = [];\r\n\r\n  invoiceTree: TreeNode<Invoice>[];\r\n\r\n  selectedInvoiceItem: Invoice;\r\n  selectedInvoicePurchaseItem: Invoice;\r\n  selectedOrderItem: Order;\r\n\r\n  invoiceManufacturedTree: TreeNode<Invoice>[];\r\n  invoicePurchasedTree: TreeNode<Invoice>[];\r\n\r\n  invoicesViewType: ViewType = 'hierarchy';\r\n  invoicesOrderType: ViewType = 'hierarchy';\r\n  invoicesPurchasedType: ViewType = 'hierarchy';\r\n\r\n  selectedInvoiceNode: TreeNode<Invoice>;\r\n  selectedOrderNode: TreeNode;\r\n  selectedPurchasedInvoiceNode: TreeNode;\r\n\r\n  ownProductionCategorizedList: TreeNode[];\r\n\r\n  invoicesList: Invoice[] = [];\r\n  ordersList: Order[] = [];\r\n  purchasedInvoicesList: Invoice[] = [];\r\n\r\n  constructor(\r\n    private readonly invoiceService: InvoiceService,\r\n    private readonly orderService: OrderService,\r\n    private readonly productStructureCategoriesService: ProductStructureCategoryService,\r\n    private readonly treeService: TreeService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin({\r\n      categories: this.productStructureCategoriesService.get(),\r\n      invoices: this.invoiceService.get([\r\n        {name: 'completed', value: true},\r\n        {name: 'qc_completed', value: true},\r\n        {name: 'is_full_accepted', value: false}\r\n      ]),\r\n      orders: this.orderService.get([\r\n        {name: 'completed', value: true},\r\n        {name: 'qc_completed', value: true},\r\n        {name: 'is_full_accepted', value: false}\r\n      ])\r\n    }).subscribe(({categories, invoices, orders}) => {\r\n      this.categories = this.treeService.createTree(categories);\r\n\r\n      this.categories.unshift({\r\n        children: [],\r\n        data: {\r\n          name: 'Not Category',\r\n          id: -1,\r\n          level: 0,\r\n        },\r\n        expanded: false\r\n      })\r\n\r\n      this.ownProductionCategorizedList = cloneDeep(this.categories);\r\n\r\n      this.invoices = invoices;\r\n      this.makeUniqueProductionPlansInvoice(<Invoice[]>this.invoices);\r\n      this.resetProductPaymentTree();\r\n\r\n      this.orders = orders;\r\n      this.makeUniqueProductionPlansInvoice(<Order[]>this.orders);\r\n      this.fillOwnProductionWithData();\r\n\r\n      this.purchasedInvoicesList = this.invoices.filter(i => i.purchase_category);\r\n      this.invoicesList = this.invoices.filter(i => !i.purchase_category);\r\n      // console.log('this.invoicesList', this.invoicesList);\r\n      this.ordersList = this.orders.map(o => o);\r\n      // console.log('this.ordersList', this.ordersList);\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  makeUniqueProductionPlansInvoice(items: Invoice[] | Order[]): void {\r\n    items.forEach(item => {\r\n      item.unique_root_production_plans = [];\r\n      item.root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const nomenclatureId = plan.root_nomenclature.id;\r\n          const existingIndex = item.unique_root_production_plans.findIndex(unPlan => unPlan.root_nomenclature.id === nomenclatureId);\r\n\r\n          if (existingIndex < 0) {\r\n            item.unique_root_production_plans.push(plan);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private fillOwnProductionWithData() {\r\n    this.fillCategorizedTree();\r\n  }\r\n\r\n  fillCategorizedTree(): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    this.orders.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature && plan.root_nomenclature.root_category) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        } else if (plan.root_nomenclature && !plan.root_nomenclature.root_category) {\r\n          const rootCatId = -1;\r\n          const rootCatName = 'Not Category';\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = this.ownProductionCategorizedList.findIndex(nodeInner => nodeInner.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          this.ownProductionCategorizedList.push({\r\n            data: {\r\n              id: -1,\r\n              level: 1,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          this.ownProductionCategorizedList[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.appendCategories(node, categoriesTemp);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.fillWithTheData(node, this.orders);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.removeUpdateEmptyCategories(node);\r\n    });\r\n\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n\r\n  resetProductPaymentTree(): void {\r\n    const categories: { name: string, description: string, id: number, level?: number }[] = [];\r\n\r\n    this.invoices.forEach(invoice => {\r\n      const purchaseCategory = invoice.purchase_category;\r\n\r\n      if (purchaseCategory) {\r\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\r\n        if (isAdded < 0) {\r\n          categories.push({\r\n            name: purchaseCategory.name,\r\n            id: purchaseCategory.id,\r\n            description: purchaseCategory.description\r\n          });\r\n        }\r\n      } else {\r\n        if (invoice.order.accounting_type === 1) {\r\n          const isAdded = categories.findIndex(el => el.id === -2);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Production Lists Procurement', id: -2, description: '', level: 0});\r\n          }\r\n        }\r\n        if (invoice.order.accounting_type === 2) {\r\n          const isAdded = categories.findIndex(el => el.id === -1);\r\n          if (isAdded < 0) {\r\n            categories.push({name: 'Outsourcing', id: -1, description: '', level: 0});\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.invoiceTree = [];\r\n\r\n    categories.sort((a, b) => a.id - b.id);\r\n    categories.forEach(cat => {\r\n      this.invoiceTree.push({\r\n        data: <any>cat,\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    this.createPaymentTree();\r\n  }\r\n\r\n  createPaymentTree() {\r\n    this.invoiceTree = this.invoiceTree.map(node => {\r\n      return {\r\n        ...node,\r\n        children: []\r\n      };\r\n    });\r\n\r\n    this.invoiceTree.forEach(node => {\r\n      this.invoices.filter(invoice => invoice.purchase_category).forEach(invoice => {\r\n\r\n        const purchaseCategory = invoice.purchase_category;\r\n        if (purchaseCategory) {\r\n          if (purchaseCategory.id === node.data.id) {\r\n            node.children.push({\r\n              data: invoice,\r\n              expanded: false,\r\n              children: []\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      // Preparing Manufacturing Procurement\r\n      if (node.data.id === -2) {\r\n        const manProc = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order.accounting_type === 1);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(manProc, node);\r\n      }\r\n\r\n      // Preparing Outsourcing\r\n      if (node.data.id === -1) {\r\n        const outsourcing = this.invoices.filter(invoice => !invoice.purchase_category && invoice.order.accounting_type === 2);\r\n        node.children = cloneDeep(this.categories);\r\n        this.prepareInnerTreeCategories(outsourcing, node);\r\n      }\r\n    });\r\n\r\n    this.separatePurchasedAndManufactured();\r\n  }\r\n\r\n  prepareInnerTreeCategories(invoices: Invoice[], nodeInner: TreeNode): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    invoices.forEach(order => {\r\n      order.unique_root_production_plans.forEach(plan => {\r\n        if (plan.root_nomenclature) {\r\n          const rootCatId = plan.root_nomenclature.root_category.id;\r\n          const rootCatName = plan.root_nomenclature.root_category.name;\r\n          const rootLevel = 1;\r\n\r\n          const catId = plan.root_nomenclature.id;\r\n          const catName = plan.root_nomenclature.name;\r\n          const catLevel = 2;\r\n\r\n          const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n          if (rootExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: rootCatId,\r\n              level: rootLevel,\r\n              name: rootCatName,\r\n              parentId: null\r\n            });\r\n          }\r\n\r\n          const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n          if (catExistsIndex < 0) {\r\n            categoriesTemp.push({\r\n              id: catId,\r\n              level: catLevel,\r\n              name: catName,\r\n              parentId: rootCatId\r\n            });\r\n          }\r\n        } else {\r\n          const indexNoNomenclature = categoriesTemp.findIndex(cat => cat.id === -2);\r\n          if (indexNoNomenclature < 0) {\r\n            categoriesTemp.push({\r\n              id: -2,\r\n              level: 1,\r\n              name: 'No root nomenclature',\r\n              parentId: null\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (order.unique_root_production_plans.length < 1) {\r\n        const noCategoryIndex = nodeInner.children.findIndex(node => node.data.id === -1);\r\n\r\n        if (noCategoryIndex < 0) {\r\n          nodeInner.children.push({\r\n            data: {\r\n              id: -1,\r\n              level: 1,\r\n              name: 'No Root List',\r\n              parentId: null\r\n            },\r\n            expanded: false,\r\n            children: [\r\n              {\r\n                data: {order, plan: null, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              }]\r\n          });\r\n        } else {\r\n          nodeInner.children[noCategoryIndex].children.push(\r\n            {\r\n              data: {order, plan: null, level: 4},\r\n              expanded: false,\r\n              children: []\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    const temp = cloneDeep(nodeInner.children);\r\n    temp.forEach(node => {\r\n      this.appendCategories(node, categoriesTemp);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.fillWithTheData(node, invoices);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.removeUpdateEmptyCategories(node);\r\n    });\r\n\r\n    nodeInner.children = temp;\r\n  }\r\n\r\n  separatePurchasedAndManufactured(): void {\r\n    this.invoicePurchasedTree = this.invoiceTree.filter(invoice => invoice.data.id >= 0);\r\n    this.invoiceManufacturedTree = this.invoiceTree.filter(invoice => invoice.data.id < 0);\r\n\r\n    console.log(this.invoiceTree);\r\n  }\r\n\r\n  appendCategories(node: TreeNode, categoriesTemp: { id: number, level: number, parentId: number, name: string }[]): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    categoriesTemp.forEach(cat => {\r\n      if (cat.parentId === node.data.id) {\r\n        node.children.push({\r\n          data: {\r\n            id: cat.id,\r\n            name: cat.name,\r\n            level: cat.level,\r\n            parentId: cat.parentId,\r\n            isCategory: true,\r\n            categories: 0\r\n          },\r\n          expanded: false,\r\n          children: []\r\n        });\r\n      }\r\n    });\r\n\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.appendCategories(childNode, categoriesTemp);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillWithTheData(node: TreeNode, orders): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    if (node.data.isCategory) {\r\n      orders.forEach(order => {\r\n        order.unique_root_production_plans.forEach(plan => {\r\n          if (plan.root_nomenclature) {\r\n            const catId = plan.root_nomenclature.id;\r\n            if (node.data.id === catId) {\r\n              const existingCatChildIndex = node.children.findIndex(cat => cat.data.id === plan.list_product.nomenclature.id);\r\n\r\n              if (existingCatChildIndex < 0) {\r\n                node.children.push({\r\n                  data: {\r\n                    id: plan.list_product.nomenclature.id,\r\n                    name: plan.list_product.nomenclature.name,\r\n                    level: 3,\r\n                    categories: 0,\r\n                  },\r\n                  expanded: false,\r\n                  children: [{\r\n                    data: {order, plan, level: 4},\r\n                    expanded: false,\r\n                    children: []\r\n                  }]\r\n                });\r\n              } else {\r\n                node.children[existingCatChildIndex].children.push({\r\n                  data: {order, plan, level: 4},\r\n                  expanded: false,\r\n                  children: []\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.fillWithTheData(childNode, orders);\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUpdateEmptyCategories(node: TreeNode): void {\r\n    if (!node.data.isCategory && !node.data.order) {\r\n      let hideFromTable = true;\r\n      const hasContent = node.children.filter(child => child.data.order).length > 0;\r\n      if (hasContent) {\r\n        hideFromTable = false;\r\n      }\r\n      node.children.forEach(childNode => {\r\n        checkForContent(childNode);\r\n      });\r\n\r\n      function checkForContent(childNode) {\r\n        if (hideFromTable) {\r\n          const hasContentInner = childNode.children.filter(child => child.data.order).length > 0;\r\n          if (hasContentInner) {\r\n            hideFromTable = false;\r\n          }\r\n        }\r\n        childNode.children.forEach(childNode2 => {\r\n          checkForContent(childNode2);\r\n        });\r\n      }\r\n\r\n      node.data.hideFromTable = hideFromTable;\r\n    }\r\n\r\n    node.data.categories = node.children.length;\r\n    if (node.children) {\r\n      node.children.forEach((childNode, indexChild) => {\r\n        this.removeUpdateEmptyCategories(childNode);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapseAllInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoiceManufacturedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoiceManufacturedTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  expandCollapseAllOrders(isToExpand = true): void {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n\r\n  expandCollapsePurchasedInvoices(isToExpand = true): void {\r\n    const temp = cloneDeep(this.invoicePurchasedTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.invoicePurchasedTree = temp;\r\n  }\r\n\r\n  onSelectInvoiceType(view: ViewType) {\r\n    this.invoicesViewType = view;\r\n  }\r\n\r\n  onSelectOrderType(view: ViewType) {\r\n    this.invoicesOrderType = view;\r\n  }\r\n\r\n  onSelectPurchaseType(view: ViewType) {\r\n    this.invoicesPurchasedType = view;\r\n  }\r\n\r\n  test() {\r\n    console.log(this.selectedInvoiceItem);\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>QC-Warehouse</h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__tabs\">\r\n    <p-tabView class=\"custom-tabs\">\r\n      <p-tabPanel header=\"Production Lists Procurement and Outsourcing Invoices\" [selected]=\"true\">\r\n        <ng-container *ngIf=\"invoicesViewType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #dt\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"invoicesList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedInvoiceItem\"\r\n              [value]=\"invoicesList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoiceItem\">\r\n                    Choose the Production Lists Procurement or Outsourcing Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedInvoiceItem\"\r\n                    [routerLink]=\"['invoice', selectedInvoiceItem?.id]\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesViewType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectInvoiceType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectInvoiceType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"invoice\">\r\n                  <td style=\"width: 5%\" class=\"text-center\">\r\n                    {{i + 1}}\r\n                  </td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.supplier?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.order?.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <ng-container *ngIf=\"invoice.root_production_plans.length > 0\">\r\n                      {{invoice.root_production_plans[0].list_product.nomenclature.code}}\r\n                      ~{{invoice.root_production_plans[0].list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"dt.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!dt.paginator && !isLoading && invoicesList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesViewType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              [value]=\"invoiceManufacturedTree\"\r\n              [scrollable]=\"true\"\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 21.85rem)\"\r\n              [(selection)]=\"selectedInvoiceNode\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoiceNode\">\r\n                    Choose the Production Lists Procurement or Outsourcing Invoice to view Items\r\n                  </p>\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedInvoiceNode\"\r\n                    [routerLink]=\"['invoice', selectedInvoiceNode?.data.order ? selectedInvoiceNode?.data.order.id : selectedInvoiceNode?.data.id]\"\r\n                    (click)=\"expandCollapseAllInvoices()\"\r\n                  ></a>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-angle-down\"\r\n                    label=\"Expand All\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"expandCollapseAllInvoices()\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-angle-up\"\r\n                    class=\"mr-2\"\r\n                    label=\"Collapse All\"\r\n                    (click)=\"expandCollapseAllInvoices(false)\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectInvoiceType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesViewType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectInvoiceType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 30%; padding-left: 19px\">Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template\r\n                pTemplate=\"body\"\r\n                let-invoiceNode\r\n                let-invoice=\"rowData\"\r\n              >\r\n                <tr\r\n                  [ttRow]=\"invoiceNode\"\r\n                  [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                  [ttSelectableRow]=\"invoiceNode\"\r\n                  *ngIf=\"!invoice.hideFromTable\"\r\n                >\r\n                  <td style=\"width: 30%\" [class.text-center]=\"invoice.order\">\r\n                    <div class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                      <ng-container *ngIf=\"!invoice.order\">\r\n                        <p [class.category-name]=\"invoice.level === 0 && invoice.hideFromTable !== false\">\r\n                          {{invoice.name}}\r\n                          <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                          <i\r\n                            *ngIf=\"invoice.level < 4 && invoice.level > 0\"\r\n                            style=\"font-style: normal\"\r\n                          >\r\n                            ({{invoice.categories}})\r\n                          </i>\r\n                        </p>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"invoice.level === 4\">\r\n                        <p>{{invoice.order.system_creation_date | date:'dd/MM/yyyy'}}</p>\r\n                      </ng-container>\r\n                    </div>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <span\r\n                      *ngIf=\"invoice.level === 4\"\r\n                      [class.text-warning]=\"invoice.order.unique_root_production_plans.length > 1\"\r\n                    >\r\n                    {{invoice.order.self_serial_number}} {{invoice.order.self_proforma_serial_number}}\r\n                    </span>\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.supplier?.name}}\r\n                    </ng-container>\r\n                    <span *ngIf=\"invoice.level === 4\">\r\n                    {{invoice.order.supplier?.name}}\r\n                  </span>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                  <span *ngIf=\"invoice.level === 4\">\r\n                    {{invoice.order.order?.id}}\r\n                  </span>\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                  <span *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                    {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                  </span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Own Production Invoices\">\r\n        <ng-container *ngIf=\"invoicesOrderType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #ot\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"ordersList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedOrderItem\"\r\n              [value]=\"ordersList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderItem\">\r\n                    Сhoose the Own Production Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedOrderItem\"\r\n                    [routerLink]=\"['order', selectedOrderItem?.id]\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 50%\" class=\"text-center\">\r\n                    Date\r\n                  </th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"order\">\r\n                  <td class=\"text-center\">{{i + 1}}</td>\r\n                  <td style=\"width: 50%\" class=\"text-center\">\r\n                    {{order?.created | date:'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{order.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%;\" class=\"text-center\">\r\n                    {{order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n\r\n                  <td style=\"width: 20%;\">\r\n                    <div *ngFor=\"let root_plan of order.unique_root_production_plans\">\r\n                      {{root_plan.list_product.nomenclature.code}}~{{root_plan.list_product.nomenclature.name}}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"ot.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!ot.paginator && !isLoading && ordersList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"ot.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesOrderType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              [value]=\"ownProductionCategorizedList\"\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 21.85rem)\"\r\n              [(selection)]=\"selectedOrderNode\"\r\n              [scrollable]=\"true\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderNode\">\r\n                    Choose the Own Production Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedOrderNode\"\r\n                    [routerLink]=\"['order', selectedOrderNode?.data.order.id]\"\r\n                  ></a>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-angle-down\"\r\n                    label=\"Expand All\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"expandCollapseAllOrders()\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-angle-up\"\r\n                    class=\"mr-2\"\r\n                    label=\"Collapse All\"\r\n                    (click)=\"expandCollapseAllOrders(false)\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectOrderType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesOrderType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectOrderType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 55%; padding-left: 19px\">\r\n                    Date\r\n                  </th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%;\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%;\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n                <tr\r\n                  [ttRow]=\"rowNode\"\r\n                  [ttSelectableRow]=\"rowNode\"\r\n                  [ttSelectableRowDisabled]=\"rowData.level < 4\"\r\n                  *ngIf=\"!rowData.hideFromTable\"\r\n                >\r\n                  <td style=\"width: 55%\" class=\"text-center\">\r\n                    <div class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                      <span [class.category-name]=\"!rowData.level\">\r\n                      {{rowData.name}}\r\n\r\n                        <i *ngIf=\"rowData.level < 4\" style=\"font-style: normal\">\r\n                        ({{rowData.categories}})\r\n                      </i>\r\n                    </span>\r\n                      <span *ngIf=\"rowData.order\">\r\n                      {{rowData.order?.created | date:'dd/MM/yyyy'}}\r\n                    </span>\r\n                    </div>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                  <span\r\n                    *ngIf=\"rowData.order\"\r\n                    [class.text-warning]=\"rowData.order.unique_root_production_plans.length > 1\"\r\n                  >\r\n                    {{rowData.order.id}}\r\n                  </span>\r\n                  </td>\r\n                  <td style=\"width: 15%;\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"rowData.order\">\r\n                      {{rowData.order.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                  </td>\r\n\r\n                  <td style=\"width: 20%;\">\r\n                    <ng-container *ngIf=\"rowData.order && rowData.plan\">\r\n                      {{rowData.plan.list_product.nomenclature.code}}~{{rowData.plan.list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"General Procurement Invoices\">\r\n        <ng-container *ngIf=\"invoicesPurchasedType === 'list'\">\r\n          <div class=\"page__table\">\r\n            <p-table\r\n              #pt\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 18.8rem)\"\r\n              dataKey=\"id\"\r\n              [scrollable]=\"true\"\r\n              [paginator]=\"purchasedInvoicesList.length > 0\"\r\n              [rows]=\"10\"\r\n              [(selection)]=\"selectedInvoicePurchaseItem\"\r\n              [value]=\"purchasedInvoicesList\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedInvoicePurchaseItem\">\r\n                    Choose the General Procurement Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedInvoicePurchaseItem\"\r\n                    [routerLink]=\"['invoice', selectedInvoicePurchaseItem?.id]\"\r\n                  ></a>\r\n                  <button\r\n                    [disabled]=\"invoicesPurchasedType=== 'list'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectPurchaseType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectPurchaseType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 5%;\" class=\"text-center\">#</th>\r\n                  <th style=\"width: 25%\" class=\"text-center\">Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoice let-i=\"rowIndex\">\r\n                <tr [pSelectableRow]=\"invoice\">\r\n                  <td style=\"width: 5%\" class=\"text-center\">\r\n                    {{i + 1}}\r\n                  </td>\r\n                  <td style=\"width: 25%\" class=\"text-center\">\r\n                    {{invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.supplier?.name}}\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    {{invoice.order?.id}}\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <ng-container *ngIf=\"invoice.root_production_plans.length > 0\">\r\n                      {{invoice.root_production_plans[0].list_product.nomenclature.code}}\r\n                      ~{{invoice.root_production_plans[0].list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"paginatorright\">\r\n                <p-button\r\n                  type=\"button\"\r\n                  (click)=\"pt.paginator=false\"\r\n                  styleClass=\"p-button-text\"\r\n                >All\r\n                </p-button>\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n          <div *ngIf=\"!pt.paginator && !isLoading && purchasedInvoicesList.length > 0\" class=\"paginator-return-pagination\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"pt.paginator=true\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              Return pagination\r\n            </p-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"invoicesPurchasedType === 'hierarchy'\">\r\n          <div class=\"page__table\">\r\n            <p-treeTable\r\n              [value]=\"invoicePurchasedTree\"\r\n              [scrollable]=\"true\"\r\n              selectionMode=\"single\"\r\n              scrollHeight=\"calc(100vh - 21.85rem)\"\r\n              [(selection)]=\"selectedPurchasedInvoiceNode\"\r\n            >\r\n              <ng-template pTemplate=\"caption\">\r\n                <div class=\"d-flex\">\r\n                  <p\r\n                    class=\"subtitle\"\r\n                    *ngIf=\"!selectedOrderNode\">\r\n                    Choose the General Procurement Invoice to view Items\r\n                  </p>\r\n\r\n                  <a\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-bars\"\r\n                    label=\"Items\"\r\n                    class=\"ml-auto mr-2\"\r\n                    [class.disabled]=\"!selectedPurchasedInvoiceNode\"\r\n                    [routerLink]=\"['invoice', selectedPurchasedInvoiceNode?.data.invoice ? selectedPurchasedInvoiceNode?.data.invoice.id :selectedPurchasedInvoiceNode?.data.id]\"\r\n                  ></a>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    icon=\"pi pi-angle-down\"\r\n                    label=\"Expand All\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"expandCollapsePurchasedInvoices()\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    icon=\"pi pi-angle-up\"\r\n                    label=\"Collapse All\"\r\n                    (click)=\"expandCollapsePurchasedInvoices(false)\"\r\n                  ></button>\r\n                  <button\r\n                    pButton\r\n                    type=\"button\"\r\n                    class=\"mr-2\"\r\n                    label=\"List\"\r\n                    icon=\"pi pi-list\"\r\n                    (click)=\"onSelectPurchaseType('list')\"\r\n                  ></button>\r\n                  <button\r\n                    [disabled]=\"invoicesPurchasedType === 'hierarchy'\"\r\n                    pButton\r\n                    type=\"button\"\r\n                    label=\"Hierarchy\"\r\n                    icon=\"pi pi-table\"\r\n                    (click)=\"onSelectPurchaseType('hierarchy')\"\r\n                  ></button>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                  <th style=\"width: 30%; padding-left: 19px\">Date</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Invoice Number</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Supplier</th>\r\n                  <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n                  <th style=\"width: 15%\" class=\"text-center\">Items Reception Date</th>\r\n                  <th style=\"width: 20%\">Root List</th>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"body\" let-invoiceNode let-invoice=\"rowData\">\r\n                <tr\r\n                  [ttRow]=\"invoiceNode\"\r\n                  [ttSelectableRowDisabled]=\"!invoice.order && !invoice.level || invoice.level < 4\"\r\n                  [ttSelectableRow]=\"invoiceNode\"\r\n                >\r\n                  <td style=\"width: 30%\" [class.text-center]=\"invoice.order\">\r\n                    <div class=\"table-toggle\">\r\n                      <p-treeTableToggler [rowNode]=\"invoiceNode\"></p-treeTableToggler>\r\n                      <ng-container *ngIf=\"!invoice.order\">\r\n                        <p [class.category-name]=\"invoice.level === 0\">{{invoice.name}}\r\n                          <span *ngIf=\"invoice.description\">({{invoice.description}})</span>\r\n                          <i *ngIf=\"invoice.level < 4 && invoice.level > 0\" style=\"font-style: normal\">\r\n                            ({{invoice.categories}})\r\n                          </i>\r\n                        </p>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"invoice.order\">\r\n                        <p class=\"category-name\">\r\n                          {{invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                        </p>\r\n                      </ng-container>\r\n                      <span *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.invoice.system_creation_date | date:'dd/MM/yyyy'}}\r\n                    </span>\r\n                    </div>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.self_serial_number}} {{invoice.self_proforma_serial_number}}\r\n                    </ng-container>\r\n                    <span\r\n                      *ngIf=\"invoice.level === 4\"\r\n                      [class.text-warning]=\"invoice.invoice.unique_root_production_plans.length > 1\"\r\n                    >\r\n                    {{invoice.invoice.self_serial_number}} {{invoice.invoice.self_proforma_serial_number}}\r\n                  </span>\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.supplier?.name}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.invoice.supplier?.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td style=\"width: 10%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.order?.id}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.invoice.order?.id}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td style=\"width: 15%\" class=\"text-center\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      {{invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"invoice.level === 4\">\r\n                      {{invoice.invoice.items_reception_date | date: 'dd/MM/yyyy'}}\r\n                    </ng-container>\r\n                  </td>\r\n                  <td style=\"width: 20%\">\r\n                    <ng-container *ngIf=\"invoice.order\">\r\n                      <div *ngFor=\"let root_list of invoice.root_production_plans\">\r\n                        {{root_list.list_product.nomenclature.name}}\r\n                      </div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"invoice.level === 4 && invoice.plan\">\r\n                      {{invoice.plan.list_product.nomenclature.code}}~{{invoice.plan.list_product.nomenclature.name}}\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                  <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                    <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                    <span *ngIf=\"!isLoading\">No Records Found</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-treeTable>\r\n          </div>\r\n        </ng-container>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {SerialType} from '../../models/serial-type';\nimport {MenuItem} from 'primeng/api';\nimport {SerialTypeService} from '../../services/serial-type.service';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-serial-types',\n  templateUrl: './warehouse-serial-types.component.html',\n  styleUrls: ['./warehouse-serial-types.component.scss']\n})\nexport class WarehouseSerialTypesComponent implements OnInit {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Serial Type',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditSerialType()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveSerialType()\n      }\n    ]\n  }];\n\n  isLoading = true;\n  serialTypes: SerialType[] = [];\n  selectedSerialType: SerialType;\n\n  constructor(\n    private serialTypeService: SerialTypeService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getSerialTypes();\n  }\n\n  getSerialTypes() {\n    this.serialTypeService.get().subscribe(serialTypes => {\n      this.serialTypes = serialTypes;\n      this.isLoading = false;\n    })\n  }\n\n  onEditSerialType() {\n    this.serialTypeService.createEditSerialTypeModal('edit', this.selectedSerialType).subscribe(serialTypes => {\n      if (serialTypes) {\n        const index = this.serialTypes.findIndex(t => t.id === this.selectedSerialType.id);\n        this.serialTypes[index] = serialTypes;\n        this.selectedSerialType = this.serialTypes[index];\n      }\n    });\n  }\n\n  onRemoveSerialType() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.serialTypeService.delete(this.selectedSerialType).subscribe(() => {\n          const index = this.serialTypes.findIndex(w => w.id === this.selectedSerialType.id);\n          this.serialTypes.splice(index, 1);\n          this.selectedSerialType = null;\n        });\n      }\n    });\n  }\n\n  onAddSerialType() {\n    this.serialTypeService.createEditSerialTypeModal('create').subscribe(serialType => {\n      if (serialType) {\n        this.serialTypes.unshift(serialType);\n      }\n    });\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Serial Number Types</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Serial Type\" (click)=\"onAddSerialType()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"serialTypes.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedSerialType\"\n        [value]=\"serialTypes\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedSerialType\">Choose the Serial Type to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedSerialType\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 35%\">Name</th>\n            <th style=\"width: 20%\" class=\"text-center\">Prefix</th>\n            <th style=\"width: 20%\" class=\"text-center\">Start Number</th>\n            <th style=\"width: 20%\" class=\"text-center\">Suffix</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-type let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"type\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 35%\">{{type.name}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.prefix}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.start_number}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{type.suffix}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"5\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && serialTypes.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AuthService} from '../../../../auth/auth.service';\nimport {Locator} from '../../../models/locator';\nimport {DeliveryChain} from '../../../models/delivery-chain';\n\n@Component({\n  selector: 'pek-warehouse-shipping-request-print',\n  templateUrl: './warehouse-shipping-request-print.component.html',\n  styleUrls: ['./warehouse-shipping-request-print.component.scss']\n})\nexport class WarehouseShippingRequestPrintComponent implements OnInit {\n  @Input() items: any[] = [];\n  @Input() locators: Locator[] = [];\n  @Input() chain: DeliveryChain;\n\n  currentDate = new Date();\n\n  constructor(\n    public readonly auth: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  translateLocator(id: number) {\n    if (!this.locators) {\n      return id;\n    }\n    const locator = this.locators.find(loc => loc.id === id);\n    return `${locator.name} R:${locator.row} C:${locator.column} S:${locator.shelf} P:${locator.place}`;\n  }\n\n}\n","<div class=\"warehouse-shipping-request-print\" *ngIf=\"chain\">\n  <div class=\"warehouse-shipping-request-print__header\">\n    <h2>Delivery Note #{{chain?.serial_number}}</h2>\n    <div class=\"warehouse-shipping-request-print__header-row\">\n      <div class=\"warehouse-shipping-request-print__header-col\">\n        <h4>Pek Automotive d.o.o.</h4>\n        <p>\n          Idrijska cesta 42<br>\n          1360 Vrhnika<br>\n          Slovenija\n        </p>\n      </div>\n      <div class=\"warehouse-shipping-request-print__header-col\">\n        <h4>{{chain?.customer.name}}</h4>\n        <p>{{chain?.customer.address}}</p>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"warehouse-shipping-request-print__table\" *ngIf=\"items\">\n    <div\n      *ngFor=\"let item of items\"\n      class=\"warehouse-shipping-request-print__row\"\n    >\n      <div class=\"warehouse-shipping-request-print__box\">\n        <div class=\"warehouse-shipping-request-print__col\">\n          <h3>Serial number</h3>\n          <p>{{item.warehouse_product.serial_number?.type_with_number}}</p>\n        </div>\n        <div class=\"warehouse-shipping-request-print__col\">\n          <h3>Code</h3>\n          <p>{{item.warehouse_product.nomenclature.code}}</p>\n        </div>\n        <div class=\"warehouse-shipping-request-print__col\">\n          <h3>Name</h3>\n          <p>{{item.warehouse_product.nomenclature.name}}</p>\n        </div>\n        <div class=\"warehouse-shipping-request-print__col\">\n          <h3>Quantity</h3>\n          <p>{{item.quantity}}</p>\n        </div>\n        <div class=\"warehouse-shipping-request-print__col\">\n          <h3>Locator</h3>\n          <p>{{ translateLocator(item.warehouse_product.locator) }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"warehouse-shipping-request-print__bottom\">\n    <div class=\"warehouse-shipping-request-print__column\">\n      <div class=\"warehouse-shipping-request-print__left\">\n        <div>\n          <h3>Sent</h3>\n          <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\n        </div>\n        <div>\n          <h3>Date</h3>\n          <p>{{currentDate | date: 'dd.MM.y'}}</p>\n        </div>\n        <div>\n          <h3>Signed</h3>\n        </div>\n      </div>\n      <div class=\"warehouse-shipping-request-print__right\">\n        <div>\n          <h3>Retrieved</h3>\n          <p></p>\n        </div>\n        <div>\n          <h3>Date</h3>\n          <p></p>\n        </div>\n        <div>\n          <h3>Signed</h3>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {DeliveryChain} from '../../../models/delivery-chain';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DeliveryChainService} from '../../../services/delivery-chain.service';\nimport {finalize, map, tap} from 'rxjs/operators';\nimport {Subject, takeUntil} from 'rxjs';\nimport {environment} from '@env/environment.prod';\nimport {LocatorService} from '../../../services/locator.service';\nimport {Locator} from '../../../models/locator';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-shipping-request',\n  templateUrl: './warehouse-shipping-request.component.html',\n  styleUrls: ['./warehouse-shipping-request.component.scss']\n})\nexport class WarehouseShippingRequestComponent implements OnInit, OnDestroy {\n  isLoading = true;\n\n  chainId: number;\n  chain: DeliveryChain;\n  products: any[] = [];\n  locators: Locator[] = [];\n  link = environment.link_url + 'dash/';\n\n  isCompleting = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private deliveryService: DeliveryChainService,\n    private locatorService: LocatorService,\n    private modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.chainId = +id),\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      this.getDeliveryChain();\n      this.getItems();\n      this.getLocators();\n    });\n  }\n\n  getDeliveryChain() {\n    this.deliveryService.getById(this.chainId).subscribe(chain => {\n      this.chain = chain;\n      this.isLoading = false;\n    });\n  }\n\n  getLocators() {\n    this.locatorService.get().subscribe(locators => {\n      this.locators = locators;\n    });\n  }\n\n  getItems() {\n    this.deliveryService.getDeliveryItems(this.chainId).subscribe(products => {\n      this.products = products;\n    });\n  }\n\n  onGoToChainLink() {\n    window.open(`${this.link}delivery-chains/${this.chainId}`);\n  }\n\n  onComplete() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isCompleting = true;\n        this.deliveryService.complete(this.chainId).pipe(\n          finalize(() => this.isCompleting = false)\n        ).subscribe(() => {\n          this.router.navigate(['../'], {relativeTo: this.route});\n        });\n      }\n    });\n  }\n\n  onPrint() {\n    window.print();\n  }\n\n  translateLocator(id: number) {\n    if (!this.locators) {\n      return id;\n    }\n    const locator = this.locators.find(loc => loc.id === id);\n    return `${locator.name} R:${locator.row} C:${locator.column} S:${locator.shelf} P:${locator.place}`;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>\n        Requests for Delivery Chain\n        <a\n          *ngIf=\"!isLoading\"\n          (click)=\"onGoToChainLink()\"\n        >\n          #{{chain?.serial_number}}\n        </a>\n        <ng-container *ngIf=\"isLoading\">...</ng-container>\n      </h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        class=\"p-button-icon mr-2\"\n        icon=\"pi pi-check\"\n        [label]=\"chain?.closed_at ? 'Already Completed' : 'Complete'\"\n        [loading]=\"isCompleting\"\n        (click)=\"onComplete()\"\n        [disabled]=\"isLoading || chain?.closed_at\"\n      ></button>\n\n      <button\n        pButton\n        type=\"button\"\n        class=\"p-button-icon\"\n        icon=\"pi pi-print\"\n        label=\"Print Delivery Note\"\n        (click)=\"onPrint()\"\n        [disabled]=\"isLoading\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"products.length > 0\"\n        [rows]=\"10\"\n        [value]=\"products\"\n      >\n        <ng-template pTemplate=\"caption\"></ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\n            <th class=\"text-center\" style=\"width: 20%;\">Serial number</th>\n            <th style=\"width: 20%;\">Code</th>\n            <th style=\"width: 20%;\">Name</th>\n            <th class=\"text-center\" style=\"width: 15%;\">Quantity</th>\n            <th class=\"text-center\" style=\"width: 20%;\">Locator</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-item let-i=\"rowIndex\">\n          <tr>\n            <td class=\"text-center\">{{i + 1}}</td>\n            <td class=\"text-center\">{{item.warehouse_product.serial_number?.type_with_number}}</td>\n            <td>{{item.warehouse_product.nomenclature.code}}</td>\n            <td>{{item.warehouse_product.nomenclature.name}}</td>\n            <td class=\"text-center\">{{item.quantity}}</td>\n            <td class=\"text-center\">{{ translateLocator(item.warehouse_product.locator) }}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >\n            All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && products.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<div class=\"print-page\">\n  <pek-warehouse-shipping-request-print\n    [chain]=\"chain\"\n    [items]=\"products\"\n    [locators]=\"locators\"\n  ></pek-warehouse-shipping-request-print>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {DeliveryChain} from '../../models/delivery-chain';\nimport {DeliveryChainService} from '../../services/delivery-chain.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {environment} from '@env/environment.prod';\n\n@Component({\n  selector: 'pek-warehouse-shipping-requests',\n  templateUrl: './warehouse-shipping-requests.component.html',\n  styleUrls: ['./warehouse-shipping-requests.component.scss']\n})\nexport class WarehouseShippingRequestsComponent implements OnInit {\n  link = environment.link_url + 'dash/';\n\n  isLoading = true;\n  isLoadingCustomers = true;\n\n  customers: Company[] = [];\n  chains: DeliveryChain[] = [];\n  selectedChain: DeliveryChain;\n\n  searchForm: FormGroup = this.fb.group({\n    created_after: [null],\n    created_before: [null],\n    customer_id: [null],\n    is_open: [null],\n  });\n\n  requestsTypes = [\n    {name: 'Open Requests', value: true},\n    {name: 'Closed Requests', value: false},\n  ];\n\n  query: QuerySearch[] = [];\n\n  constructor(\n    private readonly companyService: CompanyService,\n    private readonly deliveryService: DeliveryChainService,\n    private readonly adapterService: AdapterService,\n    private readonly fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getChains();\n    this.getCustomers();\n  }\n\n  getChains() {\n    this.deliveryService.get(this.query).subscribe(chains => {\n      this.chains = chains;\n      this.isLoading = false;\n    });\n  }\n\n  searchChains() {\n    this.isLoading = true;\n    this.chains = [];\n    this.query = [];\n\n    if (this.searchForm.get('is_open')?.value !== null) {\n      this.query.push({\n        name: 'is_open',\n        value: this.searchForm.get('is_open').value\n      });\n    }\n\n    if (this.searchForm.get('customer_id')?.value) {\n      this.query.push({\n        name: 'customer_id',\n        value: this.searchForm.get('customer_id').value\n      });\n    }\n\n    if (this.searchForm.get('created_before').value) {\n      this.query.push({\n        name: 'created_before',\n        value: this.adapterService.dateAdapter(this.searchForm.get('created_before').value)\n      });\n    }\n\n    if (this.searchForm.get('created_after').value) {\n      this.query.push({\n        name: 'created_after',\n        value: this.adapterService.dateAdapter(this.searchForm.get('created_after').value)\n      });\n    }\n\n    this.getChains();\n  }\n\n  getCustomers() {\n    this.companyService.get([{name: 'has_delivery_chain', value: 'true'}])\n      .subscribe(customers => {\n        this.customers = customers;\n        this.isLoadingCustomers = false;\n      });\n  }\n\n  goToChain(id: number) {\n    window.open(`${this.link}delivery-chains/${id}`);\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Shipment Requests</h1>\n    </div>\n    <div class=\"page__tools\">\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <form [formGroup]=\"searchForm\">\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Creation From</label>\n              <p-calendar\n                [showClear]=\"true\"\n                formControlName=\"created_after\"\n                (ngModelChange)=\"searchChains()\"\n                [showButtonBar]=\"true\"\n                dataType=\"date\"\n                dateFormat=\"dd/mm/yy\"\n                [readonlyInput]=\"true\"\n              ></p-calendar>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Creation To</label>\n              <p-calendar\n                [showClear]=\"true\"\n                formControlName=\"created_before\"\n                (ngModelChange)=\"searchChains()\"\n                [showButtonBar]=\"true\"\n                dataType=\"date\"\n                dateFormat=\"dd/mm/yy\"\n                [readonlyInput]=\"true\"\n              ></p-calendar>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Requests state</label>\n              <p-dropdown\n                (ngModelChange)=\"searchChains()\"\n                [showClear]=\"true\"\n                formControlName=\"is_open\"\n                [options]=\"requestsTypes\"\n                optionValue=\"value\"\n                optionLabel=\"name\"\n                placeholder=\"Choose Request State\"\n              >\n              </p-dropdown>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Customer</label>\n              <p-dropdown\n                (ngModelChange)=\"searchChains()\"\n                *ngIf=\"!isLoadingCustomers; else spinner\"\n                [showClear]=\"true\"\n                [filter]=\"true\"\n                formControlName=\"customer_id\"\n                [options]=\"customers\"\n                optionValue=\"id\"\n                optionLabel=\"name\"\n                placeholder=\"Choose Customer\"\n              >\n              </p-dropdown>\n            </div>\n          </div>\n        </div>\n      </form>\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"chains.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedChain\"\n        [value]=\"chains\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <button\n              class=\"ml-auto mt-1\"\n              [routerLink]=\"[selectedChain?.id]\"\n              [disabled]=\"!selectedChain\"\n              pButton\n              type=\"button\"\n              icon=\"pi pi pi-bars\"\n              label=\"Shipment Products\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\n            <th class=\"text-center\" style=\"width: 10%;\">Delivery ID</th>\n            <th class=\"text-center\" style=\"width: 20%;\">Sales Chain ID</th>\n            <th style=\"width: 25%;\">Customer</th>\n            <th class=\"text-center\" style=\"width: 20%;\">Created Date</th>\n            <th class=\"text-center\" style=\"width: 20%;\">Completion Date</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-chain let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"chain\">\n            <td class=\"text-center\" style=\"width: 5%;\">\n              {{i + 1}}\n            </td>\n            <td class=\"text-center\" style=\"width: 10%;\">\n              <a\n                (click)=\"goToChain(chain.id)\"\n              >\n                {{chain.serial_number}}\n              </a>\n            </td>\n            <td class=\"text-center\" style=\"width: 20%\">\n              {{chain.id}}\n            </td>\n            <td style=\"width: 25%;\">\n              {{chain.customer.name}}\n            </td>\n            <td class=\"text-center\" style=\"width: 20%;\">\n              {{chain.created_at | date:'dd/MM/yyyy'}}\n            </td>\n            <td class=\"text-center\" style=\"width: 20%;\">\n              {{chain.closed_at | date:'dd/MM/yyyy'}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >\n            All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && chains.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {finalize, Subject} from 'rxjs';\nimport {ToolRequest} from '../../services/tool-request';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToolOrder} from '../../models/tool-order';\nimport {map, tap} from 'rxjs/operators';\nimport {ToolRequestService} from '../../services/tool-request.service';\nimport {ToolOrderService} from '../../services/tool-order.service';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-tool-request',\n  templateUrl: './warehouse-tool-request.component.html',\n  styleUrls: ['./warehouse-tool-request.component.scss']\n})\nexport class WarehouseToolRequestComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  isCompleting = false;\n  requests: ToolRequest[] = [];\n  selectedRequest: ToolRequest;\n\n  orderId: number;\n  order: ToolOrder;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private route: ActivatedRoute,\n    private toolRequestService: ToolRequestService,\n    private toolOrderService: ToolOrderService,\n    private readonly modalService: ModalService,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map(params => params.get('id')),\n      tap(id => this.orderId = +id),\n      tap(() => this.getToolOrder()),\n      tap(() => this.getToolRequest()),\n    ).subscribe();\n  }\n\n  getToolOrder() {\n    this.toolOrderService.getById(this.orderId).subscribe(toolOrder => {\n      this.order = toolOrder;\n    });\n  }\n\n  getToolRequest() {\n    this.toolRequestService.get([\n      {name: 'tool_order', value: this.orderId},\n      {name: 'is_completed', value: false}\n    ]).subscribe(requests => {\n      this.requests = requests;\n      this.isLoading = false;\n    });\n  }\n\n  onShowImages() {\n    this.modalService.showImageGallery([], this.selectedRequest.nomenclature.id, 1).subscribe();\n  }\n\n  onComplete() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isCompleting = true;\n        this.toolOrderService.complete(this.orderId).pipe(\n          finalize(() => this.isCompleting = false)\n        ).subscribe(() => {\n          this.router.navigate(['/warehouse/tool-requests/']);\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>\n        Tool Request\n        <ng-container *ngIf=\"order; else empty\">\n          Order ID: {{order.id}}\n          Area:  {{order.area_locator.area.name}}\n          Locator: {{order.area_locator.name}}\n        </ng-container>\n      </h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        class=\"p-button-icon\"\n        icon=\"pi pi-check\"\n        label=\"Complete\"\n        [loading]=\"isCompleting\"\n        (click)=\"onComplete()\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"requests.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedRequest\"\n        [value]=\"requests\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <button\n              class=\"ml-auto\"\n              pButton\n              type=\"button\"\n              icon=\"pi pi-images\"\n              label=\"Show Images\"\n              (click)=\"onShowImages()\"\n              [disabled]=\"!selectedRequest\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">\n              <h3 class=\"td-title\">#</h3>\n              #\n            </th>\n            <th style=\"width: 35%\">\n              <h3 class=\"td-title\">Code</h3>\n              Code\n            </th>\n            <th style=\"width: 45%\">\n              <h3 class=\"td-title\">Name</h3>\n              Name\n            </th>\n            <th class=\"text-center\" style=\"width: 15%\">\n              <h3 class=\"td-title\">Requested Quantity</h3>\n              Requested Quantity\n            </th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-request let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"request\">\n            <td class=\"text-center\" style=\"width: 5%\">\n              {{i + 1}}\n            </td>\n            <td style=\"width: 35%\">\n              {{request.nomenclature.code}}\n            </td>\n            <td style=\"width: 45%\">\n              {{request.nomenclature.name}}\n            </td>\n            <td style=\"width: 15%\" class=\"text-center\">\n              {{request.required_quantity}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr class=\"tr-spinner\">\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && requests.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<ng-template #empty>\n  ...\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ToolOrderService} from '../../services/tool-order.service';\nimport {ToolOrder} from '../../models/tool-order';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-tool-requests',\n  templateUrl: './warehouse-tool-requests.component.html',\n  styleUrls: ['./warehouse-tool-requests.component.scss']\n})\nexport class WarehouseToolRequestsComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  toolRequests: ToolOrder[] = [];\n  selectedRequest: ToolOrder;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private toolRequestService: ToolOrderService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getRequests();\n  }\n\n  getRequests() {\n    this.toolRequestService.get([{name: 'is_completed', value: false}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(toolRequests => {\n      this.toolRequests = toolRequests;\n      this.toolRequests.sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime())\n      this.isLoading = false;\n    })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Tool Requests</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <div class=\"page__block\">\n        <button\n          pButton\n          type=\"button\"\n          class=\"ml-auto\"\n          icon=\"pi pi-bars\"\n          label=\"Nomenclatures\"\n          [routerLink]=\"[selectedRequest?.id]\"\n          [disabled]=\"!selectedRequest\"\n        ></button>\n      </div>\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"toolRequests.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedRequest\"\n        [value]=\"toolRequests\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 35%\" class=\"text-center\">Area</th>\n            <th style=\"width: 30%\" class=\"text-center\">Locator</th>\n            <th style=\"width: 30%\" class=\"text-center\" pSortableColumn=\"created\">\n              Creation Date\n              <p-sortIcon field=\"created\"></p-sortIcon>\n            </th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"order\">\n            <td style=\"width: 5%\" class=\"text-center\">\n              <h3 class=\"td-title\">#</h3>\n              {{i + 1 }}\n            </td>\n            <td style=\"width: 35%\" class=\"text-center\">\n              <h3 class=\"td-title\">Area</h3>\n              {{order.area_locator.area.name}}\n            </td>\n            <td style=\"width: 30%\" class=\"text-center\">\n              <h3 class=\"td-title\">Locator</h3>\n              {{order.area_locator.name}}\n            </td>\n            <td style=\"width: 30%\" class=\"text-center\">\n              <h3 class=\"td-title\">Creation Date</h3>\n              {{order.created | date:'dd/MM/yyyy'}}\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr class=\"tr-spinner\">\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && toolRequests.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UnitMeasureService} from '../../services/unit-measure.service';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-units-measure',\n  templateUrl: './warehouse-units-measure.component.html',\n  styleUrls: ['./warehouse-units-measure.component.scss']\n})\nexport class WarehouseUnitsMeasureComponent implements OnInit, OnDestroy  {\n  menuItems: MenuItem[] = [{\n    label: 'Selected Unit',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditUnit()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveUnit()\n      }\n    ]\n  }];\n\n  isLoading = true;\n\n  unitsMeasure: UnitMeasure[] = [];\n  selectedUnitMeasure: UnitMeasure;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly unitMeasureService: UnitMeasureService,\n    private readonly modalService: ModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getUnitsMeasure();\n  }\n\n  getUnitsMeasure() {\n    this.unitMeasureService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(unitsMeasure => {\n      this.unitsMeasure = unitsMeasure;\n      this.isLoading = false;\n    })\n  }\n\n  onAddUnit() {\n    this.unitMeasureService.createEditUnitMeasureModal('create').subscribe(unitMeasure => {\n      if (unitMeasure) {\n        this.unitsMeasure.unshift(unitMeasure);\n      }\n    });\n  }\n\n  onEditUnit() {\n    this.unitMeasureService.createEditUnitMeasureModal('edit', this.selectedUnitMeasure).subscribe(unitMeasure => {\n      if (unitMeasure) {\n        const index = this.unitsMeasure.findIndex(t => t.id === this.selectedUnitMeasure.id);\n        this.unitsMeasure[index] = unitMeasure;\n        this.selectedUnitMeasure = this.unitsMeasure[index];\n      }\n    });\n  }\n\n  onRemoveUnit() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.unitMeasureService.delete(this.selectedUnitMeasure).subscribe(() => {\n          const index = this.unitsMeasure.findIndex(w => w.id === this.selectedUnitMeasure.id);\n          this.unitsMeasure.splice(index, 1);\n          this.selectedUnitMeasure = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Units of Measure</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Unit\" (click)=\"onAddUnit()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"unitsMeasure.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedUnitMeasure\"\n        [value]=\"unitsMeasure\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedUnitMeasure\">Choose the Unit of Measure to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedUnitMeasure\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 50%\" class=\"text-center\">Symbol</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-unit let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"unit\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{unit.name}}</td>\n            <td class=\"text-center\" style=\"width: 50%\">{{unit.symbol}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && unitsMeasure.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Warehouse} from '../../models/warehouse';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {MenuItem} from 'primeng/api';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-warehouse-warehouses',\n  templateUrl: './warehouse-warehouses.component.html',\n  styleUrls: ['./warehouse-warehouses.component.scss']\n})\nexport class WarehouseWarehousesComponent implements OnInit, OnDestroy {\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Warehouse',\n    items: [\n      {\n        label: 'Locators',\n        icon: 'pi pi-bars',\n        command: () => this.onGoToWarehouseLocators()\n      },\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditTechnology()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveTechnology()\n      }\n    ]\n  }];\n\n  warehouses: Warehouse[] = [];\n  selectedWarehouse: Warehouse;\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n  }\n\n  getWarehouses() {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.isLoading = false;\n    });\n  }\n\n  onAddWarehouse() {\n    this.warehouseService.createEditWarehouseModal('create').subscribe(warehouse => {\n      if (warehouse) {\n        this.warehouses.unshift(warehouse);\n      }\n    });\n  }\n\n  onGoToWarehouseLocators() {\n    this.router.navigate([this.selectedWarehouse.id, 'locators'], {relativeTo: this.route});\n  }\n\n  onEditTechnology() {\n    this.warehouseService.createEditWarehouseModal('edit', this.selectedWarehouse).subscribe(warehouse => {\n      if (warehouse) {\n        const index = this.warehouses.findIndex(t => t.id === this.selectedWarehouse.id);\n        this.warehouses[index] = warehouse;\n        this.selectedWarehouse = this.warehouses[index];\n      }\n    });\n  }\n\n  onRemoveTechnology() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.warehouseService.delete(this.selectedWarehouse).subscribe(() => {\n          const index = this.warehouses.findIndex(w => w.id === this.selectedWarehouse.id);\n          this.warehouses.splice(index, 1);\n          this.selectedWarehouse = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Warehouses</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Warehouse\" (click)=\"onAddWarehouse()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"warehouses.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedWarehouse\"\n        [value]=\"warehouses\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedWarehouse\">Choose the Warehouse to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedWarehouse\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-warehouse let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"warehouse\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{warehouse.name}}</td>\n            <td style=\"width: 50%\">{{warehouse.description}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && warehouses.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {QuerySearch} from '@shared/models/other';\nimport {Paginator} from 'primeng/paginator';\nimport {debounceTime, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-warehouse-where-used',\n  templateUrl: './warehouse-where-used.component.html',\n  styleUrls: ['./warehouse-where-used.component.scss']\n})\nexport class WarehouseWhereUsedComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  isStartOnePage = false;\n  isLoadingNomenclatures = true;\n  isLoadingUsedNomenclatures = false;\n\n  nomenclatureList: Nomenclature[] = [];\n  usedNomenclatures: Nomenclature[] = [];\n\n  whereUsedNomenclature: Nomenclature;\n  selectedNomenclature: Nomenclature;\n\n  countNomenclatures = 0;\n\n  searchForm: FormGroup = this.fb.group({\n    name: [''],\n    code: [''],\n    category: [''],\n    root_categories: [''],\n    page: [1]\n  });\n\n  queryKey = 'name:/code:/categories:/root_categories:';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private fb: FormBuilder,\n    private nomenclatureService: NomenclatureService,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.searchBoxName.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedNomenclature = null),\n        map(() => this.searchBoxName.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchNomenclatures();\n    });\n\n    fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n      .pipe(\n        tap(() => this.selectedNomenclature = null),\n        map(() => this.searchBoxCode.nativeElement.value),\n        debounceTime(350),\n      ).subscribe(() => {\n      this.searchNomenclatures();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatureList = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoadingNomenclatures = false;\n    });\n  }\n\n  getType(type: ENomenclatureType) {\n    switch (type) {\n      case ENomenclatureType.PURCHASED:\n        return 'Purchased';\n      case ENomenclatureType.ASSEMBLY:\n        return 'Assembly';\n      case ENomenclatureType.MANUFACTURED:\n        return 'Manufactured';\n    }\n  }\n\n  onSearchWhereUsed() {\n    if (this.selectedNomenclature) {\n      this.whereUsedNomenclature = this.selectedNomenclature;\n      this.isLoadingUsedNomenclatures = true;\n      this.usedNomenclatures = [];\n      this.destroy$.next(true);\n      this.nomenclatureService.searchWhereUsed(this.selectedNomenclature.id).pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(usedNomenclatures => {\n        this.usedNomenclatures = usedNomenclatures;\n        this.isLoadingUsedNomenclatures = false;\n      });\n    } else {\n      this.whereUsedNomenclature = null;\n      this.usedNomenclatures = [];\n    }\n  }\n\n  searchNomenclatures() {\n    this.destroy$.next(true);\n    this.isLoadingNomenclatures = true;\n    this.selectedNomenclature = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/categories:${this.searchForm.get('category').value}/root_categories:${this.searchForm.get('root_categories').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true}\n    ];\n\n    if (this.searchForm.get('name').value !== '') {\n      this.query.push({name: 'name', value: this.searchForm.get('name').value});\n    }\n\n    if (this.searchForm.get('code').value !== '') {\n      this.query.push({name: 'code', value: encodeURIComponent(this.searchForm.get('code').value)});\n    }\n\n    if (this.searchForm.get('category').value) {\n      this.query.push({name: 'categories', value: this.searchForm.get('category').value});\n    }\n\n    if (this.searchForm.get('root_categories').value) this.query.push({\n      name: 'root_categories',\n      value: this.searchForm.get('root_categories').value\n    });\n\n    this.getNomenclatures();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  onSelectCategories(ids: string) {\n    this.searchForm.get('category').patchValue(ids);\n    this.searchNomenclatures();\n  }\n\n  onSelectRootCategory(ids: string) {\n    this.searchForm.get('root_categories').patchValue(ids);\n    this.searchNomenclatures();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'warehouse'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Where Used</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <form\n        [formGroup]=\"searchForm\"\n        class=\"warehouse-items__form mb-3\"\n      >\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Code</label>\n              <input class=\"form-control\" formControlName=\"code\" pInputText #searchBoxCode>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Name</label>\n              <input class=\"form-control\" formControlName=\"name\" pInputText #searchBoxName>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Category</label>\n              <pek-multi-categories-picker\n                (choiceCategories)=\"onSelectCategories($event)\"\n              ></pek-multi-categories-picker>\n            </div>\n          </div>\n          <div class=\"col-3\">\n            <div class=\"form-group\">\n              <label>Product Structure Category</label>\n<!--              <pek-product-structure-category-picker-->\n<!--                (choiceCategoryFolAllIds)=\"onSelectRootCategory($event)\"-->\n<!--                [isAllIds]=\"true\"-->\n<!--              ></pek-product-structure-category-picker>-->\n              <pek-multi-product-structure-categories-picker\n                (choiceCategories)=\"onSelectRootCategory($event)\"\n              ></pek-multi-product-structure-categories-picker>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"table-pagination-preloader\">\n        <p-table\n          #dt\n          selectionMode=\"single\"\n          scrollHeight=\"calc(100vh - 30.25rem)\"\n          [scrollable]=\"true\"\n          [rows]=\"10\"\n          [(selection)]=\"selectedNomenclature\"\n          [value]=\"nomenclatureList\"\n          (selectionChange)=\"onSearchWhereUsed()\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th class=\"text-center\" style=\"width: 5%\">#</th>\n              <th style=\"width: 30%\">Code</th>\n              <th style=\"width: 35%\">Name</th>\n              <th style=\"width: 30%\">Category</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n            <tr [pSelectableRow]=\"nomenclature\">\n              <td style=\"width: 5%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\n              <td style=\"width: 35%\">{{nomenclature.name}}</td>\n              <td style=\"width: 30%\">{{nomenclature.category?.name}}{{nomenclature.root_category?.name}}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoadingNomenclatures\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoadingNomenclatures\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n        <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoadingNomenclatures\">\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n        </div>\n      </div>\n      <div\n        class=\"paginator-wrapper\"\n        [class.hide]=\"nomenclatureList.length === 0\"\n      >\n        <p-paginator\n          #paginator\n          [rows]=\"10\"\n          [totalRecords]=\"countNomenclatures\"\n          (onPageChange)=\"paginate($event)\">\n        </p-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        [value]=\"usedNomenclatures\"\n        scrollHeight=\"calc(100vh - 335px)\"\n        [paginator]=\"usedNomenclatures.length > 0\"\n        [rows]=\"10\"\n        selectionMode=\"single\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <h2 class=\"mt-1 mb-1\">\n            Where Used\n            <ng-container *ngIf=\"whereUsedNomenclature; else empty\">\n              {{whereUsedNomenclature.name}} ({{whereUsedNomenclature.code}})\n            </ng-container>\n          </h2>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Code</th>\n            <th style=\"width: 35%\">Name</th>\n            <th style=\"width: 30%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-usedNomenclature let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 30%\">\n              <a\n                target=\"_blank\"\n                [routerLink]=\"'/product-structure/products/structure/' + usedNomenclature.id\"\n              >\n                {{usedNomenclature.nomenclature.code}}\n              </a>\n            </td>\n            <td style=\"width: 35%\">{{usedNomenclature.nomenclature.name}}</td>\n            <td style=\"width: 30%\">{{getType(usedNomenclature.nomenclature.type)}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoadingUsedNomenclatures\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoadingUsedNomenclatures\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </div>\n</div>\n\n<ng-template #empty>\n  <i>(Select the Nomenclature)</i>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-add-product-to-physical-inventory',\n  templateUrl: './add-product-to-physical-inventory.component.html',\n  styleUrls: ['./add-product-to-physical-inventory.component.scss']\n})\nexport class AddProductToPhysicalInventoryComponent implements OnInit {\n  isSaving = false;\n  isSelectProductMode = false;\n\n  nomenclatureType = ENomenclatureType;\n\n  selectedNomenclature: Nomenclature;\n  selectedNomenclatureTechnologiesIds: number[] = [];\n\n  form: FormGroup = this.fb.group({\n    locator_id: [null, Validators.required],\n    add_quantity: [1, [Validators.required, Validators.min(1)]],\n    nomenclature_id: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<AddProductToPhysicalInventoryComponent>,\n    private readonly physicalInventoryService: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) private inventoryId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSelectProductMode() {\n    this.dialogRef.updateSize('90rem', 'auto');\n    this.isSelectProductMode = true;\n  }\n\n  selectLocator(id: number) {\n    this.form.get('locator_id').patchValue(id);\n  }\n\n  onSelectNomenclature(nomenclature: Nomenclature) {\n    this.selectedNomenclature = nomenclature;\n\n    if (nomenclature) {\n      this.form.get('nomenclature_id').patchValue(nomenclature.id);\n      this.selectedNomenclatureTechnologiesIds = nomenclature.technologies.map(t => t.id);\n    } else {\n      this.form.get('nomenclature_id').patchValue(null);\n      this.selectedNomenclatureTechnologiesIds = [];\n    }\n\n    if (this.selectedNomenclatureTechnologiesIds.length > 0) {\n      this.form.addControl('current_technology_id', new FormControl(null, Validators.required));\n    } else {\n      this.form.removeControl('current_technology_id');\n    }\n  }\n\n  onReselectProduct() {\n    this.onSelectProductMode();\n    this.selectedNomenclature = null;\n    this.form.get('nomenclature_id').patchValue(null);\n    this.form.removeControl('current_technology_id');\n    this.selectedNomenclatureTechnologiesIds = [];\n  }\n\n  onChoiceProduct() {\n    this.dialogRef.updateSize('40rem', 'auto');\n    this.isSelectProductMode = false;\n  }\n\n  onSave() {\n    this.isSaving = true;\n    const send = this.form.value;\n    this.physicalInventoryService.addProductToInventory(this.inventoryId, send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n\n  selectTechnology(id: number) {\n    this.form.get('current_technology_id').patchValue(id);\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Add product to Physical Inventory\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <div *ngIf=\"!isSelectProductMode; else nomenclaturePicker\">\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label>Move to*</label>\n\n        <pek-group-locator-picker\n          [selectedLocatorId]=\"this.form.get('locator_id').value\"\n          (selectLocator)=\"selectLocator($event)\"\n        ></pek-group-locator-picker>\n      </div>\n      <div class=\"form-group\">\n        <label>Quantity*</label>\n        <input type=\"number\" min=\"0\" id=\"name\" pInputText formControlName=\"add_quantity\">\n      </div>\n\n      <div\n        class=\"form-group\"\n        *ngIf=\"selectedNomenclature &&\n        selectedNomenclature.type !== nomenclatureType.PURCHASED &&\n        selectedNomenclatureTechnologiesIds.length > 0\"\n      >\n        <label>Technology*</label>\n        <pek-technology-picker\n          (selectTechnology)=\"selectTechnology($event)\"\n          [acceptedTechnologyIds]=\"selectedNomenclatureTechnologiesIds\"\n        ></pek-technology-picker>\n      </div>\n\n      <div class=\"form-group\">\n        <label>\n          Product*\n          <ng-container *ngIf=\"selectedNomenclature\">\n            : {{selectedNomenclature.code}} {{selectedNomenclature.name}}\n          </ng-container>\n        </label>\n\n        <div class=\"custom-button\" *ngIf=\"!selectedNomenclature\">\n          <p-button\n            icon=\"pi pi-plus\"\n            (click)=\"onSelectProductMode()\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n          >\n            Select Product\n          </p-button>\n        </div>\n\n        <div class=\"custom-button\" *ngIf=\"selectedNomenclature\">\n          <p-button\n            icon=\"pi pi-replay\"\n            (click)=\"onReselectProduct()\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n          >\n            Reselect Product\n          </p-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions\n  class=\"justify-content-between\"\n  [class.buttons]=\"isSelectProductMode\"\n>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    *ngIf=\"!isSelectProductMode\"\n    pButton\n    type=\"button\"\n    label=\"Add Product\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n\n  <button\n    *ngIf=\"isSelectProductMode\"\n    pButton\n    type=\"button\"\n    label=\"Select Product\"\n    class=\"p-button-success\"\n    [disabled]=\"!selectedNomenclature\"\n    (click)=\"onChoiceProduct()\"\n  ></button>\n</mat-dialog-actions>\n\n<ng-template #nomenclaturePicker>\n  <pek-nomenclature-picker\n    (selectProduct)=\"onSelectNomenclature($event)\"\n    [paginationAbsolute]=\"true\"\n  ></pek-nomenclature-picker>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {LocatorService} from '../../services/locator.service';\nimport {Locator} from '../../models/locator';\n\n@Component({\n  selector: 'pek-create-edit-locator',\n  templateUrl: './create-edit-locator.component.html',\n  styleUrls: ['./create-edit-locator.component.scss']\n})\nexport class CreateEditLocatorComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    warehouse: [0, Validators.required],\n    row: [0, [Validators.required, Validators.min(0)]],\n    shelf: [0, [Validators.required, Validators.min(0)]],\n    column: [0, [Validators.required, Validators.min(0)]],\n    place: [0, [Validators.required, Validators.min(0)]],\n    description: ['', Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly locatorService: LocatorService,\n    private dialogRef: MatDialogRef<CreateEditLocatorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, locator: Locator }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.locator.id));\n      this.form.patchValue(<any>this.data.locator);\n      this.form.get('warehouse').patchValue(this.data.locator.warehouse.id)\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createLocator();\n        break;\n      }\n      case 'edit': {\n        this.editLocator();\n        break;\n      }\n    }\n  }\n\n  createLocator() {\n    const send = <any>this.form.value;\n    this.locatorService.create(send).subscribe({\n      next: locator => this.dialogRef.close(locator),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editLocator() {\n    const send = <any>this.form.value;\n    this.locatorService.update(send).subscribe({\n      next: locator => this.dialogRef.close(locator),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectWarehouse(id: number) {\n    this.form.get('warehouse').patchValue(id);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Locator\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Warehouse*</label>\n      <pek-warehouse-picker\n        [selectedWarehouseId]=\"+form.get('warehouse').value\"\n        (selectWarehouse)=\"onSelectWarehouse($event)\"\n      ></pek-warehouse-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"row\">Row*</label>\n          <input formControlName=\"row\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"row\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"column\">Column*</label>\n          <input formControlName=\"column\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"column\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"shelf\">Shelf*</label>\n          <input formControlName=\"shelf\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"shelf\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"place\">Place*</label>\n          <input formControlName=\"place\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"place\" required=\"required\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {SerialTypeService} from '../../services/serial-type.service';\r\nimport {SerialType} from '../../models/serial-type';\r\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\r\nimport {ModalService} from '@shared/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-serial-type',\r\n  templateUrl: './create-edit-serial-type.component.html',\r\n  styleUrls: ['./create-edit-serial-type.component.scss']\r\n})\r\nexport class CreateEditSerialTypeComponent implements OnInit {\r\n  isSaving = false;\r\n\r\n  nomenclatures: Partial<Nomenclature>[] = [];\r\n\r\n  form = this.fb.group({\r\n    name: ['', [Validators.required]],\r\n    prefix: ['', [Validators.required]],\r\n    suffix: ['', [Validators.required]],\r\n    start_number: [0, [Validators.required]],\r\n    nomenclature_set: [[]],\r\n  });\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly serialTypeService: SerialTypeService,\r\n    private readonly modalService: ModalService,\r\n    private dialogRef: MatDialogRef<CreateEditSerialTypeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, serialType: SerialType }\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.form.addControl('id' as any, new FormControl(this.data.serialType.id));\r\n      this.form.patchValue(<any>this.data.serialType);\r\n\r\n      this.form.get('nomenclature_set').patchValue(this.data.serialType.nomenclature_set.map(n => n.id));\r\n      this.nomenclatures = this.data.serialType.nomenclature_set;\r\n    }\r\n  }\r\n\r\n  getType(type: ENomenclatureType) {\r\n    switch (type) {\r\n      case ENomenclatureType.PURCHASED:\r\n        return 'Purchased';\r\n      case ENomenclatureType.ASSEMBLY:\r\n        return 'Assembly';\r\n      case ENomenclatureType.MANUFACTURED:\r\n        return 'Manufactured';\r\n    }\r\n  }\r\n\r\n  onRemoveNomenclature(id: number) {\r\n    const index = this.nomenclatures.findIndex(n => n.id === id);\r\n    this.nomenclatures.splice(index, 1);\r\n    this.form.get('nomenclature_set').patchValue(this.nomenclatures.map(n => n.id));\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createSerialType();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editSerialType();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onChoiceNomenclature() {\r\n    this.modalService.choiceNomenclatureModal().subscribe(nomenclature => {\r\n      if (nomenclature) {\r\n        this.form.get('nomenclature_set').value.push(nomenclature.id);\r\n        this.nomenclatures.push(nomenclature);\r\n      }\r\n    })\r\n  }\r\n\r\n  createSerialType() {\r\n    const send = <any>this.form.value;\r\n    this.serialTypeService.create(send).subscribe({\r\n      next: serialType => this.dialogRef.close(serialType),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n  editSerialType() {\r\n    const send = <any>this.form.value;\r\n    this.serialTypeService.update(send).subscribe({\r\n      next: serialType => this.dialogRef.close(serialType),\r\n      error: () => this.isSaving = false,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Serial Number Type\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"prefix\"> Prefix* </label>\n          <input formControlName=\"prefix\" pInputText class=\"form-control\" type=\"text\" id=\"prefix\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"start\"> Start Number* </label>\n          <input formControlName=\"start_number\" pInputText class=\"form-control\" type=\"number\" id=\"start\"\n                 required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"suffix\"> Suffix* </label>\n          <input formControlName=\"suffix\" pInputText class=\"form-control\" type=\"text\" id=\"suffix\" required=\"required\">\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"nomenclature-header\">\n        <label> Nomenclatures </label>\n        <div class=\"custom-button\">\n          <p-button\n            icon=\"pi pi-plus\"\n            type=\"button\"\n            styleClass=\"p-button-text\"\n            (click)=\"onChoiceNomenclature()\"\n          >\n            Add Nomenclature\n          </p-button>\n        </div>\n      </div>\n\n      <div *ngIf=\"nomenclatures.length > 0; else empty\">\n        <p-table\n          [value]=\"nomenclatures\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          selectionMode=\"single\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\n              <th style=\"width: 33%\">Name</th>\n              <th style=\"width: 30%\">Code</th>\n              <th style=\"width: 20%\" class=\"text-center\">Type</th>\n              <th style=\"width: 10%\" class=\"text-right\"></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n            <tr>\n              <td style=\"width: 7%\" class=\"text-center\">{{i + 1}}</td>\n              <td style=\"width: 33%\">{{nomenclature.name}}</td>\n              <td style=\"width: 30%\">{{nomenclature.code}}</td>\n              <td style=\"width: 20%\" class=\"text-center\">{{getType(nomenclature.type)}}</td>\n              <td style=\"width: 10%\" class=\"text-right\">\n                <button\n                  pButton\n                  (click)=\"onRemoveNomenclature(nomenclature.id)\"\n                  type=\"button\"\n                  class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                  icon=\"pi pi-trash\"\n                ></button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n\n      <ng-template #empty>\n        <div class=\"empty\">The nomenclature is missing</div>\n      </ng-template>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\nimport {UnitMeasureService} from '../../services/unit-measure.service';\n\n@Component({\n  selector: 'pek-create-edit-unit-measure',\n  templateUrl: './create-edit-unit-measure.component.html',\n  styleUrls: ['./create-edit-unit-measure.component.scss']\n})\nexport class CreateEditUnitMeasureComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    symbol: ['', [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly unitMeasureService: UnitMeasureService,\n    private dialogRef: MatDialogRef<CreateEditUnitMeasureComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, unitMeasure: UnitMeasure }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.unitMeasure.id));\n      this.form.patchValue(this.data.unitMeasure);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createUnitMeasure();\n        break;\n      }\n      case 'edit': {\n        this.editUnitMeasure();\n        break;\n      }\n    }\n  }\n\n  createUnitMeasure() {\n    const send = <Partial<UnitMeasure>>this.form.value;\n    this.unitMeasureService.create(send).subscribe({\n      next: unitMeasure => this.dialogRef.close(unitMeasure),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editUnitMeasure() {\n    const send = <Partial<UnitMeasure>>this.form.value;\n    this.unitMeasureService.update(send).subscribe({\n      next: unitMeasure => this.dialogRef.close(unitMeasure),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Unit Measure\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"symbol\">Symbol*</label>\n      <input type=\"text\" id=\"symbol\" pInputText formControlName=\"symbol\">\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../models/warehouse';\nimport {Category} from '../../../product-structure/models/category';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\n\n@Component({\n  selector: 'pek-create-edit-warehouse-category',\n  templateUrl: './create-edit-warehouse-category.component.html',\n  styleUrls: ['./create-edit-warehouse-category.component.scss']\n})\nexport class CreateEditWarehouseCategoryComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    description: ['', Validators.required],\n    unit_of_measure: [null, Validators.required],\n    parent: [null],\n    is_for_root: [true]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly categoriesService: CategoriesService,\n    private dialogRef: MatDialogRef<CreateEditWarehouseCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: Category }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.category.id));\n      this.form.patchValue(<any>this.data.category);\n      this.form.get('unit_of_measure').patchValue(<any>this.data.category.unit_of_measure.id);\n\n      if (this.data.category.parent) {\n        this.form.get('parent').patchValue(this.data.category.parent);\n      } else {\n        this.form.get('is_for_root').patchValue(true);\n      }\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCategory();\n        break;\n      }\n    }\n  }\n\n  createCategory() {\n    const send = <any>this.form.value;\n    this.categoriesService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCategory() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.categoriesService.updatePartly(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onChoiceCategory(category: Category) {\n    if (category) {\n      this.form.get('parent').patchValue(category.id);\n      this.form.get('is_for_root').patchValue(false);\n    } else {\n      this.form.get('parent').patchValue(null);\n      this.form.get('is_for_root').patchValue(true);\n    }\n  }\n\n  onSelectMeasureUnit(id: number) {\n    this.form.get('unit_of_measure').patchValue(<any>id);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label>Parent Category</label>\n      <pek-product-category-picker\n        [currentCategoryId]=\"form.get('parent').value\"\n        [ignoredCategoryId]=\"data.category?.id\"\n        (choiceCategory)=\"onChoiceCategory($event)\"\n      ></pek-product-category-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label>Unit of measure*</label>\n      <pek-unit-measure-picker\n        (selectMeasureUnit)=\"onSelectMeasureUnit($event)\"\n        [currentMeasureUnitId]=\"+form.get('unit_of_measure').value\"\n      ></pek-unit-measure-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\r\nimport {Product} from '../../../product-structure/models/product';\r\nimport {finalize, forkJoin, of} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'pek-create-edit-warehouse-product',\r\n  templateUrl: './create-edit-warehouse-product.component.html',\r\n  styleUrls: ['./create-edit-warehouse-product.component.scss']\r\n})\r\nexport class CreateEditWarehouseProductComponent implements OnInit {\r\n  isSaving = false;\r\n  isLoading = true;\r\n  nomenclatureType = ENomenclatureType;\r\n\r\n  selectionTypeMode = true;\r\n\r\n  product: Partial<Product> = {\r\n    nomenclature: null\r\n  };\r\n\r\n  newProduct: Partial<Product> = {\r\n    nomenclature: {\r\n      id: null,\r\n      category: null,\r\n      technologies: [],\r\n      images: [],\r\n      type: null,\r\n    }\r\n  };\r\n\r\n  isFormInvalid: boolean = false;\r\n  formValue: Partial<Product & Nomenclature>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, nomenclatureId: number },\r\n    private readonly nomenclatureService: NomenclatureService,\r\n    private dialogRef: MatDialogRef<CreateEditWarehouseProductComponent>,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.type === 'edit') {\r\n      this.dialogRef.updateSize('50rem', 'auto');\r\n      this.getProduct();\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  getProduct() {\r\n    this.nomenclatureService.getById(this.data.nomenclatureId).subscribe(nomenclature => {\r\n      this.product.nomenclature = nomenclature;\r\n\r\n      if (this.product.nomenclature.type !== ENomenclatureType.PURCHASED) {\r\n        this.dialogRef.updateSize('60rem', 'auto');\r\n      }\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\r\n    this.formValue = data.formValue;\r\n    this.isFormInvalid = data.invalid;\r\n  }\r\n\r\n  onSave() {\r\n    this.isSaving = true;\r\n\r\n    switch (this.data.type) {\r\n      case 'create': {\r\n        this.createWarehouseProduct();\r\n        break;\r\n      }\r\n      case 'edit': {\r\n        this.editWarehouseProduct();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onUploadImage(files: File[]) {\r\n    files.forEach(newFile => {\r\n      const send = {\r\n        nomenclature: this.product.nomenclature.id,\r\n        image: newFile,\r\n      };\r\n\r\n      this.nomenclatureService.uploadImage(send).subscribe(image => {\r\n        this.product.nomenclature.images.push(image);\r\n      });\r\n    });\r\n  }\r\n\r\n  onRemoveImage(index: number) {\r\n    this.nomenclatureService.removeImage(this.product.nomenclature.images[index].id).subscribe(() => {\r\n      this.product.nomenclature.images.splice(index, 1);\r\n    });\r\n  }\r\n\r\n  onNewProductRemoveImage(idx: number) {\r\n    this.newProduct.nomenclature.images.splice(idx, 1);\r\n  }\r\n\r\n  onNewProductUploadImage(files: File[]) {\r\n    files.forEach(file => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = (fileLoadedEvent) => {\r\n        const srcData = fileLoadedEvent.target.result;\r\n\r\n        const newImage: NomenclatureImage = {\r\n          file,\r\n          image: srcData,\r\n          id: null\r\n        };\r\n\r\n        this.newProduct.nomenclature.images.push(newImage);\r\n      };\r\n\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  createWarehouseProduct() {\r\n    if (!this.isFormInvalid) {\r\n      this.isSaving = true;\r\n\r\n      const send: Partial<Nomenclature> = {\r\n        name: this.formValue.name,\r\n        code: this.formValue.code,\r\n        description: this.formValue.description,\r\n        type: this.formValue.type,\r\n      };\r\n\r\n      if (this.formValue.type === ENomenclatureType.PURCHASED) {\r\n        send.category = this.formValue.category;\r\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\r\n        delete send.code;\r\n      } else {\r\n        send.technologies = [...this.formValue.technologies];\r\n        send.category = null;\r\n      }\r\n\r\n      this.nomenclatureService.create(send).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(nomenclature => {\r\n        this.isSaving = true;\r\n\r\n        const send = [];\r\n\r\n        if (this.newProduct.nomenclature.images.length > 0) {\r\n          this.newProduct.nomenclature.images.forEach(file => {\r\n            send.push({\r\n              nomenclature: nomenclature.id,\r\n              image: file.file,\r\n            });\r\n          });\r\n\r\n          this.nomenclatureService.uploadImagesSeveral(send).pipe(\r\n            finalize(() => this.isSaving = false)\r\n          ).subscribe(() => this.dialogRef.close(true));\r\n        } else {\r\n          this.dialogRef.close(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  editWarehouseProduct() {\r\n    if (!this.isFormInvalid) {\r\n      this.isSaving = true;\r\n\r\n      const send: Partial<Nomenclature> = {\r\n        id: this.product.nomenclature.id,\r\n        name: this.formValue.name,\r\n        code: this.formValue.code,\r\n        description: this.formValue.description,\r\n        type: this.formValue.type,\r\n      };\r\n      let createUpdateTechnicalEquipments;\r\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\r\n        send.category = this.formValue.category;\r\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\r\n        delete send.code;\r\n      } else {\r\n        send.technologies = [...this.formValue.technologies];\r\n        send.category = null;\r\n        const technicalEquipments = this.formValue.technical_equipments;\r\n        createUpdateTechnicalEquipments = {\r\n          updated_created_technical_equipment: technicalEquipments.map(equipment => {\r\n            return {\r\n              id: equipment.id,\r\n              used_by_nomenclature: equipment.used_by_nomenclature.id,\r\n              quantity: equipment.quantity\r\n            };\r\n          }),\r\n          deleted_technical_equipment_ids: this.formValue.deleted_technical_equipments_ids,\r\n        };\r\n      }\r\n\r\n      forkJoin({\r\n        nomenclature: this.nomenclatureService.update(send),\r\n        technicalEquipment: this.product.nomenclature.type !== ENomenclatureType.PURCHASED ?\r\n          this.nomenclatureService.bulkCreateUpdateTechnicalEquipments(this.product.nomenclature.id, createUpdateTechnicalEquipments) :\r\n          of(true),\r\n      }).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(() => {\r\n        this.dialogRef.close(true);\r\n      });\r\n    }\r\n  }\r\n\r\n  choiceType(type: ENomenclatureType) {\r\n    this.newProduct.nomenclature.type = type;\r\n\r\n    if (this.newProduct.nomenclature.type !== ENomenclatureType.PURCHASED) {\r\n      this.dialogRef.updateSize('60rem', 'auto');\r\n    } else {\r\n      this.dialogRef.updateSize('50rem', 'auto');\r\n    }\r\n\r\n    this.selectionTypeMode = false;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Item\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div class=\"create-edit-warehouse-product\">\n    <ng-container *ngIf=\"data.type === 'edit'\">\n      <ng-container *ngIf=\"!isLoading; else loading\">\n        <pek-create-edit-form\n          [isShowQuantity]=\"false\"\n          [product]=\"product\"\n          (formChange)=\"onChangeFormValue($event)\"\n          (uploadImage)=\"onUploadImage($event)\"\n          (removeImage)=\"onRemoveImage($event)\"\n        ></pek-create-edit-form>\n      </ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.type === 'create'\">\n      <ng-container *ngIf=\"!selectionTypeMode; else selectionType\">\n        <pek-create-edit-form\n          type=\"create\"\n          [isShowQuantity]=\"false\"\n          [product]=\"newProduct\"\n          (formChange)=\"onChangeFormValue($event)\"\n          (uploadImage)=\"onNewProductUploadImage($event)\"\n          (removeImage)=\"onNewProductRemoveImage($event)\"\n        ></pek-create-edit-form>\n      </ng-container>\n    </ng-container>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <ng-container *ngIf=\"!isLoading\">\n    <button\n      pButton\n      type=\"button\"\n      label=\"Cancel\"\n      [mat-dialog-close]=\"false\"\n      class=\"p-button-danger\"\n    ></button>\n    <button\n      *ngIf=\"data.type === 'edit' || (data.type === 'create' && !this.selectionTypeMode)\"\n      pButton\n      type=\"button\"\n      [label]=\"data.type\"\n      class=\"p-button-success\"\n      [disabled]=\"isFormInvalid\"\n      [loading]=\"isSaving\"\n      (click)=\"onSave()\"\n    ></button>\n  </ng-container>\n</mat-dialog-actions>\n\n<ng-template #loading>\n  <div class=\"loading\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 3.25rem\"></i>\n  </div>\n</ng-template>\n\n<ng-template #selectionType>\n  <div class=\"choice-type\">\n    <h3>Please select the type of new position</h3>\n\n    <div class=\"choice-type__buttons\">\n      <button\n        pButton\n        type=\"button\"\n        label=\"Purchased\"\n        (click)=\"choiceType(nomenclatureType.PURCHASED)\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        label=\"Assembly\"\n        (click)=\"choiceType(nomenclatureType.ASSEMBLY)\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        label=\"Manufactured\"\n        (click)=\"choiceType(nomenclatureType.MANUFACTURED)\"\n      ></button>\n    </div>\n  </div>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Warehouse} from '../../models/warehouse';\n\n@Component({\n  selector: 'pek-create-edit-warehouse',\n  templateUrl: './create-edit-warehouse.component.html',\n  styleUrls: ['./create-edit-warehouse.component.scss']\n})\nexport class CreateEditWarehouseComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly warehouseService: WarehouseService,\n    private dialogRef: MatDialogRef<CreateEditWarehouseComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, warehouse: Warehouse }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.warehouse.id));\n      this.form.patchValue(this.data.warehouse);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createWarehouse();\n        break;\n      }\n      case 'edit': {\n        this.editWarehouse();\n        break;\n      }\n    }\n  }\n\n  createWarehouse() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.warehouseService.create(send).subscribe({\n      next: warehouse => this.dialogRef.close(warehouse),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editWarehouse() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.warehouseService.update(send).subscribe({\n      next: warehouse => this.dialogRef.close(warehouse),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Warehouse\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Warehouse} from '../../models/warehouse';\nimport {Locator} from '../../models/locator';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-create-physical-inventory',\n  templateUrl: './create-physical-inventory.component.html',\n  styleUrls: ['./create-physical-inventory.component.scss']\n})\nexport class CreatePhysicalInventoryComponent implements OnInit {\n  form: FormGroup = this.fb.group({\n    warehouses: [null, Validators.required],\n    locators: [null, Validators.required],\n  });\n\n  isSaving = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<CreatePhysicalInventoryComponent>,\n    private readonly physicalInventoryServices: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) private data: any,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectWarehouses(warehouses: Warehouse[]) {\n    let value = null;\n    if (warehouses?.length > 0) value = warehouses.map(w => w.id);\n    this.form.get('warehouses').patchValue(value);\n  }\n\n  selectLocators(locators: Locator[]) {\n    let value = null;\n    if (locators?.length > 0) value = locators.map(w => w.id);\n    this.form.get('locators').patchValue(value);\n  }\n\n  onCreatePhysicalInventory() {\n    this.isSaving = true;\n    const locatorsIds = this.form.get('locators').value.splice(',').join(',');\n    this.physicalInventoryServices.createPhysicalInventory(locatorsIds).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Create Physical Inventory\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Warehouses</label>\n      <pek-multi-warehouse-picker\n        (selectWarehouses)=\"selectWarehouses($event)\"\n        [currentWarehousesIds]=\"form.get('warehouses').value\"\n      ></pek-multi-warehouse-picker>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Locator</label>\n      <pek-multi-locator-picker\n        [isDisabled]=\"true\"\n        [currentWarehousesIds]=\"form.get('warehouses').value\"\n        (selectLocators)=\"selectLocators($event)\"\n      >\n      </pek-multi-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Create\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onCreatePhysicalInventory()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PhysicalInventoryService} from '../../services/physical-inventory.service';\nimport {Product} from '../../../product-structure/models/product';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-move-physical-inventory-product',\n  templateUrl: './move-physical-inventory-product.component.html',\n  styleUrls: ['./move-physical-inventory-product.component.scss']\n})\nexport class MovePhysicalInventoryProductComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    new_locator_id: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<MovePhysicalInventoryProductComponent>,\n    private readonly physicalInventoryService: PhysicalInventoryService,\n    @Inject(MAT_DIALOG_DATA) public data: Product,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectLocator(id: number) {\n    this.form.get('new_locator_id').patchValue(id);\n  }\n\n  onMoveProduct() {\n    this.isSaving = true;\n    this.physicalInventoryService.movePhysicalInventoryProduct(this.data.id, this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close(true));\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        Move Product\r\n\r\n        <ng-container *ngIf=\"data.product; else productTitle\">\r\n          {{data.product.nomenclature.name}}\r\n        </ng-container>\r\n\r\n        <ng-template #productTitle>\r\n          {{data.nomenclature.name}}\r\n        </ng-template>\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <label class=\"current-locator\">\r\n      Current Locator: {{data.locator.name}}\r\n      R: {{data.locator.row}}\r\n      Col: {{data.locator.column}}\r\n      Sh: {{data.locator.shelf}}\r\n      Pl: {{data.locator.place}}\r\n    </label>\r\n    <div class=\"form-group\">\r\n      <label>Move to*</label>\r\n      <pek-group-locator-picker\r\n        [product]=\"data\"\r\n        (selectLocator)=\"selectLocator($event)\"\r\n      ></pek-group-locator-picker>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Move\"\r\n    class=\"p-button-success\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onMoveProduct()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {WarehouseProductService} from '../../services/warehouse-product.service';\nimport {WarehouseProduct} from '../../models/warehouse-product';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-move-warehouse-product',\n  templateUrl: './move-warehouse-product.component.html',\n  styleUrls: ['./move-warehouse-product.component.scss']\n})\nexport class MoveWarehouseProductComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<MoveWarehouseProductComponent>,\n    private readonly warehouseProductService: WarehouseProductService,\n    @Inject(MAT_DIALOG_DATA) public product: WarehouseProduct,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.product.serial_numbers) {\n      this.form = this.fb.group({\n        quantity: [0, [Validators.max(this.product.quantity ? this.product.quantity : this.product.total_locator_quantity), Validators.min(1), Validators.required]],\n        nomenclature: [this.product.nomenclature.id, Validators.required],\n        to_locator: [null, Validators.required],\n        from_locator: [this.product.locator.id, Validators.required],\n      });\n    } else {\n      this.form = this.fb.group({\n        quantity: [0, [Validators.max(this.product.quantity ? this.product.quantity : this.product.total_locator_quantity), Validators.min(1), Validators.required]],\n        to_locator: [null, Validators.required],\n      });\n    }\n  }\n\n  selectLocator(id: number) {\n    this.form.get('to_locator').patchValue(<any>id);\n  }\n\n  onMoveProduct() {\n    if (this.form.valid) {\n      this.isSaving = true;\n\n      if (this.product.serial_numbers) {\n        this.warehouseProductService.moveSerial(<Partial<WarehouseProduct>>this.form.value).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(() => this.dialogRef.close(true));\n      }\n      if (!this.product.serial_numbers) {\n        const send = [];\n        let totalQuantity = this.form.get('quantity').value;\n\n        this.product.extra_info.forEach(item => {\n          let actualQuantity = 0;\n\n          if (totalQuantity <= item.quantity && totalQuantity > 0) {\n            actualQuantity = item.quantity - (item.quantity - totalQuantity);\n            totalQuantity -= actualQuantity;\n          } else if (totalQuantity > 0) {\n            actualQuantity = item.quantity;\n            totalQuantity -= item.quantity;\n          }\n\n          send.push({\n            id: item.id,\n            to_locator: this.form.get('to_locator').value,\n            quantity: actualQuantity,\n          });\n        });\n\n        this.warehouseProductService.moveWarehouseSeveralBulk(<Partial<WarehouseProduct>[]>send).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(() => this.dialogRef.close(true));\n      }\n    }\n  }\n\n  onChangeQuantity(value: any) {\n    const maxQuantity = this.product.quantity ? this.product.quantity : this.product.total_locator_quantity;\n    if (value > maxQuantity) {\n      this.form.get('quantity').patchValue(maxQuantity);\n    }\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Move Items {{product.nomenclature.name}} ({{product.nomenclature.code}})\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Locator*</label>\n      <pek-group-locator-picker\n        [product]=\"product\"\n        (selectLocator)=\"selectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity* (Max: {{product?.quantity ? product.quantity : product?.total_locator_quantity }})</label>\n      <input\n        type=\"number\"\n        id=\"quantity\"\n        pInputText\n        formControlName=\"quantity\"\n        class=\"form-control\"\n        (ngModelChange)=\"onChangeQuantity($event)\"\n      >\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Move\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMoveProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Router, UrlTree} from '@angular/router';\r\nimport {WarehouseProductExtraInfo} from '../../models/warehouse-product';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {environment} from '@env/environment';\r\n\r\n@Component({\r\n  selector: 'pek-nomenclature-serial-info',\r\n  templateUrl: './nomenclature-serial-info.component.html',\r\n  styleUrls: ['./nomenclature-serial-info.component.scss']\r\n})\r\nexport class NomenclatureSerialInfoComponent implements OnInit {\r\n\r\n  link = environment.link_url;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<NomenclatureSerialInfoComponent>,\r\n    private readonly router: Router,\r\n    @Inject(MAT_DIALOG_DATA) public data: {extraInfo: WarehouseProductExtraInfo[], nomenclature: Nomenclature},\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.data.extraInfo = [...this.data.extraInfo]\r\n  }\r\n\r\n  protocolInfo(protocolId: number, serial: string, warehouseproductqcprotocol: number) {\r\n  }\r\n\r\n  goToOrder(orderType: number, orderId: number) {\r\n    let url: UrlTree = null;\r\n\r\n    switch (orderType) {\r\n      case 3: {\r\n        url = this.router.createUrlTree(['dash', 'production', 'orders', 'order', orderId]);\r\n        break;\r\n      }\r\n      case 2: {\r\n        url = this.router.createUrlTree(['dash', 'outsource', 'outsource-chain', 'products', orderId]);\r\n        break;\r\n      }\r\n      case 1: {\r\n        url = this.router.createUrlTree(['dash', 'procurement', 'orders', 'products', orderId]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (url) window.open(this.link.slice(0, -1) + url.toString(), '_blank');\r\n  }\r\n\r\n  goToInvoice(invoiceId: number) {\r\n    const url = this.router.createUrlTree(['dash', 'accounting', 'invoices', 'products', invoiceId]);\r\n    window.open(url.toString(), '_blank');\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Serial Numbers Info\n  </h2>\n</div>\n\n<!--<mat-dialog-content>-->\n\n<div class=\"nomenclature-serial-info\">\n  <p-table\n    [rows]=\"10\"\n    rowExpandMode=\"single\"\n    dataKey=\"id\"\n    selectionMode=\"single\"\n    [value]=\"data.extraInfo\"\n    [paginator]=\"data.extraInfo.length > 10\"\n    scrollHeight=\"calc(100vh - 20rem)\"\n    [scrollable]=\"true\"\n  >\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th style=\"width: 10%\" class=\"index-header text-center\">#</th>\n        <th style=\"width: 15%\" class=\"text-center\">Invoice</th>\n        <th style=\"width: 15%\" class=\"text-center\">Order</th>\n        <th style=\"width: 20%\" class=\"text-center\">Protocol</th>\n        <th style=\"width: 40%\" class=\"text-center\">Serial Number</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-info let-i=\"rowIndex\">\n      <tr [pRowToggler]=\"info\">\n        <td style=\"width: 10%\" class=\"text-center\">\n          <h3 class=\"td-title\">#</h3>\n          {{i + 1}}\n        </td>\n        <td style=\"width: 15%\" class=\"text-center\">\n          <h3 class=\"td-title\">Invoice</h3>\n          <a *ngIf=\"info?.invoice_id\" (click)=\"goToInvoice(info.invoice_id)\">{{info.invoice_id}}</a>\n          <div *ngIf=\"!info?.invoice_id\">None</div>\n        </td>\n        <td style=\"width: 15%\" class=\"text-center\">\n          <h3 class=\"td-title\">Order</h3>\n          <a *ngIf=\"info?.order_id\" (click)=\"goToOrder(info.order_accounting_type, info.order_id)\">{{info.order_id}}</a>\n          <div *ngIf=\"!info?.order_id\">None</div>\n        </td>\n        <td style=\"width: 20%\" class=\"text-center\">\n          <h3 class=\"td-title\">Protocol</h3>\n          <a\n            *ngIf=\"data?.nomenclature?.qc_protocol\"\n            (click)=\"protocolInfo(data.nomenclature.qc_protocol, info.serial_number_str, info.warehouseproductqcprotocol)\"\n          >\n            {{data.nomenclature.qc_protocol}}\n          </a>\n          <div *ngIf=\"!data?.nomenclature?.qc_protocol\">None</div>\n        </td>\n        <td style=\"width: 40%\" class=\"text-center\">\n          <h3 class=\"td-title\">Serial Number</h3>\n          <div *ngIf=\"info?.serial_number_str\">{{info.serial_number_str}}</div>\n          <div *ngIf=\"!info?.serial_number_str\">None</div>\n        </td>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\">\n      <tr>\n        <td class=\"text-center p-3\" [attr.colspan]=\"5\">\n          <span>No Records Found</span>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n  <!--</mat-dialog-content>-->\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {InventoryProduct} from '../../models/physical-inventory';\r\n\r\n@Component({\r\n  selector: 'pek-physical-inventory-products-changes',\r\n  templateUrl: './physical-inventory-products-changes.component.html',\r\n  styleUrls: ['./physical-inventory-products-changes.component.scss']\r\n})\r\nexport class PhysicalInventoryProductsChangesComponent implements OnInit {\r\n  nonScannedSerialNumbers: InventoryProduct[];\r\n  notMatchingQuantity: InventoryProduct[];\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<PhysicalInventoryProductsChangesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: InventoryProduct[],\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('this.data', this.data);\r\n    this.nonScannedSerialNumbers = this.data.filter(invProduct => invProduct.serial_number);\r\n    this.notMatchingQuantity = this.data.filter(invProduct => !invProduct.serial_number);\r\n  }\r\n\r\n  onAcceptChanges() {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        Physical Inventory Before Completion Check\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <p-tabView>\r\n    <p-tabPanel header=\"Not Matching Quantity\">\r\n      <p-table\r\n        [rows]=\"10\"\r\n        [value]=\"notMatchingQuantity\"\r\n        [paginator]=\"notMatchingQuantity.length > 10\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 10%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 25%\" class=\"text-center\">Code</th>\r\n            <th style=\"width: 25%\" class=\"text-center\">Name</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Initial Quantity</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Current Quantity</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 10%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 25%\" class=\"text-center\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 25%\">\r\n              <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 20%\" class=\"text-center\">\r\n              {{product.initial_quantity}}\r\n            </td>\r\n            <td style=\"width: 20%\" class=\"text-center\">\r\n              {{product.current_available_quantity}}\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-3\" [attr.colspan]=\"5\">\r\n              <span>No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </p-tabPanel>\r\n    <p-tabPanel header=\"With Serial Number Not Scanned\">\r\n      <p-table\r\n        [rows]=\"10\"\r\n        [value]=\"nonScannedSerialNumbers\"\r\n        [paginator]=\"nonScannedSerialNumbers.length > 10\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 10%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 25%\" class=\"text-center\">Code</th>\r\n            <th style=\"width: 25%\" class=\"text-center\">Name</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Initial Quantity</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Current Quantity</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 10%\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 25%\" class=\"text-center\">\r\n              {{product.nomenclature.code}}\r\n            </td>\r\n            <td style=\"width: 25%\">\r\n              <b *ngIf=\"product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n              {{product.nomenclature.name}}\r\n            </td>\r\n            <td style=\"width: 20%\" class=\"text-center\">\r\n              {{product.initial_quantity}}\r\n            </td>\r\n            <td style=\"width: 20%\" class=\"text-center\">\r\n              {{product.current_available_quantity}}\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-3\" [attr.colspan]=\"5\">\r\n              <span>No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Complete\"\r\n    class=\"p-button-success\"\r\n    (click)=\"onAcceptChanges()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {OrderTechnicalEquipment} from '../../models/order-technical-equipment';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Locator} from '../../models/locator';\r\nimport {WarehouseProduct, WarehouseProducts} from '../../models/warehouse-product';\r\nimport {QcListModalService} from '../../services/qc-list-modal.service';\r\nimport {finalize} from 'rxjs';\r\nimport {OrderTechnicalEquipmentsService} from '../../services/order-technical-equipments.service';\r\n\r\n@Component({\r\n  selector: 'pek-qc-accept-technical-equipment',\r\n  templateUrl: './qc-accept-technical-equipment.component.html',\r\n  styleUrls: ['./qc-accept-technical-equipment.component.scss']\r\n})\r\nexport class QcAcceptTechnicalEquipmentComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    locator: [null, Validators.required]\r\n  });\r\n  items: OrderTechnicalEquipment[];\r\n  existingLocators: Locator[] = [];\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<QcAcceptTechnicalEquipmentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: {items: OrderTechnicalEquipment[], id: number},\r\n    private qcListModalService: QcListModalService,\r\n    private orderTechnicalEquipmentsService: OrderTechnicalEquipmentsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.items = this.data.items;\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n  }\r\n\r\n  getExistingLocatorsAndWarehouses(items: OrderTechnicalEquipment[]): void {\r\n    this.existingLocators = null;\r\n    this.existingLocators = [];\r\n    items.forEach(item => {\r\n      item.in_use_product_id.forEach(in_use_prod => {\r\n        const locator = (in_use_prod.technicalEquipment.warehouse_product as WarehouseProduct).locator;\r\n        const foundLocator = this.existingLocators.find(locatorIn => locatorIn.id == locator.id);\r\n        if (!foundLocator) {\r\n          this.existingLocators.push(locator);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSelectLocator(locator: Locator) {\r\n    // find other locators on this warehouse\r\n    let unsupportedItemsForLocator: OrderTechnicalEquipment[] = [];\r\n    this.items.forEach(item => {\r\n      let isUnsupportedItem = false;\r\n\r\n      item.in_use_product_id.forEach(in_use_prod => {\r\n        const inLocator = (in_use_prod.technicalEquipment.warehouse_product as WarehouseProduct).locator;\r\n        const foundItem = inLocator.warehouse.id === locator.warehouse.id && inLocator.id !== locator.id;\r\n        if (foundItem) {\r\n          isUnsupportedItem = true;\r\n        }\r\n      });\r\n\r\n      if (isUnsupportedItem) {\r\n        unsupportedItemsForLocator.push(item);\r\n      }\r\n    });\r\n\r\n    if (unsupportedItemsForLocator.length > 0) {\r\n      this.qcListModalService.updateTechnicalEquipmentList(unsupportedItemsForLocator);\r\n    }\r\n\r\n    unsupportedItemsForLocator.forEach(item => {\r\n      const foundIndex = this.items.findIndex(product => product.id === item.id);\r\n      if (foundIndex > -1) {\r\n        this.items.splice(foundIndex, 1);\r\n      }\r\n    });\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n    this.form.get('locator').patchValue(<any>locator.id);\r\n  }\r\n\r\n  onAccept() {\r\n    this.isSaving = true;\r\n\r\n    const send = this.items.map(item => {\r\n      return {\r\n        order_technical_equipment_id: item.id,\r\n        quantity: item.passed_quantity,\r\n        locator: this.form.get('locator').value,\r\n        warehouse_products_details: item.in_use_product_id.map(product => {\r\n          return {\r\n            id: product.technicalEquipment.id,\r\n            product_id: (product.technicalEquipment.warehouse_product as WarehouseProduct).id,\r\n            quantity: product.quantity,\r\n            isolated_quantity: product.isolated_quantity\r\n          }\r\n        })\r\n      }\r\n    });\r\n    this.orderTechnicalEquipmentsService.acceptSeveral(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close(true));\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        Accept Technical Equipment to Warehouse\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Locator*</label>\r\n      <pek-group-locator-picker\r\n        [uniqueLocators]=\"existingLocators\"\r\n        (selectLocatorFull)=\"onSelectLocator($event)\"\r\n      ></pek-group-locator-picker>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Accept\"\r\n    class=\"p-button-success\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onAccept()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {InvoiceProduct} from '../../../procurement/models/invoice-product';\r\nimport {OrderProduct} from '../../../procurement/models/order-product';\r\nimport {InvoiceProductService} from '../../../procurement/services/invoice-product.service';\r\nimport {finalize} from 'rxjs';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {Locator} from '../../models/locator';\r\nimport {QcListModalService} from '../../services/qc-list-modal.service';\r\n\r\n@Component({\r\n  selector: 'pek-qc-accept-to-warehouse',\r\n  templateUrl: './qc-accept-to-warehouse.component.html',\r\n  styleUrls: ['./qc-accept-to-warehouse.component.scss']\r\n})\r\nexport class QcAcceptToWarehouseComponent implements OnInit {\r\n\r\n  isSaving = false;\r\n\r\n  form = this.fb.group({\r\n    locator: [null, Validators.required]\r\n  });\r\n  items: InvoiceProduct[] | OrderProduct[];\r\n  existingLocators: Locator[] = [];\r\n\r\n  constructor(\r\n    private readonly invoiceProductService: InvoiceProductService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<QcAcceptToWarehouseComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { items: InvoiceProduct[] | OrderProduct[], id: number, type: 'invoice' | 'order' },\r\n    private qcListModalService: QcListModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.items = this.data.items;\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n  }\r\n\r\n  onAccept() {\r\n    if (this.data.type === 'invoice') {\r\n      this.acceptInvoiceProducts();\r\n    }\r\n\r\n    if (this.data.type === 'order') {\r\n      this.acceptOrderProducts();\r\n    }\r\n  }\r\n\r\n  acceptOrderProducts() {\r\n    this.isSaving = true;\r\n\r\n    const send = this.items.map(item => {\r\n      return {\r\n        order_product_id: item.id,\r\n        quantity: item.quantity - item.accepted_quantity,\r\n        locator: this.form.get('locator').value\r\n      };\r\n    });\r\n\r\n    this.orderProductService.acceptSeveral(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close(true));\r\n  }\r\n\r\n  acceptInvoiceProducts() {\r\n    this.isSaving = true;\r\n\r\n    const send = this.items.map(item => {\r\n      return {\r\n        invoice_product_id: item.id,\r\n        quantity: item.quantity - item.accepted_quantity,\r\n        locator: this.form.get('locator').value\r\n      };\r\n    });\r\n\r\n    this.invoiceProductService.acceptSeveral(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(() => this.dialogRef.close(true));\r\n  }\r\n\r\n  getExistingLocatorsAndWarehouses(items: InvoiceProduct[] | OrderProduct[]): void {\r\n    this.existingLocators = null;\r\n    this.existingLocators = [];\r\n    items.forEach(item => {\r\n      item.exists_on_locators.forEach(locator => {\r\n        const foundLocator = this.existingLocators.find(locatorIn => locatorIn.id == locator.id);\r\n        if (!foundLocator) {\r\n          this.existingLocators.push(locator);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSelectLocator(locator: Locator) {\r\n    // find other locators on this warehouse\r\n    let unsupportedItemsForLocator: InvoiceProduct[] | OrderProduct[] = [];\r\n    this.items.forEach(item => {\r\n\r\n      const foundItem = item.exists_on_locators.find(inLocator => inLocator.warehouse.id === locator.warehouse.id && inLocator.id !== locator.id);\r\n      if (foundItem) {\r\n        unsupportedItemsForLocator.push(item);\r\n      }\r\n    });\r\n\r\n    if (unsupportedItemsForLocator.length > 0) {\r\n      this.qcListModalService.updateOrderInvoiceList(unsupportedItemsForLocator);\r\n    }\r\n    unsupportedItemsForLocator.forEach(item => {\r\n      const foundIndex = this.items.findIndex(product => product.id === item.id);\r\n      if (foundIndex > -1) {\r\n        this.items.splice(foundIndex, 1);\r\n      }\r\n    });\r\n    this.getExistingLocatorsAndWarehouses(this.items);\r\n    this.form.get('locator').patchValue(<any>locator.id);\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        Accept Items to Warehouse\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\">\r\n      <label>Locator*</label>\r\n      <pek-group-locator-picker\r\n        [uniqueLocators]=\"existingLocators\"\r\n        (selectLocatorFull)=\"onSelectLocator($event)\"\r\n      ></pek-group-locator-picker>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Accept\"\r\n    class=\"p-button-success\"\r\n    [loading]=\"isSaving\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"onAccept()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ListService} from '../../services/list.service';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-set-production-list-locator',\n  templateUrl: './set-production-list-locator.component.html',\n  styleUrls: ['./set-production-list-locator.component.scss']\n})\nexport class SetProductionListLocatorComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    id: [null, Validators.required],\n    locator: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<SetProductionListLocatorComponent>,\n    private readonly listService: ListService,\n    @Inject(MAT_DIALOG_DATA) public listId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('id').patchValue(<any>this.listId);\n  }\n\n  setLocator() {\n    this.isSaving = true;\n    this.listService.updatePartly(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(response => {\n      if (response) {\n        this.dialogRef.close(true);\n      }\n    });\n  }\n\n  selectLocator(id: number) {\n    this.form.get('locator').patchValue(<any>id);\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Set Locator\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Locator*</label>\n      <pek-group-locator-picker\n        (selectLocator)=\"selectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Move\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"setLocator()\"\n  ></button>\n</mat-dialog-actions>\n","import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Locator} from './locator';\r\nimport {AreaLocator} from './area-locator';\r\n\r\nexport class WarehouseProduct {\r\n  readonly id: number;\r\n  quantity?: number;\r\n  total_quantity?: number;\r\n  total_area_locator_quantity?: number;\r\n  total_locator_quantity?: number;\r\n  name?: string;\r\n  code?: string;\r\n  fullName?: string;\r\n  nomenclature?: number & Nomenclature;\r\n  // serial_number?: string | SerialNumber;\r\n  serial_number?: any;\r\n  serial_numbers?: any;\r\n  locator?: Locator;\r\n  area_locator?: AreaLocator;\r\n  // invoice?: number | Invoice;\r\n  uid?: number;\r\n  uom?: string;\r\n  freeQuantity?: number;\r\n  extra_info: WarehouseProductExtraInfo[];\r\n  checkedForGeneration?: boolean;\r\n\r\n  used_by_order?: {order_id: number, accounting_type: number}[]\r\n}\r\n\r\nexport class WarehouseProducts {\r\n  prev: string;\r\n  next: string;\r\n  count: number;\r\n  results: WarehouseProduct[]\r\n}\r\n\r\nexport class WarehouseProductExtraInfo {\r\n  id: number;\r\n  is_reserved_for_sale: boolean;\r\n  quantity: number;\r\n  serial_number_str: string;\r\n  serial_number_id: number;\r\n  invoice_id: number;\r\n  order_id: number;\r\n  reserved_by_opened_production_lists_quantity: number;\r\n  warehouseproductqcprotocol: number;\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DeliveryChain} from '../models/delivery-chain';\nimport {environment} from '@env/environment';\nimport {map} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryChainService {\n\n  API_URL = environment.base_url + environment.delivery_url;\n  readonly url = 'procurement-chains/';\n  readonly filesUrl = 'files/';\n\n  constructor(\n    private readonly httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<DeliveryChain[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: DeliveryChain[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id): Observable<DeliveryChain> {\n    return this.httpClient.get<{ data: DeliveryChain }>(this.API_URL + this.url + `${id}/`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getDeliveryItems(id: number): Observable<any[]> {\n    return this.httpClient.get<{ data: any[] }>(this.API_URL + this.url + id + '/items/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  complete(id: number): Observable<any> {\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + id + '/complete/', null).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {ListProduct} from '../models/list-product';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListProductService {\n\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'list_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getPartly(ids: number[]): Observable<ListProduct[][]> {\n    return forkJoin(...ids.map(id => this.httpClient.get<{ data: ListProduct[] }>(this.API_URL + this.url + `?list=${id}`).pipe(\n      map(response => response.data)\n    )));\n  }\n\n  get(query?: QuerySearch[]): Observable<ListProduct[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n\n    return this.httpClient.get<{ data: ListProduct[] }>(this.API_URL + this.url + queryParams).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  updatePartly(listProduct: ListProduct): Observable<ListProduct> {\n    return this.httpClient.patch<{ data: ListProduct }>(this.API_URL + this.url + listProduct.id + '/', listProduct).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {concat, forkJoin, Observable, toArray} from 'rxjs';\r\nimport {List, Lists} from '../models/list';\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient, HttpContext} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  SetProductionListLocatorComponent\r\n} from '../modals/set-production-list-locator/set-production-list-locator.component';\r\nimport {ListProduct} from '../models/list-product';\r\nimport {ScanResult} from '../../qr-code/models/scan-result';\r\nimport {IS_SCANNING_ENABLED} from '@shared/interceptors/error-interceptor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'lists/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<List[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: List[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  setQuantities(id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + id + '/set_actual_quantities/', null);\r\n  }\r\n\r\n  make_deficit(id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + id + '/deficit_request/', null);\r\n  }\r\n\r\n  makeRequestsForAll(list: List): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + list.id + '/bulk_deficit_request/', list.id);\r\n  }\r\n\r\n  makeDeficitOne(id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + `list_products/${id}/deficit_request/`, null);\r\n  }\r\n\r\n  makeProductionList(entity: Partial<List>): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'list_creation_requests/', entity).pipe(\r\n        map(response => response\r\n      ));\r\n  }\r\n\r\n  canceledActualQuantity(id: number): Observable<any> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + `list_products/${id}/set_actual_quantity_null/`, null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<List> {\r\n    return this.httpClient.get<{ data: List }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<Lists> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: Lists }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getProductionLists(): Observable<List[]> {\r\n    return this.httpClient.get<{ data: List[] }>(this.API_URL + 'list_creation_requests/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updatePartly(list: Partial<List>): Observable<List> {\r\n    return this.httpClient.patch<{ data: List }>(this.API_URL + this.url + list.id + '/', list).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  process(list: Partial<List>, id: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + id + '/process/', list);\r\n  }\r\n\r\n  updateListSeveral(lists: List[]): Observable<any> {\r\n    return concat(...lists.map(list => this.httpClient.patch<{ data: List }>(this.API_URL + 'list_creation_requests/' + list.id + '/', list))).pipe(\r\n      toArray()\r\n    )\r\n  }\r\n\r\n  getNomenclatureInfo(id: number): Observable<any> {\r\n    return this.httpClient.get<{ data: any }>(environment.base_url + `product_structure/nomenclatures/${id}/available_on_stock/`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  openSetProductionListLocatorModal(id: number): Observable<any> {\r\n    return this.dialog\r\n      .open<SetProductionListLocatorComponent>(SetProductionListLocatorComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: id,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  getScanned(listId, scanData: ScanResult): Observable<{ids_found: number[]}> {\r\n    return this.httpClient.post<{ data: {ids_found: number[]} }>(this.API_URL + this.url + listId + '/scan_list_product/', scanData, {\r\n      context: new HttpContext().set(IS_SCANNING_ENABLED, true)\r\n    }).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {Locator} from '../models/locator';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditLocatorComponent} from '../modals/create-edit-locator/create-edit-locator.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocatorService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'locators/';\n\n  locators: Locator[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n\n  }\n\n  getAll(): Observable<Locator[]> {\n    if (this.locators) {\n      return of(this.locators);\n    }\n\n    return this.httpClient.get<{ data: Locator[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const locators = response.data;\n        this.locators = locators;\n        return locators;\n      })\n    );\n  }\n\n  get(query?: QuerySearch[]): Observable<Locator[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n\n    return this.httpClient.get<{ data: Locator[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(locator: Partial<Locator>): Observable<Locator> {\n    return this.httpClient.post<{ data: Locator }>(this.API_URL + this.url, locator).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(locator: Partial<Locator>): Observable<Locator> {\n    return this.httpClient.put<{ data: Locator }>(this.API_URL + this.url + `${locator.id}/`, locator).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(locator: Locator): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${locator.id}/`);\n  };\n\n  createEditLocatorModal(type: ModalActionType, locator?: Locator): Observable<Locator> {\n    return this.dialog\n      .open<CreateEditLocatorComponent>(CreateEditLocatorComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, locator},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {OrderTechnicalEquipment} from '../models/order-technical-equipment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderTechnicalEquipmentsService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'order_technical_equipments/';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<OrderTechnicalEquipment[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: OrderTechnicalEquipment[] }>(this.API_URL + this.url + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  updatePartly(entity: OrderTechnicalEquipment) {\r\n    return this.httpClient.patch<{ data: OrderTechnicalEquipment }>(this.API_URL + this.url + entity.id + '/', entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  acceptSeveral(send: any[]): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'technical_equipment_to_warehouse/', send).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {\r\n  InventoryList,\r\n  InventoryLists,\r\n  InventoryProduct,\r\n  PhysicalInventories,\r\n  PhysicalInventory\r\n} from '../models/physical-inventory';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient, HttpContext, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {\r\n  CreatePhysicalInventoryComponent\r\n} from '../modals/create-physical-inventory/create-physical-inventory.component';\r\nimport {\r\n  MovePhysicalInventoryProductComponent\r\n} from '../modals/move-physical-inventory-product/move-physical-inventory-product.component';\r\nimport {Product} from '../../product-structure/models/product';\r\nimport {\r\n  AddProductToPhysicalInventoryComponent\r\n} from '../modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component';\r\nimport {IS_SCANNING_ENABLED} from '@shared/interceptors/error-interceptor';\r\nimport {\r\n  PhysicalInventoryProductsChangesComponent\r\n} from '../modals/physical-inventory-products-changes/physical-inventory-products-changes.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhysicalInventoryService {\r\n\r\n  API_URL = environment.base_url + environment.warehouse_url;\r\n  readonly url = 'physical_inventory/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  getForPagination(query?: QuerySearch[]): Observable<PhysicalInventories> {\r\n    let queryParams = '';\r\n\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: PhysicalInventories }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<PhysicalInventory> {\r\n    return this.httpClient.get<{ data: PhysicalInventory }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getInventoryProducts(id: number, query?: QuerySearch[]): Observable<InventoryList[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: InventoryList[] }>(this.API_URL + 'physical_inventory_products_lists/?physical_inventory_id=' + id + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getInventoryProductsListsForPagination(id: number, query?: QuerySearch[]): Observable<InventoryLists> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: InventoryLists }>(this.API_URL + 'physical_inventory_products_lists/?physical_inventory_id=' + id + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createPhysicalInventory(locatorsIds: string): Observable<PhysicalInventory[]> {\r\n    return this.httpClient.post<{ data: PhysicalInventory[] }>(this.API_URL + this.url + '?locators_ids=' + locatorsIds, null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  completePhysicalInventory(inventoryId: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + inventoryId + '/complete_physical_inventory/', null);\r\n  }\r\n\r\n  removePhysicalInventory(inventoryId: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + inventoryId + '/');\r\n  }\r\n\r\n  updateQuantityInventoryProduct(inventoryProduct: InventoryProduct): Observable<InventoryProduct> {\r\n    const send = {\r\n      is_scanned: inventoryProduct.is_scanned,\r\n      new_quantity: inventoryProduct.new_quantity\r\n    };\r\n    return this.httpClient.put<{ data: InventoryProduct }>(this.API_URL + 'physical_inventory_products/' + inventoryProduct.id + '/', send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  movePhysicalInventoryProduct(id: number, send: { new_locator_id: number }): Observable<InventoryProduct> {\r\n    return this.httpClient.post<{ data: InventoryProduct }>(this.API_URL + 'physical_inventory_products/' + id + '/move_to_locator/', send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  addProductToInventory(inventoryId: number, send: any): Observable<InventoryProduct> {\r\n    return this.httpClient.post<{ data: InventoryProduct }>(this.API_URL + this.url + inventoryId + '/add_to_inventory/', send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  openCreatePhysicalInventoryModal(): Observable<any> {\r\n    return this.dialog\r\n      .open<CreatePhysicalInventoryComponent>(CreatePhysicalInventoryComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openPhysicalInventoryProductMoveModal(product: Product): Observable<any> {\r\n    return this.dialog\r\n      .open<MovePhysicalInventoryProductComponent>(MovePhysicalInventoryProductComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: product,\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  scanPhysicalInventoryQrCode(id: number, data: any) {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + this.url + `${id}/scan_inventory_item/`, data, {\r\n      context: new HttpContext().set(IS_SCANNING_ENABLED, true)\r\n    }).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n\r\n  openAddProductToPhysicalInventory(inventoryId: number): Observable<any> {\r\n    return this.dialog\r\n      .open<AddProductToPhysicalInventoryComponent>(AddProductToPhysicalInventoryComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: inventoryId,\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n\r\n  changesInInventory(inventoryProducts: InventoryProduct[]): Observable<any> {\r\n    return this.dialog\r\n      .open<PhysicalInventoryProductsChangesComponent>(PhysicalInventoryProductsChangesComponent, {\r\n        width: '60rem',\r\n        height: 'auto',\r\n        data: inventoryProducts,\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  getChangedPhysicalInventoryProductsHaveBeenChanged(id: number) {\r\n    const query = '?physical_inventory_id=' + id;\r\n    return this.httpClient.get(this.API_URL + 'physical_inventory_products/' + 'get_physical_inventory_products_to_notify_about/' + query);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {InvoiceProduct} from '../../procurement/models/invoice-product';\r\nimport {OrderProduct} from '../../procurement/models/order-product';\r\nimport {OrderTechnicalEquipment} from '../models/order-technical-equipment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QcListModalService {\r\n  notCompatibleItems$ = new Subject<InvoiceProduct[] | OrderProduct[]>();\r\n  notCompatibleTechnicalEquipments$ = new Subject<OrderTechnicalEquipment[]>();\r\n\r\n  constructor() { }\r\n\r\n  updateOrderInvoiceList(items: InvoiceProduct[] | OrderProduct[]): void {\r\n    this.notCompatibleItems$.next(items);\r\n  }\r\n\r\n  updateTechnicalEquipmentList(items: OrderTechnicalEquipment[]): void {\r\n    this.notCompatibleTechnicalEquipments$.next(items);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Request} from '../models/request';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  API_URL_PROCUREMENT = environment.base_url + environment.procurement_url;\r\n\r\n  readonly url = 'production_requests/';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getByOrder(orderId: number): Observable<Request[]> {\r\n    return this.http.get<{ data: Request[] }>(this.API_URL + this.url + '?order=' + orderId).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  cancelRequest(id: number): Observable<any> {\r\n    return this.http.post<{ data: any }>(this.API_URL + this.url + `${id}/cancel/`, null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  cancel(id: number): Observable<any> {\r\n    return this.http.post<{ data: any }>(this.API_URL_PROCUREMENT + `orders/${id}/cancel_production_requests/`, null).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post<{ data: Request[] }>(this.API_URL + this.url, data).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  complete(id: number): Observable<any> {\r\n    return this.http.post(this.API_URL_PROCUREMENT + 'orders/' + id + '/' + 'complete/', id);\r\n  }\r\n\r\n  sendDataProductionRequests(id: string, data: any) {\r\n    return this.http.post<{ data: any }>(this.API_URL + `production_requests/${id}/scan_product_request_item/`, data)\r\n      .pipe(\r\n        map(response => {\r\n          return response.data;\r\n        }));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {QuerySearch} from '@shared/models/other';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {SerialType} from '../models/serial-type';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditSerialTypeComponent} from '../modals/create-edit-serial-type/create-edit-serial-type.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerialTypeService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'serial_number_types/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<SerialType[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: SerialType[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.post<{ data: SerialType }>(this.API_URL + this.url, serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.patch<{ data: SerialType }>(this.API_URL + this.url + serialType.id + '/', serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(serialType: Partial<SerialType>): Observable<SerialType> {\n    return this.httpClient.put<{ data: SerialType }>(this.API_URL + this.url + serialType.id + '/', serialType).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(serialType: SerialType): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + serialType.id + '/');\n  }\n\n  createEditSerialTypeModal(type: ModalActionType, serialType?: SerialType): Observable<SerialType> {\n    return this.dialog\n      .open<CreateEditSerialTypeComponent>(CreateEditSerialTypeComponent, {\n        width: '65rem',\n        height: 'auto',\n        data: {type, serialType},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {TechnicalEquipmentInUse} from '../models/technical-equipment-in-use';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechnicalEquipmentsInUseService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'order_technical_equipments_in_use/';\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<TechnicalEquipmentInUse[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: TechnicalEquipmentInUse[] }>(this.API_URL + this.url + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ToolOrder, ToolOrderPaginated} from '../models/tool-order';\r\nimport {map} from 'rxjs/operators';\r\nimport {SerialType} from '../models/serial-type';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolOrderService {\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'tool_orders/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n\r\n  get(query?: QuerySearch[]): Observable<ToolOrder[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolOrder[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity): Observable<ToolOrder> {\r\n    return this.httpClient.post<{ data: ToolOrder }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: ToolOrder): Observable<ToolOrder> {\r\n    return this.httpClient.put<{ data: ToolOrder }>(this.API_URL + this.url + entity.id + '/', entity).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  get_paginated(query?: QuerySearch[]): Observable<ToolOrderPaginated> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolOrderPaginated }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<ToolOrder> {\r\n    return this.httpClient.get<{ data: ToolOrder }>(this.API_URL + this.url + id + '/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  complete(id: number): Observable<ToolOrder> {\r\n    return this.httpClient.post<{ data: ToolOrder }>(this.API_URL + this.url + id + '/complete/', null).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  delete(entity: ToolOrder) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '@env/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ToolRequest} from './tool-request';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolRequestService {\r\n\r\n  API_URL = environment.base_url + environment.production_url;\r\n  readonly url = 'tool_requests/';\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<ToolRequest[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.httpClient.get<{ data: ToolRequest[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  create(entity): Observable<ToolRequest> {\r\n    return this.httpClient.post<{ data: ToolRequest }>(this.API_URL + this.url, entity).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  update(entity: ToolRequest) {\r\n    return this.httpClient.put(this.API_URL + this.url + entity.id + '/', entity);\r\n  }\r\n\r\n  delete(entity: ToolRequest) {\r\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {UnitMeasure} from '../../product-structure/models/unit-measure';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditUnitMeasureComponent} from '../modals/create-edit-unit-measure/create-edit-unit-measure.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitMeasureService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'units_of_measure/';\n\n  measureUnits: UnitMeasure[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<UnitMeasure[]> {\n    if (this.measureUnits) {\n      return of(this.measureUnits);\n    }\n\n    return this.httpClient.get<{ data: UnitMeasure[] }>(this.API_URL + this.url + 'all/').pipe(\n      map(response => {\n        const measureUnits = response.data.map(m => {\n          return {\n            ...m,\n            label: `${m.name} (${m.symbol})`\n          };\n        });\n        this.measureUnits = measureUnits;\n\n        return measureUnits;\n      })\n    );\n  }\n\n  create(unitMeasure: Partial<UnitMeasure>): Observable<UnitMeasure> {\n    return this.httpClient.post<{ data: UnitMeasure }>(this.API_URL + this.url, unitMeasure).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(unitMeasure: Partial<UnitMeasure>): Observable<UnitMeasure> {\n    return this.httpClient.put<{ data: UnitMeasure }>(this.API_URL + this.url + `${unitMeasure.id}/`, unitMeasure).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(unitMeasure: UnitMeasure): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${unitMeasure.id}/`);\n  };\n\n  createEditUnitMeasureModal(type: ModalActionType, unitMeasure?: UnitMeasure): Observable<UnitMeasure> {\n    return this.dialog\n      .open<CreateEditUnitMeasureComponent>(CreateEditUnitMeasureComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, unitMeasure},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport {WarehouseProduct, WarehouseProductExtraInfo, WarehouseProducts} from '../models/warehouse-product';\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {Technology} from '../../product-structure/models/technology';\r\nimport {\r\n  CreateEditWarehouseProductComponent\r\n} from '../modals/create-edit-warehouse-item/create-edit-warehouse-product.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MoveWarehouseProductComponent} from '../modals/move-warehouse-product/move-warehouse-product.component';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {NomenclatureSerialInfoComponent} from '../modals/nomenclature-serial-info/nomenclature-serial-info.component';\r\nimport {\r\n  SearchProductInWarehouseComponent\r\n} from '../../outsourcing/modals/search-product-in-warehouse/search-product-in-warehouse.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WarehouseProductService {\r\n  API_URL = environment.base_url + environment.warehouse_url;\r\n  readonly url = 'products/';\r\n\r\n  constructor(\r\n    private readonly httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(query?: QuerySearch[]): Observable<WarehouseProduct[]> {\r\n    let queryParams = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          queryParams += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          queryParams += '?' + element.name + '=' + element.value;\r\n        }\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + this.url + queryParams).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getReservations(): Observable<WarehouseProduct[]> {\r\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + 'warehouse_products_reservations/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getGrouped(query?: { name: string, value: any }[]): Observable<WarehouseProduct[]> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + this.url + 'grouped_by_warehouse_locator/' + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  getGroupedPagination(query?: { name: string, value: any }[]): Observable<WarehouseProducts> {\r\n    let qString = '';\r\n    if (query) {\r\n      query.forEach((element, index) => {\r\n        if (index > 0) {\r\n          qString += '&' + element.name + '=' + element.value;\r\n        } else {\r\n          qString += '?' + element.name + '=' + element.value;\r\n        }\r\n\r\n      });\r\n    }\r\n    return this.httpClient.get<{ data: WarehouseProducts }>(this.API_URL + this.url + 'grouped_by_warehouse_locator/' + qString).pipe(map(response => {\r\n      return response.data;\r\n    }));\r\n  }\r\n\r\n  severalUpdateReservations(ids: number[], send: { is_confirmed: boolean }): Observable<any> {\r\n    return forkJoin(...ids.map(id => this.httpClient.patch(this.API_URL + `warehouse_products_reservations/${id}/`, send)));\r\n  }\r\n\r\n  severalWriteOff(ids: number[]): Observable<WarehouseProduct[]> {\r\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: WarehouseProduct }>(this.API_URL + this.url + id + '/write_off/', null).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  openCreateEditWarehouseProductModal(type: ModalActionType, nomenclatureId?: number): Observable<Technology> {\r\n    return this.dialog\r\n      .open<CreateEditWarehouseProductComponent>(CreateEditWarehouseProductComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        data: {type, nomenclatureId},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  openMoveWarehouseProductModal(product: WarehouseProduct) {\r\n    return this.dialog\r\n      .open<MoveWarehouseProductComponent>(MoveWarehouseProductComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: product,\r\n        panelClass: 'modal-overflow-visible',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  moveBulk(product: Partial<WarehouseProduct>): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'bulk_move_bulk_products/', product);\r\n  }\r\n\r\n  moveWarehouseSeveralBulk(product: Partial<WarehouseProduct>[]): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + this.url + 'bulk_product_bulk_move_by_ids/', product);\r\n  }\r\n\r\n  moveSerial(product: Partial<WarehouseProduct>): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + 'bulk_move_serial_products/', product);\r\n  }\r\n\r\n  return_to_qc(entity) {\r\n    return this.httpClient.post(this.API_URL + this.url + 'return_to_qc/', entity).pipe(map(response => {\r\n      return response;\r\n    }));\r\n  }\r\n\r\n  write_off_confirmation(entity) {\r\n    return this.httpClient.post(this.API_URL + this.url + 'send_to_write_off_confirmation/', entity).pipe(map(response => {\r\n      return response;\r\n    }));\r\n  }\r\n\r\n  openNomenclatureInfoModal(extraInfo: WarehouseProductExtraInfo[], nomenclature: Nomenclature): any {\r\n    return this.dialog\r\n      .open<NomenclatureSerialInfoComponent>(NomenclatureSerialInfoComponent, {\r\n        width: '650px',\r\n        height: 'auto',\r\n        data: {extraInfo, nomenclature},\r\n        disableClose: true,\r\n        autoFocus: false,\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n\r\n  openSearchInWarehouseModal(): Observable<WarehouseProduct>{\r\n    return this.dialog\r\n      .open<SearchProductInWarehouseComponent>(SearchProductInWarehouseComponent, {\r\n        width: '80%',\r\n        maxHeight: '80%',\r\n        panelClass: 'modal-picker',\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed()\r\n      .pipe();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {Warehouse} from '../models/warehouse';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditWarehouseComponent} from '../modals/create-edit-warehouse/create-edit-warehouse.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'warehouses/';\n\n  warehouses: Warehouse[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Warehouse[]> {\n    if (this.warehouses) {\n      return of(this.warehouses);\n    }\n\n    return this.httpClient.get<{ data: Warehouse[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const warehouses = response.data;\n        this.warehouses = warehouses;\n        return warehouses;\n      }));\n  }\n\n  getById(id: number): Observable<Warehouse> {\n    if (this.warehouses) {\n      return of(this.warehouses.find(w => w.id === id));\n    }\n\n    return this.httpClient.get<{ data: Warehouse }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(warehouse: Partial<Warehouse>): Observable<Warehouse> {\n    return this.httpClient.post<{ data: Warehouse }>(this.API_URL + this.url, warehouse).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(warehouse: Partial<Warehouse>): Observable<Warehouse> {\n    return this.httpClient.put<{ data: Warehouse }>(this.API_URL + this.url + `${warehouse.id}/`, warehouse).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(warehouse: Warehouse): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${warehouse.id}/`);\n  };\n\n  createEditWarehouseModal(type: ModalActionType, warehouse?: Warehouse): Observable<Warehouse> {\n    return this.dialog\n      .open<CreateEditWarehouseComponent>(CreateEditWarehouseComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, warehouse},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {WarehouseRouting} from './warehouse.routing';\r\nimport {WarehouseItemsComponent} from './components/warehouse-items/warehouse-items.component';\r\nimport {WarehouseLayoutComponent} from './components/warehouse-layout/warehouse-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport { WarehouseWarehousesComponent } from './components/warehouse-warehouses/warehouse-warehouses.component';\r\nimport {TreeModule} from 'primeng/tree';\r\nimport { WarehouseLocatorsComponent } from './components/warehouse-locators/warehouse-locators.component';\r\nimport {WarehouseUnitsMeasureComponent} from './components/warehouse-units-measure/warehouse-units-measure.component';\r\nimport { WarehouseSerialTypesComponent } from './components/warehouse-serial-types/warehouse-serial-types.component';\r\nimport { WarehouseCategoriesComponent } from './components/warehouse-categories/warehouse-categories.component';\r\nimport { WarehouseWhereUsedComponent } from './components/warehouse-where-used/warehouse-where-used.component';\r\nimport { PhysicalInventoryComponent } from './components/physical-inventory/physical-inventory.component';\r\nimport { PhysicalInventoryProductsComponent } from './components/physical-inventory/physical-inventory-products/physical-inventory-products.component';\r\nimport { WarehouseToolRequestsComponent } from './components/warehouse-tool-requests/warehouse-tool-requests.component';\r\nimport { WarehouseToolRequestComponent } from './components/warehouse-tool-request/warehouse-tool-request.component';\r\nimport { WarehouseProductionRequestsComponent } from './components/warehouse-production-requests/warehouse-production-requests.component';\r\nimport { WarehouseProductionRequestComponent } from './components/warehouse-production-request/warehouse-production-request.component';\r\nimport { CreatePhysicalInventoryComponent } from './modals/create-physical-inventory/create-physical-inventory.component';\r\nimport { MovePhysicalInventoryProductComponent } from './modals/move-physical-inventory-product/move-physical-inventory-product.component';\r\nimport { AddProductToPhysicalInventoryComponent } from './modals/add-product-to-physical-inventory/add-product-to-physical-inventory.component';\r\nimport { CreateEditWarehouseComponent } from './modals/create-edit-warehouse/create-edit-warehouse.component';\r\nimport { CreateEditLocatorComponent } from './modals/create-edit-locator/create-edit-locator.component';\r\nimport { CreateEditWarehouseCategoryComponent } from './modals/create-edit-warehouse-category/create-edit-warehouse-category.component';\r\nimport {CreateEditUnitMeasureComponent} from './modals/create-edit-unit-measure/create-edit-unit-measure.component';\r\nimport { CreateEditSerialTypeComponent } from './modals/create-edit-serial-type/create-edit-serial-type.component';\r\nimport { CreateEditWarehouseProductComponent } from './modals/create-edit-warehouse-item/create-edit-warehouse-product.component';\r\nimport {ProductStructureModule} from '../product-structure/product-structure.module';\r\nimport { MoveWarehouseProductComponent } from './modals/move-warehouse-product/move-warehouse-product.component';\r\nimport { ProductionListsComponent } from './components/production-lists/production-lists.component';\r\nimport { ProductionListComponent } from './components/production-lists/production-list/production-list.component';\r\nimport { SetProductionListLocatorComponent } from './modals/set-production-list-locator/set-production-list-locator.component';\r\nimport {\r\n  ListProductPrintItemComponent\r\n} from './components/production-lists/list-product-print-item/list-product-print-item.component';\r\nimport { WarehouseQcComponent } from './components/warehouse-qc/warehouse-qc.component';\r\nimport { WarehouseQcInvoiceComponent } from './components/warehouse-qc/warehouse-qc-invoice/warehouse-qc-invoice.component';\r\nimport { QcAcceptToWarehouseComponent } from './modals/qc-accept-to-warehouse/qc-accept-to-warehouse.component';\r\nimport { WarehouseQcOrderComponent } from './components/warehouse-qc/warehouse-qc-order/warehouse-qc-order.component';\r\nimport {WarehouseIsolatorComponent} from './components/warehouse-isolator/warehouse-isolator.component';\r\nimport {\r\n  WarehouseIsolatorInvoicesComponent\r\n} from './components/warehouse-isolator/components/warehouse-isolator-invoices/warehouse-isolator-invoices.component';\r\nimport {\r\n  WarehouseIsolatorOrdersComponent\r\n} from './components/warehouse-isolator/components/warehouse-isolator-orders/warehouse-isolator-orders.component';\r\nimport { WarehouseProductionRequestPrintPageComponent } from './components/warehouse-production-request-print-page/warehouse-production-request-print-page.component';\r\nimport {\r\n  QcAcceptTechnicalEquipmentComponent\r\n} from './modals/qc-accept-technical-equipment/qc-accept-technical-equipment.component';\r\nimport { NomenclatureSerialInfoComponent } from './modals/nomenclature-serial-info/nomenclature-serial-info.component';\r\nimport {QrCodeModule} from '../qr-code/qr-code.module';\r\nimport { PhysicalInventoryProductsChangesComponent } from './modals/physical-inventory-products-changes/physical-inventory-products-changes.component';\r\nimport {RippleModule} from 'primeng/ripple';\r\nimport { WarehouseShippingRequestsComponent } from './components/warehouse-shipping-requests/warehouse-shipping-requests.component';\r\nimport { WarehouseShippingRequestComponent } from './components/warehouse-shipping-requests/warehouse-shipping-request/warehouse-shipping-request.component';\r\nimport { WarehouseShippingRequestPrintComponent } from './components/warehouse-shipping-requests/warehouse-shipping-request-print/warehouse-shipping-request-print.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WarehouseItemsComponent,\r\n    WarehouseLayoutComponent,\r\n    WarehouseWarehousesComponent,\r\n    WarehouseLocatorsComponent,\r\n    WarehouseUnitsMeasureComponent,\r\n    WarehouseSerialTypesComponent,\r\n    WarehouseIsolatorComponent,\r\n    WarehouseIsolatorInvoicesComponent,\r\n    WarehouseIsolatorOrdersComponent,\r\n    WarehouseCategoriesComponent,\r\n    WarehouseWhereUsedComponent,\r\n    PhysicalInventoryComponent,\r\n    PhysicalInventoryProductsComponent,\r\n    WarehouseToolRequestsComponent,\r\n    WarehouseToolRequestComponent,\r\n    WarehouseProductionRequestsComponent,\r\n    WarehouseProductionRequestComponent,\r\n    CreatePhysicalInventoryComponent,\r\n    MovePhysicalInventoryProductComponent,\r\n    AddProductToPhysicalInventoryComponent,\r\n    CreateEditWarehouseComponent,\r\n    CreateEditLocatorComponent,\r\n    CreateEditWarehouseCategoryComponent,\r\n    CreateEditUnitMeasureComponent,\r\n    CreateEditSerialTypeComponent,\r\n    CreateEditWarehouseProductComponent,\r\n    MoveWarehouseProductComponent,\r\n    ProductionListsComponent,\r\n    ProductionListComponent,\r\n    SetProductionListLocatorComponent,\r\n    ListProductPrintItemComponent,\r\n    WarehouseQcComponent,\r\n    WarehouseQcInvoiceComponent,\r\n    QcAcceptToWarehouseComponent,\r\n    QcAcceptTechnicalEquipmentComponent,\r\n    WarehouseQcOrderComponent,\r\n    WarehouseProductionRequestPrintPageComponent,\r\n    NomenclatureSerialInfoComponent,\r\n    PhysicalInventoryProductsChangesComponent,\r\n    WarehouseShippingRequestsComponent,\r\n    WarehouseShippingRequestComponent,\r\n    WarehouseShippingRequestPrintComponent,\r\n  ],\r\n  exports: [\r\n    WarehouseCategoriesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    WarehouseRouting,\r\n    LayoutModule,\r\n    SharedModule,\r\n    TreeModule,\r\n    ProductStructureModule,\r\n    QrCodeModule,\r\n    RippleModule,\r\n  ]\r\n})\r\nexport class WarehouseModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {WarehouseItemsComponent} from './components/warehouse-items/warehouse-items.component';\r\nimport {WarehouseLayoutComponent} from './components/warehouse-layout/warehouse-layout.component';\r\nimport {WarehouseWarehousesComponent} from './components/warehouse-warehouses/warehouse-warehouses.component';\r\nimport {WarehouseLocatorsComponent} from './components/warehouse-locators/warehouse-locators.component';\r\nimport {WarehouseUnitsMeasureComponent} from './components/warehouse-units-measure/warehouse-units-measure.component';\r\nimport {WarehouseSerialTypesComponent} from './components/warehouse-serial-types/warehouse-serial-types.component';\r\n\r\n\r\nimport {WarehouseCategoriesComponent} from './components/warehouse-categories/warehouse-categories.component';\r\nimport {WarehouseWhereUsedComponent} from './components/warehouse-where-used/warehouse-where-used.component';\r\nimport {PhysicalInventoryComponent} from './components/physical-inventory/physical-inventory.component';\r\nimport {\r\n  PhysicalInventoryProductsComponent\r\n} from './components/physical-inventory/physical-inventory-products/physical-inventory-products.component';\r\nimport {WarehouseToolRequestsComponent} from './components/warehouse-tool-requests/warehouse-tool-requests.component';\r\nimport {WarehouseToolRequestComponent} from './components/warehouse-tool-request/warehouse-tool-request.component';\r\nimport {\r\n  WarehouseProductionRequestsComponent\r\n} from './components/warehouse-production-requests/warehouse-production-requests.component';\r\nimport {\r\n  WarehouseProductionRequestComponent\r\n} from './components/warehouse-production-request/warehouse-production-request.component';\r\nimport {ProductionListsComponent} from './components/production-lists/production-lists.component';\r\nimport {ProductionListComponent} from './components/production-lists/production-list/production-list.component';\r\nimport {WarehouseQcComponent} from './components/warehouse-qc/warehouse-qc.component';\r\nimport {\r\n  WarehouseQcInvoiceComponent\r\n} from './components/warehouse-qc/warehouse-qc-invoice/warehouse-qc-invoice.component';\r\nimport {WarehouseQcOrderComponent} from './components/warehouse-qc/warehouse-qc-order/warehouse-qc-order.component';\r\nimport {\r\n  WarehouseIsolatorInvoicesComponent\r\n} from './components/warehouse-isolator/components/warehouse-isolator-invoices/warehouse-isolator-invoices.component';\r\nimport {\r\n  WarehouseIsolatorOrdersComponent\r\n} from './components/warehouse-isolator/components/warehouse-isolator-orders/warehouse-isolator-orders.component';\r\nimport {WarehouseIsolatorComponent} from './components/warehouse-isolator/warehouse-isolator.component';\r\nimport {\r\n  WarehouseShippingRequestsComponent\r\n} from './components/warehouse-shipping-requests/warehouse-shipping-requests.component';\r\nimport {\r\n  WarehouseShippingRequestComponent\r\n} from './components/warehouse-shipping-requests/warehouse-shipping-request/warehouse-shipping-request.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: WarehouseLayoutComponent, children: [\r\n      {path: '', redirectTo: 'items', pathMatch: 'full'},\r\n      {path: 'items', title: 'Warehouse Items', component: WarehouseItemsComponent},\r\n      {\r\n        path: 'warehouses',\r\n        children: [\r\n          {path: '', title: 'Warehouses', component: WarehouseWarehousesComponent},\r\n          {path: ':id/locators', title: 'Locators', component: WarehouseLocatorsComponent},\r\n        ]\r\n      },\r\n      {path: 'measure', title: 'Units of Measure', component: WarehouseUnitsMeasureComponent},\r\n      {path: 'serial-types', title: 'Serial Number Types', component: WarehouseSerialTypesComponent},\r\n      {path: 'categories', title: 'Warehouse Categories', component: WarehouseCategoriesComponent},\r\n      {path: 'where-used', title: 'Where Used', component: WarehouseWhereUsedComponent},\r\n      {\r\n        path: 'production-requests', children: [\r\n          {path: '', title: 'Production Requests', component: WarehouseProductionRequestsComponent},\r\n          {path: ':id', title: 'Production Request', component: WarehouseProductionRequestComponent}\r\n        ]\r\n      },\r\n      {\r\n        path: 'tool-requests', children: [\r\n          {path: '', title: 'Tool Requests', component: WarehouseToolRequestsComponent},\r\n          {path: ':id', title: 'Tool Request', component: WarehouseToolRequestComponent}\r\n        ]\r\n      },\r\n      {\r\n        path: 'physical-inventory', children: [\r\n          {path: '', title: 'Physical Inventory', component: PhysicalInventoryComponent},\r\n          {path: ':id', title: 'Physical Inventory Products', component: PhysicalInventoryProductsComponent},\r\n        ]\r\n      },\r\n      {\r\n        path: 'production-lists', children: [\r\n          {path: '', title: 'Production Lists', component: ProductionListsComponent},\r\n          {path: ':id', title: 'Production List', component: ProductionListComponent},\r\n        ]\r\n      },\r\n      {\r\n        path: 'warehouse-qc', children: [\r\n          {path: '', title: 'Warehouse QC', component: WarehouseQcComponent},\r\n          {path: 'invoice/:id', title: 'Warehouse QC Invoice', component: WarehouseQcInvoiceComponent},\r\n          {path: 'order/:id', title: 'Warehouse QC Order', component: WarehouseQcOrderComponent},\r\n        ]\r\n      },\r\n      {\r\n        path: 'isolator', children: [\r\n          {path: '', title: 'Isolator', component: WarehouseIsolatorComponent},\r\n          {path: 'invoices/:id', title: 'Isolator Invoices', component: WarehouseIsolatorInvoicesComponent},\r\n          {path: 'orders/:id', title: 'Isolator Orders', component: WarehouseIsolatorOrdersComponent}\r\n        ]\r\n      },\r\n      {\r\n        path: 'shipments-requests', children: [\r\n          {path: '', title: 'Shipments Requests', component: WarehouseShippingRequestsComponent},\r\n          {path: ':id', title: 'Shipment Request', component: WarehouseShippingRequestComponent},\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WarehouseRouting {\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  base_url: 'https://rwave.pekauto.com/api/',\r\n  product_structure_url: 'product_structure/',\r\n  warehouse_url: 'warehouse/',\r\n  production_url: 'production/',\r\n  business_partners_url: 'crm/',\r\n  procurement_url: 'procurement/',\r\n  accounting_url: 'accounting/',\r\n  delivery_url: 'delivery/',\r\n  users_url: 'users/',\r\n  staff_url: 'staff/',\r\n  sales_url: 'sales/',\r\n  business_trips_url: 'business-trips/',\r\n  image_path: 'https://rwave.pekauto.com',\r\n  // link_url: 'http://localhost:4201/'\r\n  link_url: 'https://rwave.pekauto.com/'\r\n};\r\n","export const environment = {\r\n  production: false,\r\n  /** Смотри все api в [Swagger]{@link http://erp.slopehelper.com/swagger/ } */\r\n  base_url: 'https://erp.slopehelper.com/api/',\r\n  product_structure_url: 'product_structure/',\r\n  warehouse_url: 'warehouse/',\r\n  production_url: 'production/',\r\n  business_partners_url: 'crm/',\r\n  procurement_url: 'procurement/',\r\n  accounting_url: 'accounting/',\r\n  delivery_url: 'delivery/',\r\n  users_url: 'users/',\r\n  staff_url: 'staff/',\r\n  sales_url: 'sales/',\r\n  business_trips_url: 'business-trips/',\r\n  image_path: 'http://localhost:8000',\r\n  link_url: 'https://pekauto.unitcode.ru/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["environment","BusinessTripLocationTypes","map","UploadedDataViewerComponent","CreateBusinessTripComponent","TakePhotoModalComponent","Excel","formatDate","BusinessTripExpensesType","BusinessTripVehicleType","SPACE_BETWEEN","BusinessTripService","constructor","httpClient","dialog","adapterService","base_url","business_trips_url","get","query","qString","forEach","element","index","name","value","API_URL","url","pipe","response","data","getAll","getDetailed","id","updateHotelInfo","hotelData","post","updateBusinessTripEmployee","updateBusinessTripVehicle","create","entity","update","patch","delete","download_hotel_file","responseType","download_expense_file","exportToExcel","businessTripData","expensesSum","workbook","Workbook","worksheet","addWorksheet","totalIndex","totalDisplayedRows","columns","header","key","width","cols","idx","getColumn","alignment","vertical","horizontal","font","size","makeHeader","addRow","firstCol","secondCol","full_employee","first_name","last_name","fullPosition","title","makeGap","trip_start","trip_end","test","start","end","startLocation","locations","find","location","type","FIRST","lastLocation","LAST","intermediateLocations","filter","INTERMEDIATE","fullCountry","address","location_meetings","meeting","meetingIndex","fullCompany","fullContacts","person","personIndex","purpose_short","purpose_full","hotels","length","hotel","residence_start","residence_end","fullVehicle","vehicle_type","PRIVATE","RENT","COMPANY_CAR","vehicle","model","number","start_mileage","end_mileage","fullInitiator","ownEvidences","expenses","expense","OWN","is_verified","thirdCol","fourthCol","fifthCol","sixthCol","fullExpense","description","sum","currency","ownSum","sumForCurrency","evidence","amount","push","expenseSum","corporateEvidences","CORPORATE","corporateSum","canceledEvidences","canceledSum","xlsx","writeBuffer","then","blob","Blob","window","URL","createObjectURL","a","document","createElement","body","appendChild","setAttribute","href","download","click","revokeObjectURL","remove","addSection","spaceAmount","spaceToPass","i","getRow","bold","viewBusinessTripFiles","files","open","height","panelClass","autoFocus","afterClosed","createChangeBusinessTrip","disableClose","takePhotoModal","canVerify","i0","factory","providedIn","BehaviorSubject","iif","Subject","switchMap","debounceTime","distinctUntilChanged","tap","UntilDestroy","untilDestroyed","ctx_r5","OutsourcingChainCreationListComponent","fb","orderProductService","orderService","modalService","router","label","group","nomenclature__name","nomenclature__code","request_date","technologies_ids","status","generateQueryKey","searchForm","search$","prepareForSearch","isShowAll","getGroupedOutsourceForPagination","productsCount","count","results","product","setProductStatus","getGroupedOutsource","products","request_id","paginateToFistPage","isLoading","ngOnInit","name$","next","subscribe","code$","ordered_quantity","initial_quantity","selectedProducts","onCheckOrder","onCheckAddOrder","getIsCleanUnnecessary","getIsDeleted","newQueryKey","queryKey","currentPage","isStartFirstPage","controls","Date","dateAdapter","paginate","event","page","paginator","changePage","getSmallDescription","substring","isCanOrder","isCanAddOrder","every","node","onCloseOrders","confirm","partlyOrderedProducts","n","closeOrders","onDeleteOrders","notOrderedProducts","deleteSeveral","onCreateChain","openCreateChainModal","order","navigate","onAddProductsToChain","openAddProductsToChainModal","onSelectTechnologies","technologies","patchValue","t","join","onShowAll","selectors","viewQuery","ctx","OutsourcingRequestsComponent","onCreateRequest","openAddOutsourcingRequestModal","Validators","finalize","MAT_DIALOG_DATA","product_r7","product_r10","AddMaterialToOrderComponent","nomenclatureService","requestService","dialogRef","code","root_categories","category","required_quantity","required","min","for_order_product","material_nomenclature","technology","getForPagination","createForm","productId","selectedProduct","onSelectCategory","clearCreatForm","onSelectProduct","onAddMaterial","isSaving","close","onSelectNomenclatureType","onSelectRootCategories","ids","product_r9","product_r12","CreateOutsourcingRequestComponent","current_technology","quantity","nomenclature","orderId","onAddProduct","SearchProductInWarehouseComponent","warehouseProductService","warehouse","locator","getGroupedPagination","uid","uom","unit_of_measure","symbol","onPickProduct","onSelectWarehouse","onSelectLocator","ProcurementChainCreationListComponent","categories_ids","getGroupedPurchasedForPagination","getGroupedPurchased","console","log","onSelectCategories","AddOrderProductToOrderComponent","isPurchased","addControl","control","onSelectRootCategory","PurchasingChainCreationListComponent","PurchasingRequestsComponent","openAddProductToOrderModal","order_r8","AddProductsToChainComponent","with_free_product","selectedOrder","orderType","onAdd","send","p","addToOrder"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}