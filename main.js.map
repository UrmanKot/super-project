{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/auth/auth-state.enum.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/auth.service.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.html","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.ts","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.html","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.ts","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.html","./src/app/confirmation/confirmation.module.ts","./src/app/confirmation/confirmation.routing.ts","./src/app/layout/components/header/header.component.ts","./src/app/layout/components/header/header.component.html","./src/app/layout/components/layout/layout.component.ts","./src/app/layout/components/layout/layout.component.html","./src/app/layout/components/logo/logo.component.ts","./src/app/layout/components/logo/logo.component.html","./src/app/layout/layout.module.ts","./src/app/product-structure/components/prefixes/prefixes.component.ts","./src/app/product-structure/components/prefixes/prefixes.component.html","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.ts","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.html","./src/app/product-structure/components/product-structure-product/product-structure-product.component.ts","./src/app/product-structure/components/product-structure-product/product-structure-product.component.html","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.ts","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.html","./src/app/product-structure/components/technologies/technologies.component.ts","./src/app/product-structure/components/technologies/technologies.component.html","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.ts","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.html","./src/app/product-structure/modals/create-edit-product/create-edit-product.component.ts","./src/app/product-structure/modals/create-edit-product/create-edit-product.component.html","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.ts","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.html","./src/app/product-structure/modals/make-production-list/make-production-list.component.ts","./src/app/product-structure/modals/make-production-list/make-production-list.component.html","./src/app/product-structure/modals/make-root-product/make-root-product.component.ts","./src/app/product-structure/modals/make-root-product/make-root-product.component.html","./src/app/product-structure/models/product.ts","./src/app/product-structure/product-structure.module.ts","./src/app/product-structure/product-structure.routing.ts","./src/app/product-structure/services/prefix.service.ts","./src/app/product-structure/services/product-categories.service.ts","./src/app/product-structure/services/product.service.ts","./src/app/product-structure/services/technology.service.ts","./src/app/reports/services/payment.service.ts","./src/app/reports/services/service-invoice-payment.service.ts","./src/app/shared/modals/confirm/confirm.component.ts","./src/app/shared/modals/confirm/confirm.component.html","./src/app/shared/models/nomenclature.ts","./src/app/shared/module-icon/module-icon.component.ts","./src/app/shared/module-icon/module-icon.component.html","./src/app/shared/pickers/product-category-picker/product-category-picker.component.ts","./src/app/shared/pickers/product-category-picker/product-category-picker.component.html","./src/app/shared/pipes/money-format.pipe.ts","./src/app/shared/services/modal.service.ts","./src/app/shared/services/nomenclature.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pek-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'slopehelper-erp-frontend';\n}\n","<router-outlet></router-outlet>\n","import {NgModule, Provider} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRouting } from './app.routing';\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from './layout/layout.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AuthModule} from './auth/auth.module';\nimport {AuthGuard} from './auth/auth.guard';\nimport {AuthInterceptor} from './auth/auth.interceptor';\nimport {ConfirmationModule} from './confirmation/confirmation.module';\nimport {ProductStructureModule} from './product-structure/product-structure.module';\n\nconst INTERCEPTOR_PROVIDER: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  multi: true,\n  useClass: AuthInterceptor\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRouting,\n    HttpClientModule,\n    AuthModule,\n    LayoutModule,\n    ConfirmationModule,\n    ProductStructureModule,\n  ],\n  providers: [\n    INTERCEPTOR_PROVIDER,\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LayoutComponent} from './layout/components/layout/layout.component';\nimport {AuthGuard} from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      {\n        path: 'product-structure',\n        title: 'Product structure',\n        loadChildren: () => import('./product-structure/product-structure.module').then(m => m.ProductStructureModule)\n      },\n      {\n        path: 'confirmation',\n        title: 'Confirmation',\n        loadChildren: () => import('./confirmation/confirmation.routing').then(m => m.ConfirmationRouting)\n      },\n      {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n    ]\n  },\n  {path: 'login', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\n\n  // Не удалять\n  {path: '**', redirectTo: 'dashboard', pathMatch: 'full'},\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRouting {\n}\n","export enum AuthState {\r\n  PENDING = 'pending',\r\n  LOGGED_IN = 'logged-in',\r\n  LOGGED_OUT = 'logged-out',\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {Subscription, throwError} from 'rxjs';\n\n@Component({\n  selector: 'pek-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  loginForm: FormGroup = this.fb.group({\n    username: [null, Validators.required],\n    password: [null, Validators.required]\n  });\n\n  private errorSub: Subscription;\n  public errorMessage: string;\n\n  constructor(\n    public auth: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.errorSub = this.auth.error$.subscribe(error => this.errorMessage = error);\n  }\n\n  login() {\n    const user = this.loginForm.value;\n    this.auth.login(user).subscribe(\n      () => {\n        this.router.navigateByUrl('/').then();\n      },\n      (error => throwError(error))\n    );\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"row m-0\">\n    <div class=\"col-sm-3 col-12 mx-auto\">\n      <div class=\"card\">\n        <div class=\"card-body py-5\">\n          <div class=\"auth-header\">\n            <h1 class=\"logo\">Slopehelper ERP</h1>\n          </div>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n            <input type=\"text\" formControlName=\"username\" placeholder=\"username\">\n            <input type=\"text\" formControlName=\"password\" placeholder=\"pass\">\n\n            <button type=\"submit\" [disabled]=\"loginForm.invalid\">Log In</button>\n          </form>\n\n          <div class=\"alert alert-danger mt-3\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {AuthState} from './auth-state.enum';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  public loginPageUri = ['/login'];\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.auth.getActualState().pipe(\r\n      map(state => {\r\n        return state === AuthState.LOGGED_IN ? true : this.router.createUrlTree(this.loginPageUri);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authService.isAuthentificated()) {\r\n      req = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${this.authService.token}`)\r\n      });\r\n    }\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 401) {\r\n            this.authService.logout();\r\n            this.router.navigate(['/login'], {\r\n              queryParams: {\r\n                authFailed: true\r\n              }\r\n            }).then();\r\n          }\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRouting } from './auth.routing';\nimport { AuthComponent } from './auth.component';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRouting,\n    SharedModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AuthComponent} from './auth.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRouting { }\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, take, tap} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {AuthState} from './auth-state.enum';\nimport {User, UserPermissions} from '@shared/models/user';\n\nexport class AuthResponse {\n  access: string;\n  refresh: string;\n}\n\nexport class AuthStateObject {\n  state: AuthState;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  readonly #onAuth$ = new BehaviorSubject<AuthStateObject>({\n    state: AuthState.PENDING,\n    user: undefined,\n  });\n\n  public onAuth$ = this.#onAuth$.pipe(\n    debounceTime(0),\n    distinctUntilChanged(),\n  );\n\n  public user: User = null;\n  public userPermissions: UserPermissions = null;\n\n  public error$: Subject<string> = new Subject<string>();\n  API_URL = environment.base_url;\n  readonly url = environment.users_url;\n\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n    setTimeout(() => {\n      this.getMe().subscribe();\n    });\n  }\n\n  get token(): string | null {\n    return localStorage.getItem('access');\n  }\n\n  login(user: User): Observable<User> {\n    return this.httpClient.post<{ data: AuthResponse }>(this.API_URL + 'token/', user).pipe(\n      map(response => response.data),\n      tap(this.setToken),\n      switchMap(() => this.getMe()),\n      catchError(this.handleError.bind(this))\n    );\n  }\n\n  private handleError(error: any): any {\n    const message = error.error.data.detail;\n    this.error$.next(message);\n    return throwError(error);\n  }\n\n  logout(): void {\n    this.setToken(null);\n  }\n\n  isAuthentificated(): boolean {\n    return !!this.token;\n  }\n\n  private setToken(response: AuthResponse | null): void {\n    if (response) {\n      localStorage.setItem('access', response.access);\n      localStorage.setItem('refresh', response.refresh);\n    } else {\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n    }\n  }\n\n  public getActualState(): Observable<AuthState> {\n    return this.onAuth$.pipe(\n      filter(({state}) => state !== AuthState.PENDING),\n      take(1),\n      map(({state}) => state),\n    );\n  }\n\n  getMe(): Observable<User> {\n    return this.httpClient.get<{ data: User }>(this.API_URL + this.url + 'get_me/')\n      .pipe(\n        map(response => response.data),\n        tap(user => this.setState(user)),\n      );\n  }\n\n  setState(user: User) {\n    this.user = user;\n    if (this.user) {\n      this.getUserPermissions();\n    }\n\n    this.#onAuth$.next({\n      state: this.user ? AuthState.LOGGED_IN : AuthState.LOGGED_OUT,\n      user: this.user,\n    });\n  }\n\n  getUserPermissions() {\n    this.userPermissions = {\n      can_edit_product_structure: this.user.can_edit_product_structure,\n      can_edit_confirmation: this.user.can_edit_confirmation,\n      can_edit_warehouse: this.user.can_edit_warehouse,\n      can_edit_manufacturing_procurement: this.user.can_edit_manufacturing_procurement,\n      can_edit_quality_control: this.user.can_edit_quality_control,\n      can_edit_manufacturing: this.user.can_edit_manufacturing,\n      can_edit_contacts_and_events: this.user.can_edit_contacts_and_events,\n      can_edit_outsourcing: this.user.can_edit_outsourcing,\n      can_edit_purchase: this.user.can_edit_purchase,\n      can_edit_sales: this.user.can_edit_sales,\n      can_edit_reports: this.user.can_edit_reports,\n      can_edit_administration: this.user.can_edit_administration,\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-confirmation-layout',\n  templateUrl: './confirmation-layout.component.html',\n  styleUrls: ['./confirmation-layout.component.scss']\n})\nexport class ConfirmationLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Nomenclature Confirmation', commands: ['nomenclature']},\n    {label: 'Payment Confirmation', commands: ['payment']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Confirmation'\"\n  [routes]=\"routes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureApproval, NewNomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-nomenclature-confirmation',\n  templateUrl: './nomenclature-confirmation.component.html',\n  styleUrls: ['./nomenclature-confirmation.component.scss']\n})\nexport class NomenclatureConfirmationComponent implements OnInit {\n  nomenclatures: NewNomenclature[] = [];\n  selectedNomenclatures: NewNomenclature[] = [];\n  isLoading: boolean = true;\n\n  constructor(\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly modalService: ModalService\n  ) { }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getNewNomenclatures().subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures;\n      this.isLoading = false;\n    })\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const confirmNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(nomenclature => {\n          confirmNomenclatures.push({\n            id: nomenclature.id,\n            approved: ENomenclatureApproval.APPROVED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(confirmNomenclatures).subscribe(() => {\n          confirmNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = this.nomenclatures.filter(product => product.id !== nomenclature.id);\n          });\n\n          this.selectedNomenclatures = null;\n        });\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger').subscribe(decline => {\n      if (decline) {\n        const declineNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(product => {\n          declineNomenclatures.push({\n            id: product.id,\n            approved: ENomenclatureApproval.DECLINED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(declineNomenclatures).subscribe(() => {\n          declineNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = this.nomenclatures.filter(product => product.id !== nomenclature.id);\n          });\n\n          this.selectedNomenclatures = [];\n        });\n      }\n    });\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Nomenclature Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 21.75rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"nomenclatures.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedNomenclatures\"\n        [value]=\"nomenclatures\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger mr-2\"\n              (click)=\"onDecline()\"\n              [disabled]=\"selectedNomenclatures?.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success\"\n              (click)=\"onConfirm()\"\n              [disabled]=\"selectedNomenclatures?.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 47%\">Root Items</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"nomenclature\"></p-tableCheckbox>\n            </td>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{nomenclature.name}}</td>\n            <td style=\"width: 47%\">\n              <div *ngFor=\"let parent of nomenclature.parents\">{{parent.name}}\n                <span *ngIf=\"i !== nomenclature.parents.length - 1\">,</span>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && nomenclatures.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {PaymentService} from '../../../reports/services/payment.service';\nimport {Payment} from '../../../reports/models/payment';\nimport {ServiceInvoicePaymentService} from '../../../reports/services/service-invoice-payment.service';\nimport {ServiceInvoicePayment} from '../../../reports/models/service-invoice-payment';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-payment-confirmation',\n  templateUrl: './payment-confirmation.component.html',\n  styleUrls: ['./payment-confirmation.component.scss']\n})\nexport class PaymentConfirmationComponent implements OnInit {\n  paymentTotals = {\n    totalPricePayments: 0,\n    totalPriceServiceInvoicePayments: 0,\n    totalAmountPayments: 0,\n    totalAmountServiceInvoicePayments: 0\n  };\n\n  isLoadingPayments = true;\n  isLoadingServiceInvoicePayments = true;\n\n  serviceInvoicePayments: ServiceInvoicePayment[] = [];\n  payments: Payment[] = [];\n\n  selectedPayments: Payment[] = [];\n  selectedServiceInvoicePayments: ServiceInvoicePayment[] = [];\n\n  constructor(\n    private readonly paymentService: PaymentService,\n    private readonly serviceInvoicePaymentService: ServiceInvoicePaymentService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPayments();\n    this.getServiceInvoicePayments();\n  }\n\n  getPayments() {\n    this.paymentService.getConfirmationPayments().subscribe(payments => {\n      this.payments = payments;\n      this.countPaymentsTotals();\n      this.isLoadingPayments = false;\n    });\n  }\n\n  getServiceInvoicePayments() {\n    this.serviceInvoicePaymentService.getConfirmationPayments().subscribe(serviceInvoicePayments => {\n      this.serviceInvoicePayments = serviceInvoicePayments;\n      this.countServiceInvoicePaymentsTotals();\n      this.isLoadingServiceInvoicePayments = false;\n    });\n  }\n\n  countPaymentsTotals() {\n    this.paymentTotals.totalPricePayments = 0;\n    this.paymentTotals.totalAmountPayments = 0;\n\n    this.payments.forEach(payment => {\n      this.paymentTotals.totalPricePayments += payment.invoice_total_price;\n      this.paymentTotals.totalAmountPayments += parseFloat(payment.payment_amount);\n    });\n  }\n\n  countServiceInvoicePaymentsTotals() {\n    this.paymentTotals.totalPriceServiceInvoicePayments = 0;\n    this.paymentTotals.totalAmountServiceInvoicePayments = 0;\n\n    this.serviceInvoicePayments.forEach(payment => {\n      this.paymentTotals.totalPriceServiceInvoicePayments += payment.service_invoice_total_price;\n      this.paymentTotals.totalAmountServiceInvoicePayments += parseFloat(payment.service_invoice_payment_amount);\n    });\n  }\n\n  confirmPayments() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const ids = this.selectedPayments.map(payment => payment.id);\n        this.paymentService.severalConfirm(ids).subscribe(() => {\n          ids.forEach(id => this.payments = this.payments.filter(p => p.id !== id));\n          this.countPaymentsTotals();\n          this.selectedPayments = [];\n        })\n      }\n    });\n  }\n\n  declinePayments() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        const ids = this.selectedPayments.map(payment => payment.id);\n        this.paymentService.severalDecline(ids).subscribe(() => {\n          ids.forEach(id => this.payments = this.payments.filter(p => p.id !== id));\n          this.countPaymentsTotals();\n          this.selectedPayments = [];\n        })\n      }\n    });\n  }\n\n  confirmServiceInvoicePayments() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        const ids = this.selectedServiceInvoicePayments.map(payment => payment.id);\n        this.serviceInvoicePaymentService.severalConfirm(ids).subscribe(() => {\n          ids.forEach(id => this.serviceInvoicePayments = this.serviceInvoicePayments.filter(p => p.id !== id));\n          this.countServiceInvoicePaymentsTotals();\n          this.selectedServiceInvoicePayments = [];\n        })\n      }\n    });\n  }\n\n  declineServiceInvoicePayments() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        const ids = this.selectedServiceInvoicePayments.map(payment => payment.id);\n        this.serviceInvoicePaymentService.severalDecline(ids).subscribe(() => {\n          ids.forEach(id => this.serviceInvoicePayments = this.serviceInvoicePayments.filter(p => p.id !== id));\n          this.countServiceInvoicePaymentsTotals();\n          this.selectedServiceInvoicePayments = [];\n        })\n      }\n    });\n  }\n\n  onEditConfirmationLimit() {\n    // TODO доделать\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Payment Confirmation</h1>\n    </div>\n    <div class=\"page-header__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-pencil\"\n        label=\"Payment Confirmation Limit\"\n        (click)=\"onEditConfirmationLimit()\">\n      </button>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"page__content\">\n  <div class=\"page__tabs\">\n    <p-tabView class=\"custom-tabs\">\n      <p-tabPanel header=\"Invoices\" [selected]=\"true\">\n        <div class=\"page__table\">\n          <p-table\n            #dt\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 476px)\"\n            [scrollable]=\"true\"\n            [paginator]=\"payments.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedPayments\"\n            [value]=\"payments\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"payment-price\">\n                  <ng-container *ngIf=\"!isLoadingPayments; else paymentsEmpty\">\n                    Total Price: {{paymentTotals.totalPricePayments | moneyFormat}} €,\n                    Total Amount: {{paymentTotals.totalAmountPayments | moneyFormat}} €\n                  </ng-container>\n                </div>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-times\"\n                  label=\"Decline\"\n                  class=\"ml-auto p-button-danger mr-2\"\n                  [disabled]=\"selectedPayments?.length === 0\"\n                  (click)=\"declinePayments()\"\n                ></button>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-check\"\n                  label=\"Confirm\"\n                  class=\"p-button-success\"\n                  [disabled]=\"selectedPayments?.length === 0\"\n                  (click)=\"confirmPayments()\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th>\n                  <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                </th>\n                <th style=\"width: 3%\" class=\"text-center\">#</th>\n                <th style=\"width: 15%\" class=\"text-center\">Date</th>\n                <th style=\"width: 17%\" class=\"text-center\">Invoice</th>\n                <th style=\"width: 20%\">Supplier</th>\n                <th style=\"width: 20%\" class=\"text-center\">Invoice Total Price</th>\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\n              <tr>\n                <td>\n                  <p-tableCheckbox [value]=\"payment\"></p-tableCheckbox>\n                </td>\n                <td style=\"width: 3%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 15%\" class=\"text-center\">\n                  {{payment.invoice.system_creation_date  | date:'dd/MM/yyyy'}}\n                </td>\n                <td style=\"width: 17%\" class=\"text-center\">\n                  <a>\n                    {{payment.invoice.self_serial_number}}\n                  </a>\n                </td>\n                <td style=\"width: 20%\">{{payment.invoice.supplier.name}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{payment.invoice_total_price | moneyFormat}} €</td>\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.payment_amount | moneyFormat}} €</td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <a>{{payment.invoice.order.id}}</a>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"8\">\n                  <i *ngIf=\"isLoadingPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingPayments\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"dt.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n          <div *ngIf=\"!dt.paginator && !isLoadingPayments && payments.length > 0\" class=\"paginator-return-pagination\">\n            <p-button\n              type=\"button\"\n              (click)=\"dt.paginator=true\"\n              styleClass=\"p-button-text\"\n            >\n              Return pagination\n            </p-button>\n          </div>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Auxiliary Invoices\">\n        <div class=\"page__table\">\n          <p-table\n            #st\n            selectionMode=\"single\"\n            scrollHeight=\"calc(100vh - 476px)\"\n            [scrollable]=\"true\"\n            [paginator]=\"serviceInvoicePayments.length > 0\"\n            [rows]=\"10\"\n            [(selection)]=\"selectedServiceInvoicePayments\"\n            [value]=\"serviceInvoicePayments\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"payment-price\">\n                  <ng-container *ngIf=\"!isLoadingServiceInvoicePayments; else paymentsEmpty\">\n                    Total Price: {{paymentTotals.totalPriceServiceInvoicePayments | moneyFormat}} €,\n                    Total Amount: {{paymentTotals.totalAmountServiceInvoicePayments | moneyFormat}} €\n                  </ng-container>\n                </div>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-times\"\n                  label=\"Decline\"\n                  class=\"ml-auto p-button-danger mr-2\"\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\n                  (click)=\"declineServiceInvoicePayments()\"\n                ></button>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-check\"\n                  label=\"Confirm\"\n                  class=\"p-button-success\"\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\n                  (click)=\"confirmServiceInvoicePayments()\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th>\n                  <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                </th>\n                <th style=\"width: 3%\" class=\"text-center\">#</th>\n                <th style=\"width: 15%\" class=\"text-center\">Date</th>\n                <th style=\"width: 17%\" class=\"text-center\">Invoice</th>\n                <th style=\"width: 20%\">Supplier</th>\n                <th style=\"width: 20%\" class=\"text-center\">Invoice Total Price</th>\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-payment let-i=\"rowIndex\">\n              <tr>\n                <td>\n                  <p-tableCheckbox [value]=\"payment\"></p-tableCheckbox>\n                </td>\n                <td style=\"width: 3%\" class=\"text-center\">{{i + 1}}</td>\n                <td style=\"width: 15%\" class=\"text-center\">\n                  {{payment.serviceinvoice.system_creation_date  | date:'dd/MM/yyyy'}}\n                </td>\n                <td style=\"width: 17%\" class=\"text-center\">\n                  <a>\n                    {{payment.serviceinvoice.self_serial_number}}\n                  </a>\n                </td>\n                <td style=\"width: 20%\">{{payment.serviceinvoice.supplier.name}}</td>\n                <td style=\"width: 20%\" class=\"text-center\">{{payment.service_invoice_total_price | moneyFormat}} €</td>\n                <td style=\"width: 10%\" class=\"text-center\">{{payment.service_invoice_payment_amount | moneyFormat}} €</td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <a>{{payment.serviceinvoice.order.id}}</a>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"8\">\n                  <i *ngIf=\"isLoadingServiceInvoicePayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingServiceInvoicePayments\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n              <p-button\n                type=\"button\"\n                (click)=\"st.paginator=false\"\n                styleClass=\"p-button-text\"\n              >All\n              </p-button>\n            </ng-template>\n          </p-table>\n          <div *ngIf=\"!st.paginator && !isLoadingServiceInvoicePayments && serviceInvoicePayments.length > 0\" class=\"paginator-return-pagination\">\n            <p-button\n              type=\"button\"\n              (click)=\"st.paginator=true\"\n              styleClass=\"p-button-text\"\n            >\n              Return pagination\n            </p-button>\n          </div>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n\n<ng-template #paymentsEmpty>\n  <ng-container>\n    Total Price: ... €, Total Amount: ... €\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfirmationRouting } from './confirmation.routing';\nimport { NomenclatureConfirmationComponent } from './components/nomenclature-confirmation/nomenclature-confirmation.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { PaymentConfirmationComponent } from './components/payment-confirmation/payment-confirmation.component';\nimport { ConfirmationLayoutComponent } from './components/confirmation-layout/confirmation-layout.component';\nimport {LayoutModule} from '../layout/layout.module';\n\n@NgModule({\n  declarations: [\n    NomenclatureConfirmationComponent,\n    PaymentConfirmationComponent,\n    ConfirmationLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    ConfirmationRouting,\n    SharedModule,\n    LayoutModule,\n  ]\n})\nexport class ConfirmationModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  NomenclatureConfirmationComponent\n} from './components/nomenclature-confirmation/nomenclature-confirmation.component';\nimport {PaymentConfirmationComponent} from './components/payment-confirmation/payment-confirmation.component';\nimport {ConfirmationLayoutComponent} from './components/confirmation-layout/confirmation-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmationLayoutComponent, children: [\n      {path: '', redirectTo: 'nomenclature', pathMatch: 'full'},\n      {path: 'nomenclature', component: NomenclatureConfirmationComponent},\n      {path: 'payment', component: PaymentConfirmationComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfirmationRouting { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NavigationLink} from '../../navigation-route';\n\n@Component({\n  selector: 'pek-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() module: string;\n  @Input() routes: NavigationLink[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout-header\">\n  <pek-logo [module]=\"module\"></pek-logo>\n  <ul class=\"layout-navigation\">\n    <li\n      *ngFor=\"let route of routes\"\n      class=\"layout-navigation__item\"\n    >\n      <a\n        [routerLink]=\"route.commands\"\n        routerLinkActive=\"active\"\n      >\n        {{route.label}}\n      </a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout\">\n  <div class=\"layout__content\">\n    <div class=\"layout__inner\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent implements OnInit {\n  @Input() module: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"logo\">\n  <a class=\"logo__link\" routerLink=\"/\">\n    <span class=\"logo__text\">R-WAVE-ERP</span>\n    <span class=\"logo__module\">{{module}}</span>\n  </a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {RouterModule} from '@angular/router';\nimport { LogoComponent } from './components/logo/logo.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    HeaderComponent,\n    LogoComponent,\n  ],\n  exports: [\n    LogoComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    SharedModule,\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport {ProductPrefix} from '../../models/prefix';\nimport {ModalService} from '@shared/services/modal.service';\nimport {PrefixService} from '../../services/prefix.service';\n\n@Component({\n  selector: 'pek-prefixes',\n  templateUrl: './prefixes.component.html',\n  styleUrls: ['./prefixes.component.scss']\n})\nexport class PrefixesComponent implements OnInit {\n  prefixes: ProductPrefix[] = [];\n  selectedPrefix: ProductPrefix;\n  isLoading = true;\n\n  constructor(\n    private prefixService: PrefixService,\n    public modalService: ModalService\n  ) { }\n\n  ngOnInit(): void {\n    this.getPrefixes();\n  }\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Prefix',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditPrefix()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemovePrefix()\n      }\n    ]\n  }];\n\n  getPrefixes() {\n    this.prefixService.get().subscribe(prefixes => {\n      this.prefixes = prefixes;\n      this.isLoading = false;\n    });\n  }\n\n  onAddPrefix() {\n    this.prefixService.createEditPrefix('create').subscribe(prefix => {\n      if (prefix) {\n        this.prefixes.unshift(prefix);\n      }\n    });\n  }\n\n  onEditPrefix() {\n    this.prefixService.createEditPrefix('edit', this.selectedPrefix).subscribe(prefix => {\n      if (prefix) {\n        const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n        this.prefixes[index] = prefix;\n      }\n    });\n  }\n\n  onRemovePrefix() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.prefixService.delete(this.selectedPrefix.id).subscribe(() => {\n          const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n          this.prefixes.splice(index, 1);\n          this.selectedPrefix = null;\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Prefixes</h1>\n    </div>\n    <div class=\"page-header__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Prefix\" (click)=\"onAddPrefix()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 21.75rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"prefixes.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedPrefix\"\n        [value]=\"prefixes\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedPrefix\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-prefix let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"prefix\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{prefix.prefix}}</td>\n            <td style=\"width: 50%\">{{prefix.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"prefix.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && prefixes.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-product-structure-layout',\n  templateUrl: './product-structure-layout.component.html',\n  styleUrls: ['./product-structure-layout.component.scss']\n})\nexport class ProductStructureLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Products', commands: ['products']},\n    {label: 'Technologies', commands: ['technologies']},\n    {label: 'Prefixes', commands: ['prefixes']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Product Structure'\"\n  [routes]=\"routes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProductService} from '../../services/product.service';\nimport {FormBuilder} from '@angular/forms';\nimport {Product} from '../../models/product';\nimport {Table} from 'primeng/table';\nimport {fromEvent, Subscription} from 'rxjs';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {cloneDeep} from 'lodash-es';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MakeRootProductComponent} from '../../modals/make-root-product/make-root-product.component';\nimport {MakeProductionListComponent} from '../../modals/make-production-list/make-production-list.component';\n\n@Component({\n  selector: 'pek-product-structure-product',\n  templateUrl: './product-structure-product.component.html',\n  styleUrls: ['./product-structure-product.component.scss']\n})\nexport class ProductStructureProductComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('dt') dt: Table;\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\n\n  productsTree: TreeNode[];\n  selectedNode: TreeNode = null;\n  products: Product[];\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Selected Item',\n      items: [\n        {\n          label: 'Add Item',\n          icon: 'pi pi-plus',\n          disabled: true,\n        },\n        {\n          label: 'Make Production List',\n          icon: 'pi pi-box',\n          command: () => this.onOpenMakeProductionList(),\n        },\n        {\n          label: 'Make Root',\n          icon: 'pi pi-globe',\n          disabled: true,\n          command: () => this.onOpenMakeRoot(),\n        },\n        {\n          label: 'Files',\n          icon: 'pi pi-file',\n        },\n        {\n          label: 'Copy',\n          icon: 'pi pi-clone',\n        },\n        {\n          label: 'Edit',\n          icon: 'pi pi-pencil',\n        },\n        {\n          label: 'Remove',\n          icon: 'pi pi-trash',\n        }\n      ]\n    }\n  ];\n\n  expanseMap = {};\n  sorted = false;\n  isLoading = true;\n\n  productId = this.route.snapshot.paramMap.get('id');\n\n  inputCodeSub: Subscription;\n  inputNameSub: Subscription;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly productService: ProductService,\n    private readonly fb: FormBuilder,\n    private readonly dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  ngAfterViewInit() {\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchCodeInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'code', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'code');\n      });\n\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchNameInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'name', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'name');\n      });\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.productsTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.productsTree = temp;\n    this.selectedNode = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  getProducts() {\n    if (this.productsTree) {\n      this.mapExpansion();\n    }\n\n    this.productService.getTree(Number(this.productId)).subscribe(products => {\n        this.products = products;\n        if (!this.sorted) {\n          this.createTree();\n        } else {\n          this.sort();\n        }\n\n        this.isLoading = false;\n      }\n    );\n  }\n\n  filterProducts(event: any, field: string, mode: string) {\n    this.dt.filter(event, `nomenclature.${field}`, mode);\n  }\n\n  expandedFindProducts(value: string, field: string) {\n    this.selectedNode = null;\n\n    this.productsTree.forEach(parent => {\n      parent.children.forEach(product => {\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\n          parent.expanded = true;\n        }\n      });\n    });\n  }\n\n  createTree() {\n    const dd = [];\n    this.products.forEach(element => {\n      const ins = {data: element, expanded: false};\n      if (this.expanseMap) {\n        ins.expanded = this.expanseMap[element.id];\n      }\n      dd.push(ins);\n    });\n    let root;\n    const idMapping = dd.reduce((acc, el, i) => {\n      acc[el.data.id] = i;\n      return acc;\n    }, {});\n    dd.forEach(el => {\n      if (el.data.parent === null) {\n        root = el;\n        return;\n      }\n      const parentEl = dd[idMapping[el.data.parent]];\n      parentEl.children = [...(parentEl.children || []), el];\n      if (parentEl.children.length === 0) {\n        delete parentEl.children;\n      }\n    });\n    root.expanded = true;\n    this.productsTree = [root];\n    if (this.selectedNode) {\n      this.getSelected(this.productsTree[0]);\n    }\n  }\n\n  down() {\n    const node = this.selectedNode;\n\n    let index;\n    node.parent.children.forEach((element, i) => {\n      if (element.data.id === node.data.id) {\n        index = i;\n      }\n    });\n\n    if (index < node.parent.children.length - 1) {\n      const move = {\n        child: node.data.id,\n        parent: node.parent.children[index + 1].data.id,\n        move_to: 'right'\n      };\n      // TODO СДЕЛАТЬ ЧТОБЫ ЗАНОВО НЕ ОТОБРАЖАТЬ СТРУКТУРУ И ВЫВЕСТИ УВЕДОМЛЕНИЕ ИЛИ ЗАБЛОЧИТЬ КНОПКУ\n      this.productService.move(move).subscribe(() => this.getProducts());\n    }\n  }\n\n  up() {\n    const node = this.selectedNode;\n\n    let index;\n    node.parent.children.forEach((element, i) => {\n      if (element.data.id === node.data.id) {\n        index = i;\n      }\n    });\n\n    if (index > 0) {\n      const move = {\n        child: node.data.id,\n        parent: node.parent.children[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.productService.move(move).subscribe(() => this.getProducts());\n    }\n  }\n\n  sort() {\n    this.sorted = true;\n    const sortType = {'0': 3, '1': 1, '2': 2};\n    this.products.sort((a, b) => sortType[a.nomenclature.type] - sortType[b.nomenclature.type]);\n    this.createTree();\n  }\n\n  mapExpansion() {\n    this.productsTree.forEach(element => {\n      this.createExpanseMap(element);\n    });\n  }\n\n  getSelected(node) {\n    if (node.data.id == this.selectedNode.data.id) {\n      this.selectedNode = node;\n    } else {\n      if (node.children) {\n        node.children.forEach(element => {\n          this.getSelected(element);\n        });\n      }\n    }\n  }\n\n  createExpanseMap(node) {\n    if (node.expanded) {\n      this.expanseMap[node.data.id] = node.expanded;\n    } else {\n      this.expanseMap[node.data.id] = false;\n    }\n    if (node.children) {\n      node.children.forEach(element => {\n        this.createExpanseMap(element);\n      });\n    }\n  }\n\n  onSelectNode() {\n    if (this.selectedNode) {\n      this.menuItems[0].items[0].disabled = !(this.selectedNode.data.nomenclature.type === '1' || this.selectedNode.data.parent === null);\n      this.menuItems[0].items[2].disabled = !(this.selectedNode.data.nomenclature.type === '1' && this.selectedNode.data.parent !== null);\n    }\n  }\n\n  onOpenMakeRoot() {\n    this.dialog.open(MakeRootProductComponent, {\n      width: '36rem',\n      data: this.selectedNode.data,\n      autoFocus: false,\n      enterAnimationDuration: '250ms',\n      panelClass: 'modal_visible'\n    });\n  }\n\n  onOpenMakeProductionList() {\n    this.dialog.open(MakeProductionListComponent, {\n      width: '36rem',\n      data: this.selectedNode.data.nomenclature,\n      autoFocus: false,\n      enterAnimationDuration: '250ms',\n    });\n  }\n\n  ngOnDestroy() {\n    this.inputCodeSub.unsubscribe();\n    this.inputNameSub.unsubscribe();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Product Structure ({{!isLoading ? productsTree[0].data.nomenclature.name : '...'}})</h1>\n    </div>\n    <div class=\"page-header__tools\">\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchCodeInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by code\"\n        >\n      </div>\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchNameInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by name\"\n        >\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"productsTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 20.4375rem)\"\n          (onNodeSelect)=\"onSelectNode()\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex align-items-center\">\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-up\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"selectedNode?.data.parent === null\"\n                (click)=\"up()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-down\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"selectedNode?.data.parent === null\"\n                (click)=\"down()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-print\"\n                label=\"Print\"\n                class=\"mr-2\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-refresh\"\n                label=\"Sort\"\n                class=\"mr-2\"\n                (click)=\"sort()\"\n              ></button>\n              <p-menubar class=\"product-structure-bar ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 30%; padding-left: 40px\">Code</th>\n              <th style=\"width: 20%\">Name</th>\n              <th style=\"width: 7%\" class=\"text-center\">Quantity</th>\n              <th style=\"width: 6%\" class=\"text-center\">UOM</th>\n              <th style=\"width: 14%\" class=\"text-center\">Technologies</th>\n              <th style=\"width: 11%\" class=\"text-center\">Type</th>\n              <th style=\"width: 12%\" class=\"text-center\">Confirmation</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n              <td\n                style=\"width: 30%\"\n                [ngStyle]=\"{'padding-left': rowNode.level * 0.5 + 'rem'}\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <span class=\"category-name\">{{rowData.nomenclature.code}}</span>\n                </div>\n              </td>\n              <td style=\"width: 20%\" [class.font-italic]=\"rowData.nomenclature.type !== '1'\">{{rowData.nomenclature.name}}</td>\n              <td\n                style=\"width: 7%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                {{rowData.quantity}}\n              </td>\n              <td\n                style=\"width: 6%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.category; else symbol\">\n                  {{rowData.nomenclature.category.unit_of_measure?.symbol}}\n                </ng-container>\n              </td>\n              <td\n                style=\"width: 14%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.technologies.length > 0\">\n                  <ng-container *ngFor=\"let tech of rowData.nomenclature.technologies; let idx = index\">\n                    {{tech.name}}<span *ngIf=\"idx !== rowData.nomenclature.technologies.length - 1\">,</span>\n                  </ng-container>\n                </ng-container>\n              </td>\n              <td style=\"width: 11%\" class=\"text-center\">\n                <ng-container [ngSwitch]=\"rowData.nomenclature.type\">\n                  <span *ngSwitchCase=\"'0'\" class=\"font-italic\">Purchased</span>\n                  <span *ngSwitchCase=\"'2'\" class=\"font-italic\">Manufactured</span>\n                  <ng-container *ngSwitchCase=\"'1'\">Assembly</ng-container>\n                </ng-container>\n              </td>\n              <td\n                style=\"width: 12%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.type === '0'\">\n                  <ng-container [ngSwitch]=\"rowData.nomenclature.approved\">\n                    <span *ngSwitchCase=\"'0'\" class=\"text-warning\">NEW</span>\n                    <span *ngSwitchCase=\"'1'\" class=\"text-success\">APPROVED</span>\n                    <span *ngSwitchCase=\"'2'\" class=\"text-danger\">DECLINED</span>\n                  </ng-container>\n                </ng-container>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #symbol>Pcs</ng-template>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {Product} from '../../models/product';\nimport {ProductCategory} from '../../models/product-category';\nimport {forkJoin, fromEvent, Subscription} from 'rxjs';\nimport {ProductCategoriesService} from '../../services/product-categories.service';\nimport {cloneDeep} from 'lodash-es';\nimport {Table} from 'primeng/table';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'pek-product-structure-products-list',\n  templateUrl: './product-structure-products-list.component.html',\n  styleUrls: ['./product-structure-products-list.component.scss']\n})\nexport class ProductStructureProductsListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('dt') dt: Table;\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Product',\n    items: [\n      {\n        label: 'Structure',\n        icon: 'pi pi-table',\n        command: () => this.goToProductStructure(),\n      },\n      {\n        label: 'Copy',\n        icon: 'pi pi-clone',\n        command: () => this.copyProduct(),\n      },\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.editProduct(),\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.removeProduct(),\n      }\n    ]\n  }];\n\n  productsTree: TreeNode[] = [];\n  categories: ProductCategory[];\n  selectedNode: TreeNode;\n  products: Product[];\n\n  inputCodeSub: Subscription;\n  inputNameSub: Subscription;\n\n  isLoading = true;\n\n  constructor(\n    private readonly productService: ProductService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly productCategoriesService: ProductCategoriesService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProductsAndCategories();\n  }\n\n  ngAfterViewInit() {\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchCodeInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'code', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'code');\n      });\n\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchNameInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'name', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'name');\n      });\n  }\n\n  filterProducts(event: any, field: string, mode: string) {\n    this.dt.filter(event, `nomenclature.${field}`, mode);\n  }\n\n  expandedFindProducts(value: string, field: string) {\n    this.selectedNode = null;\n\n    this.productsTree.forEach(parent => {\n      parent.children.forEach(product => {\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\n          parent.expanded = true;\n        }\n      });\n    });\n  }\n\n  getProductsAndCategories() {\n    forkJoin({\n      products: this.productService.getRoots(),\n      categories: this.productCategoriesService.get([{name: 'is_for_root', value: true}])\n    }).subscribe(({products, categories}) => {\n      this.products = products;\n      this.categories = categories;\n\n      this.categories.forEach(category => {\n        this.productsTree.push({\n          data: category,\n          expanded: false,\n          parent: null\n        });\n      });\n\n      this.productsTree.unshift({\n        data: {name: 'Not category'},\n        expanded: false,\n        parent: null\n      });\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    this.productsTree = this.productsTree.map(node => {\n      return {\n        ...node,\n        children: []\n      };\n    });\n\n    this.productsTree.forEach(node => {\n      this.products.forEach(product => {\n        if (product.nomenclature.category && node.data.id === product.nomenclature.category.id) {\n          node.children.push({\n            data: product,\n            expanded: false,\n            children: []\n          });\n        }\n      });\n    });\n\n    this.products.forEach(product => {\n      if (!product.nomenclature.category) {\n        this.productsTree[0].children.push({\n          data: product,\n          expanded: false,\n          children: []\n        });\n      }\n    });\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.productsTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.productsTree = temp;\n    this.selectedNode = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  removeProduct() {\n    const product: Product = this.selectedNode.data;\n\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productService.delete(product.id).subscribe(() => {\n          this.selectedNode = null;\n          const index = this.products.findIndex(p => p.id === product.id);\n          this.products.splice(index, 1);\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  createProduct() {\n    this.productService.createEditProduct('create').subscribe(product => {\n      // TODO на бэке сделать чтобы отдавался продукт\n      if (product) this.updateProducts();\n    });\n  }\n\n  editProduct() {\n    const product = <Product>this.selectedNode.data;\n    this.productService.createEditProduct('edit', product).subscribe(product => {\n      // TODO на бэке сделать чтобы отдавался продукт\n      if (product) {\n        this.updateProducts();\n        this.selectedNode = null;\n      }\n    });\n  }\n\n  copyProduct() {\n    const product = <Product>this.selectedNode.data;\n    this.productService.createEditProduct('copy', product).subscribe(product => {\n      // TODO на бэке сделать чтобы отдавался продукт\n      if (product) this.updateProducts();\n    });\n  }\n\n  updateTree(product: Product) {\n    this.products.push(product);\n    this.createTree();\n  }\n\n  // временный метод до оптимизации\n  updateProducts() {\n    this.productService.getRoots().subscribe(products => {\n      this.products = products;\n      this.createTree();\n    });\n  }\n\n  goToProductStructure() {\n    this.router.navigate(['structure', this.selectedNode.data.id], {relativeTo: this.route}).then();\n  }\n\n  ngOnDestroy() {\n    this.inputCodeSub.unsubscribe();\n    this.inputNameSub.unsubscribe();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Products</h1>\n    </div>\n    <div class=\"page-header__tools\">\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchCodeInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by code\"\n        >\n      </div>\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchNameInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by name\"\n        >\n      </div>\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Product\" (click)=\"createProduct()\"></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"productsTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 20.4375rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex\">\n<!--              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>-->\n              <p class=\"subtitle\">Select a product to edit</p>\n              <div class=\"ml-auto buttons\">\n                <button\n                  [disabled]=\"!selectedNode\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi pi-table\"\n                  class=\"mr-2\"\n                  label=\"Structure\"\n                  (click)=\"goToProductStructure()\"\n                ></button>\n                <button\n                  [disabled]=\"!selectedNode\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi pi-clone\"\n                  class=\"mr-2\"\n                  label=\"Copy\"\n                  (click)=\"copyProduct()\"\n                ></button>\n                <button\n                  [disabled]=\"!selectedNode\"\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi pi-pencil\"\n                  class=\"mr-2\"\n                  label=\"Edit\"\n                  (click)=\"editProduct()\"\n                ></button>\n                <button\n                  [disabled]=\"!selectedNode\"\n                  pButton\n                  (click)=\"removeProduct()\"\n                  type=\"button\"\n                  icon=\"pi pi pi-trash\"\n                  class=\"mr-2 p-button-danger\"\n                  label=\"Remove\"\n                ></button>\n              </div>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 56px\">Code</th>\n              <th style=\"width: 35%\">Name</th>\n              <th style=\"width: 30%\">Description</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr\n              [ttRow]=\"rowNode\"\n              [ttSelectableRow]=\"rowNode\"\n              [ttSelectableRowDisabled]=\"!rowData.nomenclature\"\n              [class.disabled]=\"!rowData.nomenclature\">\n              <td style=\"width: 35%\">\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <ng-container *ngIf=\"!rowData.nomenclature\">\n                  <span class=\"category-name\">{{rowData.name}}\n                  </span>\n                  </ng-container>\n                  {{rowData.nomenclature?.code}}\n                </div>\n              </td>\n              <td style=\"width: 35%\">\n                {{rowData.nomenclature?.name}}\n              </td>\n              <td style=\"width: 30%\">\n                {{rowData.nomenclature?.description}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {TechnologyService} from '../../services/technology.service';\nimport {Technology} from '../../models/technology';\nimport {MenuItem} from 'primeng/api';\n\n@Component({\n  selector: 'pek-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss']\n})\nexport class TechnologiesComponent implements OnInit {\n  technologies: Technology[] = [];\n  selectedTechnology: Technology;\n  isLoading = true;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Technology',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditTechnology()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveTechnology()\n      }\n    ]\n  }];\n\n  constructor(\n    private technologyService: TechnologyService,\n    public modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getTechnologies();\n  }\n\n  getTechnologies() {\n    this.technologyService.get().subscribe(technologies => {\n      this.technologies = technologies;\n      this.isLoading = false;\n    });\n  }\n\n  onAddTechnology() {\n    this.technologyService.createEditTechnology('create').subscribe(technology => {\n      if (technology) {\n        this.technologies.unshift(technology);\n      }\n    });\n  }\n\n  onEditTechnology() {\n    this.technologyService.createEditTechnology('edit', this.selectedTechnology).subscribe(technology => {\n      if (technology) {\n        const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n        this.technologies[index] = technology;\n      }\n    });\n  }\n\n  onRemoveTechnology() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.technologyService.delete(this.selectedTechnology).subscribe(() => {\n          const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n          this.technologies.splice(index, 1);\n          this.selectedTechnology = null;\n        });\n      }\n    });\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Technologies</h1>\n    </div>\n    <div class=\"page-header__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Technology\" (click)=\"onAddTechnology()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 21.75rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"technologies.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedTechnology\"\n        [value]=\"technologies\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedTechnology\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-technology let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"technology\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{technology.name}}</td>\n            <td style=\"width: 50%\">{{technology.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"technology.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && technologies.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ProductPrefix} from '../../models/prefix';\nimport {PrefixService} from '../../services/prefix.service';\n\n@Component({\n  selector: 'pek-create-edit-prefix',\n  templateUrl: './create-edit-prefix.component.html',\n  styleUrls: ['./create-edit-prefix.component.scss']\n})\nexport class CreateEditPrefixComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    prefix: ['', [Validators.required]],\n    description: [''],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly prefixService: PrefixService,\n    private dialogRef: MatDialogRef<CreateEditPrefixComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, prefix: ProductPrefix }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.prefix.id));\n      this.form.patchValue(this.data.prefix);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createPrefix();\n        break;\n      }\n      case 'edit': {\n        this.editPrefix();\n        break;\n      }\n    }\n  }\n\n  createPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.create(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.update(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Prefix\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"prefix\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ProductService} from '../../services/product.service';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Component({\n  selector: 'pek-create-edit-product',\n  templateUrl: './create-edit-product.component.html',\n  styleUrls: ['./create-edit-product.component.scss']\n})\nexport class CreateEditProductComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    code: ['', Validators.required],\n    description: [''],\n    type: [1],\n    category: [null],\n  });\n\n  isCategoryDisabled: boolean = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly productService: ProductService,\n    private dialogRef: MatDialogRef<CreateEditProductComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, product: Partial<Product> }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type !== 'create') {\n      const nomenclature: any = this.data.product.nomenclature;\n      this.form.addControl('id' as any, new FormControl(this.data.product.id));\n      this.form.patchValue(nomenclature);\n\n      if (nomenclature.category) {\n        this.form.get('category').patchValue(nomenclature.category.id);\n      }\n    }\n\n    if (this.data.type === 'copy') {\n      this.isCategoryDisabled = true;\n      this.form.get('code').disable();\n      this.form.get('description').disable();\n    }\n  }\n\n  onSelectCategory(categoryId: number) {\n    this.form.get('category').patchValue(categoryId);\n  }\n\n  onSave() {\n    this.isSaving = true;\n    const send: any = this.form.value;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createProduct(send);\n        break;\n      }\n      case 'edit': {\n        this.editProduct(send);\n        break;\n      }\n      case 'copy': {\n        this.copyProduct();\n        break;\n      }\n    }\n  }\n\n  createProduct(send: any) {\n    this.nomenclatureService.create(send).subscribe(nomenclature => {\n      if (nomenclature) {\n        // @ts-ignore\n        this.productService.create({nomenclature: nomenclature.id})\n          .subscribe({\n            next: product => this.dialogRef.close(product),\n            error: () => this.isSaving = false\n          });\n      }\n    });\n  }\n\n  editProduct(send: any) {\n    this.nomenclatureService.updateProduct(send)\n      .subscribe({\n        next: nomenclature => this.dialogRef.close(nomenclature),\n        error: () => this.isSaving = false\n      });\n  }\n\n  copyProduct() {\n    const send = {\n      nomenclature_id: this.form.get('id').value,\n      parent_id: null,\n      name: this.form.get('name').value,\n    };\n\n    this.productService.copyStructure(send).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Product\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Category</label>\n      <pek-product-category-picker\n        [currentCategoryId]=\"form.get('category').value\"\n        [isDisabled]=\"isCategoryDisabled\"\n        (choiceCategory)=\"onSelectCategory($event)\"\n      ></pek-product-category-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"code\">Code*</label>\n      <input type=\"text\" id=\"code\" pInputText formControlName=\"code\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {Technology} from '../../models/technology';\nimport {TechnologyService} from '../../services/technology.service';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Component({\n  selector: 'pek-create-edit-technology',\n  templateUrl: './create-edit-technology.component.html',\n  styleUrls: ['./create-edit-technology.component.scss']\n})\nexport class CreateEditTechnologyComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', Validators.required],\n    service_or_material: [null, Validators.required]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly technologyService: TechnologyService,\n    private dialogRef: MatDialogRef<CreateEditTechnologyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, technology: Technology }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.technology.id));\n      this.form.patchValue(this.data.technology);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createTechnology();\n        break;\n      }\n      case 'edit': {\n        this.editTechnology();\n        break;\n      }\n    }\n  }\n\n  createTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.create(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.update(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Technology\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label>Type*</label>\n      <div class=\"column\">\n        <p-radioButton\n          class=\"mr-3\"\n          name=\"service_or_material\"\n          label=\"Service\"\n          value=\"0\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n        <p-radioButton\n          name=\"service_or_material\"\n          label=\"Material\"\n          value=\"1\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ProductService} from '../../services/product.service';\nimport {Nomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-make-production-list',\n  templateUrl: './make-production-list.component.html',\n  styleUrls: ['./make-production-list.component.scss']\n})\nexport class MakeProductionListComponent implements OnInit {\n  isSaving: boolean = false;\n\n  form: FormGroup = this.fb.group({\n    nomenclature: [null],\n    quantity: [1, [Validators.required, Validators.min(1)]],\n    is_grouped: [false],\n    root_nomenclature: [null]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeProductionListComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public nomenclature: Nomenclature\n  ) { }\n\n  ngOnInit(): void {\n    this.form.get('is_grouped').disable();\n    this.form.get('nomenclature').patchValue(this.nomenclature.id);\n    this.form.get('root_nomenclature').patchValue(this.nomenclature.id);\n  }\n\n  onChangeQuantity() {\n    if (this.form.get('quantity').value < 1) {\n      this.form.get('quantity').patchValue(1);\n    } else {\n      if (this.form.get('quantity').value <= 1) {\n        this.form.get('is_grouped').disable();\n        this.form.get('is_grouped').patchValue(false);\n      } else {\n        this.form.get('is_grouped').enable();\n      }\n    }\n  }\n\n  onMakeProductionList(): void {\n    this.isSaving = true;\n    const send = {...this.form.value};\n    this.productService.makeProductionList(send).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Production List from &laquo;{{nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Number Of Sets</label>\n      <input type=\"number\" pInputText class=\"form-control\" formControlName=\"quantity\" (ngModelChange)=\"onChangeQuantity()\">\n    </div>\n    <div class=\"form-group\">\n      <p-checkbox label=\"Group Production Plan\" [binary]=\"true\" formControlName=\"is_grouped\"></p-checkbox>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeProductionList()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../../services/product.service';\n\n@Component({\n  selector: 'pek-make-root-product',\n  templateUrl: './make-root-product.component.html',\n  styleUrls: ['./make-root-product.component.scss']\n})\nexport class MakeRootProductComponent implements OnInit {\n  isSaving: boolean = false;\n  form: FormGroup = this.fb.group({\n    category: [null, Validators.required]\n  })\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeRootProductComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public product: Product\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSelectCategory(categoryId: number) {\n    this.form.get('category').patchValue(categoryId);\n  }\n\n  onMakeRoot() {\n    this.isSaving = true;\n    this.productService.makeRoot(this.product.id, this.form.value).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    })\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Root &laquo;{{product.nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div class=\"form-group\">\n    <label>Category</label>\n    <pek-product-category-picker\n      [currentCategoryId]=\"form.get('category').value\"\n      (choiceCategory)=\"onSelectCategory($event)\"\n    ></pek-product-category-picker>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeRoot()\"\n  ></button>\n</mat-dialog-actions>\n","import {Nomenclature} from '@shared/models/nomenclature';\r\n\r\nexport class Product {\r\n  readonly id: number;\r\n  root_id?: number;\r\n  quantity?: number;\r\n  required_quantity?: number;\r\n  nomenclature?: Nomenclature;\r\n  position?: number;\r\n  task_required_quantity?: number;\r\n  group_uid?: number;\r\n  countProducts?: number;\r\n  product?: Product;\r\n  products?: Product[];\r\n  // serial_number?: SerialNumber;\r\n  is_scanned?: boolean;\r\n  is_scanned_root?: boolean;\r\n  checkedForGeneration?: boolean;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductStructureRouting } from './product-structure.routing';\nimport { ProductStructureProductsListComponent } from './components/product-structure-products-list/product-structure-products-list.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { CreateEditProductComponent } from './modals/create-edit-product/create-edit-product.component';\nimport { ProductStructureProductComponent } from './components/product-structure-product/product-structure-product.component';\nimport { MakeRootProductComponent } from './modals/make-root-product/make-root-product.component';\nimport { MakeProductionListComponent } from './modals/make-production-list/make-production-list.component';\nimport { TechnologiesComponent } from './components/technologies/technologies.component';\nimport { PrefixesComponent } from './components/prefixes/prefixes.component';\nimport { CreateEditTechnologyComponent } from './modals/create-edit-technology/create-edit-technology.component';\nimport { CreateEditPrefixComponent } from './modals/create-edit-prefix/create-edit-prefix.component';\nimport { ProductStructureLayoutComponent } from './components/product-structure-layout/product-structure-layout.component';\nimport {LayoutModule} from '../layout/layout.module';\n\n\n@NgModule({\n  declarations: [\n    ProductStructureProductsListComponent,\n    CreateEditProductComponent,\n    ProductStructureProductComponent,\n    MakeRootProductComponent,\n    MakeProductionListComponent,\n    TechnologiesComponent,\n    PrefixesComponent,\n    CreateEditTechnologyComponent,\n    CreateEditPrefixComponent,\n    ProductStructureLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductStructureRouting,\n    SharedModule,\n    LayoutModule,\n  ]\n})\nexport class ProductStructureModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {\n  ProductStructureProductsListComponent\n} from './components/product-structure-products-list/product-structure-products-list.component';\nimport {\n  ProductStructureProductComponent\n} from './components/product-structure-product/product-structure-product.component';\nimport {TechnologiesComponent} from './components/technologies/technologies.component';\nimport {PrefixesComponent} from './components/prefixes/prefixes.component';\nimport {\n  ProductStructureLayoutComponent\n} from './components/product-structure-layout/product-structure-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductStructureLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'products', pathMatch: 'full'},\n      {\n        path: 'products', children: [\n          {path: '', title: 'Products', component: ProductStructureProductsListComponent},\n          {path: 'structure/:id', title: 'Products', component: ProductStructureProductComponent}\n        ]\n      },\n      {path: 'technologies', title: 'Technologies', component: TechnologiesComponent},\n      {path: 'prefixes', title: 'Prefixes', component: PrefixesComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductStructureRouting {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {ProductPrefix} from '../models/prefix';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditPrefixComponent} from '../modals/create-edit-prefix/create-edit-prefix.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefixService {\n  readonly API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'xls_manufactured_prefixes/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<ProductPrefix[]> {\n    return this.httpClient.get<{ data: ProductPrefix[] }>(this.API_URL + this.url).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.post<{ data: ProductPrefix }>(this.API_URL + this.url, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.patch<{ data: ProductPrefix }>(this.API_URL + this.url + `${prefix.id}/`, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\n  }\n\n  createEditPrefix(type: ModalActionType, prefix?: ProductPrefix): Observable<ProductPrefix> {\n    return this.dialog\n      .open<CreateEditPrefixComponent>(CreateEditPrefixComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, prefix},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {ProductCategory} from '../models/product-category';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductCategoriesService {\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'categories/';\n\n  categories: ProductCategory[];\n\n  constructor(\n    private httpClient: HttpClient\n  ) {}\n\n  get(query?: QuerySearch[]): Observable<ProductCategory[]> {\n    if (this.categories) {\n      return of(this.categories);\n    }\n\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    // TODO удалить all\n    return this.httpClient.get<{ data: ProductCategory[] }>(this.API_URL + this.url + qString).pipe(map(response => {\n      let categories = response.data;\n\n      categories.forEach(category => {\n        if (!category.parent) category.lft = category.tree_id;\n      });\n\n      categories.sort((a, b) => a.lft - b.lft);\n      this.categories = categories;\n      return categories;\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map, Observable} from 'rxjs';\nimport {Product} from '../models/product';\nimport {environment} from '@env/environment';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditProductComponent,\n} from '../modals/create-edit-product/create-edit-product.component';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'products/';\n\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Product[]> {\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + this.url).pipe(\n      map(response => response.data)\n    );\n  }\n\n  // TODO удалить all\n  getRoots(): Observable<Product[]> {\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'products_roots/all/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  getTree(id: number): Observable<Product[]> {\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'product_tree/' + `${id}/`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(product: Product): Observable<Product> {\n    return this.httpClient.post<{ data: Product }>(this.API_URL + this.url, product).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\n  }\n\n  copyStructure(send: { nomenclature_id: number, parent_id: number, name: string }): Observable<Product> {\n    return this.httpClient.post<{ data: Product }>(this.API_URL + 'product_structure_copy/', send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  move(move: any): Observable<any> {\n    return this.httpClient.post(this.API_URL + 'product_move/', move);\n  }\n\n  makeRoot(productId: number, send: {category: number}) {\n    return this.httpClient.post<{ data: any}>(this.API_URL + `products/${productId}/copy_tree_to_root/`, send).pipe(\n      map(response => response.data)\n    );\n  }\n\n  // TODO ПЕРЕНЕСТИ В ДРУГОЙ СЕРВИС\n  makeProductionList(send: any): Observable<any> {\n    return this.httpClient.post(environment.base_url + environment.production_url + 'list_creation_requests/', send)\n  }\n\n  createEditProduct(type: ModalActionType, product?: Product): Observable<Product> {\n    return this.dialog\n      .open<CreateEditProductComponent>(CreateEditProductComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, product},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Technology} from '../models/technology';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnologyService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'technologies/';\n\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Technology[]> {\n    return this.httpClient.get<{ data: Technology[] }>(this.API_URL + this.url).pipe(\n      map(response => response.data));\n  }\n\n  create(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.post<{ data: Technology }>(this.API_URL + this.url, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.put<{ data: Technology }>(this.API_URL + this.url + `${technology.id}/`, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(technology: Technology): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${technology.id}/`);\n  };\n\n  createEditTechnology(type: ModalActionType, technology?: Technology): Observable<Technology> {\n    return this.dialog\n      .open<CreateEditTechnologyComponent>(CreateEditTechnologyComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, technology},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {forkJoin, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Payment} from '../models/payment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'payments/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getConfirmationPayments(): Observable<Payment[]> {\n    return this.httpClient.get<{ data: Payment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\n      map(response => response.data));\n  }\n\n  severalConfirm(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{data: Payment}>(this.API_URL + this.url + `confirm/${id}/`, null)));\n  }\n\n  severalDecline(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id =>  this.httpClient.post<{data: Payment}>(this.API_URL + this.url + `decline/${id}/`, null)));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {forkJoin, Observable} from 'rxjs';\nimport {ServiceInvoicePayment} from '../models/service-invoice-payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceInvoicePaymentService {\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'service_invoice_payments/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getConfirmationPayments(): Observable<ServiceInvoicePayment[]> {\n    return this.httpClient.get<{ data: ServiceInvoicePayment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\n      map(response => response.data));\n  }\n\n  severalConfirm(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `confirm/${id}/`, null)));\n  }\n\n  severalDecline(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `decline/${id}/`, null)));\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport type ConfirmType = 'default' | 'success' | 'danger'\n\n@Component({\n  selector: 'pek-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public type: ConfirmType)\n  { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n  <div class=\"confirm\">\n    <div\n      class=\"confirm__icon\"\n      [class.confirm__icon_success]=\"type === 'success'\"\n      [class.confirm__icon_danger]=\"type === 'danger'\"\n      [ngSwitch]=\"type\"\n    >\n      <i *ngSwitchCase=\"'danger'\" class=\"pi pi-times-circle\"></i>\n      <i *ngSwitchCase=\"'default'\" class=\"pi fa-trash-alt\"></i>\n      <i *ngSwitchCase=\"'success'\" class=\"pi pi-check-circle\"></i>\n    </div>\n\n    <div class=\"confirm__text\">\n      Are you sure?\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-secondary\"></button>\n  <ng-container [ngSwitch]=\"type\">\n    <button *ngSwitchCase=\"'danger'\" pButton type=\"button\" label=\"Remove\" [mat-dialog-close]=\"true\" class=\"p-button-danger\"></button>\n    <button *ngSwitchCase=\"'success'\" pButton type=\"button\" label=\"Confirm\" [mat-dialog-close]=\"true\" class=\"p-button-success\"></button>\n  </ng-container>\n</mat-dialog-actions>\n","import {ProductCategory} from '../../product-structure/models/product-category';\r\n\r\nexport class Nomenclature {\r\n  readonly id: number;\r\n  code?: string;\r\n  name?: string;\r\n  status?: string;\r\n  parent?: number | Nomenclature;\r\n  // technologies?: Technology[];\r\n  image?: string;\r\n  category?: ProductCategory;\r\n  // category?: any;\r\n  description?: string;\r\n  type?: ENomenclatureType;\r\n  approved?: string;\r\n  fullName?: string;\r\n  // purchase_category?: PurchasingCategory;\r\n  accounting_number?: string;\r\n  is_fixed_asset?: boolean;\r\n  is_non_ressivable?: boolean;\r\n  qc_protocol?: number;\r\n  bulk_or_serial?: '1' | '0';\r\n  tasks?: Task[];\r\n}\r\n\r\nexport class NewNomenclature {\r\n  readonly id: number;\r\n  name: string;\r\n  parents?: NomenclatureParent[];\r\n}\r\n\r\nexport class NomenclatureParent {\r\n  readonly id: number;\r\n  name: string;\r\n}\r\n\r\nexport enum ENomenclatureType {\r\n  PURCHASED = '0',\r\n  ASSEMBLY = '1',\r\n  MANUFACTURED = '2'\r\n}\r\n\r\nexport enum ENomenclatureApproval {\r\n  NEW = '0',\r\n  APPROVED = '1',\r\n  DECLINED = '2'\r\n}\r\n\r\n\r\nexport enum ENomenclatureBulk {\r\n  BULK = '0',\r\n  SERIAL = '1',\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\n\nexport type Module = 'dashboard' | 'product-structure' | 'confirmation' | 'warehouse' | 'manufacturing-procurement'\n  | 'quality-control' | 'manufacturing' | 'contacts-events' | 'outsourcing' | 'purchasing' | 'sales'\n  | 'reports' | 'administration'\n\n@Component({\n  selector: 'pek-module-icon',\n  templateUrl: './module-icon.component.html',\n  styleUrls: ['./module-icon.component.scss']\n})\nexport class ModuleIconComponent implements OnInit {\n  @Input() module: Module;\n  @Input() isActive: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"module-icon\" [class.module-icon_active]=\"isActive\" [ngSwitch]=\"module\">\n  <svg *ngSwitchCase=\"'product-structure'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M30.2 42v-6.25h-7.7v-20.5h-4.65v6.5H4V6h13.85v6.25H30.2V6H44v15.75H30.2v-6.5h-4.7v17.5h4.7v-6.5H44V42ZM7 9v9.75Zm26.2 20.25V39ZM33.2 9v9.75Zm0 9.75H41V9h-7.8Zm0 20.25H41v-9.75h-7.8ZM7 18.75h7.85V9H7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'dashboard'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M25.5 19.5V6H42v13.5ZM6 25.5V6h16.5v19.5ZM25.5 42V22.5H42V42ZM6 42V28.5h16.5V42Zm3-19.5h10.5V9H9ZM28.5 39H39V25.5H28.5Zm0-22.5H39V9H28.5ZM9 39h10.5v-7.5H9Zm10.5-16.5Zm9-6Zm0 9Zm-9 6Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'confirmation'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M7 40q-1.3 0-2.15-.85Q4 38.3 4 37v-7.65q1.85-.4 3.075-1.875T8.3 24q0-2-1.225-3.5T4 18.65V11q0-1.3.85-2.15Q5.7 8 7 8h34q1.3 0 2.15.85Q44 9.7 44 11v7.65q-1.85.35-3.075 1.85T39.7 24q0 2 1.225 3.475T44 29.35V37q0 1.3-.85 2.15Q42.3 40 41 40Zm0-3h34v-5.45q-1.9-1.3-3.1-3.25-1.2-1.95-1.2-4.3 0-2.35 1.2-4.3 1.2-1.95 3.1-3.25V11H7v5.45q1.95 1.3 3.125 3.25T11.3 24q0 2.35-1.175 4.3Q8.95 30.25 7 31.55Zm17-3.15q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45ZM24 24Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'warehouse'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M7 39h6V23h22v16h6V16L24 9.2 7 16Zm-3 3V14l20-8 20 8v28H32V26H16v16Zm14.5 0v-3h3v3Zm4-6v-3h3v3Zm4 6v-3h3v3ZM13 23h22Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'manufacturing-procurement'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M5 44q-1.2 0-2.1-.9Q2 42.2 2 41V18.05h3V41h30.45v3Zm6-6q-1.2 0-2.1-.9Q8 36.2 8 35V9.1h12.1V5q0-1.2.9-2.1.9-.9 2.1-.9h7.8q1.2 0 2.1.9.9.9.9 2.1v4.1H46V35q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h32V12.1H11V35ZM23.1 9.1h7.8V5h-7.8ZM11 35V12.1 35Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'quality-control'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M28.55 31.6h3v-6.2h6.15v-3h-6.15v-6.15h-3v6.15h-6.2v3h6.2Zm-16.9 9.2Q6.4 38.7 3.2 34.125 0 29.55 0 23.95q0-5.6 3.225-10.15Q6.45 9.25 11.65 7.15v3.4q-3.95 1.8-6.3 5.425Q3 19.6 3 23.95q0 4.4 2.35 8 2.35 3.6 6.3 5.45ZM30 41.95q-3.75 0-7.025-1.425-3.275-1.425-5.7-3.85-2.425-2.425-3.85-5.7Q12 27.7 12 23.95q0-3.75 1.425-7.025 1.425-3.275 3.85-5.7 2.425-2.425 5.7-3.85Q26.25 5.95 30 5.95q3.75 0 7.025 1.425 3.275 1.425 5.7 3.85 2.425 2.425 3.85 5.7Q48 20.2 48 23.95q0 3.75-1.425 7.025-1.425 3.275-3.85 5.7-2.425 2.425-5.7 3.85Q33.75 41.95 30 41.95Zm0-18Zm.05 15q6.2 0 10.575-4.375Q45 30.2 45 23.95q0-6.2-4.375-10.6Q36.25 8.95 30 8.95q-6.2 0-10.6 4.4-4.4 4.4-4.4 10.6 0 6.25 4.4 10.625t10.65 4.375Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'manufacturing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M4 44V19.95L18 14v4l10-4.05V20h16v24Zm3-3h34V23H25v-4.6l-10 4v-3.95L7 22Zm15.5-5h3v-8h-3Zm-8 0h3v-8h-3Zm16 0h3v-8h-3ZM44 20h-9l2-16h5ZM7 41h34Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'contacts-events'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M9 44q-1.2 0-2.1-.9Q6 42.2 6 41V10q0-1.2.9-2.1Q7.8 7 9 7h3.25V4h3.25v3h17V4h3.25v3H39q1.2 0 2.1.9.9.9.9 2.1v31q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h30V19.5H9V41Zm0-24.5h30V10H9Zm0 0V10v6.5ZM24 28q-.85 0-1.425-.575Q22 26.85 22 26q0-.85.575-1.425Q23.15 24 24 24q.85 0 1.425.575Q26 25.15 26 26q0 .85-.575 1.425Q24.85 28 24 28Zm-8 0q-.85 0-1.425-.575Q14 26.85 14 26q0-.85.575-1.425Q15.15 24 16 24q.85 0 1.425.575Q18 25.15 18 26q0 .85-.575 1.425Q16.85 28 16 28Zm16 0q-.85 0-1.425-.575Q30 26.85 30 26q0-.85.575-1.425Q31.15 24 32 24q.85 0 1.425.575Q34 25.15 34 26q0 .85-.575 1.425Q32.85 28 32 28Zm-8 8q-.85 0-1.425-.575Q22 34.85 22 34q0-.85.575-1.425Q23.15 32 24 32q.85 0 1.425.575Q26 33.15 26 34q0 .85-.575 1.425Q24.85 36 24 36Zm-8 0q-.85 0-1.425-.575Q14 34.85 14 34q0-.85.575-1.425Q15.15 32 16 32q.85 0 1.425.575Q18 33.15 18 34q0 .85-.575 1.425Q16.85 36 16 36Zm16 0q-.85 0-1.425-.575Q30 34.85 30 34q0-.85.575-1.425Q31.15 32 32 32q.85 0 1.425.575Q34 33.15 34 34q0 .85-.575 1.425Q32.85 36 32 36Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'outsourcing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M38.5 30.25v-16.1L28 6.8l-10.5 7.35v6.45h-3v-7.95L28 3l13.5 9.65v17.6ZM28 6.8ZM29 17h2v-2h-2Zm-4 0h2v-2h-2Zm4 4h2v-2h-2Zm-4 0h2v-2h-2Zm3.3 23.9-15.55-4.45v2.85H2V23.6h15.45l12.75 4.8q1.35.5 2.275 1.625.925 1.125.925 3.225h5.7q2.1 0 3.5 1.5T44 38.8v1.3ZM5 40.3h4.7V26.6H5Zm23.1 1.5 12.8-3.9q-.3-.95-.75-1.3-.45-.35-1.05-.35H28.75q-1.5 0-2.775-.2t-2.425-.55l-4.05-1.25 1.1-2.9 3.65 1.2q1.25.4 2.375.55 1.125.15 3.575.15 0-.6-.225-1.175-.225-.575-.775-.825L16.95 26.6h-4.2v10.7ZM9.7 33.45Zm20.5-.2Zm-20.5.2Zm3.05 0Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'purchasing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M14.35 43.95q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm20 0q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm-22.6-33 5.5 11.4h14.4l6.25-11.4Zm-1.5-3H39.7q1.6 0 2.025.975.425.975-.275 2.175L34.7 23.25q-.5.85-1.4 1.475-.9.625-1.95.625H16.2l-2.8 5.2h24.55v3h-24.1q-2.1 0-3.025-1.4-.925-1.4.025-3.15l3.2-5.9L6.45 7h-3.9V4H8.4Zm7 14.4h14.4Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'sales'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M25.8 44q-.6 0-1.15-.175-.55-.175-1.05-.675L4.85 24.4q-.5-.5-.675-1.05Q4 22.8 4 22.2V7q0-1.3.85-2.15Q5.7 4 7 4h15.2q.6 0 1.2.175t1.1.675L43.15 23.5q1 1 1 2.225t-1 2.225l-15.2 15.2q-.4.4-.975.625Q26.4 44 25.8 44Zm.1-2.9 15.2-15.2L22.2 7H7v15.2ZM12.25 14.8q1.05 0 1.825-.775.775-.775.775-1.825 0-1.05-.775-1.825Q13.3 9.6 12.25 9.6q-1.05 0-1.825.775-.775.775-.775 1.825 0 1.05.775 1.825.775.775 1.825.775ZM7 7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'reports'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M15.95 35.5h16.1v-3h-16.1Zm0-8.5h16.1v-3h-16.1ZM11 44q-1.2 0-2.1-.9Q8 42.2 8 41V7q0-1.2.9-2.1Q9.8 4 11 4h18.05L40 14.95V41q0 1.2-.9 2.1-.9.9-2.1.9Zm16.55-27.7V7H11v34h26V16.3ZM11 7v9.3V7v34V7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'administration'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M24 44q-6.9-1.6-11.45-7.825Q8 29.95 8 21.9V9.95l16-6 16 6v13.5q-.7-.35-1.5-.625T37 22.45v-10.4l-13-4.8-13 4.8v9.85q0 3.8 1.225 7t3.125 5.625q1.9 2.425 4.2 4.025 2.3 1.6 4.45 2.3.3.6.9 1.35.6.75 1 1.15-.45.25-.95.375-.5.125-.95.275Zm10.55-9.5q1.3 0 2.2-.95.9-.95.9-2.25t-.9-2.2q-.9-.9-2.2-.9-1.3 0-2.25.9t-.95 2.2q0 1.3.95 2.25t2.25.95Zm-.05 6.25q1.65 0 3-.7t2.3-2q-1.3-.7-2.6-1.05-1.3-.35-2.7-.35-1.4 0-2.725.35-1.325.35-2.575 1.05.95 1.3 2.275 2t3.025.7Zm.15 3.25q-3.9 0-6.65-2.775-2.75-2.775-2.75-6.575 0-3.9 2.75-6.675t6.65-2.775q3.85 0 6.625 2.775t2.775 6.675q0 3.8-2.775 6.575Q38.5 44 34.65 44ZM24 24.05Z\"/>\n  </svg>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProductCategoriesService} from '../../../product-structure/services/product-categories.service';\nimport {ProductCategory} from '../../../product-structure/models/product-category';\n\n@Component({\n  selector: 'pek-product-category-picker',\n  templateUrl: './product-category-picker.component.html',\n  styleUrls: ['./product-category-picker.component.scss']\n})\nexport class ProductCategoryPickerComponent implements OnInit {\n  @Input() currentCategoryId: number;\n  @Input() isDisabled: boolean = false;\n  @Output() choiceCategory: EventEmitter<number> = new EventEmitter<number>();\n\n  categories: ProductCategory[];\n  selectCategoryId: number;\n\n  constructor(\n    private readonly productCategoriesService: ProductCategoriesService,\n  ) { }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get([{name: 'is_for_root', value: true}]).subscribe(categories => {\n      this.categories = categories;\n    })\n\n    if (this.currentCategoryId) {\n      this.selectCategoryId = this.currentCategoryId;\n    }\n  }\n\n  onChangeCategory() {\n    this.choiceCategory.emit(this.selectCategoryId);\n  }\n}\n","<p-dropdown\n  [showClear]=\"true\"\n  [options]=\"categories\"\n  optionLabel=\"name\"\n  optionValue=\"id\"\n  placeholder=\"Select Product Category\"\n  [(ngModel)]=\"selectCategoryId\"\n  (ngModelChange)=\"onChangeCategory()\"\n  [disabled]=\"isDisabled\"\n></p-dropdown>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'moneyFormat'\r\n})\r\nexport class MoneyFormatPipe implements PipeTransform {\r\n\r\n  transform(value: number, ...args: any[]): string {\r\n    return parseFloat(value as any).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ').split('.').join(',');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmComponent, ConfirmType} from '@shared/modals/confirm/confirm.component';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(\n    private dialog: MatDialog\n  ) {\n  }\n\n  confirm(type: ConfirmType = 'default'): Observable<boolean> {\n    return this.dialog\n      .open<ConfirmComponent>(ConfirmComponent, {\n        width: '25rem',\n        height: '22.5rem',\n        data: type,\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {NewNomenclature, Nomenclature} from '@shared/models/nomenclature';\nimport {map} from 'rxjs/operators';\nimport {forkJoin, Observable} from 'rxjs';\nimport {Product} from '../../product-structure/models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NomenclatureService {\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'nomenclatures/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  create(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\n    // const formData = new FormData();\n\n    // if (nomenclature.technologies?.length > 0) {\n    //   nomenclature.technologies.forEach(technology => {\n    //     formData.append('technologies', technology + '');\n    //   });\n    // }\n    //\n    // // tslint:disable-next-line:forin\n    // for (const key in nomenclature) {\n    //   if (nomenclature[key] !== null && key !== 'technologies') {\n    //     formData.append(key, nomenclature[key]);\n    //   }\n    // }\n    //\n    // if (nomenclature.category === null) {\n    //   formData.append('category', '');\n    // }\n\n    return this.httpClient.post<{ data: Nomenclature }>(this.API_URL + this.url, nomenclature).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updateProduct(product: Product): Observable<Product> {\n    return this.httpClient.put<{ data: Product }>(this.API_URL + this.url + `${product.id}/`, product).pipe(\n      map(response => response.data)\n    );\n  }\n\n  // Nomenclatures for confirmation\n  getNewNomenclatures(): Observable<NewNomenclature[]> {\n    return this.httpClient.get<{ data: NewNomenclature[] }>(this.API_URL + 'products_new_nomenclatures/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  updateSeveralPartly(nomenclatures: Nomenclature[]): Observable<any[]> {\n    return forkJoin(...nomenclatures.map(nomenclature =>\n      this.httpClient.patch<{ data: Nomenclature }>(this.API_URL + this.url + nomenclature.id + '/', nomenclature))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModuleIconComponent } from './module-icon/module-icon.component';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {TreeTableModule} from 'primeng/treetable';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MenubarModule} from 'primeng/menubar';\nimport { ConfirmComponent } from './modals/confirm/confirm.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport { ProductCategoryPickerComponent } from './pickers/product-category-picker/product-category-picker.component';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {TableModule} from 'primeng/table';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {TabViewModule} from 'primeng/tabview';\nimport {MoneyFormatPipe} from '@shared/pipes/money-format.pipe';\nimport {TieredMenuModule} from 'primeng/tieredmenu';\n\n\n@NgModule({\n  declarations: [\n    ModuleIconComponent,\n    ConfirmComponent,\n    ProductCategoryPickerComponent,\n    MoneyFormatPipe,\n  ],\n  exports: [\n    ButtonModule,\n    InputTextModule,\n    TreeTableModule,\n    ReactiveFormsModule,\n    MenubarModule,\n    MatDialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    FormsModule,\n    CheckboxModule,\n    ProductCategoryPickerComponent,\n    TableModule,\n    RadioButtonModule,\n    ModuleIconComponent,\n    TabViewModule,\n    MoneyFormatPipe,\n    TieredMenuModule,\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    InputTextModule,\n    TreeTableModule,\n    ReactiveFormsModule,\n    MenubarModule,\n    MatDialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    FormsModule,\n    CheckboxModule,\n    TableModule,\n    RadioButtonModule,\n    TabViewModule,\n    TieredMenuModule,\n  ]\n})\nexport class SharedModule { }\n","export const environment = {\n  production: false,\n  /** Смотри все api в [Swagger]{@link http://erp.slopehelper.com/swagger/ } */\n  base_url: 'https://erp.slopehelper.com/api/',\n  product_structure_url: 'product_structure/',\n  warehouse_url: 'warehouse/',\n  production_url: 'production/',\n  business_partners_url: 'crm/',\n  procurement_url: 'procurement/',\n  accounting_url: 'accounting/',\n  users_url: 'users/',\n  staff_url: 'staff/',\n  sales_url: 'sales/',\n  image_path: 'http://erp.slopehelper.com'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}