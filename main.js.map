{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/auth/auth-state.enum.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.ts","./src/app/auth/auth.service.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.ts","./src/app/confirmation/components/confirmation-layout/confirmation-layout.component.html","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.ts","./src/app/confirmation/components/nomenclature-confirmation/nomenclature-confirmation.component.html","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.ts","./src/app/confirmation/components/payment-confirmation/payment-confirmation.component.html","./src/app/confirmation/components/production-list-confirmation/production-list-confirmation.component.ts","./src/app/confirmation/components/production-list-confirmation/production-list-confirmation.component.html","./src/app/confirmation/components/reservation-confirmation/reservation-confirmation.component.ts","./src/app/confirmation/components/reservation-confirmation/reservation-confirmation.component.html","./src/app/confirmation/components/supplier-confirmation/supplier-confirmation.component.ts","./src/app/confirmation/components/supplier-confirmation/supplier-confirmation.component.html","./src/app/confirmation/components/write-off-confirmation/write-off-confirmation.component.ts","./src/app/confirmation/components/write-off-confirmation/write-off-confirmation.component.html","./src/app/confirmation/confirmation.module.ts","./src/app/confirmation/confirmation.routing.ts","./src/app/confirmation/modals/payment-confirmation-limit/payment-confirmation-limit.component.ts","./src/app/confirmation/modals/payment-confirmation-limit/payment-confirmation-limit.component.html","./src/app/confirmation/models/order-supplier.ts","./src/app/confirmation/services/order-supplier.service.ts","./src/app/crm/modals/add-company-to-event/add-company-to-event.component.ts","./src/app/crm/modals/add-company-to-event/add-company-to-event.component.html","./src/app/crm/modals/add-contact-person-to-event/add-contact-person-to-event.component.ts","./src/app/crm/modals/add-contact-person-to-event/add-contact-person-to-event.component.html","./src/app/crm/modals/add-event-to-company/add-event-to-company.component.ts","./src/app/crm/modals/add-event-to-company/add-event-to-company.component.html","./src/app/crm/modals/create-edit-company-category/create-edit-company-category.component.ts","./src/app/crm/modals/create-edit-company-category/create-edit-company-category.component.html","./src/app/crm/modals/create-edit-company/create-edit-company.component.ts","./src/app/crm/modals/create-edit-company/create-edit-company.component.html","./src/app/crm/modals/create-edit-event/create-edit-event.component.ts","./src/app/crm/modals/create-edit-event/create-edit-event.component.html","./src/app/crm/modals/create-edit-linked-company/create-edit-linked-company.component.ts","./src/app/crm/modals/create-edit-linked-company/create-edit-linked-company.component.html","./src/app/crm/modals/create-edit-user-profile/create-edit-user-profile.component.ts","./src/app/crm/modals/create-edit-user-profile/create-edit-user-profile.component.html","./src/app/crm/modals/edit-employee-event-date/edit-employee-event-date.component.ts","./src/app/crm/modals/edit-employee-event-date/edit-employee-event-date.component.html","./src/app/crm/services/company-category.service.ts","./src/app/crm/services/company.service.ts","./src/app/crm/services/events-list.service.ts","./src/app/crm/services/user-profile.service.ts","./src/app/delivery-chains/components/not-found/not-found.component.ts","./src/app/delivery-chains/components/not-found/not-found.component.html","./src/app/delivery-chains/delivery-chains.module.ts","./src/app/delivery-chains/delivery-chains.routing.ts","./src/app/guide/guide-button/guide-button.component.ts","./src/app/guide/guide-button/guide-button.component.html","./src/app/guide/guide-outsourcing/guide-outsourcing.component.ts","./src/app/guide/guide-outsourcing/guide-outsourcing.component.html","./src/app/guide/guide-procurement/guide-procurement.component.ts","./src/app/guide/guide-procurement/guide-procurement.component.html","./src/app/guide/guide-production/guide-production.component.ts","./src/app/guide/guide-production/guide-production.component.html","./src/app/guide/guide-sales/guide-sales.component.ts","./src/app/guide/guide-sales/guide-sales.component.html","./src/app/guide/guide.module.ts","./src/app/guide/guide.routing.ts","./src/app/guide/guide/guide.component.ts","./src/app/guide/guide/guide.component.html","./src/app/layout/components/header/header.component.ts","./src/app/layout/components/header/header.component.html","./src/app/layout/components/layout/layout.component.ts","./src/app/layout/components/layout/layout.component.html","./src/app/layout/components/logo/logo.component.ts","./src/app/layout/components/logo/logo.component.html","./src/app/layout/layout.module.ts","./src/app/product-structure/components/create-edit-product-form/create-edit-product-form.component.ts","./src/app/product-structure/components/create-edit-product-form/create-edit-product-form.component.html","./src/app/product-structure/components/prefixes/prefixes.component.ts","./src/app/product-structure/components/prefixes/prefixes.component.html","./src/app/product-structure/components/product-structure-categories/product-structure-categories.component.ts","./src/app/product-structure/components/product-structure-categories/product-structure-categories.component.html","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.ts","./src/app/product-structure/components/product-structure-layout/product-structure-layout.component.html","./src/app/product-structure/components/product-structure-product/product-structure-product.component.ts","./src/app/product-structure/components/product-structure-product/product-structure-product.component.html","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.ts","./src/app/product-structure/components/product-structure-products-list/product-structure-products-list.component.html","./src/app/product-structure/components/technologies/technologies.component.ts","./src/app/product-structure/components/technologies/technologies.component.html","./src/app/product-structure/modals/add-product/add-product.component.ts","./src/app/product-structure/modals/add-product/add-product.component.html","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.ts","./src/app/product-structure/modals/create-edit-prefix/create-edit-prefix.component.html","./src/app/product-structure/modals/create-edit-product-structure-category/create-edit-product-structure-category.component.ts","./src/app/product-structure/modals/create-edit-product-structure-category/create-edit-product-structure-category.component.html","./src/app/product-structure/modals/create-edit-root-product/create-edit-root-product.component.ts","./src/app/product-structure/modals/create-edit-root-product/create-edit-root-product.component.html","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.ts","./src/app/product-structure/modals/create-edit-technology/create-edit-technology.component.html","./src/app/product-structure/modals/edit-product/edit-product.component.ts","./src/app/product-structure/modals/edit-product/edit-product.component.html","./src/app/product-structure/modals/make-production-list/make-production-list.component.ts","./src/app/product-structure/modals/make-production-list/make-production-list.component.html","./src/app/product-structure/modals/make-root-product/make-root-product.component.ts","./src/app/product-structure/modals/make-root-product/make-root-product.component.html","./src/app/product-structure/modals/product-files/product-files.component.ts","./src/app/product-structure/modals/product-files/product-files.component.html","./src/app/product-structure/modals/upload-product-structure/upload-product-structure.component.ts","./src/app/product-structure/modals/upload-product-structure/upload-product-structure.component.html","./src/app/product-structure/models/product.ts","./src/app/product-structure/product-structure.module.ts","./src/app/product-structure/product-structure.routing.ts","./src/app/product-structure/services/categories.service.ts","./src/app/product-structure/services/prefix.service.ts","./src/app/product-structure/services/product-structure-category.service.ts","./src/app/product-structure/services/product.service.ts","./src/app/product-structure/services/technology.service.ts","./src/app/reports/services/payment.service.ts","./src/app/reports/services/service-invoice-payment.service.ts","./src/app/sales/modals/create-edit-sales-status/create-edit-sales-status.component.ts","./src/app/sales/modals/create-edit-sales-status/create-edit-sales-status.component.html","./src/app/sales/services/sales-status.service.ts","./src/app/shared/components/images-slider/images-slider.component.ts","./src/app/shared/components/images-slider/images-slider.component.html","./src/app/shared/components/nomenclature-picker/nomenclature-picker.component.ts","./src/app/shared/components/nomenclature-picker/nomenclature-picker.component.html","./src/app/shared/components/upload-file/upload-file.component.ts","./src/app/shared/components/upload-file/upload-file.component.html","./src/app/shared/guards/external-uri.guard.ts","./src/app/shared/icons/in-icon/in-icon.component.ts","./src/app/shared/icons/in-icon/in-icon.component.html","./src/app/shared/icons/module-icon/module-icon.component.ts","./src/app/shared/icons/module-icon/module-icon.component.html","./src/app/shared/icons/sort-icon/sort-icon.component.ts","./src/app/shared/icons/sort-icon/sort-icon.component.html","./src/app/shared/interceptors/error-interceptor.ts","./src/app/shared/modals/confirm/confirm.component.ts","./src/app/shared/modals/confirm/confirm.component.html","./src/app/shared/modals/image-gallery/image-gallery.component.ts","./src/app/shared/modals/image-gallery/image-gallery.component.html","./src/app/shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component.ts","./src/app/shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component.html","./src/app/shared/modals/paste-image/paste-image.component.ts","./src/app/shared/modals/paste-image/paste-image.component.html","./src/app/shared/modals/refactoring/complete-list/complete-list.component.ts","./src/app/shared/modals/refactoring/complete-list/complete-list.component.html","./src/app/shared/modals/refactoring/list-products/list-products.component.ts","./src/app/shared/modals/refactoring/list-products/list-products.component.html","./src/app/shared/models/nomenclature.ts","./src/app/shared/pickers/accepted-type-picker/accepted-type-picker.component.ts","./src/app/shared/pickers/accepted-type-picker/accepted-type-picker.component.html","./src/app/shared/pickers/accounting-type-picker/accounting-type-picker.component.ts","./src/app/shared/pickers/accounting-type-picker/accounting-type-picker.component.html","./src/app/shared/pickers/company-category-module-picker/company-category-module-picker.component.ts","./src/app/shared/pickers/company-category-module-picker/company-category-module-picker.component.html","./src/app/shared/pickers/company-category-picker/company-category-picker.component.ts","./src/app/shared/pickers/company-category-picker/company-category-picker.component.html","./src/app/shared/pickers/company-picker/company-picker.component.ts","./src/app/shared/pickers/company-picker/company-picker.component.html","./src/app/shared/pickers/employee-picker/employee-picker.component.ts","./src/app/shared/pickers/employee-picker/employee-picker.component.html","./src/app/shared/pickers/group-locator-picker/group-locator-picker.component.ts","./src/app/shared/pickers/group-locator-picker/group-locator-picker.component.html","./src/app/shared/pickers/locator-picker/locator-picker.component.ts","./src/app/shared/pickers/locator-picker/locator-picker.component.html","./src/app/shared/pickers/multi-categories-picker/multi-categories-picker.component.ts","./src/app/shared/pickers/multi-categories-picker/multi-categories-picker.component.html","./src/app/shared/pickers/multi-company-category-picker/multi-company-category-picker.component.ts","./src/app/shared/pickers/multi-company-category-picker/multi-company-category-picker.component.html","./src/app/shared/pickers/multi-company-picker/multi-company-picker.component.ts","./src/app/shared/pickers/multi-company-picker/multi-company-picker.component.html","./src/app/shared/pickers/multi-locator-picker/multi-locator-picker.component.ts","./src/app/shared/pickers/multi-locator-picker/multi-locator-picker.component.html","./src/app/shared/pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component.ts","./src/app/shared/pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component.html","./src/app/shared/pickers/multi-sales-status-picker/multi-sales-status-picker.component.ts","./src/app/shared/pickers/multi-sales-status-picker/multi-sales-status-picker.component.html","./src/app/shared/pickers/multi-technology-picker/multi-technology-picker.component.ts","./src/app/shared/pickers/multi-technology-picker/multi-technology-picker.component.html","./src/app/shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component.ts","./src/app/shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component.html","./src/app/shared/pickers/nomenclature-type-picker/nomenclature-type-picker.component.ts","./src/app/shared/pickers/nomenclature-type-picker/nomenclature-type-picker.component.html","./src/app/shared/pickers/product-category-picker/product-category-picker.component.ts","./src/app/shared/pickers/product-category-picker/product-category-picker.component.html","./src/app/shared/pickers/product-structure-category-picker/product-structure-category-picker.component.ts","./src/app/shared/pickers/product-structure-category-picker/product-structure-category-picker.component.html","./src/app/shared/pickers/region-picker/region-picker.component.ts","./src/app/shared/pickers/region-picker/region-picker.component.html","./src/app/shared/pickers/technology-picker/technology-picker.component.ts","./src/app/shared/pickers/technology-picker/technology-picker.component.html","./src/app/shared/pickers/unit-measure-picker/unit-measure-picker.component.ts","./src/app/shared/pickers/unit-measure-picker/unit-measure-picker.component.html","./src/app/shared/pickers/user-profile-picker/user-profile-picker.component.ts","./src/app/shared/pickers/user-profile-picker/user-profile-picker.component.html","./src/app/shared/pickers/warehouse-picker/warehouse-picker.component.ts","./src/app/shared/pickers/warehouse-picker/warehouse-picker.component.html","./src/app/shared/pipes/money-format.pipe.ts","./src/app/shared/services/adapter.service.ts","./src/app/shared/services/employee.service.ts","./src/app/shared/services/modal.service.ts","./src/app/shared/services/nomenclature.service.ts","./src/app/shared/services/region.service.ts","./src/app/shared/services/tree.service.ts","./src/app/shared/shared.module.ts","./src/app/warehouse/modals/create-edit-locator/create-edit-locator.component.ts","./src/app/warehouse/modals/create-edit-locator/create-edit-locator.component.html","./src/app/warehouse/modals/create-edit-unit-measure/create-edit-unit-measure.component.ts","./src/app/warehouse/modals/create-edit-unit-measure/create-edit-unit-measure.component.html","./src/app/warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component.ts","./src/app/warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component.html","./src/app/warehouse/modals/create-edit-warehouse-item/create-edit-warehouse-product.component.ts","./src/app/warehouse/modals/create-edit-warehouse-item/create-edit-warehouse-product.component.html","./src/app/warehouse/modals/create-edit-warehouse/create-edit-warehouse.component.ts","./src/app/warehouse/modals/create-edit-warehouse/create-edit-warehouse.component.html","./src/app/warehouse/modals/move-warehouse-product/move-warehouse-product.component.ts","./src/app/warehouse/modals/move-warehouse-product/move-warehouse-product.component.html","./src/app/warehouse/modals/set-production-list-locator/set-production-list-locator.component.ts","./src/app/warehouse/modals/set-production-list-locator/set-production-list-locator.component.html","./src/app/warehouse/models/warehouse-product.ts","./src/app/warehouse/services/list-product.service.ts","./src/app/warehouse/services/list.service.ts","./src/app/warehouse/services/locator.service.ts","./src/app/warehouse/services/unit-measure.service.ts","./src/app/warehouse/services/warehouse-product.service.ts","./src/app/warehouse/services/warehouse.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pek-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'slopehelper-erp-frontend';\n}\n","<router-outlet></router-outlet>\n\n<p-toast position=\"bottom-right\"></p-toast>\n","import {NgModule, Provider} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRouting} from './app.routing';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from './layout/layout.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AuthModule} from './auth/auth.module';\nimport {AuthGuard} from './auth/auth.guard';\nimport {AuthInterceptor} from './auth/auth.interceptor';\nimport {ConfirmationModule} from './confirmation/confirmation.module';\nimport {DeliveryChainsModule} from './delivery-chains/delivery-chains.module';\nimport {GuideModule} from './guide/guide.module';\nimport {ErrorInterceptor} from '@shared/interceptors/error-interceptor';\nimport { MessageService } from 'primeng/api';\nimport {ToastModule} from 'primeng/toast';\nimport {ProductStructureModule} from './product-structure/product-structure.module';\n\nconst INTERCEPTOR_PROVIDER: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true,\n};\n\nconst INTERCEPTORS_ERROR: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRouting,\n    HttpClientModule,\n    AuthModule,\n    LayoutModule,\n    ConfirmationModule,\n    ProductStructureModule,\n    DeliveryChainsModule,\n    GuideModule,\n    ToastModule,\n  ],\n  providers: [\n    MessageService,\n    INTERCEPTOR_PROVIDER,\n    INTERCEPTORS_ERROR,\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LayoutComponent} from './layout/components/layout/layout.component';\nimport {AuthGuard} from './auth/auth.guard';\nimport {ExternalUriGuard} from '@shared/guards/external-uri.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      {\n        path: 'product-structure',\n        title: 'Product structure',\n        loadChildren: () => import('./product-structure/product-structure.module').then(m => m.ProductStructureModule)\n      },\n      {\n        path: 'confirmation',\n        title: 'Confirmation',\n        loadChildren: () => import('./confirmation/confirmation.module').then(m => m.ConfirmationModule)\n      },\n      {\n        path: 'warehouse',\n        title: 'Warehouse',\n        loadChildren: () => import('./warehouse/warehouse.module').then(m => m.WarehouseModule)\n      },\n      {\n        path: 'sales',\n        title: 'Sales',\n        loadChildren: () => import('./sales/sales.module').then(m => m.SalesModule)\n      },\n      {\n        path: 'delivery-chains',\n        title: 'Delivery Chains',\n        loadChildren: () => import('./delivery-chains/delivery-chains.module').then(m => m.DeliveryChainsModule)\n      },\n      {\n        path: 'crm',\n        title: 'CRM',\n        loadChildren: () => import('./crm/crm.module').then(m => m.CrmModule)\n      },\n      {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n    ]\n  },\n  {path: 'login', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\n\n  // Не удалять\n  {path: 'external/:uri', canActivate: [ExternalUriGuard], children: []},\n  {path: '**', redirectTo: 'dashboard', pathMatch: 'full'},\n  {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRouting {\n}\n","export enum AuthState {\r\n  PENDING = 'pending',\r\n  LOGGED_IN = 'logged-in',\r\n  LOGGED_OUT = 'logged-out',\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {Subscription, throwError} from 'rxjs';\n\n@Component({\n  selector: 'pek-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  loginForm: FormGroup = this.fb.group({\n    username: [null, Validators.required],\n    password: [null, Validators.required]\n  });\n\n  private errorSub: Subscription;\n  public errorMessage: string;\n\n  constructor(\n    public auth: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.errorSub = this.auth.error$.subscribe(error => this.errorMessage = error);\n  }\n\n  login() {\n    const user = this.loginForm.value;\n    this.auth.login(user).subscribe(\n      () => {\n        this.router.navigateByUrl('/').then();\n      },\n      (error => throwError(error))\n    );\n  }\n\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n\n}\n","<div class=\"auth\">\n  <div class=\"auth__box\">\n    <div class=\"auth-header\">\n      <h1 class=\"logo\">Slopehelper ERP</h1>\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n      <div class=\"form-group\">\n        <input type=\"text\" pInputText formControlName=\"username\" placeholder=\"Username\">\n      </div>\n\n      <div class=\"form-group\">\n        <input type=\"password\" pInputText formControlName=\"password\" placeholder=\"Password\">\n      </div>\n\n      <button pButton type=\"submit\" [disabled]=\"loginForm.invalid\">Log In</button>\n    </form>\n\n    <div class=\"alert alert-danger mt-3\" *ngIf=\"errorMessage\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {AuthState} from './auth-state.enum';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  public loginPageUri = ['/login'];\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.auth.getActualState().pipe(\r\n      map(state => {\r\n        return state === AuthState.LOGGED_IN ? true : this.router.createUrlTree(this.loginPageUri);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authService.isAuthentificated()) {\r\n      req = req.clone({\r\n        headers: req.headers.set('Authorization', `Bearer ${this.authService.token}`)\r\n      });\r\n    }\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 401) {\r\n            this.authService.logout();\r\n            this.router.navigate(['/login'], {\r\n              queryParams: {\r\n                authFailed: true\r\n              }\r\n            }).then();\r\n          }\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRouting } from './auth.routing';\nimport { AuthComponent } from './auth.component';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRouting,\n    SharedModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AuthComponent} from './auth.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRouting { }\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, throwError} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, take, tap} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {AuthState} from './auth-state.enum';\nimport {User, UserPermissions} from '@shared/models/user';\n\nexport class AuthResponse {\n  access: string;\n  refresh: string;\n}\n\nexport class AuthStateObject {\n  state: AuthState;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  readonly #onAuth$ = new BehaviorSubject<AuthStateObject>({\n    state: AuthState.PENDING,\n    user: undefined,\n  });\n\n  public onAuth$ = this.#onAuth$.pipe(\n    debounceTime(0),\n    distinctUntilChanged(),\n  );\n\n  public user: User = null;\n  public userPermissions: UserPermissions = null;\n\n  public error$: Subject<string> = new Subject<string>();\n  API_URL = environment.base_url;\n  readonly url = environment.users_url;\n\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n    setTimeout(() => {\n      this.getMe().subscribe();\n    });\n  }\n\n  get token(): string | null {\n    return localStorage.getItem('access');\n  }\n\n  login(user: User): Observable<User> {\n    return this.httpClient.post<{ data: AuthResponse }>(this.API_URL + 'token/', user).pipe(\n      map(response => response.data),\n      tap(this.setToken),\n      switchMap(() => this.getMe()),\n      catchError(this.handleError.bind(this))\n    );\n  }\n\n  private handleError(error: any): any {\n    const message = error.error.data.detail;\n    this.error$.next(message);\n    return throwError(error);\n  }\n\n  logout(): void {\n    this.setToken(null);\n  }\n\n  isAuthentificated(): boolean {\n    return !!this.token;\n  }\n\n  private setToken(response: AuthResponse | null): void {\n    if (response) {\n      localStorage.setItem('access', response.access);\n      localStorage.setItem('refresh', response.refresh);\n    } else {\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n    }\n  }\n\n  public getActualState(): Observable<AuthState> {\n    return this.onAuth$.pipe(\n      filter(({state}) => state !== AuthState.PENDING),\n      take(1),\n      map(({state}) => state),\n    );\n  }\n\n  getMe(): Observable<User> {\n    return this.httpClient.get<{ data: User }>(this.API_URL + this.url + 'get_me/')\n      .pipe(\n        map(response => response.data),\n        tap(user => this.setState(user)),\n      );\n  }\n\n  setState(user: User) {\n    this.user = user;\n    if (this.user) {\n      this.getUserPermissions();\n    }\n\n    this.#onAuth$.next({\n      state: this.user ? AuthState.LOGGED_IN : AuthState.LOGGED_OUT,\n      user: this.user,\n    });\n  }\n\n  getUserPermissions() {\n    this.userPermissions = {\n      can_edit_product_structure: this.user.can_edit_product_structure,\n      can_edit_confirmation: this.user.can_edit_confirmation,\n      can_edit_warehouse: this.user.can_edit_warehouse,\n      can_edit_manufacturing_procurement: this.user.can_edit_manufacturing_procurement,\n      can_edit_quality_control: this.user.can_edit_quality_control,\n      can_edit_manufacturing: this.user.can_edit_manufacturing,\n      can_edit_contacts_and_events: this.user.can_edit_contacts_and_events,\n      can_edit_outsourcing: this.user.can_edit_outsourcing,\n      can_edit_purchase: this.user.can_edit_purchase,\n      can_edit_sales: this.user.can_edit_sales,\n      can_edit_reports: this.user.can_edit_reports,\n      can_edit_administration: this.user.can_edit_administration,\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-confirmation-layout',\n  templateUrl: './confirmation-layout.component.html',\n  styleUrls: ['./confirmation-layout.component.scss'],\n})\nexport class ConfirmationLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Nomenclature Confirmation', commands: ['nomenclature']},\n    {label: 'Payments Confirmation', commands: ['payments']},\n    {label: 'Write Off Confirmation', commands: ['write-off']},\n    {label: 'Production Lists Confirmation', commands: ['production-lists']},\n    {label: 'Suppliers Confirmation', commands: ['suppliers']},\n    {label: 'Reservations Confirmation', commands: ['reservations']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Confirmation'\"\n  [routes]=\"routes\"\n></pek-header>\n\n<router-outlet></router-outlet>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureApproval, NewNomenclature} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-nomenclature-confirmation',\n  templateUrl: './nomenclature-confirmation.component.html',\n  styleUrls: ['./nomenclature-confirmation.component.scss']\n})\nexport class NomenclatureConfirmationComponent implements OnInit, OnDestroy {\n  nomenclatures: NewNomenclature[] = [];\n  selectedNomenclatures: NewNomenclature[] = [];\n  isLoading: boolean = true;\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly modalService: ModalService\n  ) { }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getNewNomenclatures().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures;\n      this.isLoading = false;\n    })\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm= true;\n        const confirmNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(nomenclature => {\n          confirmNomenclatures.push({\n            id: nomenclature.id,\n            approved: ENomenclatureApproval.APPROVED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(confirmNomenclatures).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          confirmNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = [...this.nomenclatures.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedNomenclatures = [];\n        });\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(decline => {\n      if (decline) {\n        this.isPendingDecline = true;\n        const declineNomenclatures = [];\n\n        this.selectedNomenclatures.forEach(product => {\n          declineNomenclatures.push({\n            id: product.id,\n            approved: ENomenclatureApproval.DECLINED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(declineNomenclatures).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          declineNomenclatures.forEach(nomenclature => {\n            this.nomenclatures = [...this.nomenclatures.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedNomenclatures = [];\n          this.isPendingDecline = false;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Nomenclature Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"nomenclatures.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedNomenclatures\"\n        [value]=\"nomenclatures\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              [loading]=\"isPendingDecline\"\n              (click)=\"onDecline()\"\n              [disabled]=\"selectedNomenclatures?.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              [loading]=\"isPendingConfirm\"\n              (click)=\"onConfirm()\"\n              [disabled]=\"selectedNomenclatures?.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 45%\">Name</th>\n            <th style=\"width: 47%\">Root Items</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"nomenclature\"></p-tableCheckbox>\n            </td>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 45%\">{{nomenclature.name}}</td>\n            <td style=\"width: 47%\">\n              <ng-container *ngFor=\"let parent of nomenclature.parents; let idx = index\">\n                {{parent.name}}<span *ngIf=\"idx !== nomenclature.parents.length - 1\">, </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && nomenclatures.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PaymentService} from '../../../reports/services/payment.service';\nimport {Payment} from '../../../reports/models/payment';\nimport {ServiceInvoicePaymentService} from '../../../reports/services/service-invoice-payment.service';\nimport {ServiceInvoicePayment} from '../../../reports/models/service-invoice-payment';\nimport {ModalService} from '@shared/services/modal.service';\nimport {TreeNode} from 'primeng/api';\nimport {finalize, forkJoin, Subject, takeUntil} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  PaymentConfirmationLimitComponent\n} from '../../modals/payment-confirmation-limit/payment-confirmation-limit.component';\nimport {environment} from '@env/environment.prod';\n\n@Component({\n  selector: 'pek-payment-confirmation',\n  templateUrl: './payment-confirmation.component.html',\n  styleUrls: ['./payment-confirmation.component.scss']\n})\nexport class PaymentConfirmationComponent implements OnInit, OnDestroy {\n  link = environment.link_url + 'dash/';\n\n  paymentTotals = {\n    totalPricePayments: 0,\n    totalPriceServiceInvoicePayments: 0,\n    totalAmountPayments: 0,\n    totalAmountServiceInvoicePayments: 0\n  };\n\n  isPendingPaymentsDecline = false;\n  isPendingPaymentsConfirm = false;\n\n  isPendingServiceInvoicePaymentsDecline = false;\n  isPendingServiceInvoicePaymentsConfirm = false;\n\n  isLoadingPayments = true;\n  payments: Payment[] = [];\n  paymentTree: TreeNode<Payment | { name: string, id: number }>[] = [];\n  selectedPayments: TreeNode<Payment>[] = [];\n\n  isLoadingServiceInvoicePayments = true;\n  serviceInvoicePayments: ServiceInvoicePayment[] = [];\n  serviceInvoicePaymentsTree: TreeNode<ServiceInvoicePayment | { name: string, id: number }>[] = [];\n  selectedServiceInvoicePayments: TreeNode<ServiceInvoicePayment>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly paymentService: PaymentService,\n    private readonly serviceInvoicePaymentService: ServiceInvoicePaymentService,\n    private readonly modalService: ModalService,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    // this.getPayments();\n    this.getAllPayments();\n  }\n\n  getAllPayments() {\n    forkJoin({\n      payments: this.paymentService.getConfirmationPayments(),\n      serviceInvoicePayments: this.serviceInvoicePaymentService.getConfirmationPayments()\n    }).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(({payments, serviceInvoicePayments}) => {\n      this.payments = payments.filter(payment => !payment.invoice.order.purchase_category);\n      // @ts-ignore\n      this.serviceInvoicePayments.push(...payments.filter(payment => payment.invoice.order.purchase_category));\n      this.serviceInvoicePayments.push(...serviceInvoicePayments);\n\n      this.countPaymentsTotals();\n      this.createPaymentsTree();\n\n      this.countServiceInvoicePaymentsTotals();\n      this.createServiceInvoicePaymentsTree();\n\n      this.isLoadingPayments = false;\n      this.isLoadingServiceInvoicePayments = false;\n\n    });\n  }\n\n  createPaymentsTree() {\n    this.paymentTree = [];\n\n    const tree: TreeNode<Payment | { name: string, id: number }>[] = [];\n    const categories: { name: string, id: number }[] = [];\n\n    this.payments.forEach(payment => {\n      if (payment.invoice.order.accounting_type === 1) {\n        const isAdded = categories.findIndex(el => el.id === 1);\n        if (isAdded < 0) {\n          categories.push({name: 'Manufacturing Procurement', id: 1});\n        }\n      }\n      if (payment.invoice.order.accounting_type === 2) {\n        const isAdded = categories.findIndex(el => el.id === 2);\n        if (isAdded < 0) {\n          categories.push({name: 'Outsourcing', id: 2});\n        }\n      }\n    });\n\n    categories.forEach(category => {\n      tree.push({\n        data: category,\n        expanded: true,\n        parent: null,\n        children: []\n      });\n    });\n\n    tree.forEach(node => {\n      this.payments.forEach(payment => {\n        if (payment.invoice.order.accounting_type === node.data.id) {\n          node.children.push({\n            data: payment,\n            expanded: false,\n            children: []\n          });\n        }\n      });\n    });\n\n    this.paymentTree = [...tree];\n  }\n\n  createServiceInvoicePaymentsTree() {\n    this.serviceInvoicePaymentsTree = [];\n\n    const tree: TreeNode<ServiceInvoicePayment | { name: string, id: number }>[] = [];\n    const categories: { name: string, id: number }[] = [];\n    this.serviceInvoicePayments.forEach(payment => {\n      let purchaseCategory = null;\n\n      if (payment.serviceinvoice) {\n        purchaseCategory = payment.serviceinvoice.order.purchase_category;\n      }\n\n      // @ts-ignore\n      if (payment.invoice) {\n        // @ts-ignore\n        purchaseCategory = payment.invoice.order.purchase_category;\n      }\n\n      if (purchaseCategory) {\n        const isAdded = categories.findIndex(el => el.id === purchaseCategory.id);\n        if (isAdded < 0) {\n          categories.push({name: purchaseCategory.name, id: purchaseCategory.id});\n        }\n      } else {\n        const isAdded = categories.findIndex(el => el.id === -2);\n        if (isAdded < 0) {\n          categories.push({name: 'Manufacturing Procurement And Outsourcing Auxiliary Invoices', id: -2});\n        }\n      }\n    });\n\n    categories.forEach(category => {\n      tree.push({\n        data: category,\n        expanded: true,\n        children: [],\n        parent: null\n      });\n    });\n\n    tree.forEach(node => {\n      this.serviceInvoicePayments.forEach(product => {\n        if (product.serviceinvoice) {\n          const purchaseCategory = product.serviceinvoice.order.purchase_category;\n          if (purchaseCategory) {\n            if (purchaseCategory.id === node.data.id) {\n              node.children.push({\n                data: product,\n                expanded: false,\n                children: []\n              });\n            }\n          } else {\n            if (node.data.id === -2) {\n              node.children.push({\n                data: product,\n                expanded: false,\n                children: []\n              });\n            }\n          }\n        }\n\n        // @ts-ignore\n        if (product.invoice) {\n          // @ts-ignore\n          const purchaseCategory = product.invoice.order.purchase_category;\n\n          if (purchaseCategory) {\n            if (purchaseCategory.id === node.data.id) {\n              node.children.push({\n                data: product,\n                expanded: false,\n                children: []\n              });\n            }\n          }\n        }\n      });\n    });\n\n    this.serviceInvoicePaymentsTree = [...tree];\n  }\n\n  countPaymentsTotals() {\n    this.paymentTotals.totalPricePayments = 0;\n    this.paymentTotals.totalAmountPayments = 0;\n\n    this.payments.forEach(payment => {\n      this.paymentTotals.totalPricePayments += payment.invoice_total_price;\n      this.paymentTotals.totalAmountPayments += parseFloat(payment.payment_amount);\n    });\n  }\n\n  countServiceInvoicePaymentsTotals() {\n    this.paymentTotals.totalPriceServiceInvoicePayments = 0;\n    this.paymentTotals.totalAmountServiceInvoicePayments = 0;\n\n    this.serviceInvoicePayments.forEach(payment => {\n      // @ts-ignore\n      this.paymentTotals.totalPriceServiceInvoicePayments += payment.service_invoice_total_price ? payment.service_invoice_total_price : payment.invoice_total_price;\n      // @ts-ignore\n      this.paymentTotals.totalAmountServiceInvoicePayments += payment.service_invoice_payment_amount ? parseFloat(payment.service_invoice_payment_amount) : parseFloat(payment.payment_amount);\n    });\n  }\n\n  onConfirmPayments() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingPaymentsConfirm = true;\n        const ids = this.selectedPayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\n        this.paymentService.severalConfirm(ids).pipe(\n          finalize(() => this.isPendingPaymentsConfirm = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.payments = [...this.payments.filter(p => p.id !== id)]);\n          this.countPaymentsTotals();\n          this.createPaymentsTree();\n          this.selectedPayments = [];\n        });\n      }\n    });\n  }\n\n  onDeclinePayments() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingPaymentsDecline = true;\n        const ids = this.selectedPayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\n        this.paymentService.severalDecline(ids).pipe(\n          finalize(() => this.isPendingPaymentsDecline = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.payments = [...this.payments.filter(p => p.id !== id)]);\n          this.countPaymentsTotals();\n          this.createPaymentsTree();\n          this.selectedPayments = [];\n        });\n      }\n    });\n  }\n\n  onConfirmServiceInvoicePayments() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingServiceInvoicePaymentsConfirm = true;\n\n\n        const serviceInvoicePaymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.serviceinvoice).map(payment => payment.data.id);\n        // @ts-ignore\n        const paymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\n\n        if (paymentIds.length > 0 && serviceInvoicePaymentIds.length > 0) {\n          forkJoin({\n            serviceInvoicePaymentIds: this.serviceInvoicePaymentService.severalConfirm(serviceInvoicePaymentIds),\n            paymentsIds: this.paymentService.severalConfirm(paymentIds)\n          }).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\n          ).subscribe(() => {\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        } else if (serviceInvoicePaymentIds.length > 0 && paymentIds.length === 0) {\n          this.serviceInvoicePaymentService.severalConfirm(serviceInvoicePaymentIds).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\n          ).subscribe(() => {\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        } else if (paymentIds.length > 0 && serviceInvoicePaymentIds.length === 0) {\n          this.paymentService.severalConfirm(paymentIds).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsConfirm = false)\n          ).subscribe(() => {\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        }\n      }\n    });\n  }\n\n  onDeclineServiceInvoicePayments() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingServiceInvoicePaymentsDecline = true;\n\n        const serviceInvoicePaymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.serviceinvoice).map(payment => payment.data.id);\n        // @ts-ignore\n        const paymentIds = this.selectedServiceInvoicePayments.filter(payment => payment.data.invoice).map(payment => payment.data.id);\n\n        if (serviceInvoicePaymentIds.length > 0 && paymentIds.length > 0) {\n          forkJoin({\n            serviceInvoicePaymentIds: this.serviceInvoicePaymentService.severalDecline(serviceInvoicePaymentIds),\n            paymentsIds: this.serviceInvoicePaymentService.severalDecline(paymentIds)\n          }).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\n          ).subscribe(() => {\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        } else if (serviceInvoicePaymentIds.length > 0 && paymentIds.length === 0) {\n          this.serviceInvoicePaymentService.severalDecline(serviceInvoicePaymentIds).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\n          ).subscribe(() => {\n            serviceInvoicePaymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        } else if (paymentIds.length > 0 && serviceInvoicePaymentIds.length === 0) {\n          this.paymentService.severalDecline(paymentIds).pipe(\n            finalize(() => this.isPendingServiceInvoicePaymentsDecline = false)\n          ).subscribe(() => {\n            paymentIds.forEach(id => this.serviceInvoicePayments = [...this.serviceInvoicePayments.filter(p => p.id !== id)]);\n            this.countServiceInvoicePaymentsTotals();\n            this.createServiceInvoicePaymentsTree();\n            this.selectedServiceInvoicePayments = [];\n          });\n        }\n      }\n    });\n  }\n\n  onEditConfirmationLimit() {\n    return this.dialog\n      .open<PaymentConfirmationLimitComponent>(PaymentConfirmationLimitComponent, {\n        width: '30rem',\n        height: 'auto',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  // TODO пофиксить\n\n  onGoToPaymentInvoice(payment: Payment) {\n    window.open(`${this.link}accounting/invoices/products/` + payment.invoice.id);\n  }\n\n  onGoToPaymentServiceInvoice(payment: Payment) {\n    window.open(`${this.link}accounting/invoices/service-invoice/` + payment.invoice.id);\n  }\n\n  onGoToServicePaymentInvoice(servicePayment: ServiceInvoicePayment) {\n    window.open(`${this.link}accounting/invoices/service-invoice/` +  servicePayment.serviceinvoice.id);\n  }\n\n  onGoToPaymentOrder(payment: Payment) {\n    let link = '';\n\n    if (payment.invoice.order.accounting_type === 1) {\n      link = `${this.link}procurement/orders/products/` + payment.invoice.order.id;\n    } else if (payment.invoice.order.accounting_type === 2) {\n      link = `${this.link}outsource/outsource-chain/products/` + payment.invoice.order.id;\n    }\n\n    window.open(link);\n  }\n\n  onGoToServiceOrder(servicePayment: ServiceInvoicePayment) {\n    let link = '';\n\n    if (servicePayment.serviceinvoice.order.accounting_type === 1) {\n      link = `${this.link}procurement/orders/products/` + servicePayment.serviceinvoice.order.id;\n    } else if (servicePayment.serviceinvoice.order.accounting_type === 2) {\n      link = `${this.link}outsource/outsource-chain/products/` + servicePayment.serviceinvoice.order.id;\n    }\n\n    window.open(link);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Payments Confirmation</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button\n        pButton\n        type=\"button\"\n        icon=\"pi pi-pencil\"\n        label=\"Payment Confirmation Limit\"\n        (click)=\"onEditConfirmationLimit()\">\n      </button>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"page__content\">\n  <div class=\"page__tabs\">\n    <p-tabView class=\"custom-tabs\">\n      <p-tabPanel\n        [header]=\"'Production Lists Procurement and Outsourcing Payments (' + (isLoadingPayments ? '...' : payments.length) + ')'\"\n        [selected]=\"true\"\n      >\n        <div class=\"page__table\">\n          <p-treeTable\n            selectionMode=\"checkbox\"\n            [value]=\"paymentTree\"\n            [(selection)]=\"selectedPayments\"\n            scrollHeight=\"calc(100vh - 21.8rem)\"\n            [scrollable]=\"true\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"payment-price\">\n                  <ng-container *ngIf=\"!isLoadingPayments; else paymentsEmpty\">\n                    Total Price: {{paymentTotals.totalPricePayments | moneyFormat}} €,\n                    Total Amount: {{paymentTotals.totalAmountPayments | moneyFormat}} €\n                  </ng-container>\n                </div>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-times\"\n                  label=\"Decline\"\n                  class=\"ml-auto p-button-danger p-button-icon mr-2\"\n                  [disabled]=\"selectedPayments?.length === 0\"\n                  [loading]=\"isPendingPaymentsDecline\"\n                  (click)=\"onDeclinePayments()\"\n                ></button>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-check\"\n                  label=\"Confirm\"\n                  class=\"p-button-success p-button-icon\"\n                  [disabled]=\"selectedPayments?.length === 0\"\n                  [loading]=\"isPendingPaymentsConfirm\"\n                  (click)=\"onConfirmPayments()\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 22%\">\n                  <div class=\"payment-header\">\n                    <div class=\"payment-header-checkbox\">\n                      <p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\n                    </div>\n                    Date\n                  </div>\n                </th>\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\n                <th style=\"width: 18%\">Supplier</th>\n                <th style=\"width: 20%\">Root list</th>\n                <th style=\"width: 10%\" class=\"text-center\">Invoice Total Price</th>\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-paymentNode let-payment=\"rowData\" let-i=\"rowIndex\">\n              <tr>\n                <td style=\"width: 22%\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"table-toggler\" *ngIf=\"!payment.invoice\">\n                      <p-treeTableToggler [rowNode]=\"paymentNode\"></p-treeTableToggler>\n                    </div>\n\n                    <div class=\"table-checkbox\" *ngIf=\"payment.invoice\">\n                      <p-treeTableCheckbox [value]=\"paymentNode\"></p-treeTableCheckbox>\n                    </div>\n\n                    <div class=\"table-content\">\n                      <ng-container *ngIf=\"!payment.invoice; else paymentDate\">\n                        {{payment.name}}\n                      </ng-container>\n                    </div>\n\n                    <ng-template #paymentDate>\n                      {{payment.invoice.system_creation_date | date:'dd/MM/yyyy'}}\n                    </ng-template>\n                  </div>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.invoice\">\n<!--                    <a-->\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/products/' + payment.invoice.id]\"-->\n<!--                      target=\"_blank\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.self_serial_number}}-->\n<!--                    </a>-->\n\n                    <a\n                      (click)=\"onGoToPaymentInvoice(payment)\"\n                    >\n                      {{payment.invoice.self_serial_number}}\n                    </a>\n                  </ng-container>\n                </td>\n                <td style=\"width: 18%\">\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.invoice.supplier.name}}\n                  </ng-container>\n                </td>\n                <td style=\"width: 20%\">\n                  <ng-container>\n                    <div *ngIf=\"payment.invoice\">\n                      <ng-container *ngFor=\"let rootList of payment.invoice.root_production_plans; let idx = index\">\n                        {{rootList.list_product.nomenclature.name}}<span *ngIf=\"idx !== payment.invoice.root_production_plans.length - 1\">,</span>\n                      </ng-container>\n                    </div>\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.invoice_total_price | moneyFormat}} €\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.payment_amount| moneyFormat}} €\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.invoice\">\n<!--                    <a-->\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 1\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.invoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.order.id}}-->\n<!--                    </a>-->\n<!--                    <a-->\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 2\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' + payment.invoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.order.id}}-->\n<!--                    </a>-->\n\n                    <a\n                      (click)=\"onGoToPaymentOrder(payment)\"\n                    >\n                      {{payment.invoice.order.id}}\n                    </a>\n                  </ng-container>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                  <i *ngIf=\"isLoadingPayments\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                  <span *ngIf=\"!isLoadingPayments\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel\n        [header]=\"'General Procurement Payments (' + (isLoadingServiceInvoicePayments ? '...' : serviceInvoicePayments.length) + ')'\"\n      >\n        <div class=\"page__table\">\n          <p-treeTable\n            selectionMode=\"checkbox\"\n            [value]=\"serviceInvoicePaymentsTree\"\n            [(selection)]=\"selectedServiceInvoicePayments\"\n            scrollHeight=\"calc(100vh - 21.8rem)\"\n            [scrollable]=\"true\"\n          >\n            <ng-template pTemplate=\"caption\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"payment-price\">\n                  <ng-container *ngIf=\"!isLoadingServiceInvoicePayments; else paymentsEmpty\">\n                    Total Price: {{paymentTotals.totalPriceServiceInvoicePayments | moneyFormat}} €,\n                    Total Amount: {{paymentTotals.totalAmountServiceInvoicePayments | moneyFormat}} €\n                  </ng-container>\n                </div>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-times\"\n                  label=\"Decline\"\n                  class=\"ml-auto p-button-danger p-button-icon mr-2\"\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\n                  [loading]=\"isPendingServiceInvoicePaymentsDecline\"\n                  (click)=\"onDeclineServiceInvoicePayments()\"\n                ></button>\n                <button\n                  pButton\n                  type=\"button\"\n                  icon=\"pi pi-check\"\n                  label=\"Confirm\"\n                  class=\"p-button-success p-button-icon\"\n                  [disabled]=\"selectedServiceInvoicePayments?.length === 0\"\n                  [loading]=\"isPendingServiceInvoicePaymentsConfirm\"\n                  (click)=\"onConfirmServiceInvoicePayments()\"\n                ></button>\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n              <tr>\n                <th style=\"width: 22%\">\n                  <div class=\"payment-header\">\n                    <div class=\"payment-header-checkbox\">\n                      <p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\n                    </div>\n                    Date\n                  </div>\n                </th>\n                <th style=\"width: 10%\" class=\"text-center\">Invoice</th>\n                <th style=\"width: 18%\">Supplier</th>\n                <th style=\"width: 20%\">Root list</th>\n                <th style=\"width: 10%\" class=\"text-center\">Invoice Total Price</th>\n                <th style=\"width: 10%\" class=\"text-center\">Amount</th>\n                <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-paymentNode let-payment=\"rowData\" let-i=\"rowIndex\">\n              <tr>\n                <td style=\"width: 22%\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"table-toggler\" *ngIf=\"!payment.serviceinvoice && !payment.invoice\">\n                      <p-treeTableToggler [rowNode]=\"paymentNode\"></p-treeTableToggler>\n                    </div>\n\n                    <div class=\"table-checkbox\" *ngIf=\"payment.serviceinvoice || payment.invoice\">\n                      <p-treeTableCheckbox [value]=\"paymentNode\"></p-treeTableCheckbox>\n                    </div>\n\n                    <div class=\"table-content\">\n                      <ng-container *ngIf=\"!payment.serviceinvoice || !payment.invoice\">\n                        {{payment.name}}\n                      </ng-container>\n\n                      <ng-container *ngIf=\"payment.invoice\">\n                        {{payment.invoice.system_creation_date | date:'dd/MM/yyyy'}}\n                      </ng-container>\n\n                      <ng-container *ngIf=\"payment.serviceinvoice\">\n                        {{payment.serviceinvoice.system_creation_date | date:'dd/MM/yyyy'}}\n                      </ng-container>\n                    </div>\n                  </div>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.serviceinvoice || payment.invoice\">\n<!--                    <a-->\n<!--                      *ngIf=\"payment.serviceinvoice\"-->\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/service-invoice/' + payment.serviceinvoice.id]\"-->\n<!--                      target=\"_blank\"-->\n<!--                    >-->\n<!--                      {{payment.serviceinvoice.self_serial_number}}-->\n<!--                    </a>-->\n\n<!--                    <a-->\n<!--                      *ngIf=\"payment.invoice\"-->\n<!--                      [routerLink]=\"['/external', link + 'accounting/invoices/service-invoice/' + payment.invoice.id]\"-->\n<!--                      target=\"_blank\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.self_serial_number}}-->\n<!--                    </a>-->\n\n                    <a\n                      *ngIf=\"payment.serviceinvoice\"\n                      (click)=\"onGoToServicePaymentInvoice(payment)\"\n                    >\n                      {{payment.serviceinvoice.self_serial_number}}\n                    </a>\n\n                    <a\n                      *ngIf=\"payment.invoice\"\n                      (click)=\"onGoToPaymentServiceInvoice(payment)\"\n                    >\n                      {{payment.invoice.self_serial_number}}\n                    </a>\n                  </ng-container>\n                </td>\n                <td style=\"width: 18%\">\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\n                    {{payment.serviceinvoice.supplier.name}}\n                  </ng-container>\n\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.invoice.supplier.name}}\n                  </ng-container>\n                </td>\n                <td style=\"width: 20%\">\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\n                    <div *ngFor=\"let rootList of payment.serviceinvoice.root_production_plans; let idx = index\">\n                      {{rootList.list_product.nomenclature.name}}\n                      <span *ngIf=\"idx !== payment.serviceinvoice.root_production_plans.length - 1\">,</span>\n                    </div>\n                  </ng-container>\n\n                  <ng-container *ngIf=\"payment.invoice\">\n                    <ng-container *ngFor=\"let rootList of payment.invoice.root_production_plans; let idx = index\">\n                      {{rootList.list_product.nomenclature.name}}<span *ngIf=\"idx !== payment.invoice.root_production_plans.length - 1\">,</span>\n                    </ng-container>\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\n                    {{payment.service_invoice_total_price | moneyFormat}} €\n                  </ng-container>\n\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.invoice_total_price | moneyFormat}} €\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\n                    {{payment.service_invoice_payment_amount | moneyFormat}} €\n                  </ng-container>\n\n                  <ng-container *ngIf=\"payment.invoice\">\n                    {{payment.payment_amount | moneyFormat}} €\n                  </ng-container>\n                </td>\n                <td style=\"width: 10%\" class=\"text-center\">\n                  <ng-container *ngIf=\"payment.serviceinvoice\">\n<!--                    <a-->\n<!--                      *ngIf=\"payment.serviceinvoice.order.accounting_type == 1\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.serviceinvoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.serviceinvoice.order.id}}-->\n<!--                    </a>-->\n<!--                    <a-->\n<!--                      *ngIf=\"payment.serviceinvoice.order.accounting_type == 2\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' + payment.serviceinvoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.serviceinvoice.order.id}}-->\n<!--                    </a>-->\n\n                    <a\n                      (click)=\"onGoToServiceOrder(payment)\"\n                    >\n                      {{payment.serviceinvoice.order.id}}\n                    </a>\n                  </ng-container>\n\n                  <ng-container *ngIf=\"payment.invoice\">\n<!--                    <a-->\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 1\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'procurement/orders/products/' + payment.invoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.order.id}}-->\n<!--                    </a>-->\n<!--                    <a-->\n<!--                      *ngIf=\"payment.invoice.order.accounting_type == 2\"-->\n<!--                      rel=\"noopener noreferrer\"-->\n<!--                      target=\"_blank\"-->\n<!--                      [routerLink]=\"['/external', link + 'outsource/outsource-chain/products/' +  payment.invoice.order.id]\"-->\n<!--                    >-->\n<!--                      {{payment.invoice.order.id}}-->\n<!--                    </a>-->\n\n                    <a\n                      (click)=\"onGoToPaymentOrder(payment)\"\n                    >\n                      {{payment.invoice.order.id}}\n                    </a>\n                  </ng-container>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                  <i\n                    *ngIf=\"isLoadingServiceInvoicePayments\"\n                    class=\"pi pi-spin pi-spinner\"\n                    style=\"font-size: 2.25rem\"\n                  >\n                  </i>\n                  <span *ngIf=\"!isLoadingServiceInvoicePayments\">No Records Found</span>\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n\n<ng-template #paymentsEmpty>\n  <ng-container>\n    Total Price: ... €, Total Amount: ... €\n  </ng-container>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {List} from '../../../warehouse/models/list';\nimport {ListService} from '../../../warehouse/services/list.service';\nimport {concat, finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-production-list-confirmation',\n  templateUrl: './production-list-confirmation.component.html',\n  styleUrls: ['./production-list-confirmation.component.scss']\n})\nexport class ProductionListConfirmationComponent implements OnInit, OnDestroy  {\n  isLoading = true;\n  productionLists: List[] = [];\n  selectedProductionLists: List[] = [];\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly modalService: ModalService,\n    private readonly listService: ListService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProductionLists();\n  }\n\n  getProductionLists() {\n    this.listService.getProductionLists().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(productionLists => {\n      this.productionLists = productionLists;\n      this.isLoading = false;\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const confirmProductionLists = [];\n\n        this.selectedProductionLists.forEach(productionList => {\n          confirmProductionLists.push({\n            id: productionList.id,\n            is_confirmed: true,\n          });\n        });\n\n        confirmProductionLists.sort((a, b) => a.id - b.id);\n\n        this.listService.updateListSeveral(confirmProductionLists).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          confirmProductionLists.forEach(productionList => {\n            this.productionLists = [...this.productionLists.filter(p => p.id !== productionList.id)];\n          });\n\n          this.selectedProductionLists = [];\n        });\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const declineProductionLists = [];\n\n        this.selectedProductionLists.forEach(productionList => {\n          declineProductionLists.push({\n            id: productionList.id,\n            is_confirmed: false,\n          });\n        });\n\n        declineProductionLists.sort((a, b) => a.id - b.id);\n\n       this.listService.updateListSeveral(declineProductionLists).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(response => {\n          declineProductionLists.forEach(productionList => {\n            if (response) {\n              this.productionLists = [...this.productionLists.filter(p => p.id !== productionList.id)];\n            }\n          });\n\n          this.selectedProductionLists = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Production Lists Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"productionLists.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedProductionLists\"\n        [value]=\"productionLists\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"selectedProductionLists.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"selectedProductionLists.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Code</th>\n            <th style=\"width: 27%\">Name</th>\n            <th style=\"width: 15%\" class=\"text-center\">Quantity</th>\n            <th style=\"width: 20%\" class=\"text-center\">Is Grouped</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-list let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"list\"></p-tableCheckbox>\n            </td>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{list.nomenclature.code}}</td>\n            <td style=\"width: 27%\">{{list.nomenclature.name}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{list.quantity}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">\n              <div class=\"icons\">\n                <i *ngIf=\"list.is_grouped; else notGrouped\" class=\"pi pi-check-circle success\"></i>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && productionLists.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n\n<ng-template #notGrouped>\n  <i class=\"pi pi-times-circle danger\"></i>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ENomenclatureBulk} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-reservation-confirmation',\n  templateUrl: './reservation-confirmation.component.html',\n  styleUrls: ['./reservation-confirmation.component.scss']\n})\nexport class ReservationConfirmationComponent implements OnInit, OnDestroy {\n  nomenclatureBulk = ENomenclatureBulk;\n\n  isLoading = true;\n  selectedProducts: WarehouseProduct[] = [];\n  products: WarehouseProduct[] = [];\n\n  isPendingDecline = false;\n  isPendingConfirm = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseProductsService: WarehouseProductService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.warehouseProductsService.getReservations().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(products => {\n      this.products = products;\n      this.isLoading = false;\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const ids: number[] = this.selectedProducts.map(p => p.id);\n        const send: { is_confirmed: boolean } = {\n          is_confirmed: false,\n        };\n\n        this.warehouseProductsService.severalUpdateReservations(ids, send).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.products = [...this.products.filter(product => product.id !== id)]);\n          this.selectedProducts = [];\n        });\n      }\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const ids: number[] = this.selectedProducts.map(p => p.id);\n        const send: { is_confirmed: boolean } = {\n          is_confirmed: true,\n        };\n\n        this.warehouseProductsService.severalUpdateReservations(ids, send).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.products = [...this.products.filter(product => product.id !== id)]);\n          this.selectedProducts = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Reservations Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"products.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedProducts\"\n        [value]=\"products\"\n        dataKey=\"id\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"selectedProducts?.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"selectedProducts?.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 15%\">Code</th>\n            <th style=\"width: 15%\">Name</th>\n            <th style=\"width: 10%\" class=\"text-center\">Serial Number</th>\n            <th style=\"width: 15%\" class=\"text-center\">Created</th>\n            <th style=\"width: 10%\" class=\"text-center\">List Id</th>\n            <th style=\"width: 15%\" class=\"text-center\">Required Quantity</th>\n            <th style=\"width: 12%\" class=\"text-center\">Reserved Quantity</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\n            </td>\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 15%\">{{product.listproduct.nomenclature.code}}</td>\n            <td style=\"width: 15%\">\n              <b *ngIf=\"product.listproduct.nomenclature.bulk_or_serial === nomenclatureBulk.SERIAL\">(S)</b>\n              {{product.listproduct.nomenclature.name}}\n            </td>\n            <td style=\"width: 10%\" class=\"text-center\">{{product.serialnumber}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{product.created | date: 'dd/MM/y'}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{product?.list?.id}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{product.listproduct.required_quantity}}</td>\n            <td style=\"width: 12%\" class=\"text-center\">{{product.reserved_quantity}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"9\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && products.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {EOrderSupplierConfirmStatus, OrderSupplier, OrderSupplierConfirmation} from '../../models/order-supplier';\nimport {OrderSupplierService} from '../../services/order-supplier.service';\nimport {ListProduct} from '../../../warehouse/models/list-product';\nimport {ModalService} from '@shared/services/modal.service';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-supplier-confirmation',\n  templateUrl: './supplier-confirmation.component.html',\n  styleUrls: ['./supplier-confirmation.component.scss']\n})\nexport class SupplierConfirmationComponent implements OnInit {\n  orderSupplierConfirmStatus = EOrderSupplierConfirmStatus;\n\n  selectedOrder: OrderSupplierConfirmation;\n\n  selectedOrderSupplierConfirmation: OrderSupplierConfirmation;\n  selectedOrderSupplier: OrderSupplier;\n\n  orderSupplierConfirmations: OrderSupplierConfirmation[] = [];\n  orderSuppliers: OrderSupplier[] = [];\n\n  isLoading = true;\n  isLoadingOrderSuppliers = false;\n\n  isPendingConfirm = false;\n  isPendingDecline = false;\n  isPendingDeclineAll = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly orderSupplierService: OrderSupplierService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getConfirmations();\n  }\n\n  getConfirmations() {\n    this.orderSupplierService.getConfirmations().pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(confirmations => {\n      this.orderSupplierConfirmations = confirmations;\n      this.isLoading = false;\n    });\n  }\n\n  getRootLists(rootLists: ListProduct[]): { list: ListProduct, count?: number }[] {\n    const lists: { list: ListProduct, count?: number }[] = [];\n\n    rootLists.forEach((res: ListProduct) => {\n      const found = lists.find(el => el.list.nomenclature.name === res.nomenclature.name);\n\n      if (found) {\n        found.count++;\n      } else {\n        lists.push({list: res, count: 1});\n      }\n    });\n\n    return lists;\n  }\n\n  getConfirmStatus(status: EOrderSupplierConfirmStatus) {\n    switch (status) {\n      case EOrderSupplierConfirmStatus.UNTACHED:\n        return 'Untached';\n      case EOrderSupplierConfirmStatus.DECLINED:\n        return 'Declined';\n      case EOrderSupplierConfirmStatus.CONFIRMED:\n        return 'Confirmed';\n    }\n  }\n\n  getOrderSuppliers() {\n    this.orderSuppliers = [];\n    this.isLoadingOrderSuppliers = true;\n    this.orderSupplierService.getOrderSuppliers(this.selectedOrder.id).pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(orderSuppliers => {\n      this.orderSuppliers = orderSuppliers;\n      this.isLoadingOrderSuppliers = false;\n    });\n  }\n\n  onSelectOrder() {\n    if (this.selectedOrderSupplierConfirmation) {\n      this.selectedOrder = this.selectedOrderSupplierConfirmation;\n      this.getOrderSuppliers();\n    } else {\n      this.orderSuppliers = [];\n      this.selectedOrder = null;\n    }\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        this.orderSupplierService.confirmOrderSupplier(this.selectedOrderSupplier.id)\n          .pipe(\n            finalize(() => this.isPendingConfirm = false)\n          ).subscribe(() => this.clear());\n      }\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        this.orderSupplierService.declineOrderSupplier(this.selectedOrderSupplier.id)\n          .pipe(\n            finalize(() => this.isPendingDecline = false)\n          ).subscribe(() => {\n          const index = this.orderSuppliers.findIndex(c => c.id === this.selectedOrderSupplier.id);\n          this.orderSuppliers[index].confirm_status = EOrderSupplierConfirmStatus.DECLINED;\n          this.selectedOrderSupplier = null;\n\n          if (this.orderSuppliers.every(item => item.confirm_status === EOrderSupplierConfirmStatus.DECLINED)) {\n            this.declineAll();\n          }\n        });\n      }\n    });\n  }\n\n  onDeclineAll() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.declineAll();\n      }\n    });\n  }\n\n  declineAll() {\n    this.isPendingDeclineAll = true;\n    this.orderSupplierService.declineAll(this.selectedOrderSupplierConfirmation.id)\n      .pipe(\n        finalize(() => this.isPendingDeclineAll = false)\n      ).subscribe(() => this.clear());\n  }\n\n  clear() {\n    this.orderSupplierConfirmations = [...this.orderSupplierConfirmations.filter(o => o.id !== this.selectedOrderSupplierConfirmation.id)];\n    this.orderSuppliers = [];\n    this.selectedOrder = null;\n    this.selectedOrderSupplier = null;\n    this.selectedOrderSupplierConfirmation = null;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Suppliers Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <h2 class=\"page__caption\">Suppliers Confirmation Orders</h2>\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 21.75rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orderSupplierConfirmations.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedOrderSupplierConfirmation\"\n        [value]=\"orderSupplierConfirmations\"\n        (selectionChange)=\"onSelectOrder()\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"text-center\">#</th>\n            <th style=\"width: 60%\">Order</th>\n            <th style=\"width: 35%\">Root Lists</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-confirmation let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"confirmation \">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 60%\">\n              <a\n                target=\"_blank\"\n                [routerLink]=\"'/dash/outsource/outsource-chain/products/' + confirmation.order.id\"\n              >\n                {{confirmation.order.id}}\n              </a>\n            </td>\n            <td>\n              <div\n                *ngFor=\"let item of getRootLists(confirmation.order.root_production_list_products); let idx = index\">\n                {{item.list.nomenclature.code}}~{{item.list.nomenclature.name}} ({{item.count}})\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && orderSupplierConfirmations.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n\n  <div class=\"page__card page__card_bottom\">\n\n    <div class=\"page__table\">\n      <p-table\n        #st\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 20.875rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"orderSuppliers.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedOrderSupplier\"\n        [value]=\"orderSuppliers\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <h2 class=\"page__caption mb-0\">Suppliers Confirmation Items For Order {{selectedOrder ? selectedOrder.order.id : '...'}}</h2>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline All\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDeclineAll()\"\n              [loading]=\"isPendingDeclineAll\"\n              [disabled]=\"!selectedOrderSupplierConfirmation\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"!selectedOrderSupplier || !selectedOrderSupplierConfirmation || selectedOrderSupplier?.confirm_status === orderSupplierConfirmStatus.DECLINED\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"!selectedOrderSupplier || !selectedOrderSupplierConfirmation\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\n            <th style=\"width: 30%\">Supplier</th>\n            <th style=\"width: 10%\" class=\"text-center\">Price</th>\n            <th style=\"width: 15%\" class=\"text-center\">Delivery Date</th>\n            <th style=\"width: 30%\">Comment</th>\n            <th style=\"width: 10%\" class=\"text-center\">Confirm Status</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-orderSupplier let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"orderSupplier\">\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{orderSupplier.supplier}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{orderSupplier.price | moneyFormat}} €</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{orderSupplier.delivery_date | date: 'dd/MM/yyyy'}}</td>\n            <td style=\"width: 30%\" class=\"text-center\">{{orderSupplier.comment}}</td>\n            <td style=\"width: 10%\" class=\"text-center\">{{getConfirmStatus(orderSupplier.confirm_status)}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoadingOrderSuppliers\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoadingOrderSuppliers\">Select An Order</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"st.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!st.paginator && !isLoadingOrderSuppliers && orderSuppliers.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"st.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureApproval, Nomenclature} from '@shared/models/nomenclature';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-write-off-confirmation',\n  templateUrl: './write-off-confirmation.component.html',\n  styleUrls: ['./write-off-confirmation.component.scss']\n})\nexport class WriteOffConfirmationComponent implements OnInit, OnDestroy {\n  warehouseProducts: WarehouseProduct[] = [];\n  selectedWarehouseProducts: WarehouseProduct[] = [];\n  isLoading = true;\n\n  isPendingConfirm: boolean = false;\n  isPendingDecline: boolean = false;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseProductService: WarehouseProductService,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.warehouseProductService.get([{name: 'to_write_off', value: true}]).pipe(\n      takeUntil(this.destroy$),\n    ).subscribe(warehouseProducts => {\n      this.warehouseProducts = warehouseProducts;\n      this.isLoading = false;\n    });\n  }\n\n  onDecline() {\n    this.modalService.confirm('danger', 'Decline').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingDecline = true;\n        const declineNomenclatures: Partial<Nomenclature>[] = [];\n\n        this.selectedWarehouseProducts.forEach(product => {\n          declineNomenclatures.push({\n            id: product.id,\n            approved: ENomenclatureApproval.DECLINED\n          });\n        });\n\n        this.nomenclatureService.updateSeveralPartly(declineNomenclatures).pipe(\n          finalize(() => this.isPendingDecline = false)\n        ).subscribe(() => {\n          declineNomenclatures.forEach(nomenclature => {\n            this.warehouseProducts = [...this.warehouseProducts.filter(product => product.id !== nomenclature.id)];\n          });\n\n          this.selectedWarehouseProducts = [];\n        });\n      }\n    });\n  }\n\n  onConfirm() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.isPendingConfirm = true;\n        const ids: number[] = [];\n\n        this.selectedWarehouseProducts.forEach(product => ids.push(product.id));\n\n        this.warehouseProductService.severalWriteOff(ids).pipe(\n          finalize(() => this.isPendingConfirm = false)\n        ).subscribe(() => {\n          ids.forEach(id => this.warehouseProducts = [...this.warehouseProducts.filter(product => product.id !== id)]);\n          this.selectedWarehouseProducts = [];\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'confirmation'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Write Off Confirmation</h1>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.65rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"warehouseProducts.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedWarehouseProducts\"\n        [value]=\"warehouseProducts\"\n        dataKey=\"id\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex align-items-center\">\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-times\"\n              label=\"Decline\"\n              class=\"ml-auto p-button-danger p-button-icon mr-2\"\n              (click)=\"onDecline()\"\n              [loading]=\"isPendingDecline\"\n              [disabled]=\"selectedWarehouseProducts?.length === 0\"\n            ></button>\n            <button\n              pButton\n              type=\"button\"\n              icon=\"pi pi-check\"\n              label=\"Confirm\"\n              class=\"p-button-success p-button-icon\"\n              (click)=\"onConfirm()\"\n              [loading]=\"isPendingConfirm\"\n              [disabled]=\"selectedWarehouseProducts?.length === 0\"\n            ></button>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 3%\">\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th class=\"text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Code</th>\n            <th style=\"width: 27%\">Name</th>\n            <th style=\"width: 15%\"  class=\"text-center\">Quantity</th>\n            <th style=\"width: 20%\"  class=\"text-center\">Write Off Quantity</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\n          <tr>\n            <td style=\"width: 3%\">\n              <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\n            </td>\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{product.nomenclature.code}}</td>\n            <td style=\"width: 27%\">{{product.nomenclature.name}}</td>\n            <td style=\"width: 15%\" class=\"text-center\">{{product.total_area_locator_quantity}}</td>\n            <td style=\"width: 20%\" class=\"text-center\">{{product.quantity_to_write_off}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && warehouseProducts.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfirmationRouting } from './confirmation.routing';\nimport { NomenclatureConfirmationComponent } from './components/nomenclature-confirmation/nomenclature-confirmation.component';\nimport {SharedModule} from '@shared/shared.module';\nimport { PaymentConfirmationComponent } from './components/payment-confirmation/payment-confirmation.component';\nimport { ConfirmationLayoutComponent } from './components/confirmation-layout/confirmation-layout.component';\nimport {LayoutModule} from '../layout/layout.module';\nimport { WriteOffConfirmationComponent } from './components/write-off-confirmation/write-off-confirmation.component';\nimport { ProductionListConfirmationComponent } from './components/production-list-confirmation/production-list-confirmation.component';\nimport { SupplierConfirmationComponent } from './components/supplier-confirmation/supplier-confirmation.component';\nimport { ReservationConfirmationComponent } from './components/reservation-confirmation/reservation-confirmation.component';\nimport { PaymentConfirmationLimitComponent } from './modals/payment-confirmation-limit/payment-confirmation-limit.component';\n\n@NgModule({\n  declarations: [\n    NomenclatureConfirmationComponent,\n    PaymentConfirmationComponent,\n    ConfirmationLayoutComponent,\n    WriteOffConfirmationComponent,\n    ProductionListConfirmationComponent,\n    SupplierConfirmationComponent,\n    ReservationConfirmationComponent,\n    PaymentConfirmationLimitComponent,\n  ],\n  imports: [\n    CommonModule,\n    ConfirmationRouting,\n    SharedModule,\n    LayoutModule,\n  ]\n})\nexport class ConfirmationModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  NomenclatureConfirmationComponent\n} from './components/nomenclature-confirmation/nomenclature-confirmation.component';\nimport {PaymentConfirmationComponent} from './components/payment-confirmation/payment-confirmation.component';\nimport {ConfirmationLayoutComponent} from './components/confirmation-layout/confirmation-layout.component';\nimport {WriteOffConfirmationComponent} from './components/write-off-confirmation/write-off-confirmation.component';\nimport {\n  ProductionListConfirmationComponent\n} from './components/production-list-confirmation/production-list-confirmation.component';\nimport {SupplierConfirmationComponent} from './components/supplier-confirmation/supplier-confirmation.component';\nimport {\n  ReservationConfirmationComponent\n} from './components/reservation-confirmation/reservation-confirmation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmationLayoutComponent, children: [\n      {path: '', redirectTo: 'nomenclature', pathMatch: 'full'},\n      {path: 'nomenclature', title: 'Nomenclature Confirmation', component: NomenclatureConfirmationComponent},\n      {path: 'payments', title: 'Payments Confirmation', component: PaymentConfirmationComponent},\n      {path: 'write-off', title: 'Write Off Confirmation', component: WriteOffConfirmationComponent},\n      {path: 'production-lists', title: 'Production Lists Confirmation', component: ProductionListConfirmationComponent},\n      {path: 'suppliers', title: 'Suppliers Confirmation', component: SupplierConfirmationComponent},\n      {path: 'reservations', title: 'Reservations Confirmation', component: ReservationConfirmationComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfirmationRouting { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PaymentService} from '../../../reports/services/payment.service';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {finalize, Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-payment-confirmation-limit',\n  templateUrl: './payment-confirmation-limit.component.html',\n  styleUrls: ['./payment-confirmation-limit.component.scss']\n})\nexport class PaymentConfirmationLimitComponent implements OnInit, OnDestroy {\n  isSaving = false;\n  isLoading = true;\n\n  form: FormGroup = this.fb.group({\n    id: [null],\n    value: [0, [Validators.required, Validators.min(0)]],\n  });\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<PaymentConfirmationLimitComponent>,\n    private readonly fb: FormBuilder,\n    private readonly paymentService: PaymentService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getLimit();\n  }\n\n  getLimit() {\n    this.paymentService.getLimit().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(response => {\n      const data = {\n        id: response[0].id,\n        value: +response[0].value,\n      };\n\n      this.form.patchValue(data);\n      this.isLoading = false;\n    });\n  }\n\n  onSave() {\n    this.isSaving = true;\n    this.paymentService.setLimit(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(() => this.dialogRef.close());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Payment Confirmation Limit\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"limit\">Limit*</label>\n      <input\n        *ngIf=\"!isLoading; else spinner\"\n        type=\"number\"\n        step=\"0.001\"\n        id=\"limit\"\n        pInputText\n        formControlName=\"value\"\n      >\n    </div>\n  </form>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Save'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {ListProduct} from '../../warehouse/models/list-product';\r\n\r\nexport class OrderSupplier {\r\n  confirm_status: EOrderSupplierConfirmStatus;\r\n  delivery_date: string | Date;\r\n  id: number;\r\n  list: number;\r\n  price: string | number;\r\n  supplier: string;\r\n  comment: string;\r\n}\r\n\r\nexport class OrderSupplierConfirmation {\r\n  id: number;\r\n  sent_to_confirmation: boolean;\r\n  order: {\r\n    id: number;\r\n    root_production_list_products: ListProduct[]\r\n  };\r\n}\r\n\r\nexport enum EOrderSupplierConfirmStatus {\r\n  UNTACHED = 0,\r\n  DECLINED = 1,\r\n  CONFIRMED = 2\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrderSupplier, OrderSupplierConfirmation} from '../models/order-supplier';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderSupplierService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'order_supplier_confirmation/';\n  readonly orderSupplierUrl = 'order_supplier_confirmation_list_item/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getConfirmations(): Observable<OrderSupplierConfirmation[]> {\n    return this.httpClient.get<{ data: OrderSupplierConfirmation[] }>(this.API_URL + `${this.url}?sent_to_confirmation=true`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getOrderSuppliers(orderId: number): Observable<OrderSupplier[]> {\n    return this.httpClient.get<{ data: OrderSupplier[] }>(this.API_URL + `${this.orderSupplierUrl}?list_id=${orderId}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  declineOrderSupplier(orderId: number): Observable<OrderSupplier> {\n    return this.httpClient.post<{ data: OrderSupplier }>(this.API_URL + `${this.orderSupplierUrl}${orderId}/decline_supplier/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  confirmOrderSupplier(orderId: number): Observable<OrderSupplier> {\n    return this.httpClient.post<{ data: OrderSupplier }>(this.API_URL + `${this.orderSupplierUrl}${orderId}/confirm_supplier/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  declineAll(id: number): Observable<any> {\n    return this.httpClient.post<{ data: OrderSupplierConfirmation[] }>(this.API_URL + `${this.url}${id}/decline_all_suppliers/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {EventsListService} from '../../services/events-list.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {finalize} from 'rxjs';\nimport {EventItem} from '../../models/event-item';\n\n@Component({\n  selector: 'pek-add-company-to-event',\n  templateUrl: './add-company-to-event.component.html',\n  styleUrls: ['./add-company-to-event.component.scss']\n})\nexport class AddCompanyToEventComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    company_id: [null, Validators.required],\n    comment: [null],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<AddCompanyToEventComponent>,\n    @Inject(MAT_DIALOG_DATA) private eventId: number,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    this.eventListService.addCompany(this.eventId, [this.form.value as Partial<EventItem>]).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(event => {\n      this.dialogRef.close(event);\n    });\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('company_id').patchValue(id as any);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Company to Event\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Company*</label>\n      <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\">Comment</label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventsListService} from '../../services/events-list.service';\nimport {EventItem} from '../../models/event-item';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-add-contact-person-to-event',\n  templateUrl: './add-contact-person-to-event.component.html',\n  styleUrls: ['./add-contact-person-to-event.component.scss']\n})\nexport class AddContactPersonToEventComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    contact_person_id: [null, [Validators.required]],\n    comment: [null],\n    company: [null],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<AddContactPersonToEventComponent>,\n    @Inject(MAT_DIALOG_DATA) private eventId: number,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    this.eventListService.addContact(this.eventId, [this.form.value as Partial<EventItem>]).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(event => {\n      this.dialogRef.close(event);\n    });\n  }\n\n  onSelectCompany(id: number) {\n    this.form.get('company').patchValue(id as any);\n  }\n\n  onSelectContactPerson(id: number) {\n    this.form.get('contact_person_id').patchValue(id as any);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Concat Person to Event\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Contact Person*</label>\n      <pek-crm-contact-person-picker (selectContactPerson)=\"onSelectContactPerson($event)\"></pek-crm-contact-person-picker>\n    </div>\n    <div class=\"form-group\">\n      <label>Company</label>\n      <pek-company-picker (selectCompany)=\"onSelectCompany($event)\"></pek-company-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\">Comment</label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AddEventModalType, Company} from '../../models/company';\nimport {EventsListService} from '../../services/events-list.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {finalize} from 'rxjs';\nimport {CRMEmployee} from '../../models/crm-employee';\n\n@Component({\n  selector: 'pek-add-event-to-company',\n  templateUrl: './add-event-to-company.component.html',\n  styleUrls: ['./add-event-to-company.component.scss']\n})\nexport class AddEventToCompanyComponent implements OnInit {\n\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    event_type: [null, [Validators.required]],\n    start: [null, [Validators.required]],\n    end: [null, [Validators.required]],\n    company_ids: [[this.data.company.id]],\n    description: [''],\n    employee_ids: [[]],\n    contact_ids: [[]],\n    is_locked_by_company: [true],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<AddEventToCompanyComponent>,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n    private readonly adapterService: AdapterService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: AddEventModalType, company: Company },\n  ) {\n  }\n\n  ngOnInit(): void {\n    // if (this.data.type === 'withEmployee') {\n    //   this.form.addControl('employee_ids', new FormControl([], Validators.required));\n    // }\n  }\n\n  onSave() {\n    if (this.form.valid) {\n      this.isSaving = true;\n      const send = this.form.value;\n      send.start = this.adapterService.dateTimeAdapter(this.form.value.start);\n      send.end = this.adapterService.dateTimeAdapter(this.form.value.end);\n      this.eventListService.create(send).pipe(\n        finalize(() => this.isSaving = false)\n      ).subscribe(event => this.dialogRef.close(event));\n    }\n  }\n\n  onSelectEventType(id: number) {\n    this.form.get('event_type').patchValue(id);\n  }\n\n  onSelectContactPersons(contactPersonsIds: number[]) {\n    if (contactPersonsIds) {\n      this.form.get('contact_ids').patchValue(contactPersonsIds);\n    } else {\n      this.form.get('contact_ids').patchValue([]);\n    }\n  }\n\n  onSelectEmployees(ids: number[]) {\n    if (ids) {\n      this.form.get('employee_ids').patchValue(ids);\n    } else {\n      this.form.get('employee_ids').patchValue([]);\n    }\n  }\n\n  onOpenDatesEmployees() {\n    this.eventListService.openEditEmployeeEventDatesModal(this.form.get('employee_ids').value).subscribe(data => {\n      if (data) {\n        this.form.patchValue(data);\n      }\n    })\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Add Event to Company {{data.type === 'withEmployee' ? 'with' : 'without'}} Employee\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Event Type*</label>\n      <pek-crm-event-type-picker\n        [filters]=\"[\n          {name: 'is_inner', value: true},\n          {name: 'is_auto', value: false}\n        ]\"\n        (selectEventType)=\"onSelectEventType($event)\"\n      >\n      </pek-crm-event-type-picker>\n    </div>\n    <div class=\"form-group\" *ngIf=\"data.type === 'withEmployee'\">\n      <label>Employees*</label>\n      <pek-crm-employee-picker (selectEmployees)=\"onSelectEmployees($event)\"></pek-crm-employee-picker>\n    </div>\n    <div class=\"form-group\">\n      <label>Contacts</label>\n      <pek-crm-multi-contact-persons-picker\n        (selectContactPersons)=\"onSelectContactPersons($event)\"\n      ></pek-crm-multi-contact-persons-picker>\n    </div>\n\n    <ng-container *ngIf=\"data.type === 'withoutEmployee'\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('end')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"start\"\n              placeholder=\"Choice Start Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('start')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"end\"\n              placeholder=\"Choice End Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.type === 'withEmployee'\">\n      <div\n        (click)=\"onOpenDatesEmployees()\"\n        [class.disabled]=\"form.get('employee_ids').value.length === 0\"\n        class=\"row select-date\"\n      >\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('end')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"start\"\n              placeholder=\"Choice Start Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('start')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"end\"\n              placeholder=\"Choice End Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea\n        id=\"description\"\n        [rows]=\"2\"\n        pInputTextarea\n        formControlName=\"description\"\n        [autoResize]=\"true\"\n      ></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Add'\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CompanyCategoryService} from '../../services/company-category.service';\nimport {CompanyCategory, CompanyCategoryModule} from '../../models/company-category';\n\n@Component({\n  selector: 'pek-create-edit-company-category',\n  templateUrl: './create-edit-company-category.component.html',\n  styleUrls: ['./create-edit-company-category.component.scss']\n})\nexport class CreateEditCompanyCategoryComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: [null, [Validators.required]],\n    modules: [[]],\n  });\n\n  selectedModulesIds = [];\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyCategoryService: CompanyCategoryService,\n    private dialogRef: MatDialogRef<CreateEditCompanyCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: CompanyCategory }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.category.id));\n      this.form.patchValue(<any>this.data.category);\n      this.selectedModulesIds = this.data.category.modules.map(m => m.id);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCompanyCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCompanyCategory();\n        break;\n      }\n    }\n  }\n\n  createCompanyCategory() {\n    const send = <any>this.form.value;\n    this.companyCategoryService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCompanyCategory() {\n    const send = <any>this.form.value;\n    this.companyCategoryService.update(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectModule(modules: CompanyCategoryModule[]) {\n    this.form.get('modules').patchValue(modules.map(m => m.id));\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Company Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label>Modules</label>\n      <pek-company-category-module-picker\n        (selectModule)=\"onSelectModule($event)\"\n        [currentModulesIds]=\"selectedModulesIds\"\n      ></pek-company-category-module-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CompanyService} from '../../services/company.service';\nimport {Company} from '../../models/company';\n\n@Component({\n  selector: 'pek-create-edit-company',\n  templateUrl: './create-edit-company.component.html',\n  styleUrls: ['./create-edit-company.component.scss']\n})\nexport class CreateEditCompanyComponent implements OnInit {\n  isSaving = false;\n\n  currentCategoriesIds = [];\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    address: [''],\n    comment: [''],\n    tax_number: [''],\n    registration_number: [''],\n    categories: [[], Validators.required],\n    email: [''],\n    phone_number: [''],\n    website: [''],\n    supplier_nomenclature: [''],\n    contact_persons: [[]],\n    has_not_vat: [false],\n    country: [null],\n    region: [null],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyService: CompanyService,\n    private dialogRef: MatDialogRef<CreateEditCompanyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, company: Company }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.company.id));\n      this.form.patchValue(this.data.company);\n\n      this.form.get('categories').patchValue(this.data.company.categories?.map(c => c.id));\n      this.currentCategoriesIds = this.data.company.categories?.map(c => c.id);\n\n      this.form.get('contact_persons').patchValue(this.data.company.contact_persons?.map(c => c.id));\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCompany();\n        break;\n      }\n      case 'edit': {\n        this.editCompany();\n        break;\n      }\n    }\n  }\n\n  createCompany() {\n    const send = <Partial<Company>>this.form.value;\n    this.companyService.create(send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCompany() {\n    const send = <Partial<Company>>this.form.value;\n    this.companyService.updatePartial(send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n\n  onSelectCompanyCategories(ids: string) {\n    if (ids) {\n      this.form.get('categories').patchValue(ids.split(',').map(id => +id));\n    } else {\n      this.form.get('categories').patchValue(null);\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Supplier\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input\n        pInputText\n        formControlName=\"name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label>Category*</label>\n      <pek-multi-company-category-picker\n        [currentCompanyCategoriesIds]=\"currentCategoriesIds\"\n        (selectCompanyCategories)=\"onSelectCompanyCategories($event)\">\n      </pek-multi-company-category-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"tax\"> Tax Number </label>\n      <input\n        pInputText\n        formControlName=\"tax_number\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"tax\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"address\">Address </label>\n      <input\n        pInputText\n        formControlName=\"address\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"address\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\"> Email</label>\n      <input\n        pInputText\n        formControlName=\"email\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"email\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone_number\"> Phone Number </label>\n      <input\n        pInputText\n        formControlName=\"phone_number\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"phone_number\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"website\"> Website </label>\n      <input\n        pInputText\n        formControlName=\"website\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"website\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"reg\"> Registration Number </label>\n      <input\n        pInputText\n        formControlName=\"registration_number\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"reg\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"supplier_nomenclature\">Nomenclature</label>\n      <textarea\n        pInputTextarea\n        formControlName=\"supplier_nomenclature\"\n        class=\"form-control\"\n        id=\"supplier_nomenclature\"\n      ></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"comment\">Description</label>\n      <textarea\n        id=\"comment\"\n        [rows]=\"2\"\n        pInputTextarea\n        [autoResize]=\"false\"\n        formControlName=\"comment\"\n      ></textarea>\n    </div>\n    <div class=\"form-group checkbox\">\n      <p-checkbox\n        class=\"checkbox-big\"\n        name=\"vat\"\n        [binary]=\"true\"\n        inputId=\"vat\"\n        formControlName=\"has_not_vat\"\n      >\n      </p-checkbox>\n      <label for=\"vat\">Dont Have VAT</label>\n    </div>\n<!--    <div class=\"form-group\">-->\n<!--      <label>Country</label>-->\n<!--      <div class=\"countries\">-->\n<!--        <app-regions-picker [selectedNode]=\"selectedCountry\" [isPicker]=\"true\"-->\n<!--                            (pickRegion)=\"pickCountry($event)\"></app-regions-picker>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--    <div class=\"form-group\">-->\n<!--      <label>Region</label>-->\n<!--      <div *ngIf=\"!form.get('country').value\" class=\"message\">Choose a country</div>-->\n<!--      <div class=\"countries\" *ngIf=\"form.get('country').value\">-->\n<!--        <p-table-->\n<!--          [value]=\"regions\"-->\n<!--          selectionMode=\"single\"-->\n<!--          [(selection)]=\"selectedRegion\"-->\n<!--          (selectionChange)=\"pickRegion()\"-->\n<!--        >-->\n<!--          <ng-template pTemplate=\"header\">-->\n<!--            <tr>-->\n<!--              <th class=\"index-header text-center\" style=\"width: 10%\">#</th>-->\n<!--              <th pSortableColumn=\"name\" style=\"width: 90%\">-->\n<!--                Name-->\n<!--              </th>-->\n<!--            </tr>-->\n<!--          </ng-template>-->\n\n<!--          <ng-template pTemplate=\"body\" let-region let-i=\"rowIndex\">-->\n<!--            <tr [pSelectableRow]=\"region\">-->\n<!--              <td style=\"width: 10%\" class=\"text-center\">{{i + 1}}</td>-->\n<!--              <td style=\"width: 90%\">-->\n<!--                {{ region.name }}-->\n<!--              </td>-->\n<!--            </tr>-->\n<!--          </ng-template>-->\n<!--          <ng-template pTemplate=\"emptymessage\" let-columns>-->\n<!--            <tr>-->\n<!--              <td style=\"width: 100%;\" class=\"text-center p-4\" [attr.colspan]=\"2\">-->\n<!--                <i *ngIf=\"isLoadingRegions\" class=\"fas fa-circle-notch fa-spin fa-3x \"></i>-->\n<!--                <span *ngIf=\"!isLoadingRegions\">-->\n<!--              No Records Found-->\n<!--            </span>-->\n<!--              </td>-->\n<!--            </tr>-->\n<!--          </ng-template>-->\n<!--        </p-table>-->\n<!--      </div>-->\n<!--    </div>-->\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventsListService} from '../../services/events-list.service';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {AddEventModalType} from '../../models/company';\nimport {CRMEmployee} from '../../models/crm-employee';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventItem} from '../../models/event-item';\nimport {finalize, Observable} from 'rxjs';\nimport {MessageService} from 'primeng/api';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-create-edit-event',\n  templateUrl: './create-edit-event.component.html',\n  styleUrls: ['./create-edit-event.component.scss']\n})\nexport class CreateEditEventComponent implements OnInit {\n\n  isSaving = false;\n\n  eventsLists: EventItem[] = [];\n  eventId = -1;\n\n  scheduleDays = [\n    {value: 0, name: 'Monday'},\n    {value: 1, name: 'Tuesday'},\n    {value: 2, name: 'Wednesday'},\n    {value: 3, name: 'Thursday'},\n    {value: 4, name: 'Friday'},\n    {value: 5, name: 'Saturday'},\n    {value: 6, name: 'Sunday'},\n  ];\n\n  form: FormGroup = this.fb.group({\n    event_type: [null, [Validators.required]],\n    start: [null, [Validators.required]],\n    end: [null, [Validators.required]],\n    company_ids: [[]],\n    description: [''],\n    contact_ids: [[]],\n    employee_ids: [[]],\n    is_locked_by_company: [false],\n    is_scheduled: [false],\n    parent: [null],\n  });\n\n  scheduleForm = this.fb.group({\n    schedule_id: [null],\n    start: [null, [Validators.required]],\n    end: [null, [Validators.required]],\n    schedule_values: [[], [Validators.required]]\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateEditEventComponent>,\n    private readonly fb: FormBuilder,\n    private readonly eventListService: EventsListService,\n    private readonly adapterService: AdapterService,\n    private readonly messageService: MessageService,\n    @Inject(MAT_DIALOG_DATA) public data: { modalType: ModalActionType, type: AddEventModalType, event: EventItem, companyId: number },\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.companyId) {\n      this.form.get('company_ids').patchValue([this.data.companyId]);\n    }\n\n    if (this.data.modalType === 'edit') {\n      this.eventId = this.data.event.id;\n      this.form.get('event_type').patchValue(this.data.event.event_type?.id);\n      this.form.get('contact_ids').patchValue(this.data.event.on_contacts.map(el => +el.contact_person_id));\n      this.form.get('company_ids').patchValue(this.data.event.on_companies.map(el => +el.company_id));\n      this.form.get('is_locked_by_company').patchValue(this.data.event.is_locked_by_company);\n      this.form.get('description').patchValue(this.data.event.description);\n      this.form.get('start').patchValue(new Date(this.data.event.start));\n      this.form.get('end').patchValue(new Date(this.data.event.end));\n      this.form.get('employee_ids').patchValue(this.data.event.employee?.map(e => e.id));\n\n      if (this.data.event.scheduler) {\n        this.scheduleForm.get('schedule_values').patchValue(this.data.event.scheduler.values);\n        this.scheduleForm.get('schedule_id').patchValue(this.data.event.scheduler.id);\n        this.scheduleForm.get('start').patchValue(<any>new Date(this.data.event.scheduler.start));\n        this.scheduleForm.get('end').patchValue(<any>new Date(this.data.event.scheduler.end));\n        this.form.get('is_scheduled').patchValue(true);\n\n        this.form.get('is_scheduled').disable();\n        this.scheduleForm.get('start').disable();\n        this.scheduleForm.get('end').disable();\n        this.scheduleForm.get('schedule_values').disable();\n      }\n    }\n  }\n\n  onSave() {\n    if (this.form.valid) {\n      switch (this.data.modalType) {\n        case 'create':\n          this.onCreateEvent();\n          break;\n        case 'edit':\n          this.onEdit();\n      }\n    }\n  }\n\n  onEdit() {\n    if (this.form.get('employee_ids').value.length > 0) {\n      this.checkEmployeesDatesBeforeAddingUpdating().subscribe(res => {\n        if (res) {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Dates colliding.',\n            detail: `Check for colliding dates!`\n          });\n          return;\n        } else {\n          this.onEditEvent();\n        }\n      });\n    } else {\n      this.onEditEvent();\n    }\n  }\n\n  onCreateEvent() {\n    this.isSaving = true;\n    const send = this.form.value;\n    send.start = this.adapterService.dateTimeAdapter(this.form.value.start);\n    send.end = this.adapterService.dateTimeAdapter(this.form.value.end);\n    this.eventListService.create(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(event => {\n      if (this.form.get('is_scheduled').value && !this.scheduleForm.get('schedule_id').value) {\n        this.createScheduleFromEvent(event.id);\n      } else {\n        this.dialogRef.close(event);\n      }\n    });\n  }\n\n  checkEmployeesDatesBeforeAddingUpdating(): Observable<boolean> {\n    const start = this.form.get('start').value;\n    const end = this.form.get('end').value;\n\n    if (this.form.get('employee_ids').value.length > 0) {\n      const query = [\n        {name: 'employee_ids', value: this.form.get('employee_ids').value},\n        {name: 'get_colliding_events_events', value: true},\n        {\n          name: 'from_datetime',\n          value: this.adapterService.dateTimeAdapter(start ?\n            new Date(new Date(start).setHours(12, 0, 0)) : new Date())\n        }\n      ];\n\n      if (end) {\n        query.push(\n          {\n            name: 'to_datetime', value: this.adapterService.dateTimeAdapter(end ?\n              new Date(new Date(end).setHours(12, 0, 0)) : new Date())\n          }\n        );\n      }\n\n      return this.eventListService.getShorts(query).pipe(\n        map(events => {\n          this.eventsLists = events;\n          this.eventsLists = this.eventsLists.filter(event => event.id !== this.eventId);\n          this.eventsLists.forEach(event => {\n            if (start) {\n              const eventStartDate = new Date(event.start);\n              const eventEndDate = new Date(event.end);\n\n              event.isDatesColliding = start <= eventEndDate && end >= eventStartDate;\n            } else {\n              event.isDatesColliding = false;\n            }\n          });\n          return this.eventsLists.filter(el => el.isDatesColliding).length > 0;\n        }));\n    }\n  }\n\n  onEditEvent() {\n    const startDate = new Date(<any>this.scheduleForm.get('start').value);\n    const endDate = new Date(<any>this.scheduleForm.get('end').value);\n    if (startDate.getTime() >= endDate.getTime()) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Validation Error',\n        detail: `Start time date cannot be greater than End time`\n      });\n      return;\n    }\n\n    this.isSaving = true;\n    this.eventListService.changeEvent(this.data.event.id, this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe((res) => {\n      if (this.form.get('is_scheduled').value && !this.scheduleForm.get('schedule_id').value) {\n        this.createScheduleFromEvent(res.id);\n      } else {\n        this.dialogRef.close(res);\n      }\n    });\n  }\n\n  createScheduleFromEvent(eventId: number): void {\n    if (!this.scheduleForm.valid) {\n      return;\n    }\n\n    this.isSaving = true;\n\n    const data = {\n      schedule_values: this.scheduleForm.get('schedule_values').value,\n      start: this.scheduleForm.get('start').value,\n      end: this.scheduleForm.get('end').value,\n    };\n\n    this.eventListService.createScheduleFromEvent(eventId, data).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(res => {\n      this.dialogRef.close(res);\n    });\n  }\n\n  onSelectEventType(id: number) {\n    this.form.get('event_type').patchValue(id);\n  }\n\n  onSelectContactPersons(contactPersonsIds: number[]) {\n    if (contactPersonsIds) {\n      this.form.get('contact_ids').patchValue(contactPersonsIds);\n    } else {\n      this.form.get('contact_ids').patchValue([]);\n    }\n  }\n\n  onSelectEmployees(ids: number[]) {\n    if (ids) {\n      this.form.get('employee_ids').patchValue(ids);\n    } else {\n      this.form.get('employee_ids').patchValue([]);\n    }\n  }\n\n  onOpenDatesEmployees() {\n    this.eventListService.openEditEmployeeEventDatesModal(this.form.get('employee_ids').value).subscribe(data => {\n      if (data) {\n        this.form.patchValue(data);\n      }\n    });\n  }\n\n  onSelectCompanies(ids: string) {\n    if (ids) {\n      this.form.get('company_ids').patchValue(ids.split(',').map(id => +id));\n    } else {\n      this.form.get('company_ids').patchValue([]);\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    <ng-container *ngIf=\"data.modalType === 'create'\">\n      Add Event {{data.type === 'withEmployee' ? 'with' : 'without'}} Employee\n    </ng-container>\n    <ng-container *ngIf=\"data.modalType === 'edit'\">\n      Edit Event\n    </ng-container>\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Event Type*</label>\n      <pek-crm-event-type-picker\n        [currentEventTypeId]=\"form.get('event_type').value\"\n        [filters]=\"[\n          {name: 'is_inner', value: true},\n          {name: 'is_auto', value: false}\n        ]\"\n        (selectEventType)=\"onSelectEventType($event)\"\n      >\n      </pek-crm-event-type-picker>\n    </div>\n    <div class=\"form-group\" *ngIf=\"data.type === 'withEmployee'\">\n      <label>Employees</label>\n      <pek-crm-employee-picker\n        [currentEmployeeIds]=\"this.form.get('employee_ids').value\"\n        (selectEmployees)=\"onSelectEmployees($event)\"\n      ></pek-crm-employee-picker>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label>Companies</label>\n          <pek-multi-company-picker\n            [currentCompaniesIds]=\"form.get('company_ids').value\"\n            (selectCompanies)=\"onSelectCompanies($event)\">\n          </pek-multi-company-picker>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label>Contacts</label>\n          <pek-crm-multi-contact-persons-picker\n            [currentContactPersonsIds]=\"form.get('contact_ids').value\"\n            (selectContactPersons)=\"onSelectContactPersons($event)\"\n          ></pek-crm-multi-contact-persons-picker>\n        </div>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"data.type === 'withoutEmployee'\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('end')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"start\"\n              placeholder=\"Choice Start Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('start')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"end\"\n              placeholder=\"Choice End Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.type === 'withEmployee'\">\n      <div\n        (click)=\"onOpenDatesEmployees()\"\n        [class.disabled]=\"form.get('employee_ids').value.length === 0\"\n        class=\"row select-date\"\n      >\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>Start Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('end')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"start\"\n              placeholder=\"Choice Start Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label>End Date and Time*</label>\n            <p-calendar\n              [minDate]=\"form.get('start')?.value\"\n              [showTime]=\"true\"\n              [showClear]=\"true\"\n              [showButtonBar]=\"true\"\n              dateFormat=\"dd/mm/yy\"\n              hourFormat=\"24\"\n              formControlName=\"end\"\n              placeholder=\"Choice End Date and Time\"\n            >\n            </p-calendar>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea\n        id=\"description\"\n        [rows]=\"2\"\n        pInputTextarea\n        formControlName=\"description\"\n        [autoResize]=\"true\"\n      ></textarea>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"is_scheduled\"> Is Scheduled </label>\n      <p-inputSwitch\n        id=\"is_scheduled\"\n        formControlName=\"is_scheduled\"\n      >\n      </p-inputSwitch>\n    </div>\n  </form>\n\n  <form *ngIf=\"form.get('is_scheduled').value\" [formGroup]=\"scheduleForm\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"start\">Start*</label>\n          <p-calendar\n            placeholder=\"Choice Start Time\"\n            [showButtonBar]=\"true\"\n            id=\"start\"\n            formControlName=\"start\"\n            [showTime]=\"true\"\n            [timeOnly]=\"true\"\n            [hourFormat]=\"'24'\"\n            inputId=\"timeonly\"\n          >\n          </p-calendar>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"end\">End*</label>\n          <p-calendar\n            id=\"end\"\n            placeholder=\"Choice End Time\"\n            [showButtonBar]=\"true\"\n            formControlName=\"end\"\n            [showTime]=\"true\"\n            [timeOnly]=\"true\"\n            [hourFormat]=\"'24'\"\n            [dateFormat]=\"'hh:mm'\" inputId=\"timeonly\"\n          >\n          </p-calendar>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label> Week days* </label>\n          <p-multiSelect\n            placeholder=\"Choice Week Days\"\n            formControlName=\"schedule_values\"\n            optionLabel=\"name\"\n            optionValue=\"value\"\n            [options]=\"scheduleDays\"\n          ></p-multiSelect>\n        </div>\n      </div>\n    </div>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.modalType\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid || (form.get('is_scheduled').value && scheduleForm.invalid)\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CompanyService} from '../../services/company.service';\nimport {Company} from '../../models/company';\nimport {ContactPerson} from '@shared/models/contact-person';\n\n@Component({\n  selector: 'pek-create-edit-linked-company',\n  templateUrl: './create-edit-linked-company.component.html',\n  styleUrls: ['./create-edit-linked-company.component.scss']\n})\nexport class CreateEditLinkedCompanyComponent implements OnInit {\n  isSaving = false;\n  isLoading = false;\n\n  contactPersons: ContactPerson[] = [];\n\n  form = this.fb.group({\n    to_company_id: [null, [Validators.required]],\n    contact_person_id: [{ value: 0, disabled: true }, Validators.required],\n    link_weight: [0, [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly companyService: CompanyService,\n    private dialogRef: MatDialogRef<CreateEditLinkedCompanyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {companyId: number, type: ModalActionType, company: Company }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.get('link_weight').patchValue(this.data.company.link_weight);\n      this.form.get('to_company_id').patchValue(<any>this.data.company.to_company.id);\n      this.form.get('contact_person_id').patchValue(<any>this.data.company.contact_person.id);\n\n      this.form.get('contact_person_id').enable();\n\n      this.searchContactPersons();\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createLinkedCompany();\n        break;\n      }\n      case 'edit': {\n        this.editLinkedCompany();\n        break;\n      }\n    }\n  }\n\n  createLinkedCompany() {\n    const send = <any>this.form.value;\n    this.companyService.createEditLinkCompany(this.data.companyId, send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editLinkedCompany() {\n    const send = <any>this.form.value;\n    this.companyService.createEditLinkCompany(this.data.company.to_company.id, send).subscribe({\n      next: company => this.dialogRef.close(company),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  searchContactPersons() {\n    const companyId = this.form.get('to_company_id').value;\n\n    if (companyId) {\n      this.isLoading = true;\n      this.companyService.getById(+companyId).subscribe(company => {\n        this.contactPersons = company.contact_persons.map(c => {\n          return {\n            ...c,\n            fullName: `${c.first_name} ${c.last_name}`\n          };\n        });\n        this.isLoading = false;\n      });\n    }\n  }\n\n  onSelectCompany(id: number) {\n    if (id) {\n      this.form.get('to_company_id').patchValue(<any>id);\n      this.form.get('contact_person_id').enable();\n      this.searchContactPersons();\n    } else {\n      this.form.get('to_company_id').patchValue(null);\n      this.form.get('contact_person_id').disable();\n      this.form.get('contact_person_id').patchValue(null);\n      this.contactPersons = [];\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Linked Company\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Company*</label>\n      <pek-company-picker\n        (selectCompany)=\"onSelectCompany($event)\"\n        [currentCompanyId]=\"form.get('to_company_id').value\"\n      ></pek-company-picker>\n    </div>\n    <div class=\"form-group\">\n      <label>Contact Person* (First, choose a Company)</label>\n      <p-dropdown\n        *ngIf=\"!isLoading; else spinner\"\n        [options]=\"contactPersons\"\n        formControlName=\"contact_person_id\"\n        placeholder=\"Select Contact Person\"\n        optionLabel=\"fullName\"\n        optionValue=\"id\"\n        [showClear]=\"true\"\n      >\n      </p-dropdown>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Connection Weight*: {{ form.get('link_weight').value }}</label>\n      <p-slider formControlName=\"link_weight\" [min]=\"0\" [max]=\"10\"></p-slider>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EventTypesService} from '../../services/event-types.service';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../../models/event-type';\nimport {UserProfile} from '../../models/user-profile';\nimport {UserProfileService} from '../../services/user-profile.service';\n\n@Component({\n  selector: 'pek-create-edit-user-profile',\n  templateUrl: './create-edit-user-profile.component.html',\n  styleUrls: ['./create-edit-user-profile.component.scss']\n})\nexport class CreateEditUserProfileComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    first_name: [null, Validators.required],\n    last_name: [null, Validators.required],\n    gmail: [null, Validators.required],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateEditUserProfileComponent>,\n    private userProfileService: UserProfileService,\n    private readonly fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, userProfile: UserProfile }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl(<any>'id', new FormControl(this.data.userProfile.id));\n      this.form.patchValue(<any>this.data.userProfile);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createEventType();\n        break;\n      }\n      case 'edit': {\n        this.editEventType();\n        break;\n      }\n    }\n  }\n\n  createEventType() {\n    const send = <any>this.form.value;\n    this.userProfileService.create(send).subscribe({\n      next: userProfile => this.dialogRef.close(userProfile),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editEventType() {\n    const send = <any>this.form.value;\n    this.userProfileService.update(send).subscribe({\n      next: userProfile => this.dialogRef.close(userProfile),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} User Profile\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"first-name\">First Name*</label>\n      <input\n        pInputText\n        formControlName=\"first_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"first-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"last-name\">Last Name*</label>\n      <input\n        pInputText\n        formControlName=\"last_name\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"last-name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gmail\">Gmail*</label>\n      <input\n        pInputText\n        formControlName=\"gmail\"\n        class=\"form-control\"\n        type=\"text\"\n        id=\"gmail\"\n      />\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventsListService} from '../../services/events-list.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {QuerySearch} from '@shared/models/other';\nimport {Subject} from 'rxjs';\nimport {AdapterService} from '@shared/services/adapter.service';\nimport {EventItem} from '../../models/event-item';\nimport {MenuItem, MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'pek-edit-employee-event-date',\n  templateUrl: './edit-employee-event-date.component.html',\n  styleUrls: ['./edit-employee-event-date.component.scss']\n})\nexport class EditEmployeeEventDateComponent implements OnInit, OnDestroy {\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Selected Event',\n      items: [\n        {\n          label: 'Event Card',\n          icon: 'pi pi-calendar',\n          command: () => this.onGoEvent()\n        },\n        {\n          label: 'Edit',\n          icon: 'pi pi-pencil',\n          command: () => this.onEditEvent()\n        },\n      ]\n    }\n  ];\n\n  isLoading = false;\n\n  form: FormGroup = this.fb.group({\n    end: [null, [Validators.required]],\n    start: [null, [Validators.required]],\n    employee_ids: [[]],\n  });\n\n  destroy$ = new Subject();\n\n  query: QuerySearch[] = [];\n\n  constructor(\n    private eventsListService: EventsListService,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<EditEmployeeEventDateComponent>,\n    private messageService: MessageService,\n    private readonly adapterService: AdapterService,\n    @Inject(MAT_DIALOG_DATA) public employeeIds: number[],\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('employee_ids').patchValue(this.employeeIds.join(','));\n  }\n\n  events: EventItem[] = [];\n  selectedEvent: EventItem;\n\n  search() {\n    if (this.form.get('start').value && this.form.get('end').value) {\n      this.isLoading = true;\n      this.selectedEvent = null;\n      this.events = [];\n      this.destroy$.next(true);\n\n      this.query = [\n        {name: 'employee_ids', value: this.form.get('employee_ids').value},\n        {name: 'get_colliding_events_events', value: true},\n      ];\n\n      if (this.form.get('start').value) {\n        this.query.push({\n          name: 'from_datetime',\n          value: this.adapterService.dateTimeAdapter(this.form.get('start').value)\n        });\n      }\n\n      if (this.form.get('end').value) {\n        this.query.push({name: 'to_datetime', value: this.adapterService.dateTimeAdapter(this.form.get('end').value)});\n      }\n\n      this.getEvents();\n    }\n  }\n\n  getEvents() {\n    this.eventsListService.getShorts(this.query).subscribe(events => {\n      this.events = events;\n\n      this.events.sort((a, b) => new Date(b.start).getTime() - new Date(a.start).getTime());\n      this.findCollidingAndSortEvents();\n      this.isLoading = false;\n    });\n  }\n\n  findCollidingAndSortEvents(): void {\n    this.events.forEach(event => {\n      event.startDate = new Date(event.start);\n      if (this.form.get('start').value) {\n        const eventStartDate = new Date(event.start);\n        const eventEndDate = new Date(event.end);\n        event.isDatesColliding = this.form.get('start').value <= eventEndDate && this.form.get('end').value >= eventStartDate;\n      } else {\n        event.isDatesColliding = false;\n      }\n    });\n  }\n\n  onAccept() {\n    if (this.events.filter(el => el.isDatesColliding).length > 0) {\n      this.messageService.add({severity: 'error', summary: 'Dates colliding.', detail: `Check for colliding dates!`});\n      return;\n    }\n\n    this.dialogRef.close({start: new Date(this.selectedEvent.start), end: new Date(this.selectedEvent.end)});\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  private onEditEvent() {\n    this.eventsListService.openCreateEventEventModal('edit', 'withEmployee', this.selectedEvent).subscribe(event => {\n      if (event) {\n        this.search();\n      }\n    })\n  }\n\n  private onGoEvent() {\n    const link = 'crm/events/' + this.selectedEvent.id;\n    window.open(link, '_blank');\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Check Employees Free Time\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\" class=\"mb-3\">\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <label>Start Date and Time*</label>\n          <p-calendar\n            [maxDate]=\"form.get('end')?.value\"\n            [showTime]=\"true\"\n            [showClear]=\"true\"\n            [showButtonBar]=\"true\"\n            dateFormat=\"dd/mm/yy\"\n            hourFormat=\"24\"\n            formControlName=\"start\"\n            placeholder=\"Choice Start Date and Time\"\n            (ngModelChange)=\"search()\"\n          >\n          </p-calendar>\n        </div>\n      </div>\n      <div class=\"col-5\">\n        <div class=\"form-group\">\n          <label>End Date and Time*</label>\n          <p-calendar\n            [minDate]=\"form.get('start')?.value\"\n            [showTime]=\"true\"\n            [showClear]=\"true\"\n            [showButtonBar]=\"true\"\n            dateFormat=\"dd/mm/yy\"\n            hourFormat=\"24\"\n            formControlName=\"end\"\n            placeholder=\"Choice End Date and Time\"\n            (ngModelChange)=\"search()\"\n          >\n          </p-calendar>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"bar\">\n          <p-menubar [model]=\"menuItems\" [class.disabled]=\"!selectedEvent\"></p-menubar>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"page__table\">\n    <p-table\n      selectionMode=\"single\"\n      scrollHeight=\"calc(100vh - 26rem)\"\n      [scrollable]=\"true\"\n      [paginator]=\"false\"\n      [value]=\"events\"\n      [(selection)]=\"selectedEvent\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th style=\"width: 5%\" class=\"text-center\">#</th>\n          <th style=\"width: 30%\">Event Name</th>\n          <th style=\"width: 25%\" class=\"text-center\">Employee Name</th>\n          <th\n            style=\"width: 20%\"\n            pSortableColumn=\"start\"\n            class=\"text-center\"\n          >\n            Event Start\n            <p-sortIcon field=\"start\">\n            </p-sortIcon>\n          </th>\n          <th\n            style=\"width: 20%\"\n            class=\"text-center\"\n            pSortableColumn=\"end\"\n          >\n            Event End\n            <p-sortIcon field=\"end\">\n            </p-sortIcon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-event let-i=\"rowIndex\">\n        <tr [pSelectableRow]=\"event\" [class.overlap]=\"event.isDatesColliding\">\n          <td style=\"width: 5%\" class=\"text-center\">{{ i + 1 }}</td>\n          <td style=\"width: 30%\">\n            <a\n              [routerLink]=\"'/crm/events/' + event?.id\"\n              target=\"_blank\"\n            >\n              {{ event.event_type?.name }}\n            </a>\n          </td>\n          <td style=\"width: 25%\" class=\"text-center\">\n            <ng-container *ngIf=\"event.employee.length === 0\">\n              Not Related\n            </ng-container>\n\n            <ng-container *ngIf=\"event.employee.length > 0\">\n              <div *ngFor=\"let employee of event.employee\">\n                {{ employee.first_name + \" \" + employee.last_name }}\n              </div>\n            </ng-container>\n          </td>\n          <td style=\"width: 20%\" class=\"text-center\">\n            {{ event.start | date: \"dd/MM/yyyy, HH:mm\" }}\n          </td>\n          <td style=\"width: 20%\" class=\"text-center\">\n            {{ event.end | date: \"dd/MM/yyyy, HH:mm\" }}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"8\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"'Accept'\"\n    [disabled]=\"!selectedEvent || selectedEvent?.isDatesColliding\"\n    (click)=\"onAccept()\"\n  ></button>\n</mat-dialog-actions>\n\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {CompanyCategory, CompanyCategoryModule} from '../models/company-category';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditCompanyCategoryComponent\n} from '../modals/create-edit-company-category/create-edit-company-category.component';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyCategoryService {\n\n  categories: CompanyCategory[];\n  modules: CompanyCategoryModule[];\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'company_categories/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: { name: string, value: any }[]): Observable<CompanyCategory[]> {\n    if (this.categories) {\n      return of(this.categories);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: CompanyCategory[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => {\n        const categories = response.data;\n        this.categories = categories;\n        return categories;\n      }));\n  }\n\n  create(category: Partial<CompanyCategory>): Observable<CompanyCategory> {\n    return this.httpClient.post<{ data: CompanyCategory }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(category: Partial<CompanyCategory>): Observable<CompanyCategory> {\n    return this.httpClient.put<{ data: CompanyCategory }>(this.API_URL + this.url + category.id + '/', category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getModules(query?: QuerySearch[]): Observable<CompanyCategoryModule[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: CompanyCategoryModule[] }>(this.API_URL + 'modules/' + queryParams).pipe(\n      map(response => {\n        const modules = response.data;\n        this.modules = modules;\n        return modules;\n      }));\n  }\n\n  delete(category: CompanyCategory): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + category.id + '/');\n  }\n\n  createEditWarehouseModal(type: ModalActionType, category?: CompanyCategory): Observable<CompanyCategory> {\n    return this.dialog\n      .open<CreateEditCompanyCategoryComponent>(CreateEditCompanyCategoryComponent, {\n        width: '35rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {AddEventModalType, Companies, Company} from '../models/company';\nimport {map} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditCompanyComponent} from '../modals/create-edit-company/create-edit-company.component';\nimport {\n  CreateEditLinkedCompanyComponent\n} from '../modals/create-edit-linked-company/create-edit-linked-company.component';\nimport {AddCompanyToEventComponent} from '../modals/add-company-to-event/add-company-to-event.component';\nimport {AddEventToCompanyComponent} from '../modals/add-event-to-company/add-event-to-company.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  shortCompanies: Partial<Company>[];\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'companies/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Company[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Company[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getForPagination(query?: QuerySearch[]): Observable<Companies> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Companies }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id: number): Observable<Company> {\n    return this.httpClient.get<{ data: Company }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\n  }\n\n  getShorts(): Observable<Partial<Company>[]> {\n    if (this.shortCompanies) {\n      return of(this.shortCompanies);\n    }\n\n    return this.httpClient.get<{ data: Partial<Company>[] }>(this.API_URL + this.url + 'get_short_companies_list/').pipe(\n      map(response => {\n        const shortCompanies = response.data;\n        this.shortCompanies = shortCompanies;\n        return shortCompanies;\n      }));\n  }\n\n  create(company: Partial<Company>): Observable<Company> {\n    return this.httpClient.post<{ data: Company }>(this.API_URL + this.url, company).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartial(company: Partial<Company>): Observable<Company> {\n    return this.httpClient.patch<{ data: Company }>(this.API_URL + this.url + company.id + '/', company).pipe(\n      map(response => response.data)\n    );\n  }\n\n  deleteLinkedCompany(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + 'linked_companies/' + id + '/');\n  }\n\n  createEditLinkCompany(id: number, company: Partial<Company>): Observable<Company> {\n    return this.httpClient.post<{ data: Company }>(this.API_URL + this.url + id + '/link_company/', company).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditCompanyModal(type: ModalActionType, company?: Company): Observable<Company> {\n    return this.dialog\n      .open<CreateEditCompanyComponent>(CreateEditCompanyComponent, {\n        width: '45rem',\n        height: 'auto',\n        data: {type, company},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  createEditLinkedCompanyModal(companyId: number, type: ModalActionType, company?: Company): Observable<Company> {\n    return this.dialog\n      .open<CreateEditLinkedCompanyComponent>(CreateEditLinkedCompanyComponent, {\n        width: '45rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {companyId, type, company},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openAddEventToCompanyModal(type: AddEventModalType, company: Company): Observable<any> {\n    return this.dialog\n      .open<AddEventToCompanyComponent>(AddEventToCompanyComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, company},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {EventItem} from '../models/event-item';\nimport {Observable} from 'rxjs';\nimport {environment} from '@env/environment';\nimport {map} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\nimport {AddCompanyToEventComponent} from '../modals/add-company-to-event/add-company-to-event.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  AddContactPersonToEventComponent\n} from '../modals/add-contact-person-to-event/add-contact-person-to-event.component';\nimport {EditEmployeeEventDateComponent} from '../modals/edit-employee-event-date/edit-employee-event-date.component';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditEventComponent} from '../modals/create-edit-event/create-edit-event.component';\nimport {AddEventModalType} from '../models/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsListService {\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'events_list/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  getById(id): Observable<EventItem> {\n    return this.httpClient.get<{ data: EventItem }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  get(query?: QuerySearch[]): Observable<EventItem[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: EventItem[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getShorts(query?: QuerySearch[]): Observable<EventItem[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: EventItem[] }>(this.API_URL + this.url + 'get_short_events_list/' + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getByEventsDays(): Observable<any[]> {\n    return this.httpClient.get<{ data: any[] }>(this.API_URL + this.url + 'events_by_days/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(event: EventItem): Observable<EventItem> {\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url, event).pipe(\n      map(response => response.data)\n    );\n  }\n\n  addCompany(id: number, event: Partial<EventItem>[]): Observable<EventItem> {\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url + id + '/add_companies/', event).pipe(\n      map(response => response.data)\n    );\n  }\n\n  addContact(id: number, event: Partial<EventItem>[]): Observable<EventItem> {\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + this.url + id + '/add_contacts/', event).pipe(\n      map(response => response.data)\n    );\n  }\n\n  changeEvent(id: number, event: EventItem): Observable<EventItem> {\n    return this.httpClient.patch<{ data: EventItem }>(this.API_URL + this.url + id + '/', event).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + id + '/');\n  }\n\n  createScheduleFromEvent(id: number, data: any): Observable<any> {\n    return this.httpClient.post<{ data: EventItem }>(this.API_URL + 'schedule_from_event/' + id + '/', data).pipe(\n      map(response => response.data)\n    );\n  }\n\n  openAddCompanyToEventModal(eventId: number): Observable<EventItem> {\n    return this.dialog\n      .open<AddCompanyToEventComponent>(AddCompanyToEventComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: eventId,\n        autoFocus: false,\n        panelClass: 'modal-overflow-visible',\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openAddContactPersonToEventModal(eventId: number): Observable<EventItem> {\n    return this.dialog\n      .open<AddContactPersonToEventComponent>(AddContactPersonToEventComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: eventId,\n        autoFocus: false,\n        panelClass: 'modal-overflow-visible',\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openEditEmployeeEventDatesModal(employeeIds: number[]): Observable<{ start: Date, end: Date }> {\n    return this.dialog\n      .open<EditEmployeeEventDateComponent>(EditEmployeeEventDateComponent, {\n        width: '76rem',\n        height: 'auto',\n        data: employeeIds,\n        autoFocus: false,\n        panelClass: 'modal-overflow-visible',\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openCreateEventEventModal(modalType: ModalActionType, type: AddEventModalType, event?: EventItem, companyId?: number): Observable<EventItem> {\n    return this.dialog\n      .open<CreateEditEventComponent>(CreateEditEventComponent, {\n        width: '60rem',\n        height: 'auto',\n        data: {modalType, type, event, companyId},\n        autoFocus: false,\n        panelClass: 'modal-overflow-visible',\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\nimport {UserProfile} from '../models/user-profile';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {EventType} from '../models/event-type';\nimport {CreateEditEventTypeComponent} from '../modals/create-edit-event-type/create-edit-event-type.component';\nimport {User} from '@shared/models/user';\nimport {CreateEditUserProfileComponent} from '../modals/create-edit-user-profile/create-edit-user-profile.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'user_profile/';\n\n  userProfiles: UserProfile[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private dialog: MatDialog\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<UserProfile[]> {\n    if (this.userProfiles) {\n      return of(this.userProfiles);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: UserProfile[] }>(this.API_URL + this.url + 'all/' + queryParams).pipe(\n      map(response => {\n        const userProfile = response.data.map(p => {\n          return {\n            ...p,\n            fullName: `${p.first_name} ${p.last_name}`\n          }\n        });\n        this.userProfiles = userProfile;\n        return userProfile;\n      }));\n  }\n\n  create(userProfile): Observable<UserProfile> {\n    return this.httpClient.post<{ data: UserProfile }>(this.API_URL + this.url, userProfile).pipe(\n        map(response => response.data)\n      );\n  }\n\n  update(entity: UserProfile): Observable<UserProfile> {\n    return this.httpClient.put<{ data: UserProfile }>(this.API_URL + this.url + entity.id + '/', entity).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(entity: UserProfile): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + entity.id + '/');\n  }\n\n  createEditUserProfileModel(type: ModalActionType, userProfile?: UserProfile): Observable<UserProfile> {\n    return this.dialog\n      .open<CreateEditUserProfileComponent>(CreateEditUserProfileComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, userProfile},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"not-found\">\n  <h1>Under Construction</h1>\n\n  <a\n    class=\"dashboard__button p-button-secondary\"\n    pButton\n    type=\"button\"\n    [label]=\"'Go Back'\"\n    routerLink=\"/\"\n  ></a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeliveryChainsRouting } from './delivery-chains.routing';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    NotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    DeliveryChainsRouting,\n    SharedModule\n  ]\n})\nexport class DeliveryChainsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  {path: '', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DeliveryChainsRouting { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {environment} from '@env/environment.prod';\n\n@Component({\n  selector: 'pek-guide-button',\n  templateUrl: './guide-button.component.html',\n  styleUrls: ['./guide-button.component.scss']\n})\nexport class GuideButtonComponent implements OnInit {\n  @Input() btnStyle: 'primary' | 'secondary' = 'primary';\n  @Input() title: string;\n  @Input() routeUrl: string;\n  @Input() buttonsPosition: 'left' | 'right' | 'top' | 'bottom';\n  @Input() info: boolean;\n  @Input() disabled = false;\n  @Input() hideButtons = false;\n  @Output() navigate: EventEmitter<string> = new EventEmitter<string>();\n  @Output() getInfo: EventEmitter<any> = new EventEmitter<any>();\n\n  env = environment\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNavigate() {\n    if (this.routeUrl) {\n      this.navigate.emit(this.routeUrl);\n    }\n  }\n\n  onGetInfo() {\n    if (this.info) {\n      this.getInfo.emit();\n    }\n  }\n\n}\n","<button\n  class=\"guide-button\"\n  [class.guide-button_secondary]=\"btnStyle === 'secondary'\"\n  [class.guide-button_disabled]=\"disabled\"\n  [routerLinkActive]=\"routeUrl ? 'guide-button_active' : ''\"\n>\n  <span\n    [routerLink]=\"routeUrl\"\n    class=\"guide-button__inner\"\n  >\n    {{title}}\n  </span>\n  <div\n    *ngIf=\"!disabled && !hideButtons && btnStyle === 'primary'\"\n    class=\"guide-button__buttons\"\n    [class.guide-button__buttons_right]=\"buttonsPosition === 'right'\"\n    [class.guide-button__buttons_left]=\"buttonsPosition === 'left'\"\n    [class.guide-button__buttons_top]=\"buttonsPosition === 'top'\"\n    [class.guide-button__buttons_bottom]=\"buttonsPosition === 'bottom'\"\n  >\n    <button (click)=\"onGetInfo()\">?</button>\n    <button (click)=\"onNavigate()\">\n      <pek-in-icon></pek-in-icon>\n    </button>\n    <button>R</button>\n  </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-outsourcing',\n  templateUrl: './guide-outsourcing.component.html',\n  styleUrls: ['./guide-outsourcing.component.scss']\n})\nexport class GuideOutsourcingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-outsourcing\">\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-ouFtsourcing__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating of outsourcing order\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Outsourcer\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed Supplier after lender confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Outsourcer request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Delivered Items\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of Outsourcer by tender\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-outsourcing__col guide-outsourcing__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourser\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-procurement',\n  templateUrl: './guide-procurement.component.html',\n  styleUrls: ['./guide-procurement.component.scss']\n})\nexport class GuideProcurementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-procurement\">\n  <div class=\"guide-procurement__col guide-procurement__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Procurement request for production list\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Confirmed Supplier after lender confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Manufacturing procurement\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Work with Supplier request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Delivered Items\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of payment\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for confirmation of Supplier by tender\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-procurement__col guide-procurement__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Supplier\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmation\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-production',\n  templateUrl: './guide-production.component.html',\n  styleUrls: ['./guide-production.component.scss']\n})\nexport class GuideProductionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-production\">\n  <div class=\"guide-production__col guide-production__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production list deficit\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tool request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Rework all and rework item process\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Completed production order\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating order to Outsourcer\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Production request\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Tool request\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-production__col guide-production__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"QC\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Outsourcing\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Warehouse\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide-sales',\n  templateUrl: './guide-sales.component.html',\n  styleUrls: ['./guide-sales.component.scss']\n})\nexport class GuideSalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"guide-sales\">\n  <div class=\"guide-sales__col guide-sales__col_1\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Contact and events\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_2\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Marketing events\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span class=\"arrow\"></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_3\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Sales\"\n      ></pek-guide-button>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_4\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Sales events\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Request for creating a new production\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        btnStyle=\"secondary\"\n        [hideButtons]=\"true\"\n        title=\"Creating a new delivery chain\"\n      ></pek-guide-button>\n      <div>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"guide-sales__col guide-sales__col_5\">\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Contacts and events\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Confirmations\"\n      ></pek-guide-button>\n    </div>\n    <div class=\"guide-button\">\n      <pek-guide-button\n        [hideButtons]=\"true\"\n        title=\"Delivery chain\"\n      ></pek-guide-button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {GuideComponent} from './guide/guide.component';\r\nimport {GuideButtonComponent} from './guide-button/guide-button.component';\r\nimport {GuideRouting} from './guide.routing';\r\nimport {GuideSalesComponent} from './guide-sales/guide-sales.component';\r\nimport {GuideOutsourcingComponent} from './guide-outsourcing/guide-outsourcing.component';\r\nimport {GuideProcurementComponent} from './guide-procurement/guide-procurement.component';\r\nimport {GuideProductionComponent} from './guide-production/guide-production.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GuideComponent, GuideButtonComponent, GuideSalesComponent, GuideOutsourcingComponent, GuideProcurementComponent, GuideProductionComponent],\r\n  exports: [\r\n    GuideComponent\r\n  ],\r\n    imports: [\r\n        CommonModule,\r\n        GuideRouting,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class GuideModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GuideRouting { }\r\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {environment} from '@env/environment.prod';\r\n\r\nexport type GuideType = 'all' | 'qc' | 'sales' | 'outsource' | 'procurement' | 'production';\r\n\r\n@Component({\r\n  selector: 'app-guide',\r\n  templateUrl: './guide.component.html',\r\n  styleUrls: ['./guide.component.scss']\r\n})\r\nexport class GuideComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  routerSub: Subscription;\r\n  @ViewChild('guidePanel') guidePanel: ElementRef;\r\n  envir = environment;\r\n\r\n  guideTitle = 'Select a module or process to get more information';\r\n\r\n  guideType: GuideType = 'all';\r\n\r\n  showLorem = false;\r\n\r\n  zoom = 1;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly dialogRef: MatDialogRef<GuideComponent>,\r\n  ) {\r\n    this.routerSub = this.router.events.pipe(\r\n    ).subscribe(evt => {\r\n    });\r\n  }\r\n\r\n  changeRoute(url: string) {\r\n    this.choiceType(url);\r\n  }\r\n\r\n  goToLink(link: string) {\r\n    this.hideGuide();\r\n\r\n    setTimeout(() => {\r\n      window.open(environment.link_url + link.slice(1) + '?showGuide=true', '_self');\r\n    }, 400);\r\n\r\n    // setTimeout(() => {\r\n    //   this.router.navigate([link]);\r\n    //   this.changeRoute(link);\r\n    // }, 600);\r\n    //\r\n    // setTimeout(() => {\r\n    //   this.openGuide();\r\n    // }, 1500);\r\n  }\r\n\r\n  hideGuide() {\r\n    document.querySelector('.guide-modalbox').classList.add('guide-modalbox_hide');\r\n  }\r\n\r\n  openGuide() {\r\n    document.querySelector('.guide-modalbox').classList.remove('guide-modalbox_hide');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.choiceType(this.router.url);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const panel = this.guidePanel.nativeElement;\r\n    let isDown = false;\r\n    let startX;\r\n    let startY;\r\n    let scrollLeft;\r\n    let scrollTop;\r\n\r\n    panel.addEventListener('mousedown', (e) => {\r\n      isDown = true;\r\n      panel.style.cursor = 'grabbing';\r\n\r\n      startX = e.pageX - panel.offsetLeft;\r\n      startY = e.pageY - panel.offsetTop;\r\n\r\n      scrollLeft = panel.scrollLeft;\r\n      scrollTop = panel.scrollTop;\r\n    });\r\n    panel.addEventListener('mouseleave', () => {\r\n      isDown = false;\r\n      panel.style.cursor = 'grab';\r\n    });\r\n    panel.addEventListener('mouseup', () => {\r\n      isDown = false;\r\n      panel.style.cursor = 'grab';\r\n    });\r\n    panel.addEventListener('mousemove', (e) => {\r\n      if (!isDown) return;\r\n      e.preventDefault();\r\n      const x = e.pageX - panel.offsetLeft;\r\n      const y = e.pageY - panel.offsetTop;\r\n\r\n      const walkX = (x - startX) * 0.75;\r\n      const walkY = (y - startY) * 0.75;\r\n\r\n      panel.scrollLeft = scrollLeft - walkX;\r\n      panel.scrollTop = scrollTop - walkY;\r\n    });\r\n  }\r\n\r\n  choiceType(url: string) {\r\n    if (url.includes('quality-control')) {\r\n      this.guideType = 'qc';\r\n      this.showLorem = true;\r\n    } else if (url.includes('sales')) {\r\n      this.guideType = 'sales';\r\n    } else if (url.includes('outsource')) {\r\n      this.guideType = 'outsource';\r\n    } else if (url.includes('procurement')) {\r\n      this.guideType = 'procurement';\r\n    } else if (url.includes('production')) {\r\n      this.guideType = 'production';\r\n    } else {\r\n      this.showLorem = false;\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routerSub.unsubscribe();\r\n  }\r\n\r\n  onBack() {\r\n    this.guideType = 'all';\r\n    this.showLorem = false;\r\n    this.router.navigate(['/dash']);\r\n  }\r\n\r\n  plusScale() {\r\n    this.zoom += 0.1;\r\n  }\r\n\r\n  minusScale() {\r\n    this.zoom -= 0.1;\r\n  }\r\n}\r\n","<div class=\"guide\">\r\n  <div\r\n    #guidePanel\r\n    class=\"guide__panel\"\r\n    [style.paddingTop]=\"guideType === 'all' ? zoom * 12 + 'rem' : 0\"\r\n    [ngSwitch]=\"guideType\"\r\n    [style.zoom]=\"zoom\"\r\n  >\r\n\r\n    <div class=\"guide__box\" *ngSwitchCase=\"'all'\">\r\n      <div class=\"guide__col guide__col_1\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-top\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Nomenclature Confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Product Structure\"\r\n            routeUrl=\"/dash/product-structure/products\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_2\">\r\n        <div class=\"guide__button guide__button_arrow-right\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Creating structure of product\"\r\n            routeUrl=\"/dash/product-structure/products\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_3\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Customers\"\r\n            routeUrl=\"/dash/sales/lists\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom-top guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Marketing and Sales events\"\r\n            routeUrl=\"/dash/sales/lists\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <div>\r\n          <span></span>\r\n          <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Contacts and events\"\r\n            routeUrl=\"/dash/crm/businnes-partners\"\r\n            (navigate)=\"goToLink($event)\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Sales chain creating\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Sales\"\r\n            routeUrl=\"/dash/sales/lists\"\r\n            (navigate)=\"goToLink($event)\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Creation of delivery chain\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Delivery chain\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Shipment request\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            routeUrl=\"/dash/warehouse/products\"\r\n            title=\"Warehouse\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Delivery process\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Customer\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_4\">\r\n        <div class=\"guide__button guide__button_arrow-right\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Production request\"\r\n            routeUrl=\"/dash/warehouse/requests\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_5\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Product structure\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Manufacturing parts in advance\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Confirmation payments\"\r\n            buttonsPosition=\"left\"\r\n            routeUrl=\"/dash/confirmation\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Payments\"\r\n            buttonsPosition=\"left\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_6\">\r\n        <div class=\"guide__button guide__button_arrow-right\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Creating Production list\"\r\n            routeUrl=\"/dash/sales/lists\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-left\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            title=\"Payments confirmation\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_7\">\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Warehouse\"\r\n            routeUrl=\"/dash/warehouse/products\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Procurement request\"\r\n            routeUrl=\"/dash/procurement/request-creation\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Manufacturing procurement\"\r\n            routeUrl=\"/dash/procurement/orders\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Procurement\"\r\n            routeUrl=\"test\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span class=\"top\"></span>\r\n          <span class=\"bottom\"></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Supplier\"\r\n            routeUrl=\"test\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Production\"\r\n            routeUrl=\"/dash/production/plan\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_8\">\r\n        <div class=\"guide__button guide__button_arrow-right\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\" Production list deficit\"\r\n            routeUrl=\"/dash/warehouse/lists\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <!--        <button-->\r\n        <!--          class=\"guide__button guide__button_secondary guide__button_delivery\"-->\r\n        <!--          routerLinkActive=\"guide__button_active\"-->\r\n        <!--        >-->\r\n        <!--          Delivery items (?)-->\r\n        <!--          <span></span>-->\r\n        <!--          <span></span>-->\r\n        <!--          <span></span>-->\r\n        <!--          <span></span>-->\r\n        <!--          <span></span>-->\r\n\r\n        <!--          <div class=\"guide__buttons guide__buttons_top\">-->\r\n        <!--            <button>?</button>-->\r\n        <!--            <button>-->\r\n        <!--              <app-in-icon></app-in-icon>-->\r\n        <!--            </button>-->\r\n        <!--            <button>R</button>-->\r\n        <!--          </div>-->\r\n        <!--        </button>-->\r\n\r\n        <div class=\"guide__button guide__button_delivery\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Delivery items\"\r\n            routeUrl=\"test\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n\r\n          <div>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_rework\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Rework\"\r\n            routeUrl=\"test\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n\r\n          <div>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"guide__col guide__col_9\">\r\n        <!--        <button-->\r\n        <!--          class=\"guide__button\"-->\r\n        <!--          routerLinkActive=\"guide__button_active\"-->\r\n        <!--        >-->\r\n        <!--          Warehouse-->\r\n        <!--          <div class=\"guide__buttons guide__buttons_top\">-->\r\n        <!--            <button>?</button>-->\r\n        <!--            <button routerLink=\"/dash/warehouse/products\">-->\r\n        <!--              <app-in-icon></app-in-icon>-->\r\n        <!--            </button>-->\r\n        <!--            <button>R</button>-->\r\n        <!--          </div>-->\r\n        <!--        </button>-->\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Warehouse\"\r\n            routeUrl=\"/dash/warehouse/products\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-top-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Production request\"\r\n            routeUrl=\"/dash/warehouse/requests\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n\r\n          <span class=\"top\"></span>\r\n          <span class=\"bottom\"></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Production\"\r\n            routeUrl=\"/dash/production/plan\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Order to our manufacture\"\r\n            routeUrl=\"/dash/production/orders\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Production\"\r\n            routeUrl=\"/dash/production/plan\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Manufactured order\"\r\n            routeUrl=\"/dash/production/orders\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"QC\"\r\n            routeUrl=\"/dash/quality-control/invoices\"\r\n            buttonsPosition=\"right\"\r\n            (getInfo)=\"showLorem = true\"\r\n            [info]=\"true\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"QC passed\"\r\n            routeUrl=\"/dash/quality-control/invoices\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Warehouse\"\r\n            routeUrl=\"/dash/warehouse/products\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__col guide__col_10\">\r\n\r\n        <div class=\"guide__button guide__button_arrow-right\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Outsourcing orders\"\r\n            routeUrl=\"/dash/outsource/outsource-chain\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-left-bottom-big\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Qc not passed\"\r\n            routeUrl=\"/dash/quality-control/invoices\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n\r\n          <div>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__col guide__col_11\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Payments\"\r\n            routeUrl=\"/dash/payments\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-top\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Confirmed payment\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-top\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Payment confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Outsourcing\"\r\n            routeUrl=\"/dash/outsource/outsource-chain\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_arrow-bottom-left-big\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Outsorsed parts\"\r\n            routeUrl=\"test\"\r\n            buttonsPosition=\"right\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n\r\n          <div>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__button guide__button_delivered-items\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Delivered items\"\r\n            buttonsPosition=\"right\"\r\n          ></pek-guide-button>\r\n\r\n          <div>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Warehouse isolator\"\r\n            routeUrl=\"/dash/warehouse/insulator\"\r\n            buttonsPosition=\"bottom\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"guide__col guide__col_12\">\r\n        <div class=\"guide__button guide__button_arrow-right-left\">\r\n          <pek-guide-button\r\n            [btnStyle]=\"'secondary'\"\r\n            title=\"Outsourcing\"\r\n            routeUrl=\"/dash/outsource/outsource-chain\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span class=\"left\"></span>\r\n          <span class=\"right\"></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__col guide__col_13\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Outsourcer\"\r\n            routeUrl=\"/dash/outsource/outsource-chain\"\r\n            buttonsPosition=\"top\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Purchasing\"\r\n            buttonsPosition=\"left\"\r\n            routeUrl=\"/dash/purchasing/orders\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Payment confirmation\"\r\n            routeUrl=\"/dash/confirmation\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Confirmation\"\r\n            buttonsPosition=\"left\"\r\n            routeUrl=\"/dash/confirmation\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n        </div>\r\n        <div class=\"guide__button guide__button_arrow-bottom\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Confirmed payment\"\r\n            routeUrl=\"/dash/confirmation\"\r\n          ></pek-guide-button>\r\n          <span></span>\r\n        </div>\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Payments\"\r\n            buttonsPosition=\"left\"\r\n            (navigate)=\"goToLink($event)\"\r\n            routeUrl=\"/dash/payments\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__col guide__col_14\">\r\n        <div class=\"guide__button guide__button_arrow-right-left\">\r\n          <pek-guide-button\r\n            btnStyle=\"secondary\"\r\n            title=\"Purchasing\"\r\n            routeUrl=\"/dash/purchasing/orders\"\r\n            (navigate)=\"goToLink($event)\"\r\n          ></pek-guide-button>\r\n          <span class=\"left\"></span>\r\n          <span class=\"right\"></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__col guide__col_15\">\r\n        <div class=\"guide__button\">\r\n          <pek-guide-button\r\n            title=\"Suplier\"\r\n            buttonsPosition=\"bottom\"\r\n            routeUrl=\"test\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"guide__box guide__qc\" *ngSwitchCase=\"'qc'\">\r\n      <div class=\"guide__qc-box guide__qc-box_1\">\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_1\">\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Manufacturing Procurement\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Outsourcing\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_2\">\r\n          <div class=\"guide__button guide__button_disabled guide__button_arrow-right\">\r\n            <pek-guide-button\r\n              btnStyle=\"secondary\"\r\n              [disabled]=\"true\"\r\n              title=\"Completed Procurement Invoice\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_3\">\r\n          <div class=\"guide__button guide__button_qc-main\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              title=\"QC procurement invoices\"\r\n            ></pek-guide-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_4\">\r\n          <div class=\"guide__button guide__button_1\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"Cancellation\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_2\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"QC passed\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_3\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"Isolator\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_5\">\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Outsourcing\"\r\n            ></pek-guide-button>\r\n            <div>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Warehouse\"\r\n            ></pek-guide-button>\r\n            <div>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_6\">\r\n          <pek-guide-button\r\n            [disabled]=\"true\"\r\n            title=\"Manufacturing Procurement\"\r\n          ></pek-guide-button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"guide__qc-box\">\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_7\">\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Production\"\r\n            ></pek-guide-button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_8\">\r\n          <div class=\"guide__button guide__button_disabled guide__button_arrow-right\">\r\n            <pek-guide-button\r\n              btnStyle=\"secondary\"\r\n              [disabled]=\"true\"\r\n              title=\"Completed production order\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_9\">\r\n          <div class=\"guide__button guide__button_qc-main\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              title=\"QC our manufacturing\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_10\">\r\n\r\n          <div class=\"guide__button guide__button_1\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"Rework All\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_2\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"Rework Item\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_3\">\r\n            <pek-guide-button\r\n              [hideButtons]=\"true\"\r\n              btnStyle=\"secondary\"\r\n              title=\"QC passed\"\r\n            ></pek-guide-button>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"guide__qc-col guide__qc-col_11\">\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Production\"\r\n            ></pek-guide-button>\r\n            <div>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"guide__button guide__button_disabled\">\r\n            <pek-guide-button\r\n              [disabled]=\"true\"\r\n              title=\"Warehouse\"\r\n            ></pek-guide-button>\r\n            <div>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div *ngSwitchCase=\"'sales'\">\r\n      <app-guide-sales></app-guide-sales>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'outsource'\">\r\n      <app-guide-outsourcing></app-guide-outsourcing>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'procurement'\">\r\n      <app-guide-procurement></app-guide-procurement>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'production'\">\r\n      <app-guide-production></app-guide-production>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"guide__text\">\r\n    <h2 *ngIf=\"!showLorem\">{{guideTitle}}</h2>\r\n\r\n    <div *ngIf=\"showLorem\">\r\n      <h2>Quality Control</h2>\r\n      <p>\r\n        1. All goods to be sent to the warehouse must first pass the quality control. If QC is not\r\n        passed, the item is moved to the isolator, and after that, a decision must be made to\r\n        move it back to suplier, send for revision or write off this product.\r\n      </p>\r\n\r\n      <p>\r\n        2. Aliquam aperiam cumque cupiditate distinctio dolorem ea, facilis id, ipsam magnam nostrum pariatur quae saepe\r\n        tenetur\r\n        voluptatem voluptatum. A accusantium ad cupiditate dolore doloribus ea excepturi, illum laudantium, mollitia\r\n        necessitatibus nulla odit porro quo velit voluptas voluptatem voluptatibus.\r\n      </p>\r\n\r\n      <p>\r\n        3. A amet commodi cum esse excepturi,\r\n        facilis inventore iure libero necessitatibus officia omnis quas qui quia reiciendis saepe sit unde vel vitae\r\n        voluptatibus voluptatum! Culpa doloribus, nisi numquam perferendis rem sequi sunt vitae voluptates?\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <button class=\"btn btn-primary guide__close\" (click)=\"onClose()\">Close Business guide</button>\r\n  <button class=\"btn btn-primary guide__back\" *ngIf=\"guideType !== 'all'\" (click)=\"onBack()\">Back</button>\r\n  <div class=\"guide__header\">\r\n    <button class=\"btn btn-primary mr-2\" (click)=\"plusScale()\" [disabled]=\"zoom >= 1.3\">+</button>\r\n    <button class=\"btn btn-primary\" (click)=\"minusScale()\" [disabled]=\"zoom <= 0.8\">-</button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NavigationLink} from '../../navigation-route';\n\n@Component({\n  selector: 'pek-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() module: string;\n  @Input() routes: NavigationLink[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout-header\">\n  <pek-logo [module]=\"module\"></pek-logo>\n  <ul class=\"layout-navigation\" [class.layout-navigation_wh]=\"module === 'Warehouse'\">\n    <li\n      *ngFor=\"let route of routes\"\n      class=\"layout-navigation__item\"\n    >\n      <a\n        [routerLink]=\"route.commands\"\n        routerLinkActive=\"active\"\n      >\n        {{route.label}}\n      </a>\n    </li>\n  </ul>\n\n  <button class=\"ml-auto guide-button\">\n    <i class=\"pi pi-book\"></i>\n<!--    Show business guide-->\n    Business Guide\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout\">\n  <div class=\"layout__content\">\n    <div class=\"layout__inner\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent implements OnInit {\n  @Input() module: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"logo\">\n  <a class=\"logo__link\" routerLink=\"/\">\n    <span class=\"logo__text\">R-WAVE-ERP</span>\n    <span class=\"logo__module\">{{module}}</span>\n  </a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {RouterModule} from '@angular/router';\nimport { LogoComponent } from './components/logo/logo.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    HeaderComponent,\n    LogoComponent,\n  ],\n  exports: [\n    LogoComponent,\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    SharedModule,\n  ]\n})\nexport class LayoutModule { }\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ENomenclatureBulk, ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {Technology} from '../../models/technology';\nimport {Product} from '../../models/product';\nimport {Category} from '../../models/category';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-create-edit-form',\n  templateUrl: './create-edit-product-form.component.html',\n  styleUrls: ['./create-edit-product-form.component.scss']\n})\nexport class CreateEditProductFormComponent implements OnInit, OnDestroy {\n  @Input() isShowQuantity = true;\n  @Input() type: 'edit' | 'create' = 'edit';\n  @Input() product: Partial<Product>;\n  @Output() formChange: EventEmitter<{ invalid: boolean, formValue: Partial<Product & Nomenclature> }> = new EventEmitter<{ invalid: boolean; formValue: Partial<Product> }>();\n  @Output() uploadImage: EventEmitter<File[]> = new EventEmitter<File[]>();\n  @Output() removeImage: EventEmitter<number> = new EventEmitter<number>();\n\n  nomenclatureType = ENomenclatureType;\n\n  selectedTechnologiesIds: number[] = [];\n\n  bulkOrSerial = [\n    {label: 'Bulk', value: ENomenclatureBulk.BULK},\n    {label: 'With Serial Numbers', value: ENomenclatureBulk.SERIAL}\n  ];\n\n  form: FormGroup = this.fb.group({\n    type: [null, {disabled: true}],\n    name: ['', Validators.required],\n    code: ['', Validators.required],\n    description: [''],\n    quantity: [1, [Validators.required, Validators.min(1)]],\n    category: [null],\n    bulk_or_serial: ['0', Validators.required],\n    codeId: [{value: '', disabled: true}],\n    technologies: [[]],\n  });\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(data => {\n      this.formChange.next({invalid: this.form.invalid, formValue: data});\n    });\n\n    if (this.product) {\n      if (this.product.nomenclature.technologies.length > 0) {\n        this.selectedTechnologiesIds = this.product.nomenclature.technologies.map(t => t.id);\n        this.form.get('technologies').patchValue([...this.product.nomenclature.technologies])\n      }\n\n      this.form.patchValue(this.product.nomenclature);\n\n      if (this.isShowQuantity) {\n        this.form.get('quantity').patchValue(this.product.quantity);\n      } else {\n        this.form.removeControl('quantity');\n      }\n\n      this.form.get('codeId').patchValue(this.product.nomenclature.code);\n\n      if (this.product.nomenclature.category) {\n        this.form.get('category').patchValue(this.product.nomenclature.category.id);\n      }\n\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\n        this.form.removeControl('code');\n      }\n    }\n  }\n\n  onSelectCategory(category: Category) {\n    if (category) {\n      this.form.get('category').patchValue(category.id);\n    } else {\n      this.form.get('category').patchValue(null);\n    }\n  }\n\n  onUploadImages(files: File[]) {\n    this.uploadImage.emit(files);\n  }\n\n  onRemoveImage(idx: number) {\n    this.removeImage.emit(idx)\n  }\n\n  drop(event: CdkDragDrop<Technology[]>) {\n    const technologies = this.form.get('technologies').value.map(t => t);\n    const technologiesIds = this.selectedTechnologiesIds;\n    moveItemInArray(technologies, event.previousIndex, event.currentIndex);\n    moveItemInArray(technologiesIds, event.previousIndex, event.currentIndex);\n    this.form.get('technologies').patchValue([...technologies]);\n    this.selectedTechnologiesIds = [...technologiesIds];\n  }\n\n  onSelectTechnology(technologies: Technology[]) {\n    this.form.get('technologies').patchValue(technologies);\n    this.selectedTechnologiesIds = technologies.map(t => t.id);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"create-edit-product-form\">\n  <form [formGroup]=\"form\">\n    <div class=\"edit-product\">\n      <div class=\"edit-product__left\" *ngIf=\"product.nomenclature.type !== nomenclatureType.PURCHASED\">\n        <div class=\"form-group edit-product__technology-picker\">\n          <label>Technologies</label>\n          <pek-multi-technology-picker\n            (selectTechnologies)=\"onSelectTechnology($event)\"\n            [currentTechnologiesIds]=\"selectedTechnologiesIds\"\n          >\n          </pek-multi-technology-picker>\n        </div>\n        <div class=\"form-group\">\n          <label>Order of Technologies</label>\n          <div\n            class=\"edit-product__list\"\n            cdkDropList\n            (cdkDropListDropped)=\"drop($event)\"\n          >\n            <div\n              class=\"edit-product__technology\"\n              *ngFor=\"let technology of form.get('technologies').value\"\n              cdkDrag\n            >\n              <div class=\"edit-product__placeholder\" *cdkDragPlaceholder></div>\n              {{technology.name}}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"edit-product__right\">\n        <div class=\"edit-product__column\">\n          <div class=\"edit-product__image\">\n            <pek-images-slider\n              [width]=\"'15.75rem'\"\n              [height]=\"'15.75rem'\"\n              [images]=\"product.nomenclature.images\"\n              (removeImage)=\"onRemoveImage($event)\"\n              (choiceImages)=\"onUploadImages($event)\"\n            ></pek-images-slider>\n          </div>\n          <div class=\"edit-product__fields\">\n            <div class=\"form-group\">\n              <label>Type</label>\n              <pek-nomenclature-type-picker\n                [isDisabled]=\"true\"\n                [currentNomenclatureType]=\"form.get('type').value\"\n              ></pek-nomenclature-type-picker>\n            </div>\n            <div class=\"form-group\" *ngIf=\"form.get('type').value !== nomenclatureType.PURCHASED\">\n              <label for=\"code\">Code*</label>\n              <input type=\"text\" id=\"code\" pInputText formControlName=\"code\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"name\">Name*</label>\n              <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n            </div>\n\n            <div class=\"form-group\" *ngIf=\"form.get('type').value === nomenclatureType.PURCHASED\">\n              <label>Category</label>\n              <pek-product-category-picker\n                (choiceCategory)=\"onSelectCategory($event)\"\n                [currentCategoryId]=\"this.form.get('category').value\"\n              >\n              </pek-product-category-picker>\n            </div>\n          </div>\n        </div>\n        <div class=\"product-add__box\">\n          <div class=\"form-group\" *ngIf=\"form.get('type').value === nomenclatureType.PURCHASED\">\n            <label for=\"bulk\">Bulk / With Serial Numbers*</label>\n            <p-dropdown\n              id=\"bulk\"\n              [options]=\"bulkOrSerial\"\n              formControlName=\"bulk_or_serial\"\n              optionLabel=\"label\"\n              optionValue=\"value\"\n            ></p-dropdown>\n          </div>\n          <div class=\"form-group\" *ngIf=\"type === 'edit'\">\n            <label for=\"id\">Id</label>\n            <input type=\"text\" id=\"id\" pInputText formControlName=\"codeId\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              [rows]=\"2\"\n              pInputTextarea\n              [autoResize]=\"false\"\n              formControlName=\"description\"\n            ></textarea>\n          </div>\n          <div class=\"form-group\" *ngIf=\"(product.parent || type === 'create') && isShowQuantity\">\n            <label for=\"quantity\">Quantity*</label>\n            <input type=\"number\" min=\"1\" step=\"1\" id=\"quantity\" pInputText formControlName=\"quantity\">\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport {ProductPrefix} from '../../models/prefix';\nimport {ModalService} from '@shared/services/modal.service';\nimport {PrefixService} from '../../services/prefix.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-prefixes',\n  templateUrl: './prefixes.component.html',\n  styleUrls: ['./prefixes.component.scss']\n})\nexport class PrefixesComponent implements OnInit, OnDestroy {\n  prefixes: ProductPrefix[] = [];\n  selectedPrefix: ProductPrefix;\n  isLoading = true;\n\n  constructor(\n    private prefixService: PrefixService,\n    public modalService: ModalService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getPrefixes();\n  }\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Prefix',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditPrefix()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemovePrefix()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  getPrefixes() {\n    this.prefixService.get().subscribe(prefixes => {\n      this.prefixes = prefixes;\n      this.isLoading = false;\n    });\n  }\n\n  onAddPrefix() {\n    this.prefixService.createEditPrefix('create').pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(prefix => {\n      if (prefix) {\n        this.prefixes.unshift(prefix);\n      }\n    });\n  }\n\n  onEditPrefix() {\n    this.prefixService.createEditPrefix('edit', this.selectedPrefix).subscribe(prefix => {\n      if (prefix) {\n        const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n        this.prefixes[index] = prefix;\n      }\n    });\n  }\n\n  onRemovePrefix() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.prefixService.delete(this.selectedPrefix.id).subscribe(() => {\n          const index = this.prefixes.findIndex(t => t.id === this.selectedPrefix.id);\n          this.prefixes.splice(index, 1);\n          this.selectedPrefix = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Prefixes</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Prefix\" (click)=\"onAddPrefix()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"prefixes.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedPrefix\"\n        [value]=\"prefixes\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedPrefix\">Choose the Prefix to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedPrefix\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-prefix let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"prefix\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{prefix.prefix}}</td>\n            <td style=\"width: 50%\">{{prefix.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"prefix.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && prefixes.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {cloneDeep} from 'lodash-es';\nimport {finalize, Subject, takeUntil} from 'rxjs';\nimport {TreeService} from '@shared/services/tree.service';\nimport {Category} from '../../models/category';\n\n@Component({\n  selector: 'pek-product-structure-categories',\n  templateUrl: './product-structure-categories.component.html',\n  styleUrls: ['./product-structure-categories.component.scss']\n})\nexport class ProductStructureCategoriesComponent implements OnInit, OnDestroy {\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[];\n  selectedCategory: TreeNode<ProductStructureCategory>;\n\n  isLoading = true;\n  isMovingDown = false;\n  isMovingUp = false;\n\n  expanseMap = {};\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Category',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditCategory()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveCategory()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private productStructureCategoryService: ProductStructureCategoryService,\n    private modalService: ModalService,\n    private readonly treeService: TreeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    if (this.categoriesTree) {\n      this.treeService.mapExpansion(this.categoriesTree, this.expanseMap);\n    }\n\n    this.categoriesTree = this.treeService.createTree(this.categories, this.expanseMap);\n  }\n\n  getMeasure(measure) {\n    if (measure != null) {\n      return measure.name + ' (' + measure.symbol + ')';\n    } else {\n      return '_';\n    }\n  }\n\n  findIndexToMove(selectedNodeId) {\n    let index;\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach((node, i) => {\n        if (node.data.id === selectedNodeId) {\n          index = i;\n          return;\n        } else {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n    return index;\n  }\n\n  down() {\n    const node = this.selectedCategory;\n\n    const index = this.findIndexToMove(node.data.id);\n\n    if ((index < node.parent?.children.length - 1 || (!node.parent && index < this.categoriesTree.length - 1)) && !this.isMovingDown) {\n      this.isMovingDown = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index + 1].data.id : this.categoriesTree[index + 1].data.id,\n        move_to: 'right'\n      };\n      this.productStructureCategoryService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingDown = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'down');\n      });\n    }\n  }\n\n  up() {\n    const node = this.selectedCategory;\n    const index = this.findIndexToMove(node.data.id);\n\n    if (index > 0 && !this.isMovingUp) {\n      this.isMovingUp = true;\n      const move = {\n        parent: node.parent ? node.parent.children[index - 1].data.id : this.categoriesTree[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.productStructureCategoryService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingUp = false)\n      ).subscribe(category => {\n        const index = this.categories.findIndex(c => c.id === node.data.id);\n        this.categories[index] = category;\n\n        this.productMoved(category, 'up');\n      });\n    }\n  }\n\n  productMoved(category: Category, direction: 'up' | 'down') {\n    let findedProduct: TreeNode<ProductStructureCategory>;\n    let parentProduct: TreeNode<ProductStructureCategory>;\n\n    const findProduct = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === category.id) {\n          findedProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findProduct(node.children);\n          }\n        }\n      });\n    };\n\n    const findParent = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === findedProduct.parent.data.id) {\n          parentProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findParent(node.children);\n          }\n        }\n      });\n    };\n\n    findProduct(this.categoriesTree);\n\n    if (findedProduct.parent) {\n      findParent(this.categoriesTree);\n    } else {\n      parentProduct = findedProduct;\n    }\n\n    if (findedProduct.parent) {\n      const index = parentProduct.children.findIndex(child => child.data.id === category.id);\n\n      if (direction === 'down') {\n        [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\n      } else {\n        [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\n      }\n    } else {\n      const index = this.categoriesTree.findIndex(node => node.data.id === category.id);\n\n      if (direction === 'down') {\n        [this.categoriesTree[index], this.categoriesTree[index + 1]] = [this.categoriesTree[index + 1], this.categoriesTree[index]];\n      } else {\n        [this.categoriesTree[index], this.categoriesTree[index - 1]] = [this.categoriesTree[index - 1], this.categoriesTree[index]];\n      }\n    }\n\n    this.categoriesTree = this.categoriesTree.map(node => node);\n  }\n\n  onCreateCategory() {\n    this.productStructureCategoryService.createEditCategory('create').subscribe(category => {\n      if (category) {\n        this.categories.unshift(category);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditCategory() {\n    this.productStructureCategoryService.createEditCategory('edit', this.selectedCategory.data).subscribe(category => {\n      if (category) {\n        const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n        this.categories[index] = category;\n        this.createTree();\n        this.selectedCategory = this.treeService.findSelectedNode(this.selectedCategory, this.categoriesTree);\n      }\n    });\n  }\n\n  onRemoveCategory() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productStructureCategoryService.delete(this.selectedCategory.data).subscribe(() => {\n          const index = this.categories.findIndex(t => t.id === this.selectedCategory.data.id);\n          this.categories.splice(index, 1);\n          this.selectedCategory = null;\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.categoriesTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.categoriesTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.categoriesTree = temp;\n    this.selectedCategory = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Product Structure Categories</h1>\n    </div>\n\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Category\" (click)=\"onCreateCategory()\"></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          [value]=\"categoriesTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedCategory\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex align-items-center\">\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-up\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"!selectedCategory\"\n                [loading]=\"isMovingUp\"\n                (click)=\"up()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-down\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"!selectedCategory\"\n                [loading]=\"isMovingDown\"\n                (click)=\"down()\"\n              ></button>\n\n              <p class=\"subtitle ml-1 mr-2\" *ngIf=\"!selectedCategory\">Choose the Category to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedCategory\"></p-menubar>\n\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 52px\">Name</th>\n              <th style=\"width: 30%\">Unit of Measure</th>\n              <th style=\"width: 35%\">Description</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n              <td style=\"width: 35%\">\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                {{rowData.name}}\n              </td>\n              <td style=\"width: 30%\">\n                {{getMeasure(rowData.unit_of_measure)}}\n              </td>\n              <td style=\"width: 35%\">\n                <ng-container>\n                  {{rowData.description}}\n                </ng-container>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NavigationLink} from '../../../layout/navigation-route';\n\n@Component({\n  selector: 'pek-product-structure-layout',\n  templateUrl: './product-structure-layout.component.html',\n  styleUrls: ['./product-structure-layout.component.scss']\n})\nexport class ProductStructureLayoutComponent implements OnInit {\n\n  routes: NavigationLink[] = [\n    {label: 'Products', commands: ['products']},\n    {label: 'Technologies', commands: ['technologies']},\n    {label: 'Prefixes', commands: ['prefixes']},\n    {label: 'Categories', commands: ['categories']},\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<pek-header\n  [module]=\"'Product Structure'\"\n  [routes]=\"routes\"\n></pek-header>\n<router-outlet></router-outlet>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductService} from '../../services/product.service';\nimport {FormBuilder} from '@angular/forms';\nimport {Product} from '../../models/product';\nimport {Table} from 'primeng/table';\nimport {finalize, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {cloneDeep} from 'lodash-es';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MakeRootProductComponent} from '../../modals/make-root-product/make-root-product.component';\nimport {MakeProductionListComponent} from '../../modals/make-production-list/make-production-list.component';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ENomenclatureType} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-product-structure-product',\n  templateUrl: './product-structure-product.component.html',\n  styleUrls: ['./product-structure-product.component.scss']\n})\nexport class ProductStructureProductComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('dt') dt: Table;\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\n\n  productsTree: TreeNode<Product>[];\n  selectedProduct: TreeNode<Product> = null;\n  products: Product[];\n\n  isMovingUp = false;\n  isMovingDown = false;\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Selected Product',\n      items: [\n        {\n          label: 'Add Item',\n          icon: 'pi pi-plus',\n          disabled: true,\n          command: () => this.onAddProduct(),\n        },\n        {\n          label: 'Make Production List',\n          icon: 'pi pi-box',\n          command: () => this.onOpenMakeProductionList(),\n        },\n        {\n          label: 'Make Root',\n          icon: 'pi pi-globe',\n          disabled: true,\n          command: () => this.onOpenMakeRoot(),\n        },\n        {\n          label: 'Upload Structure',\n          icon: 'pi pi-upload',\n          command: () => this.onUploadProductStructure(),\n        },\n        {\n          label: 'Files',\n          icon: 'pi pi-file',\n          command: () => this.onShowFiles(),\n        },\n        {\n          label: 'Images',\n          icon: 'pi pi-images',\n          command: () => this.onShowGallery(),\n        },\n        {\n          label: 'Edit',\n          icon: 'pi pi-pencil',\n          command: () => this.onEditProduct(),\n        },\n        {\n          label: 'Copy',\n          icon: 'pi pi-clone',\n          command: () => this.onCopyProduct(),\n        },\n        {\n          label: 'Remove',\n          icon: 'pi pi-trash',\n          command: () => this.onDeleteProduct(),\n        }\n      ]\n    }\n  ];\n\n  expanseMap = {};\n  sorted = false;\n  isLoading = true;\n\n  productId = this.route.snapshot.paramMap.get('id');\n\n  inputCodeSub: Subscription;\n  inputNameSub: Subscription;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly productService: ProductService,\n    private readonly modalService: ModalService,\n    private readonly fb: FormBuilder,\n    private readonly dialog: MatDialog,\n    private readonly router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  ngAfterViewInit() {\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchCodeInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'code', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'code');\n      });\n\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchNameInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'name', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'name');\n      });\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.productsTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.productsTree = temp;\n    this.selectedProduct = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  getProducts() {\n    if (this.productsTree) {\n      this.mapExpansion();\n    }\n\n    this.productService.getTree(Number(this.productId)).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(products => {\n        this.products = products;\n        if (!this.sorted) {\n          this.createTree();\n        } else {\n          this.sort();\n        }\n\n        this.isLoading = false;\n      }\n    );\n  }\n\n  filterProducts(event: any, field: string, mode: string) {\n    this.dt.filter(event, `nomenclature.${field}`, mode);\n  }\n\n  expandedFindProducts(value: string, field: string) {\n    this.selectedProduct = null;\n\n    this.productsTree.forEach(parent => {\n      parent.children.forEach(product => {\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\n          parent.expanded = true;\n        }\n      });\n    });\n  }\n\n  createTree() {\n    if (this.productsTree) {\n      this.mapExpansion();\n    }\n\n    const dd = [];\n    this.products.forEach(element => {\n      const ins = {data: element, expanded: false};\n      if (this.expanseMap) {\n        ins.expanded = this.expanseMap[element.id];\n      }\n      dd.push(ins);\n    });\n    let root;\n    const idMapping = dd.reduce((acc, el, i) => {\n      acc[el.data.id] = i;\n      return acc;\n    }, {});\n    dd.forEach(el => {\n      if (el.data.parent === null) {\n        root = el;\n        return;\n      }\n      const parentEl = dd[idMapping[el.data.parent]];\n\n      parentEl.children = [...(parentEl.children || []), el];\n      if (parentEl.children.length === 0) {\n        delete parentEl.children;\n      }\n    });\n    root.expanded = true;\n    this.productsTree = [root];\n    if (this.selectedProduct) {\n      this.getSelected(this.productsTree[0]);\n    }\n  }\n\n  down() {\n    const node = this.selectedProduct;\n\n    let index;\n    node.parent.children.forEach((element, i) => {\n      if (element.data.id === node.data.id) {\n        index = i;\n      }\n    });\n\n    if (index < node.parent.children.length - 1 && !this.isMovingDown) {\n      this.isMovingDown = true;\n      const move = {\n        parent: node.parent.children[index + 1].data.id,\n        move_to: 'right'\n      };\n      this.productService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingDown = false)\n      ).subscribe(product => {\n\n        this.productMoved(product, 'down');\n      });\n    }\n  }\n\n  up() {\n    const node = this.selectedProduct;\n\n    let index;\n    node.parent.children.forEach((element, i) => {\n      if (element.data.id === node.data.id) {\n        index = i;\n      }\n    });\n\n    if (index > 0 && !this.isMovingUp) {\n      this.isMovingUp = true;\n      const move = {\n        parent: node.parent.children[index - 1].data.id,\n        move_to: 'left'\n      };\n      this.productService.move(move, node.data.id).pipe(\n        finalize(() => this.isMovingUp = false)\n      ).subscribe(product => {\n        this.productMoved(product, 'up');\n      });\n    }\n  }\n\n  productMoved(product: Product, direction: 'up' | 'down') {\n    let findedProduct: TreeNode<Product>;\n    let parentProduct: TreeNode<Product>;\n\n    const findProduct = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === product.id) {\n          findedProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findProduct(node.children);\n          }\n        }\n      });\n    };\n\n    const findParent = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === findedProduct.parent.data.id) {\n          parentProduct = node;\n        } else {\n          if (node.children && node.children.length > 0) {\n            findParent(node.children);\n          }\n        }\n      });\n    };\n\n    findProduct(this.productsTree);\n    findParent(this.productsTree);\n\n    const index = parentProduct.children.findIndex(child => child.data.id === product.id);\n\n    if (direction === 'down') {\n      [parentProduct.children[index], parentProduct.children[index + 1]] = [parentProduct.children[index + 1], parentProduct.children[index]];\n    } else {\n      [parentProduct.children[index], parentProduct.children[index - 1]] = [parentProduct.children[index - 1], parentProduct.children[index]];\n    }\n\n    this.productsTree = this.productsTree.map(node => node);\n  }\n\n  sort() {\n    this.sorted = true;\n    const sortType = {'0': 3, '1': 1, '2': 2};\n    this.products.sort((a, b) => sortType[a.nomenclature.type] - sortType[b.nomenclature.type]);\n    this.createTree();\n  }\n\n  mapExpansion() {\n    this.productsTree.forEach(element => {\n      this.createExpanseMap(element);\n    });\n  }\n\n  getSelected(node) {\n    if (node.data.id == this.selectedProduct.data.id) {\n      this.selectedProduct = node;\n    } else {\n      if (node.children) {\n        node.children.forEach(element => {\n          this.getSelected(element);\n        });\n      }\n    }\n  }\n\n  createExpanseMap(node) {\n    if (node.expanded) {\n      this.expanseMap[node.data.id] = node.expanded;\n    } else {\n      this.expanseMap[node.data.id] = false;\n    }\n    if (node.children) {\n      node.children.forEach(element => {\n        this.createExpanseMap(element);\n      });\n    }\n  }\n\n  onSelectNode() {\n    if (this.selectedProduct) {\n      this.menuItems[0].items[0].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY || this.selectedProduct.data.parent === null);\n      this.menuItems[0].items[2].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY && this.selectedProduct.data.parent !== null);\n      this.menuItems[0].items[3].disabled = !(this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY);\n    }\n  }\n\n  onOpenMakeRoot() {\n    this.dialog.open(MakeRootProductComponent, {\n      width: '36rem',\n      data: this.selectedProduct.data,\n      autoFocus: false,\n      enterAnimationDuration: '250ms',\n      panelClass: 'modal_visible'\n    });\n  }\n\n  onOpenMakeProductionList() {\n    this.dialog.open(MakeProductionListComponent, {\n      width: '36rem',\n      data: {nomenclature: this.selectedProduct.data.nomenclature, rootId: this.productsTree[0].data.nomenclature.id},\n      autoFocus: false,\n      enterAnimationDuration: '250ms',\n    });\n  }\n\n  onEditProduct() {\n    this.productService.editProductModal(this.selectedProduct.data).subscribe(product => {\n      if (product) {\n        this.getProducts();\n      }\n    });\n  }\n\n  onCopyProduct() {\n    this.modalService.confirm('success').subscribe(confirm => {\n      if (confirm) {\n        this.productService.copyStructure({\n          nomenclature_id: this.selectedProduct.data.nomenclature.id,\n          parent_id: this.selectedProduct.data.parent,\n          name: this.selectedProduct.data.nomenclature.name\n        }).subscribe(products => {\n          if (products) {\n            this.getProducts();\n          }\n        });\n      }\n    });\n  }\n\n  onDeleteProduct() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productService.delete(this.selectedProduct.data.id).subscribe(() => {\n          const removeChildren = (id: number) => {\n            const ids: number[] = this.products.filter(p => p.parent === id).map(p => p.id);\n            this.products = [...this.products.filter(p => p.parent !== id)];\n\n            ids.forEach(id => {\n              removeChildren(id);\n            });\n          };\n\n          removeChildren(this.selectedProduct.data.id);\n\n          const index = this.products.findIndex(p => p.id === this.selectedProduct.data.id);\n\n          if (index >= 0) {\n            if (!this.products[index].parent) {\n              this.router.navigate(['../../'], {relativeTo: this.route});\n            } else {\n              this.products.splice(index, 1);\n              this.selectedProduct = null;\n              this.createTree();\n            }\n          }\n        });\n      }\n    });\n  }\n\n  onAddProduct() {\n    this.productService.addProductModal(this.selectedProduct.data.id).subscribe(products => {\n      if (products) {\n        console.log(products);\n        this.products = [...this.products, ...products];\n        // console.log(this.products);\n        // this.productsTree = [];\n        this.createTree();\n      }\n    });\n  }\n\n  onShowGallery() {\n    this.modalService.showImageGallery(this.selectedProduct.data.nomenclature.images).subscribe();\n  }\n\n  onUploadProductStructure() {\n    if (this.selectedProduct.data.nomenclature.type === ENomenclatureType.ASSEMBLY) {\n      this.productService.uploadProductStructureModal(this.selectedProduct.data.id).subscribe(response => {\n        if (response) {\n          this.getProducts();\n        }\n      });\n    }\n  }\n\n  onShowFiles() {\n    this.productService.showProductFiles(+this.productId).subscribe();\n  }\n\n  drop(event) {\n    const parent = this.products.find(x => x.id === event.container.data);\n    const child = this.products.find(x => x.id === event.item.data);\n    if (child.parent !== null && child.id !== parent.id) {\n      if (parent.nomenclature.type === ENomenclatureType.ASSEMBLY || parent.parent === null) {\n        if (child.id !== parent.id) {\n          const product = {\n            id: child.id,\n            parent: parent.id,\n          };\n\n          this.productService.updatePartly(product).subscribe(product => {\n            this.getProducts();\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.inputCodeSub.unsubscribe();\n    this.inputNameSub.unsubscribe();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Product Structure ({{!isLoading ? productsTree[0].data.nomenclature.name : '...'}})</h1>\n    </div>\n    <div class=\"page__tools\">\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchCodeInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by code\"\n        >\n      </div>\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchNameInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by name\"\n        >\n      </div>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"productsTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedProduct\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n          (onNodeSelect)=\"onSelectNode()\"\n          cdkDropListGroup\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex align-items-center\">\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-up\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"selectedProduct?.data.parent === null\"\n                [loading]=\"isMovingUp\"\n                (click)=\"up()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-arrow-down\"\n                class=\"p-button-rounded mr-2\"\n                [disabled]=\"selectedProduct?.data.parent === null\"\n                [loading]=\"isMovingDown\"\n                (click)=\"down()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-print\"\n                label=\"Print\"\n                class=\"mr-2\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-refresh\"\n                label=\"Sort\"\n                class=\"mr-2\"\n                (click)=\"sort()\"\n              ></button>\n              <p class=\"ml-1 subtitle\" *ngIf=\"!selectedProduct\">Choose the Product to edit</p>\n              <p-menubar\n                class=\"product-structure-bar ml-auto mr-2\"\n                [model]=\"menuItems\"\n                [class.disabled]=\"!selectedProduct\"\n              ></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 30%; padding-left: 40px\">Code</th>\n              <th style=\"width: 20%\">Name</th>\n              <th style=\"width: 7%\" class=\"text-center\">Quantity</th>\n              <th style=\"width: 6%\" class=\"text-center\">UOM</th>\n              <th style=\"width: 14%\" class=\"text-center\">Technologies</th>\n              <th style=\"width: 11%\" class=\"text-center\">Type</th>\n              <th style=\"width: 12%\" class=\"text-center\">Confirmation</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\n              <td\n                style=\"width: 30%\"\n                [ngStyle]=\"{'padding-left': rowNode.level * 0.5 + 'rem'}\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n                (cdkDropListDropped)=\"drop($event)\"\n                [cdkDropListData]=\"rowData.id\"\n                cdkDropList\n              >\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <span\n                    cdkDrag\n                    [cdkDragData]=\"rowData.id\"\n                    class=\"drag-cursor\"\n                  >\n                    {{rowData.nomenclature.code}}\n                  </span>\n                </div>\n              </td>\n              <td style=\"width: 20%\" [class.font-italic]=\"rowData.nomenclature.type !== '1'\">{{rowData.nomenclature.name}}</td>\n              <td\n                style=\"width: 7%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                {{rowData.quantity}}\n              </td>\n              <td\n                style=\"width: 6%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.category; else symbol\">\n                  {{rowData.nomenclature.category.unit_of_measure?.symbol}}\n                </ng-container>\n              </td>\n              <td\n                style=\"width: 14%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.technologies.length > 0\">\n                  <ng-container *ngFor=\"let tech of rowData.nomenclature.technologies; let idx = index\">\n                    {{tech.name}}<span *ngIf=\"idx !== rowData.nomenclature.technologies.length - 1\">,</span>\n                  </ng-container>\n                </ng-container>\n              </td>\n              <td style=\"width: 11%\" class=\"text-center\">\n                <ng-container [ngSwitch]=\"rowData.nomenclature.type\">\n                  <span *ngSwitchCase=\"'0'\" class=\"font-italic\">Purchased</span>\n                  <span *ngSwitchCase=\"'2'\" class=\"font-italic\">Manufactured</span>\n                  <ng-container *ngSwitchCase=\"'1'\">Assembly</ng-container>\n                </ng-container>\n              </td>\n              <td\n                style=\"width: 12%\"\n                class=\"text-center\"\n                [class.font-italic]=\"rowData.nomenclature.type !== '1'\"\n              >\n                <ng-container *ngIf=\"rowData.nomenclature.type === '0'\">\n                  <ng-container [ngSwitch]=\"rowData.nomenclature.approved\">\n                    <span *ngSwitchCase=\"'0'\" class=\"text-warning\">NEW</span>\n                    <span *ngSwitchCase=\"'1'\" class=\"text-success\">APPROVED</span>\n                    <span *ngSwitchCase=\"'2'\" class=\"text-danger\">DECLINED</span>\n                  </ng-container>\n                </ng-container>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"7\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #symbol>Pcs</ng-template>\n","import {AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {MenuItem, TreeNode} from 'primeng/api';\nimport {Product} from '../../models/product';\nimport {forkJoin, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\nimport {cloneDeep} from 'lodash-es';\nimport {Table} from 'primeng/table';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {ModalService} from '@shared/services/modal.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\n\n@Component({\n  selector: 'pek-product-structure-products-list',\n  templateUrl: './product-structure-products-list.component.html',\n  styleUrls: ['./product-structure-products-list.component.scss']\n})\nexport class ProductStructureProductsListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('dt') dt: Table;\n  @ViewChild('searchCodeInput') searchCodeInput: ElementRef;\n  @ViewChild('searchNameInput') searchNameInput: ElementRef;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Product',\n    items: [\n      {\n        label: 'Structure',\n        icon: 'pi pi-table',\n        command: () => this.goToProductStructure(),\n      },\n      {\n        label: 'Copy',\n        icon: 'pi pi-clone',\n        command: () => this.onCopyProduct(),\n      },\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditProduct(),\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveProduct(),\n      }\n    ]\n  }];\n\n  productsTree: TreeNode<Product & ProductStructureCategory>[] = [];\n  categories: ProductStructureCategory[];\n  selectedNode: TreeNode<Product>;\n  products: Product[];\n\n  inputCodeSub: Subscription;\n  inputNameSub: Subscription;\n\n  isLoading = true;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productService: ProductService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly productStructureCategoryServices: ProductStructureCategoryService,\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getProductsAndCategories();\n  }\n\n  ngAfterViewInit() {\n    this.inputCodeSub = fromEvent(this.searchCodeInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchCodeInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'code', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'code');\n      });\n\n    this.inputNameSub = fromEvent(this.searchNameInput.nativeElement, 'input')\n      .pipe(\n        map(() => this.searchNameInput.nativeElement.value),\n        tap(value => this.filterProducts(value, 'name', 'contains')),\n        debounceTime(299),\n      ).subscribe((value) => {\n        if (!value) {\n          this.onCollapseAll();\n          return;\n        }\n\n        this.expandedFindProducts(value, 'name');\n      });\n  }\n\n  filterProducts(event: any, field: string, mode: string) {\n    this.dt.filter(event, `nomenclature.${field}`, mode);\n  }\n\n  expandedFindProducts(value: string, field: string) {\n    this.selectedNode = null;\n\n    this.productsTree.forEach(parent => {\n      parent.children.forEach(product => {\n        if (product.data.nomenclature[field].toLowerCase().indexOf(value) >= 0) {\n          parent.expanded = true;\n        }\n      });\n    });\n  }\n\n  getProductsAndCategories() {\n    forkJoin({\n      products: this.productService.getRoots(),\n      categories: this.productStructureCategoryServices.get()\n    }).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(({products, categories}) => {\n      this.products = products;\n      this.categories = categories;\n      this.createTreeCategories();\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTreeCategories() {\n    this.productsTree.unshift({\n      // @ts-ignore\n      data: {name: 'Not category'},\n      expanded: false,\n      parent: null,\n      children: []\n    });\n\n    this.categories.filter(category => !category.parent).forEach(category => {\n      this.productsTree.push({\n        data: category,\n        expanded: false,\n        parent: null,\n        children: []\n      });\n    });\n\n    const addChildrenCategories = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        const childrenCategories = this.categories.filter(category => category.parent === node.data.id);\n\n        if (childrenCategories.length > 0) {\n          node.children = childrenCategories.map(category => {\n            return {\n              data: category,\n              expanded: false,\n              parent: null,\n              children: [],\n            };\n          });\n        }\n\n        if (node.children.length > 0) {\n          addChildrenCategories(node.children);\n        }\n      });\n    };\n\n    addChildrenCategories(this.productsTree);\n  }\n\n  clearTree() {\n    const clear = (nodes: TreeNode<Product & ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        node.children = [...node.children.filter(child => child.data.tree_id)];\n\n        clear(node.children);\n      });\n    };\n\n    clear(this.productsTree);\n  }\n\n  createTree() {\n    this.clearTree();\n\n    const addProductsToTree = (nodes: TreeNode<Product>[]) => {\n      nodes.forEach(node => {\n        const products = this.products.filter(p => p.nomenclature.root_category?.id === node.data.id);\n\n        node.children = [...node.children, ...products.map(product => {\n          return {\n            data: product,\n            expanded: false,\n            parent: null,\n            children: [],\n          };\n        })];\n\n        addProductsToTree(node.children);\n      });\n    };\n\n    this.productsTree = [...this.productsTree];\n\n    addProductsToTree(this.productsTree);\n  }\n\n  onExpandAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, true);\n    });\n    this.productsTree = temp;\n  }\n\n  onCollapseAll(): void {\n    const temp = cloneDeep(this.productsTree);\n    temp.forEach(node => {\n      this.expandCollapseRecursive(node, false);\n    });\n    this.productsTree = temp;\n    this.selectedNode = null;\n  }\n\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\n    node.expanded = isExpand;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.expandCollapseRecursive(childNode, isExpand);\n      });\n    }\n  }\n\n  onRemoveProduct() {\n    const product: Product = this.selectedNode.data;\n\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.productService.delete(product.id).subscribe(() => {\n          this.selectedNode = null;\n          const index = this.products.findIndex(p => p.id === product.id);\n          this.products.splice(index, 1);\n          this.createTree();\n        });\n      }\n    });\n  }\n\n  onCreateProduct() {\n    this.productService.createEditRootProduct('create').subscribe(product => {\n      if (product) {\n        this.products.unshift(<Product>product);\n        this.createTree();\n      }\n    });\n  }\n\n  onEditProduct() {\n    const product = {...<Product>this.selectedNode.data};\n    this.productService.createEditRootProduct('edit', product).subscribe(nomenclature => {\n      if (nomenclature) {\n        const index = this.products.findIndex(p => p.nomenclature.id === nomenclature.id);\n\n        if (index !== -1) {\n          this.products[index].nomenclature = nomenclature;\n          this.createTree();\n        }\n      }\n    });\n  }\n\n  onCopyProduct() {\n    const product = <Product>this.selectedNode.data;\n    this.productService.createEditRootProduct('copy', product).subscribe(products => {\n      if (products) this.updateProducts();\n    });\n  }\n\n  // временный метод до оптимизации\n  updateProducts() {\n    this.productService.getRoots().subscribe(products => {\n      this.products = products;\n      this.createTree();\n    });\n  }\n\n  goToProductStructure() {\n    this.router.navigate(['structure', this.selectedNode.data.id], {relativeTo: this.route}).then();\n  }\n\n  ngOnDestroy() {\n    this.inputCodeSub.unsubscribe();\n    this.inputNameSub.unsubscribe();\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Products</h1>\n    </div>\n    <div class=\"page__tools\">\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchCodeInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by code\"\n        >\n      </div>\n      <div class=\"p-input-icon-left mr-2\">\n        <i class=\"pi pi-search\"></i>\n        <input\n          #searchNameInput\n          pInputText\n          type=\"text\"\n          class=\"input-fill\"\n          placeholder=\"Search by name\"\n        >\n      </div>\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Product\" (click)=\"onCreateProduct()\"></button>\n    </div>\n  </div>\n\n  <div class=\"page__content\">\n    <div class=\"page__card\">\n      <div class=\"page__table\">\n        <p-treeTable\n          #dt\n          [value]=\"productsTree\"\n          selectionMode=\"single\"\n          [(selection)]=\"selectedNode\"\n          [scrollable]=\"true\"\n          scrollHeight=\"calc(100vh - 19.2rem)\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex\">\n              <p class=\"subtitle\" *ngIf=\"!selectedNode\">Choose the Product to edit</p>\n              <p-menubar class=\"ml-auto mr-2\" [model]=\"menuItems\" [class.disabled]=\"!selectedNode\"></p-menubar>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-down\"\n                label=\"Expand All\"\n                class=\"mr-2\"\n                (click)=\"onExpandAll()\"\n              ></button>\n              <button\n                pButton\n                type=\"button\"\n                icon=\"pi pi-angle-up\"\n                label=\"Collapse All\"\n                (click)=\"onCollapseAll()\"\n              ></button>\n            </div>\n          </ng-template>\n\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 35%; padding-left: 48px\">Code</th>\n              <th style=\"width: 35%\">Name</th>\n              <th style=\"width: 30%\">Description</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n            <tr\n              [ttRow]=\"rowNode\"\n              [ttSelectableRow]=\"rowNode\"\n              [ttSelectableRowDisabled]=\"!rowData.nomenclature\"\n              [class.disabled]=\"!rowData.nomenclature\"\n            >\n              <td style=\"width: 35%\">\n                <div class=\"table-toggle\">\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n                  <ng-container *ngIf=\"!rowData.nomenclature\">\n                  <span class=\"category-name\">{{rowData.name}}\n                  </span>\n                  </ng-container>\n                  {{rowData.nomenclature?.code}}\n                </div>\n              </td>\n              <td style=\"width: 35%\">\n                {{rowData.nomenclature?.name}}\n              </td>\n              <td style=\"width: 30%\">\n                {{rowData.nomenclature?.description}}\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td class=\"text-center p-4\" [attr.colspan]=\"3\">\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n                <span *ngIf=\"!isLoading\">No Records Found</span>\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ModalService} from '@shared/services/modal.service';\nimport {TechnologyService} from '../../services/technology.service';\nimport {Technology} from '../../models/technology';\nimport {MenuItem} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-technologies',\n  templateUrl: './technologies.component.html',\n  styleUrls: ['./technologies.component.scss']\n})\nexport class TechnologiesComponent implements OnInit, OnDestroy {\n  technologies: Technology[] = [];\n  selectedTechnology: Technology;\n  isLoading = true;\n\n  menuItems: MenuItem[] = [{\n    label: 'Selected Technology',\n    items: [\n      {\n        label: 'Edit',\n        icon: 'pi pi-pencil',\n        command: () => this.onEditTechnology()\n      },\n      {\n        label: 'Remove',\n        icon: 'pi pi-trash',\n        command: () => this.onRemoveTechnology()\n      }\n    ]\n  }];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private technologyService: TechnologyService,\n    public modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getTechnologies();\n  }\n\n  getTechnologies() {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.isLoading = false;\n    });\n  }\n\n  onAddTechnology() {\n    this.technologyService.createEditTechnology('create').subscribe(technology => {\n      if (technology) {\n        this.technologies.unshift(technology);\n      }\n    });\n  }\n\n  onEditTechnology() {\n    this.technologyService.createEditTechnology('edit', this.selectedTechnology).subscribe(technology => {\n      if (technology) {\n        const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n        this.technologies[index] = technology;\n        this.selectedTechnology = this.technologies[index];\n      }\n    });\n  }\n\n  onRemoveTechnology() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.technologyService.delete(this.selectedTechnology).subscribe(() => {\n          const index = this.technologies.findIndex(t => t.id === this.selectedTechnology.id);\n          this.technologies.splice(index, 1);\n          this.selectedTechnology = null;\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"page\">\n  <div class=\"page__header\">\n    <div class=\"page__title\">\n      <pek-module-icon [module]=\"'product-structure'\" [isActive]=\"true\"></pek-module-icon>\n      <h1>Technologies</h1>\n    </div>\n    <div class=\"page__tools\">\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Technology\" (click)=\"onAddTechnology()\"></button>\n    </div>\n  </div>\n</div>\n\n<div class=\"page__content\">\n  <div class=\"page__card\">\n    <div class=\"page__table\">\n      <p-table\n        #dt\n        selectionMode=\"single\"\n        scrollHeight=\"calc(100vh - 18.8rem)\"\n        [scrollable]=\"true\"\n        [paginator]=\"technologies.length > 0\"\n        [rows]=\"10\"\n        [(selection)]=\"selectedTechnology\"\n        [value]=\"technologies\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"d-flex\">\n            <p class=\"subtitle\" *ngIf=\"!selectedTechnology\">Choose the Technology to edit</p>\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedTechnology\"></p-menubar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 50%\">Description</th>\n            <th class=\"text-center\" style=\"width: 15%\">Type</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-technology let-i=\"rowIndex\">\n          <tr [pSelectableRow]=\"technology\">\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n            <td style=\"width: 30%\">{{technology.name}}</td>\n            <td style=\"width: 50%\">{{technology.description}}</td>\n            <td class=\"text-center\" style=\"width: 15%\">\n              <ng-container [ngSwitch]=\"technology.service_or_material\">\n                <span *ngSwitchCase=\"'0'\">\n                  Service\n                </span>\n                <span *ngSwitchCase=\"'1'\">\n                  Material\n                </span>\n              </ng-container>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"paginatorright\">\n          <p-button\n            type=\"button\"\n            (click)=\"dt.paginator=false\"\n            styleClass=\"p-button-text\"\n          >All\n          </p-button>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"!dt.paginator && !isLoading && technologies.length > 0\" class=\"paginator-return-pagination\">\n      <p-button\n        type=\"button\"\n        (click)=\"dt.paginator=true\"\n        styleClass=\"p-button-text\"\n      >\n        Return pagination\n      </p-button>\n    </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ENomenclatureApproval, ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\r\nimport {ProductService} from '../../services/product.service';\r\nimport {finalize, fromEvent, Subject, Subscription, takeUntil} from 'rxjs';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {debounceTime, map, tap} from 'rxjs/operators';\r\nimport {Category} from '../../models/category';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {Table} from 'primeng/table';\r\nimport {Product} from '../../models/product';\r\n\r\n@Component({\r\n  selector: 'pek-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('searchBoxName') searchBoxName;\r\n  @ViewChild('searchBoxCode') searchBoxCode;\r\n  @ViewChild('dt') table: Table;\r\n\r\n  isCreateFormInvalid: boolean = true;\r\n  createFormValue: Partial<Nomenclature & Product>;\r\n\r\n  mode: 'add' | 'create' = 'add';\r\n\r\n  inputCodeSub: Subscription;\r\n  inputNameSub: Subscription;\r\n\r\n  isStartOnePage = false;\r\n  isSelectNomenclature = false;\r\n  isLoading = false;\r\n  isSaving = false;\r\n\r\n  nomenclatures: Nomenclature[] = [];\r\n  countNomenclatures = 0;\r\n\r\n  selectedNomenclature: Nomenclature = null;\r\n\r\n  nomenclatureType = ENomenclatureType;\r\n  nomenclatureApproval = ENomenclatureApproval;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    page: [1],\r\n    name: [''],\r\n    code: [''],\r\n    category: [''],\r\n    type: [null],\r\n  });\r\n\r\n  sendForm: FormGroup = this.fb.group({\r\n    quantity: [1, [Validators.min(1), Validators.required]],\r\n  });\r\n\r\n  query: QuerySearch[] = [\r\n    {name: 'page', value: this.searchForm.get('page').value},\r\n    {name: 'paginated', value: true}\r\n  ];\r\n\r\n  queryKey = 'name:/code:/category:';\r\n\r\n  newProduct: Partial<Product> = {\r\n    nomenclature: {\r\n      id: null,\r\n      category: null,\r\n      technologies: [],\r\n      images: [],\r\n      type: null,\r\n    }\r\n  };\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly dialogRef: MatDialogRef<AddProductComponent>,\r\n    private readonly productService: ProductService,\r\n    private readonly nomenclatureService: NomenclatureService,\r\n    public readonly adapterService: AdapterService,\r\n    @Inject(MAT_DIALOG_DATA) private parentId: number,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputNameSub = fromEvent(this.searchBoxName.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedNomenclature = null),\r\n        map(() => this.searchBoxName.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n        this.searchNomenclatures();\r\n      });\r\n\r\n    this.inputCodeSub = fromEvent(this.searchBoxCode.nativeElement, 'keyup')\r\n      .pipe(\r\n        tap(() => this.selectedNomenclature = null),\r\n        map(() => this.searchBoxCode.nativeElement.value),\r\n        debounceTime(350),\r\n      ).subscribe(() => {\r\n        this.searchNomenclatures();\r\n      });\r\n  }\r\n\r\n  getNomenclatures() {\r\n    this.nomenclatureService.getForPagination(this.query).pipe(\r\n      takeUntil(this.destroy$)\r\n    ).subscribe(nomenclatures => {\r\n      this.nomenclatures = nomenclatures.results;\r\n      this.countNomenclatures = nomenclatures.count;\r\n\r\n      if (this.isStartOnePage) {\r\n        this.paginator.changePage(0);\r\n      }\r\n\r\n      this.isStartOnePage = false;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  choiceType(type: ENomenclatureType) {\r\n    this.searchForm.get('type').patchValue(type);\r\n\r\n    this.query.push({\r\n      name: 'type',\r\n      value: this.searchForm.get('type').value\r\n    });\r\n\r\n    this.newProduct.nomenclature.type = type;\r\n\r\n    this.isSelectNomenclature = true;\r\n    this.isLoading = true;\r\n    this.dialogRef.updateSize('92rem', 'auto');\r\n\r\n    this.getNomenclatures();\r\n  }\r\n\r\n  searchNomenclatures() {\r\n\r\n    this.destroy$.next(true);\r\n    this.isLoading = true;\r\n\r\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/category:${this.searchForm.get('category').value}`;\r\n\r\n    // если значения фильтров изменились, начинаем с 1 страницы\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n      this.searchForm.get('page').patchValue(1);\r\n      this.isStartOnePage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'page', value: this.searchForm.get('page').value},\r\n      {name: 'paginated', value: true},\r\n      {name: 'type', value: this.searchForm.get('type').value}\r\n    ];\r\n\r\n    if (this.searchForm.get('name').value) {\r\n      this.query.push({name: 'name', value: this.searchForm.get('name').value});\r\n    }\r\n\r\n    if (this.searchForm.get('code').value) {\r\n      this.query.push({name: 'code', value: encodeURIComponent(this.searchForm.get('code').value)});\r\n    }\r\n\r\n    if (this.searchForm.get('category').value) {\r\n      this.query.push({name: 'category', value: this.searchForm.get('category').value});\r\n    }\r\n\r\n    this.getNomenclatures();\r\n  }\r\n\r\n  paginate(evt: any) {\r\n    if (this.searchForm.get('page').value !== evt.page + 1 && !this.isStartOnePage) {\r\n      this.selectedNomenclature = null;\r\n      this.searchForm.get('page').patchValue(evt.page + 1);\r\n      this.searchNomenclatures();\r\n    }\r\n  }\r\n\r\n  onAddProduct() {\r\n    this.isSaving = true;\r\n\r\n    const send: any = {\r\n      nomenclature: this.selectedNomenclature.id,\r\n      parent: this.parentId,\r\n      quantity: this.sendForm.get('quantity').value,\r\n    };\r\n\r\n    this.productService.addProduct(send)\r\n      .pipe(finalize(() => this.isSaving = false))\r\n      .subscribe(products => {\r\n        this.dialogRef.close(products);\r\n      });\r\n  }\r\n\r\n  choiceCategory(category: Category) {\r\n    if (category) {\r\n      this.searchForm.get('category').patchValue(category.name);\r\n    } else {\r\n      this.searchForm.get('category').patchValue('');\r\n    }\r\n    this.searchNomenclatures();\r\n  }\r\n\r\n  resetSendForm() {\r\n    this.sendForm.get('quantity').patchValue(1);\r\n  }\r\n\r\n  onOpenLink(description: string) {\r\n    window.open(description, '_blank');\r\n    this.selectedNomenclature = null;\r\n    this.table.expandedRowKeys = {};\r\n    this.resetSendForm();\r\n  }\r\n\r\n  onChangeMode(mode: 'add' | 'create') {\r\n    this.mode = mode;\r\n\r\n    if (this.searchForm.get('type').value === ENomenclatureType.PURCHASED) {\r\n      this.dialogRef.updateSize('50rem', 'auto');\r\n    } else {\r\n      this.dialogRef.updateSize('60rem', 'auto');\r\n    }\r\n\r\n    this.dialogRef.removePanelClass('modal-picker');\r\n    this.dialogRef.addPanelClass('modal-overflow-visible');\r\n  }\r\n\r\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\r\n    this.createFormValue = data.formValue;\r\n    this.isCreateFormInvalid = data.invalid;\r\n  }\r\n\r\n  onCreateProduct() {\r\n    if (!this.isCreateFormInvalid) {\r\n      this.isSaving = true;\r\n\r\n      const send: Partial<Nomenclature> = {\r\n        name: this.createFormValue.name,\r\n        code: this.createFormValue.code,\r\n        description: this.createFormValue.description,\r\n        type: this.createFormValue.type,\r\n      };\r\n\r\n      if (this.createFormValue.type === ENomenclatureType.PURCHASED) {\r\n        send.category = this.createFormValue.category;\r\n        send.bulk_or_serial = this.createFormValue.bulk_or_serial;\r\n        delete send.code;\r\n      } else {\r\n        send.technologies = [...this.createFormValue.technologies];\r\n        send.category = null;\r\n      }\r\n\r\n      this.nomenclatureService.create(send).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(nomenclature => {\r\n        this.isSaving = true;\r\n\r\n        const send = [];\r\n\r\n        if (this.newProduct.nomenclature.images.length > 0) {\r\n          this.newProduct.nomenclature.images.forEach(file => {\r\n            send.push({\r\n              nomenclature: nomenclature.id,\r\n              image: file.file,\r\n            });\r\n          });\r\n\r\n          this.nomenclatureService.uploadImagesSeveral(send).pipe(\r\n            finalize(() => this.isSaving = false)\r\n          ).subscribe(images => {\r\n            this.isSaving = true;\r\n            this.addProduct(nomenclature.id, this.createFormValue.quantity, images);\r\n          });\r\n        } else {\r\n          this.isSaving = true;\r\n          this.addProduct(nomenclature.id, this.createFormValue.quantity, []);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addProduct(id: number, quantity: number, images: NomenclatureImage[]) {\r\n    const send: Partial<Product> = {\r\n      // @ts-ignore\r\n      nomenclature: id,\r\n      parent: this.parentId,\r\n      quantity,\r\n    };\r\n    this.productService.addProduct(send).pipe(\r\n      finalize(() => this.isSaving = false)\r\n    ).subscribe(products => {\r\n      products[0].nomenclature.images = [...images];\r\n      this.dialogRef.close(products);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.inputNameSub.unsubscribe();\r\n    this.inputCodeSub.unsubscribe();\r\n    this.destroy$.next(true);\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  onRemoveImage(idx: number) {\r\n    this.newProduct.nomenclature.images.splice(idx, 1);\r\n  }\r\n\r\n  onUploadImage(files: File[]) {\r\n    files.forEach(file => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = (fileLoadedEvent) => {\r\n        const srcData = fileLoadedEvent.target.result;\r\n\r\n        const newImage: NomenclatureImage = {\r\n          file,\r\n          image: srcData,\r\n          id: null\r\n        };\r\n\r\n        this.newProduct.nomenclature.images.push(newImage);\r\n      };\r\n\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header modal-header_vertical\">\r\n  <div class=\"add-product__header-wrapper\">\r\n    <div class=\"add-product__header\">\r\n      <h2 class=\"modal-header__title\">\r\n        {{mode === 'add' ? 'Add' : 'Create'}} new Position\r\n        <ng-container *ngIf=\"mode === 'create'\">\r\n          <span\r\n            class=\"hint\"\r\n            pTooltip=\"To paste the image, copy it and press «Ctrl + V»\"\r\n            tooltipPosition=\"top\"\r\n          >\r\n            <i>?</i>\r\n          </span>\r\n        </ng-container>\r\n      </h2>\r\n\r\n      <p *ngIf=\"mode === 'add' && this.searchForm.get('type').value\">\r\n        Please search the Item from Catalogue (If not found Create a New Position)\r\n      </p>\r\n    </div>\r\n\r\n    <div\r\n      class=\"ml-auto\"\r\n      *ngIf=\"mode === 'add' && this.searchForm.get('type').value\"\r\n    >\r\n      <button\r\n        pButton\r\n        label=\"Or create New Position\"\r\n        icon=\"pi pi-plus\"\r\n        type=\"button\"\r\n        (click)=\"onChangeMode('create')\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <div class=\"form\" [class.hide]=\"!searchForm.get('type').value\">\r\n      <form [formGroup]=\"searchForm\">\r\n        <div\r\n          class=\"form-box\"\r\n          [class.form-box_2]=\"this.searchForm.get('type').value !== nomenclatureType.PURCHASED\"\r\n          [class.form-box_3]=\"this.searchForm.get('type').value === nomenclatureType.PURCHASED\"\r\n        >\r\n          <div class=\"form-group\">\r\n            <label for=\"code\">Code</label>\r\n            <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"this.searchForm.get('type').value === nomenclatureType.PURCHASED\">\r\n            <label>Categories</label>\r\n            <pek-product-category-picker (choiceCategory)=\"choiceCategory($event)\"></pek-product-category-picker>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <ng-container *ngIf=\"searchForm.get('type').value; else selectionType\">\r\n      <div class=\"table-pagination-preloader\">\r\n        <p-table\r\n          #dt\r\n          (onRowExpand)=\"resetSendForm()\"\r\n          [value]=\"nomenclatures\"\r\n          [(selection)]=\"selectedNomenclature\"\r\n          [rows]=\"10\"\r\n          dataKey=\"id\"\r\n          selectionMode=\"single\"\r\n          rowExpandMode=\"single\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 7%\" class=\"text-center\">#</th>\r\n              <th style=\"width: 25%\">Code</th>\r\n              <th style=\"width: 25%\">Name</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">UOM</th>\r\n              <th style=\"width: 33%\">Description</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"product\" [pRowToggler]=\"product\">\r\n              <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\r\n              <td style=\"width: 25%\">{{product.code}}</td>\r\n              <td style=\"width: 25%\">\r\n                <ng-container\r\n                  *ngIf=\"product.approved === nomenclatureApproval.NEW && product.type === nomenclatureType.PURCHASED\">\r\n                  <span class=\"badge badge_warning \">NEW</span>\r\n                </ng-container>\r\n                {{product.name}}\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                {{product.category?.unit_of_measure?.symbol ? product.category?.unit_of_measure?.symbol : 'Pcs' }}\r\n              </td>\r\n              <td style=\"width: 33%\" class=\"word-break\" [pRowToggler]=\"product\">\r\n                <a\r\n                  *ngIf=\"adapterService.isValidHttpUrl(product.description); else productDescription\"\r\n                  (click)=\"onOpenLink(product.description)\"\r\n                  target=\"_blank\"\r\n                >\r\n                  {{product.description}}\r\n                </a>\r\n\r\n                <ng-template #productDescription>\r\n                  {{product.description}}\r\n                </ng-template>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"rowexpansion\">\r\n            <tr class=\"disabled\">\r\n              <td colspan=\"5\">\r\n                <form [formGroup]=\"sendForm\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"quantity\">Quantity (Quantity can't be less than one)</label>\r\n                    <input id=\"quantity\" min=\"1\" class=\"form-control\" type=\"number\" pInputText\r\n                           formControlName=\"quantity\">\r\n                  </div>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-3\" [attr.colspan]=\"5\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n\r\n        <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\r\n          <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"mode === 'create'\">\r\n    <pek-create-edit-form\r\n      [product]=\"newProduct\"\r\n      (formChange)=\"onChangeFormValue($event)\"\r\n      (uploadImage)=\"onUploadImage($event)\"\r\n      (removeImage)=\"onRemoveImage($event)\"\r\n      type=\"create\"\r\n    ></pek-create-edit-form>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions class=\"justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n\r\n  <ng-container *ngIf=\"mode === 'add'\">\r\n    <p-paginator\r\n      #paginator\r\n      [class.hide]=\"countNomenclatures === 0\"\r\n      [rows]=\"10\"\r\n      [totalRecords]=\"countNomenclatures\"\r\n      (onPageChange)=\"paginate($event)\"\r\n    >\r\n    </p-paginator>\r\n    <button\r\n      *ngIf=\"searchForm.get('type').value\"\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Add\"\r\n      class=\"p-button-success\"\r\n      [disabled]=\"!selectedNomenclature || sendForm.invalid\"\r\n      [loading]=\"isSaving\"\r\n      (click)=\"onAddProduct()\"\r\n    ></button>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"mode === 'create'\">\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Create\"\r\n      class=\"p-button-success\"\r\n      [disabled]=\"isCreateFormInvalid\"\r\n      [loading]=\"isSaving\"\r\n      (click)=\"onCreateProduct()\"\r\n    ></button>\r\n  </ng-container>\r\n\r\n</mat-dialog-actions>\r\n\r\n<ng-template #selectionType>\r\n  <div class=\"add-product\">\r\n    <h3>Please select the type of new position</h3>\r\n\r\n    <div class=\"add-product__buttons\">\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Purchased\"\r\n        (click)=\"choiceType(nomenclatureType.PURCHASED)\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Assembly\"\r\n        (click)=\"choiceType(nomenclatureType.ASSEMBLY)\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Manufactured\"\r\n        (click)=\"choiceType(nomenclatureType.MANUFACTURED)\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ProductPrefix} from '../../models/prefix';\nimport {PrefixService} from '../../services/prefix.service';\n\n@Component({\n  selector: 'pek-create-edit-prefix',\n  templateUrl: './create-edit-prefix.component.html',\n  styleUrls: ['./create-edit-prefix.component.scss']\n})\nexport class CreateEditPrefixComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    prefix: ['', [Validators.required]],\n    description: [''],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly prefixService: PrefixService,\n    private dialogRef: MatDialogRef<CreateEditPrefixComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, prefix: ProductPrefix }\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.prefix.id));\n      this.form.patchValue(this.data.prefix);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createPrefix();\n        break;\n      }\n      case 'edit': {\n        this.editPrefix();\n        break;\n      }\n    }\n  }\n\n  createPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.create(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editPrefix() {\n    const send = <Partial<ProductPrefix>>this.form.value;\n    this.prefixService.update(send).subscribe({\n      next: prefix => this.dialogRef.close(prefix),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Prefix\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"prefix\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {ProductStructureCategoryService} from '../../services/product-structure-category.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\n\n@Component({\n  selector: 'pek-create-edit-product-structure-category',\n  templateUrl: './create-edit-product-structure-category.component.html',\n  styleUrls: ['./create-edit-product-structure-category.component.scss']\n})\nexport class CreateEditProductStructureCategoryComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    description: ['', Validators.required],\n    unit_of_measure: [0],\n    parent: [null],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly productStructureCategoryService: ProductStructureCategoryService,\n    private dialogRef: MatDialogRef<CreateEditProductStructureCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: Partial<ProductStructureCategory> }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      const category = this.data.category;\n      this.form.addControl('id' as any, new FormControl(category.id));\n      this.form.get('name').patchValue(category.name);\n      this.form.get('description').patchValue(category.description);\n      this.form.get('parent').patchValue(category.parent);\n      this.form.get('unit_of_measure').patchValue(this.data.category.unit_of_measure.id);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCategory();\n        break;\n      }\n    }\n  }\n\n  createCategory() {\n    const send = <any>this.form.value;\n    this.productStructureCategoryService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCategory() {\n    const send = <any>this.form.value;\n    this.productStructureCategoryService.updatePartly(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectMeasureUnit(id: number) {\n    this.form.get('unit_of_measure').patchValue(id);\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('parent').patchValue(category.id);\n    } else {\n      this.form.get('parent').patchValue(null);\n    }\n  }\n}\n","<div class=\"create-edit-product-structure-category\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Product Structure\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description*</label>\n        <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\"\n                  formControlName=\"description\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label>Unit of measure*</label>\n        <pek-unit-measure-picker\n          [currentMeasureUnitId]=\"form.get('unit_of_measure').value\"\n          (selectMeasureUnit)=\"onSelectMeasureUnit($event)\"\n        ></pek-unit-measure-picker>\n      </div>\n      <div class=\"form-group\">\n        <label>Parent Category</label>\n        <pek-product-structure-category-picker\n          [ignoredCategoryId]=\"data.category?.id\"\n          [currentCategoryId]=\"form.get('parent').value\"\n          (choiceCategory)=\"onSelectCategory($event)\"\n        ></pek-product-structure-category-picker>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid || !form.get('unit_of_measure').value\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ProductService} from '../../services/product.service';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {finalize} from 'rxjs';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\nimport {Nomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-create-edit-root-product',\n  templateUrl: './create-edit-root-product.component.html',\n  styleUrls: ['./create-edit-root-product.component.scss']\n})\nexport class CreateEditRootProductComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    code: ['', Validators.required],\n    description: [''],\n    type: [1],\n    root_category: [null],\n  });\n\n  isCategoryDisabled: boolean = false;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly productService: ProductService,\n    private dialogRef: MatDialogRef<CreateEditRootProductComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, product: Partial<Product> }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type !== 'create') {\n      const nomenclature: Partial<Nomenclature> = this.data.product.nomenclature;\n      this.form.addControl('id' as any, new FormControl(this.data.product.id));\n      // @ts-ignore\n      this.form.patchValue(nomenclature);\n\n      if (nomenclature.root_category) {\n        this.form.get('root_category').patchValue(nomenclature.root_category.id);\n      }\n    }\n\n    if (this.data.type === 'copy') {\n      this.isCategoryDisabled = true;\n      this.form.get('code').disable();\n      this.form.get('description').disable();\n    }\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('root_category').patchValue(category.id);\n    } else {\n      this.form.get('root_category').patchValue(null);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n    const send: any = this.form.value;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createProduct(send);\n        break;\n      }\n      case 'edit': {\n        this.editProduct(send);\n        break;\n      }\n      case 'copy': {\n        this.copyProduct();\n        break;\n      }\n    }\n  }\n\n  createProduct(send: any) {\n    this.nomenclatureService.create(send).subscribe({\n      next: (nomenclature) => {\n        if (nomenclature) {\n          // @ts-ignore\n          this.productService.addProduct({nomenclature: nomenclature.id}).pipe(\n            finalize(() => this.isSaving = false)\n          ).subscribe(products => this.dialogRef.close(products[0]));\n        }\n      },\n      error: () => this.isSaving = false\n    });\n  }\n\n  editProduct(send: any) {\n    this.nomenclatureService.updatePartly(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(product => this.dialogRef.close(product));\n  }\n\n  copyProduct() {\n    const send = {\n      nomenclature_id: this.form.get('id').value,\n      parent_id: null,\n      name: this.form.get('name').value,\n    };\n\n    this.productService.copyStructure(send).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(products => this.dialogRef.close(products));\n  }\n}\n","<div class=\"create-edit-root-product\">\n\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header__title\">\n      {{data.type}} Product\n    </h2>\n  </div>\n\n  <mat-dialog-content>\n    <form [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label>Category</label>\n        <pek-product-structure-category-picker\n          [currentCategoryId]=\"form.get('root_category').value\"\n          [isDisabled]=\"isCategoryDisabled\"\n          (choiceCategory)=\"onSelectCategory($event)\"\n        ></pek-product-structure-category-picker>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name\">Name*</label>\n        <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"code\">Code*</label>\n        <input type=\"text\" id=\"code\" pInputText formControlName=\"code\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\"\n                  formControlName=\"description\"></textarea>\n      </div>\n    </form>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class=\"justify-content-between\">\n    <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      [label]=\"data.type\"\n      [loading]=\"isSaving\"\n      [disabled]=\"form.invalid\"\n      (click)=\"onSave()\"\n    ></button>\n  </mat-dialog-actions>\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {Technology} from '../../models/technology';\nimport {TechnologyService} from '../../services/technology.service';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Component({\n  selector: 'pek-create-edit-technology',\n  templateUrl: './create-edit-technology.component.html',\n  styleUrls: ['./create-edit-technology.component.scss']\n})\nexport class CreateEditTechnologyComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', Validators.required],\n    service_or_material: [null, Validators.required]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly technologyService: TechnologyService,\n    private dialogRef: MatDialogRef<CreateEditTechnologyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, technology: Technology }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.technology.id));\n      this.form.patchValue(this.data.technology);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createTechnology();\n        break;\n      }\n      case 'edit': {\n        this.editTechnology();\n        break;\n      }\n    }\n  }\n\n  createTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.create(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editTechnology() {\n    const send = <Partial<Technology>>this.form.value;\n    this.technologyService.update(send).subscribe({\n      next: technology => this.dialogRef.close(technology),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Technology\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Namea*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label>Type*</label>\n      <div class=\"column\">\n        <p-radioButton\n          class=\"mr-3\"\n          name=\"service_or_material\"\n          label=\"Service\"\n          value=\"0\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n        <p-radioButton\n          name=\"service_or_material\"\n          label=\"Material\"\n          value=\"1\"\n          formControlName=\"service_or_material\">\n        </p-radioButton>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder} from '@angular/forms';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ProductService} from '../../services/product.service';\nimport {finalize, forkJoin} from 'rxjs';\n\n@Component({\n  selector: 'pek-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.scss']\n})\nexport class EditProductComponent implements OnInit {\n  isSaving: boolean = false;\n  isFormInvalid: boolean = true;\n\n  formValue: Partial<Product & Nomenclature>;\n  quantity: number;\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private readonly productService: ProductService,\n    private readonly dialogRef: MatDialogRef<EditProductComponent>,\n    @Inject(MAT_DIALOG_DATA) public product: Product,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.product.nomenclature.type !== ENomenclatureType.PURCHASED) {\n      this.dialogRef.updateSize('60rem', 'auto');\n    }\n  }\n\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\n    this.formValue = data.formValue;\n    this.isFormInvalid = data.invalid;\n  }\n\n  onUploadImage(files: File[]) {\n    files.forEach(newFile => {\n      const send = {\n        nomenclature: this.product.nomenclature.id,\n        image: newFile,\n      };\n\n      this.nomenclatureService.uploadImage(send).subscribe(image => {\n        this.product.nomenclature.images.push(image);\n      });\n    });\n  }\n\n  onRemoveImage(index: number) {\n    this.nomenclatureService.removeImage(this.product.nomenclature.images[index].id).subscribe(() => {\n      this.product.nomenclature.images.splice(index, 1);\n    });\n  }\n\n  onUpdateProduct() {\n    if (!this.isFormInvalid) {\n      this.isSaving = true;\n\n      const send: Partial<Nomenclature> = {\n        id: this.product.nomenclature.id,\n        name: this.formValue.name,\n        code: this.formValue.code,\n        description: this.formValue.description,\n        type: this.formValue.type,\n      };\n\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\n        send.category = this.formValue.category;\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\n        delete send.code\n      } else {\n        send.technologies = [...this.formValue.technologies];\n        send.category = null;\n      }\n\n      const sendUpdateQuantity: Partial<Product> = {\n        id: this.product.id,\n        quantity: this.formValue.quantity,\n      };\n\n      if (this.product.parent && this.product.nomenclature.type !== ENomenclatureType.ASSEMBLY) {\n        forkJoin({\n          nomenclature: this.nomenclatureService.update(send),\n          product: this.productService.updatePartly(sendUpdateQuantity),\n        }).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(({nomenclature, product}) => {\n          this.dialogRef.close({nomenclature, product});\n        });\n      } else {\n        this.nomenclatureService.update(send).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(nomenclature => {\n          this.dialogRef.close({nomenclature, product: null});\n        });\n      }\n    }\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Edit Product\n\n    <span\n      class=\"hint\"\n      pTooltip=\"To paste the image, copy it and press «Ctrl + V»\"\n      tooltipPosition=\"top\"\n    >\n      <i>?</i>\n    </span>\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <pek-create-edit-form\n    [product]=\"product\"\n    (formChange)=\"onChangeFormValue($event)\"\n    (uploadImage)=\"onUploadImage($event)\"\n    (removeImage)=\"onRemoveImage($event)\"\n  ></pek-create-edit-form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Edit\"\n    class=\"p-button-success\"\n    [disabled]=\"isFormInvalid\"\n    [loading]=\"isSaving\"\n    (click)=\"onUpdateProduct()\"\n  ></button>\n</mat-dialog-actions>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ProductService} from '../../services/product.service';\nimport {Nomenclature} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-make-production-list',\n  templateUrl: './make-production-list.component.html',\n  styleUrls: ['./make-production-list.component.scss']\n})\nexport class MakeProductionListComponent implements OnInit {\n  isSaving: boolean = false;\n\n  form: FormGroup = this.fb.group({\n    nomenclature: [null],\n    quantity: [1, [Validators.required, Validators.min(1)]],\n    is_grouped: [false],\n    root_nomenclature: [null]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeProductionListComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public data: { nomenclature: Nomenclature, rootId: number }\n  ) { }\n\n  ngOnInit(): void {\n    this.form.get('is_grouped').disable();\n    this.form.get('nomenclature').patchValue(this.data.nomenclature.id);\n    this.form.get('root_nomenclature').patchValue(this.data.rootId);\n  }\n\n  onChangeQuantity() {\n    if (this.form.get('quantity').value < 1) {\n      this.form.get('quantity').patchValue(1);\n    } else {\n      if (this.form.get('quantity').value <= 1) {\n        this.form.get('is_grouped').disable();\n        this.form.get('is_grouped').patchValue(false);\n      } else {\n        this.form.get('is_grouped').enable();\n      }\n    }\n  }\n\n  onMakeProductionList(): void {\n    this.isSaving = true;\n    const send = {...this.form.value};\n    this.productService.makeProductionList(send).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Production List from &laquo;{{data.nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Number Of Sets</label>\n      <input type=\"number\" pInputText class=\"form-control\" formControlName=\"quantity\" (ngModelChange)=\"onChangeQuantity()\">\n    </div>\n    <div class=\"form-group\">\n      <p-checkbox label=\"Group Production Plan\" [binary]=\"true\" formControlName=\"is_grouped\"></p-checkbox>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeProductionList()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Product} from '../../models/product';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProductService} from '../../services/product.service';\nimport {ProductStructureCategory} from '../../models/product-structure-category';\n\n@Component({\n  selector: 'pek-make-root-product',\n  templateUrl: './make-root-product.component.html',\n  styleUrls: ['./make-root-product.component.scss']\n})\nexport class MakeRootProductComponent implements OnInit {\n  isSaving: boolean = false;\n  form: FormGroup = this.fb.group({\n    category: [null, Validators.required]\n  })\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<MakeRootProductComponent>,\n    private readonly productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public product: Product\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSelectCategory(category: ProductStructureCategory) {\n    if (category) {\n      this.form.get('category').patchValue(category.id);\n    } else {\n      this.form.get('category').patchValue(null);\n    }\n  }\n\n  onMakeRoot() {\n    this.isSaving = true;\n    this.productService.makeRoot(this.product.id, this.form.value).subscribe({\n      next: () => this.dialogRef.close(true),\n      error: () => this.isSaving = false,\n    })\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Make Root &laquo;{{product.nomenclature.name}}&raquo;\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div class=\"form-group\">\n    <label>Category</label>\n    <pek-product-structure-category-picker\n      [currentCategoryId]=\"form.get('category').value\"\n      (choiceCategory)=\"onSelectCategory($event)\"\n    ></pek-product-structure-category-picker>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Make\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMakeRoot()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ProductFile} from '../../models/product';\nimport {finalize} from 'rxjs';\nimport {ModalService} from '@shared/services/modal.service';\nimport {AdapterService} from '@shared/services/adapter.service';\n\n@Component({\n  selector: 'pek-product-files',\n  templateUrl: './product-files.component.html',\n  styleUrls: ['./product-files.component.scss']\n})\nexport class ProductFilesComponent implements OnInit {\n  readonly deletion = new Set<number>();\n  readonly addition = new Set<number>();\n\n  uploadFiles: File[] = [];\n  files: ProductFile[] = [];\n  isLoading = true;\n  isPending = false;\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<ProductFilesComponent>,\n    private readonly productService: ProductService,\n    private readonly modalService: ModalService,\n    private readonly adapterService: AdapterService,\n    @Inject(MAT_DIALOG_DATA) public productId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getFiles();\n  }\n\n  getFiles() {\n    this.productService.getProductFiles(this.productId).subscribe(files => {\n      this.files = files;\n      this.isLoading = false;\n    });\n  }\n\n  getFileName(file: string) {\n    let name = file.split('/');\n    return name[name.length - 1];\n  }\n\n  onUploadFiles() {\n    this.isPending = true;\n    this.productService.severalUploadFiles(this.productId, this.uploadFiles)\n      .pipe(\n        finalize(() => this.isPending = false)\n      )\n      .subscribe(files => this.dialogRef.close(files));\n  }\n\n  onRemoveFile(id: number) {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.deletion.add(id);\n\n        this.productService.removeProductFile(id).subscribe(() => {\n          const index = this.files.findIndex(f => f.id === id);\n          this.files.splice(index, 1);\n          this.deletion.clear();\n        });\n      }\n    });\n  }\n\n  onDownloadFile(file: ProductFile) {\n    this.addition.add(file.id);\n    this.productService.downloadProductFile(file.id).subscribe(response => {\n      const filename = this.getFileName(file.file);\n      this.adapterService.downloadFile(filename, response);\n      this.addition.clear();\n    });\n  }\n\n  onSelectFiles(files: File[]) {\n    this.uploadFiles = files;\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Product Files\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <pek-upload-file\n    [multiple]=\"true\"\n    (selectFile)=\"onSelectFiles($event)\"\n  ></pek-upload-file>\n\n  <div class=\"product-files\">\n    <h3 class=\"product-files__caption\">Uploaded Files</h3>\n    <p-table\n      selectionMode=\"single\"\n      [value]=\"files\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th class=\"index-header text-center\" style=\"width: 5%\">#</th>\n          <th style=\"width: 75%\">File Name</th>\n          <th style=\"width: 20%\">Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-file let-i=\"rowIndex\">\n        <tr>\n          <td class=\"text-center\" style=\"width: 5%\">{{i + 1}}</td>\n          <td style=\"width: 75%\" class=\"word-break\">\n            <a (click)=\"onDownloadFile(file)\">\n              {{getFileName(file.file)}}\n            </a>\n          </td>\n          <td style=\"width: 20%\">\n            <div class=\"d-flex\">\n              <button\n                pButton\n                (click)=\"onDownloadFile(file)\"\n                [loading]=\"addition.has(file.id)\"\n                type=\"button\"\n                class=\"p-button-primary p-button-rounded p-button-outlined p-button-rounded_small mr-2\"\n                icon=\"pi pi-download\"\n              ></button>\n              <button\n                pButton\n                (click)=\"onRemoveFile(file.id)\"\n                [loading]=\"deletion.has(file.id)\"\n                type=\"button\"\n                class=\"p-button-danger p-button-rounded p-button-outlined p-button-rounded_small\"\n                icon=\"pi pi-trash\"\n              ></button>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-2\" [attr.colspan]=\"3\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    label=\"Upload\"\n    [loading]=\"isPending\"\n    [disabled]=\"uploadFiles.length === 0\"\n    (click)=\"onUploadFiles()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ProductService} from '../../services/product.service';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-upload-product-structure',\n  templateUrl: './upload-product-structure.component.html',\n  styleUrls: ['./upload-product-structure.component.scss']\n})\nexport class UploadProductStructureComponent implements OnInit, OnDestroy {\n  fileToUpload: File;\n  isLoading = false;\n  showErrorUpload = false;\n\n  files: string[] = [];\n  error: string;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private dialogRef: MatDialogRef<UploadProductStructureComponent>,\n    private productService: ProductService,\n    @Inject(MAT_DIALOG_DATA) public productId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancel() {\n    this.showErrorUpload = false;\n    this.isLoading = false;\n    this.fileToUpload = null;\n    this.error = '';\n  }\n\n  onUpload(codes: string[] = []) {\n    this.isLoading = true;\n\n    const data = {\n      file_xls: this.fileToUpload,\n      root_product_id: this.productId,\n      passed_codes: codes\n    };\n\n    this.productService.uploadProductStructure(data)\n      .pipe(\n        takeUntil(this.destroy$)\n      ).subscribe({\n      next: res => {\n        console.log(res);\n        this.dialogRef.close(true);\n      },\n      error: err => {\n        if (err) {\n          this.isLoading = false;\n          this.error = err.error.data;\n          this.processing(err.error.data);\n        }\n      }\n    });\n  }\n\n  processing(arr: any) {\n    const str: string = arr ? arr[0] : '';\n\n    if (str.includes('Error in parsing items at position')) {\n      this.showErrorUpload = true;\n      const str2 = str.split('code:')[1];\n      const str3 = str2.split(', Index:')[0];\n\n      this.files.push(str3);\n    } else {\n      this.showErrorUpload = false;\n      this.fileToUpload = null;\n    }\n  }\n\n  onContinueUpdate() {\n    this.onUpload(this.files);\n  }\n\n  selectFile(files: File[]) {\n    this.error = '';\n    this.fileToUpload = files[0];\n  }\n\n  removeFile() {\n    this.fileToUpload = null;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    Upload Product Structure\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div *ngIf=\"!isLoading; else loading\" class=\"upload-product-structure\">\n    <div\n      *ngIf=\"error\"\n      class=\"upload-product-structure__error\"\n      [class.upload-product-structure__error_upload]=\"showErrorUpload\"\n    >\n      {{error}}\n    </div>\n    <div\n      *ngIf=\"!showErrorUpload\"\n      class=\"upload-product-structure__uploader\"\n    >\n      <pek-upload-file\n        (selectFile)=\"selectFile($event)\"\n        (removeFile)=\"removeFile()\"\n        [fileFormat]=\"'excel'\"\n      ></pek-upload-file>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n\n  <div *ngIf=\"!isLoading\">\n    <button\n      *ngIf=\"!showErrorUpload; else continueLoading\"\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Upload\"\n      (click)=\"onUpload()\"\n      [disabled]=\"!fileToUpload || isLoading || showErrorUpload\"\n    ></button>\n  </div>\n</mat-dialog-actions>\n\n<ng-template #loading>\n  <div class=\"upload-product-structure__text\">\n    <div class=\"upload-message\">\n      <p>The structure is being loaded.</p>\n      <p>Please don't close the window.</p>\n      <p>The window will close automatically after a successful download.</p>\n    </div>\n    <div class=\"upload-product-structure__spinner\">\n      <i class=\"pi pi-spin pi-spinner\"></i>\n      <p>Pending...</p>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #continueLoading>\n  <div>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-warning mr-2\"\n      label=\"Cancel Uploading\"\n      (click)=\"onCancel()\"\n    ></button>\n    <button\n      pButton\n      type=\"button\"\n      class=\"p-button-success\"\n      label=\"Continue Uploading\"\n      (click)=\"onContinueUpdate()\"\n    ></button>\n  </div>\n</ng-template>\n","import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Locator} from '../../warehouse/models/locator';\r\n\r\nexport class Product {\r\n  readonly id: number;\r\n  root_id?: number;\r\n  quantity?: number;\r\n  required_quantity?: number;\r\n  nomenclature?: Nomenclature;\r\n  position?: number;\r\n  task_required_quantity?: number;\r\n  group_uid?: number;\r\n  countProducts?: number;\r\n  product?: Product;\r\n  products?: Product[];\r\n  // serial_number?: SerialNumber;\r\n  is_scanned?: boolean;\r\n  is_scanned_root?: boolean;\r\n  checkedForGeneration?: boolean;\r\n  parent?: number;\r\n  lft?: number;\r\n  rght?: number;\r\n  locator?: Locator;\r\n  level?: number;\r\n  physical_inventory_nomenclature?: any;\r\n}\r\n\r\nexport class ProductFile {\r\n  readonly id: number;\r\n  file: string;\r\n  product_id: number;\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ProductStructureRouting} from './product-structure.routing';\r\nimport {\r\n  ProductStructureProductsListComponent\r\n} from './components/product-structure-products-list/product-structure-products-list.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {\r\n  ProductStructureProductComponent\r\n} from './components/product-structure-product/product-structure-product.component';\r\nimport {MakeRootProductComponent} from './modals/make-root-product/make-root-product.component';\r\nimport {MakeProductionListComponent} from './modals/make-production-list/make-production-list.component';\r\nimport {TechnologiesComponent} from './components/technologies/technologies.component';\r\nimport {PrefixesComponent} from './components/prefixes/prefixes.component';\r\nimport {CreateEditTechnologyComponent} from './modals/create-edit-technology/create-edit-technology.component';\r\nimport {CreateEditPrefixComponent} from './modals/create-edit-prefix/create-edit-prefix.component';\r\nimport {\r\n  ProductStructureLayoutComponent\r\n} from './components/product-structure-layout/product-structure-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport {AddProductComponent} from './modals/add-product/add-product.component';\r\nimport {CreateEditRootProductComponent} from './modals/create-edit-root-product/create-edit-root-product.component';\r\nimport { EditProductComponent } from './modals/edit-product/edit-product.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { UploadProductStructureComponent } from './modals/upload-product-structure/upload-product-structure.component';\r\nimport { ProductFilesComponent } from './modals/product-files/product-files.component';\r\nimport {CreateEditProductFormComponent} from './components/create-edit-product-form/create-edit-product-form.component';\r\nimport { ProductStructureCategoriesComponent } from './components/product-structure-categories/product-structure-categories.component';\r\nimport {\r\n  CreateEditProductStructureCategoryComponent\r\n} from './modals/create-edit-product-structure-category/create-edit-product-structure-category.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductStructureProductsListComponent,\r\n    CreateEditRootProductComponent,\r\n    ProductStructureProductComponent,\r\n    MakeRootProductComponent,\r\n    MakeProductionListComponent,\r\n    TechnologiesComponent,\r\n    PrefixesComponent,\r\n    CreateEditTechnologyComponent,\r\n    CreateEditPrefixComponent,\r\n    ProductStructureLayoutComponent,\r\n    AddProductComponent,\r\n    EditProductComponent,\r\n    UploadProductStructureComponent,\r\n    ProductFilesComponent,\r\n    CreateEditProductFormComponent,\r\n    ProductStructureCategoriesComponent,\r\n    CreateEditProductStructureCategoryComponent,\r\n  ],\r\n  exports: [\r\n    CreateEditProductFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductStructureRouting,\r\n    SharedModule,\r\n    LayoutModule,\r\n    DragDropModule,\r\n  ]\r\n})\r\nexport class ProductStructureModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {\n  ProductStructureProductsListComponent\n} from './components/product-structure-products-list/product-structure-products-list.component';\nimport {\n  ProductStructureProductComponent\n} from './components/product-structure-product/product-structure-product.component';\nimport {TechnologiesComponent} from './components/technologies/technologies.component';\nimport {PrefixesComponent} from './components/prefixes/prefixes.component';\nimport {\n  ProductStructureLayoutComponent\n} from './components/product-structure-layout/product-structure-layout.component';\nimport {\n  ProductStructureCategoriesComponent\n} from './components/product-structure-categories/product-structure-categories.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductStructureLayoutComponent,\n    children: [\n      {path: '', redirectTo: 'products', pathMatch: 'full'},\n      {\n        path: 'products', children: [\n          {path: '', title: 'Products', component: ProductStructureProductsListComponent},\n          {path: 'structure/:id', title: 'Products', component: ProductStructureProductComponent}\n        ]\n      },\n      {path: 'technologies', title: 'Technologies', component: TechnologiesComponent},\n      {path: 'prefixes', title: 'Prefixes', component: PrefixesComponent},\n      {path: 'categories', title: 'Categories', component: ProductStructureCategoriesComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductStructureRouting {\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Category} from '../models/category';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditWarehouseCategoryComponent\n} from '../../warehouse/modals/create-edit-warehouse-category/create-edit-warehouse-category.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'categories/';\n\n  categories: Category[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Category[]> {\n    if (this.categories) {\n      return of(this.categories);\n    }\n\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Category[] }>(this.API_URL + this.url + qString).pipe(map(response => {\n      let categories = response.data;\n\n      categories.forEach(category => {\n        if (!category.parent) category.lft = category.tree_id;\n      });\n\n      categories.sort((a, b) => a.lft - b.lft);\n      this.categories = categories;\n      return categories;\n    }));\n  }\n\n  create(category: Partial<Category>): Observable<Category> {\n    return this.httpClient.post<{ data: Category }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(category: Partial<Category>): Observable<Category> {\n    return this.httpClient.patch<{ data: Category }>(this.API_URL + this.url + `${category.id}/`, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(category: Category): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${category.id}/`);\n  };\n\n  move(move: any, categoryId: number): Observable<Category> {\n    return this.httpClient.post<{ data: Category }>(this.API_URL + this.url + `${categoryId}/move/`, move).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditWarehouseCategoryModal(type: ModalActionType, category?: Category): Observable<Category> {\n    return this.dialog\n      .open<CreateEditWarehouseCategoryComponent>(CreateEditWarehouseCategoryComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {ProductPrefix} from '../models/prefix';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditPrefixComponent} from '../modals/create-edit-prefix/create-edit-prefix.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefixService {\n  readonly API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'xls_manufactured_prefixes/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<ProductPrefix[]> {\n    return this.httpClient.get<{ data: ProductPrefix[] }>(this.API_URL + this.url).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.post<{ data: ProductPrefix }>(this.API_URL + this.url, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(prefix: Partial<ProductPrefix>): Observable<ProductPrefix> {\n    return this.httpClient.patch<{ data: ProductPrefix }>(this.API_URL + this.url + `${prefix.id}/`, prefix).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\n  }\n\n  createEditPrefix(type: ModalActionType, prefix?: ProductPrefix): Observable<ProductPrefix> {\n    return this.dialog\n      .open<CreateEditPrefixComponent>(CreateEditPrefixComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, prefix},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditProductStructureCategoryComponent\n} from '../modals/create-edit-product-structure-category/create-edit-product-structure-category.component';\nimport {ProductStructureCategory} from '../models/product-structure-category';\nimport {Product} from '../models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductStructureCategoryService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'root_categories/';\n\n  rootCategories: ProductStructureCategory[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<ProductStructureCategory[]> {\n    if (this.rootCategories) {\n      return of(this.rootCategories);\n    }\n\n    return this.httpClient.get<{ data: ProductStructureCategory[] }>(this.API_URL + 'root_categories/').pipe(map(response => {\n      let categories = response.data;\n\n      categories.forEach(category => {\n        if (!category.parent) category.lft = category.tree_id;\n      });\n\n      categories.sort((a, b) => a.lft - b.lft);\n      this.rootCategories = categories;\n      return categories;\n    }));\n  }\n\n  create(category: Partial<ProductStructureCategory>): Observable<ProductStructureCategory> {\n    return this.httpClient.post<{ data: ProductStructureCategory }>(this.API_URL + this.url, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(category: Partial<ProductStructureCategory>): Observable<ProductStructureCategory> {\n    return this.httpClient.patch<{ data: ProductStructureCategory }>(this.API_URL + this.url + `${category.id}/`, category).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(category: ProductStructureCategory): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${category.id}/`);\n  };\n\n  move(move: any, categoryId: number): Observable<ProductStructureCategory> {\n    return this.httpClient.post<{data: ProductStructureCategory}>(this.API_URL + this.url + `${categoryId}/move/`, move).pipe(\n      map(response => response.data)\n    );\n  }\n\n  createEditCategory(type: ModalActionType, category?: ProductStructureCategory): Observable<ProductStructureCategory> {\n    return this.dialog\n      .open<CreateEditProductStructureCategoryComponent>(CreateEditProductStructureCategoryComponent, {\n        width: '42rem',\n        height: 'auto',\n        panelClass: 'modal-picker',\n        data: {type, category},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {forkJoin, map, Observable} from 'rxjs';\r\nimport {Product, ProductFile} from '../models/product';\r\nimport {environment} from '@env/environment';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ModalActionType} from '@shared/models/modal-action';\r\nimport {AddProductComponent} from '../modals/add-product/add-product.component';\r\nimport {CreateEditRootProductComponent} from '../modals/create-edit-root-product/create-edit-root-product.component';\r\nimport {EditProductComponent} from '../modals/edit-product/edit-product.component';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {UploadProductStructureComponent} from '../modals/upload-product-structure/upload-product-structure.component';\r\nimport {ProductFilesComponent} from '../modals/product-files/product-files.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  API_URL = environment.base_url + environment.product_structure_url;\r\n  private readonly url = 'products/';\r\n  private readonly;\r\n\r\n  constructor(\r\n    private readonly httpClient: HttpClient,\r\n    private readonly dialog: MatDialog,\r\n  ) {\r\n  }\r\n\r\n  get(): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + this.url).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  // TODO удалить all\r\n  getRoots(): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'products_roots/all/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getTree(id: number): Observable<Product[]> {\r\n    return this.httpClient.get<{ data: Product[] }>(this.API_URL + 'product_tree/' + `${id}/`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  updatePartly(product: Partial<Product>) {\r\n    return this.httpClient.patch<{ data: Product }>(this.API_URL + this.url + product.id + '/', product).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.httpClient.delete(this.API_URL + this.url + `${id}/`);\r\n  }\r\n\r\n  copyStructure(send: { nomenclature_id: number, parent_id: number, name: string }): Observable<Product[]> {\r\n    return this.httpClient.post<{ data: Product[] }>(this.API_URL + this.url + 'product_structure_copy/', send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  move(move: any, productId: number): Observable<Product> {\r\n    return this.httpClient.post<{data: Product}>(this.API_URL + this.url + `${productId}/move/`, move).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getProductFiles(productId: number): Observable<ProductFile[]> {\r\n    return this.httpClient.get<{ data: ProductFile[] }>(this.API_URL + `product_files/${productId}/`).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  severalUploadFiles(productId: number, files: File[]): Observable<ProductFile[]> {\r\n    const arrayFormData: FormData[] = [];\r\n\r\n    files.forEach(file => {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      arrayFormData.push(formData);\r\n    });\r\n\r\n    return forkJoin(...arrayFormData.map(formData => this.httpClient.post<{ data: ProductFile }>(this.API_URL + `product_files/${productId}/`, formData).pipe(\r\n      map(response => response.data)\r\n    )));\r\n  }\r\n\r\n  removeProductFile(fileId: number): Observable<any> {\r\n    return this.httpClient.post(this.API_URL + `file_delete/${fileId}/`, null);\r\n  }\r\n\r\n  downloadProductFile(fileId: number): Observable<Blob> {\r\n    return this.httpClient.get(this.API_URL + `file_download/${fileId}/`, {responseType: 'blob'});\r\n  }\r\n\r\n  uploadProductStructure(\r\n    data: {\r\n      file_xls: File,\r\n      root_product_id: number,\r\n      passed_codes: string[]\r\n    }): Observable<any> {\r\n    const formData = new FormData();\r\n\r\n    for (const key in data) {\r\n      formData.append(key, data[key]);\r\n    }\r\n\r\n    return this.httpClient.post(this.API_URL + 'products/import_products/', formData).pipe(\r\n      map(response => response)\r\n    );\r\n  }\r\n\r\n  makeRoot(productId: number, send: { category: number }): Observable<any> {\r\n    return this.httpClient.post<{ data: any }>(this.API_URL + `${this.url}${productId}/copy_tree_to_root/`, send).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  // TODO ПЕРЕНЕСТИ В ДРУГОЙ СЕРВИС\r\n  makeProductionList(send: any): Observable<any> {\r\n    return this.httpClient.post(environment.base_url + environment.production_url + 'list_creation_requests/', send);\r\n  }\r\n\r\n  addProduct(product: Partial<Product>): Observable<Product[]> {\r\n    return this.httpClient.post<{ data: Product[] }>(this.API_URL + this.url, product).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  createEditRootProduct(type: ModalActionType, product?: Product): Observable<Nomenclature & Product[]> {\r\n    return this.dialog\r\n      .open<CreateEditRootProductComponent>(CreateEditRootProductComponent, {\r\n        width: '35rem',\r\n        height: 'auto',\r\n        data: {type, product},\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  editProductModal(product: Product): Observable<{ nomenclature: Nomenclature, product: Product }> {\r\n    return this.dialog\r\n      .open<EditProductComponent>(EditProductComponent, {\r\n        width: '50rem',\r\n        height: 'auto',\r\n        panelClass: 'modal-overflow-visible',\r\n        data: product,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  addProductModal(id: number): Observable<Product[]> {\r\n    return this.dialog\r\n      .open<AddProductComponent>(AddProductComponent, {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        panelClass: 'modal-picker',\r\n        data: id,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  uploadProductStructureModal(productId: number): Observable<Product[]> {\r\n    return this.dialog\r\n      .open<UploadProductStructureComponent>(UploadProductStructureComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: productId,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n\r\n  showProductFiles(productId: number): Observable<void> {\r\n    return this.dialog\r\n      .open<ProductFilesComponent>(ProductFilesComponent, {\r\n        width: '40rem',\r\n        height: 'auto',\r\n        data: productId,\r\n        autoFocus: false,\r\n        enterAnimationDuration: '250ms'\r\n      })\r\n      .afterClosed();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {Technology} from '../models/technology';\nimport {map} from 'rxjs/operators';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  CreateEditTechnologyComponent,\n} from '../modals/create-edit-technology/create-edit-technology.component';\nimport {ModalActionType} from '@shared/models/modal-action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnologyService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'technologies/';\n\n  technologies: Technology[];\n\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Technology[]> {\n    if (this.technologies) {\n      return of(this.technologies);\n    }\n\n    return this.httpClient.get<{ data: Technology[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const technologies = response.data;\n        this.technologies = technologies;\n        return technologies;\n      }));\n  }\n\n  create(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.post<{ data: Technology }>(this.API_URL + this.url, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(technology: Partial<Technology>): Observable<Technology> {\n    return this.httpClient.put<{ data: Technology }>(this.API_URL + this.url + `${technology.id}/`, technology).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(technology: Technology): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${technology.id}/`);\n  };\n\n  createEditTechnology(type: ModalActionType, technology?: Technology): Observable<Technology> {\n    return this.dialog\n      .open<CreateEditTechnologyComponent>(CreateEditTechnologyComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, technology},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {forkJoin, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {Payment} from '../models/payment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'payments/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getConfirmationPayments(): Observable<Payment[]> {\n    return this.httpClient.get<{ data: Payment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\n      map(response => response.data));\n  }\n\n  severalConfirm(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: Payment }>(this.API_URL + this.url + `confirm/${id}/`, null)));\n  }\n\n  severalDecline(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: Payment }>(this.API_URL + this.url + `decline/${id}/`, null)));\n  }\n\n  getLimit(): Observable<{ id: number; value: string }[]> {\n    return this.httpClient.get<{ data: { id: number; value: string }[] }>(this.API_URL + 'maximum_confirmed_payment_amount/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  setLimit(limit: { id: number, value: string }): Observable<any> {\n    return this.httpClient.patch(this.API_URL + 'maximum_confirmed_payment_amount/' + limit.id + '/', limit);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {forkJoin, Observable} from 'rxjs';\nimport {ServiceInvoicePayment} from '../models/service-invoice-payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceInvoicePaymentService {\n  API_URL = environment.base_url + environment.procurement_url;\n  readonly url = 'service_invoice_payments/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getConfirmationPayments(): Observable<ServiceInvoicePayment[]> {\n    return this.httpClient.get<{ data: ServiceInvoicePayment[] }>(this.API_URL + this.url + 'confirmation_list/').pipe(\n      map(response => response.data));\n  }\n\n  severalConfirm(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `confirm/${id}/`, null)));\n  }\n\n  severalDecline(ids: number[]): Observable<any[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: ServiceInvoicePayment }>(this.API_URL + this.url + `decline/${id}/`, null)));\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {SalesStatus} from '../../models/sales-chain';\nimport {SalesStatusService} from '../../services/sales-status.service';\n\n@Component({\n  selector: 'pek-create-edit-sales-status',\n  templateUrl: './create-edit-sales-status.component.html',\n  styleUrls: ['./create-edit-sales-status.component.scss']\n})\nexport class CreateEditSalesStatusComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private dialogRef: MatDialogRef<CreateEditSalesStatusComponent>,\n    private readonly salesStatusService: SalesStatusService,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, status: SalesStatus }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.status.id));\n      this.form.patchValue(this.data.status);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createSalesStatus();\n        break;\n      }\n      case 'edit': {\n        this.editSalesStatus();\n        break;\n      }\n    }\n  }\n\n  createSalesStatus() {\n    const send = <Partial<SalesStatus>>this.form.value;\n    this.salesStatusService.create(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editSalesStatus() {\n    const send = <Partial<SalesStatus>>this.form.value;\n    this.salesStatusService.update(send).subscribe({\n      next: status => this.dialogRef.close(status),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Sales Status\n  </h2>\n</div>\n\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {Observable, of} from 'rxjs';\nimport {SalesStatus} from '../models/sales-chain';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../warehouse/models/warehouse';\nimport {\n  CreateEditWarehouseComponent\n} from '../../warehouse/modals/create-edit-warehouse/create-edit-warehouse.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditSalesStatusComponent} from '../modals/create-edit-sales-status/create-edit-sales-status.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesStatusService {\n\n  statuses: SalesStatus[];\n\n  API_URL = environment.base_url + environment.sales_url;\n  readonly url = 'status/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<SalesStatus[]> {\n    if (this.statuses) {\n      return of(this.statuses);\n    }\n\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: SalesStatus[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => {\n        const statuses = response.data;\n        this.statuses = statuses;\n        return statuses;\n      }));\n  }\n\n  create(status: Partial<SalesStatus>): Observable<SalesStatus> {\n    return this.httpClient.post<{ data: SalesStatus }>(this.API_URL + this.url, status).pipe(\n      map(response => response.data)\n    );\n  }\n\n\n  update(status: Partial<SalesStatus>): Observable<SalesStatus> {\n    return this.httpClient.put<{ data: SalesStatus }>(this.API_URL + this.url + status.id + '/', status).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(status: SalesStatus): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + status.id + '/');\n  }\n\n  changeOrder(status: SalesStatus, order: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + status.id + '/change_order/', {\n      new_order: order,\n    });\n  }\n\n  createEditSalesStatusModal(type: ModalActionType, status?: SalesStatus): Observable<SalesStatus> {\n    return this.dialog\n      .open<CreateEditSalesStatusComponent>(CreateEditSalesStatusComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, status},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {NomenclatureImage} from '@shared/models/nomenclature';\nimport {ModalService} from '@shared/services/modal.service';\n\n@Component({\n  selector: 'pek-images-slider',\n  templateUrl: './images-slider.component.html',\n  styleUrls: ['./images-slider.component.scss']\n})\nexport class ImagesSliderComponent implements OnInit, AfterViewInit {\n  @Output() choiceImages: EventEmitter<File[]> = new EventEmitter<File[]>();\n  @Output() removeImage: EventEmitter<number> = new EventEmitter<number>();\n\n  @Input() images: NomenclatureImage[] = [];\n  @Input() width: string;\n  @Input() height: string;\n\n  @ViewChild('inputFile') inputFile: ElementRef;\n  @ViewChild('slider') slider: ElementRef;\n\n  activeSlideIndex = 1;\n  isInit = false;\n\n  sliderWidth = 0;\n  offsetSlider = 0;\n\n  constructor(\n    private readonly modalService: ModalService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.onPasteImage();\n  }\n\n  ngAfterViewInit() {\n    if (this.images.length > 0) {\n      this.sliderWidth = this.slider.nativeElement.offsetWidth;\n    }\n\n    setTimeout(() => this.isInit = true);\n  }\n\n  onSlideNext() {\n    if (this.activeSlideIndex === this.images.length) {\n      this.offsetSlider = 0;\n      this.activeSlideIndex = 1;\n    } else {\n      this.offsetSlider = this.sliderWidth * this.activeSlideIndex;\n      this.activeSlideIndex++;\n    }\n  }\n\n  onSlidePrev() {\n    if (this.activeSlideIndex === 1) {\n      this.offsetSlider = this.sliderWidth * (this.images.length - 1);\n      this.activeSlideIndex = this.images.length;\n    } else {\n      this.offsetSlider = (this.activeSlideIndex - 2) * this.sliderWidth;\n      this.activeSlideIndex--;\n    }\n  }\n\n  onImageManipulation($event: Event, files: EventTarget) {\n    // @ts-ignore\n    const newFiles: File[] = Array.from(files.files);\n\n    if (newFiles.length > 0) {\n      if (this.images.length === 0) {\n        this.activeSlideIndex = 1;\n        this.sliderWidth = this.slider.nativeElement.offsetWidth;\n      }\n\n      this.choiceImages.emit(newFiles);\n      this.inputFile.nativeElement.value = '';\n    }\n  }\n\n  onRemoveImage() {\n    this.modalService.confirm('danger').subscribe(confirm => {\n      if (confirm) {\n        this.removeImage.emit(this.activeSlideIndex - 1);\n        if (this.activeSlideIndex !== 1) {\n          this.onSlidePrev();\n          this.inputFile.nativeElement.value = '';\n        }\n      }\n    });\n  }\n\n  onPasteImage() {\n    document.onpaste = (pasteEvent) => {\n      const item = pasteEvent.clipboardData.items[0];\n\n      if (item.type.indexOf('image') === 0) {\n        const blob = item.getAsFile();\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n\n          this.modalService.showPasteImageModal(event.target.result).subscribe(confirm => {\n            if (confirm) {\n              if (this.images.length === 0) {\n                this.activeSlideIndex = 1;\n                this.sliderWidth = this.slider.nativeElement.offsetWidth;\n              }\n\n              const send: File[] = [blob];\n              this.choiceImages.emit(send);\n              this.inputFile.nativeElement.value = '';\n            }\n          });\n        };\n\n        reader.readAsDataURL(blob);\n      }\n    };\n  }\n\n  onShowFullImage() {\n    this.modalService.showImageGallery(this.images, null, this.activeSlideIndex).subscribe();\n  }\n}\n","<div class=\"images-slider\" #slider>\n  <div class=\"images-slider__slider\"\n       [style.width]=\"width\"\n       [style.height]=\"height\"\n       *ngIf=\"images.length > 0; else noneImages\"\n  >\n    <div class=\"images-slider__wrapper\">\n      <div\n        class=\"images-slider__inner\"\n        [class.images-slider__inner_init]=\"isInit\"\n        [class.slides-none]=\"images.length === 0\"\n        [style.width]=\"sliderWidth * images.length + 'px'\"\n        [style.transform]=\"'translateX(-' + offsetSlider + 'px)'\"\n      >\n        <div\n          class=\"images-slider__slide\"\n          *ngFor=\"let image of images; let idx = index\"\n          (click)=\"onShowFullImage()\"\n        >\n          <img [src]=\"image.image\" [alt]=\"'Image ' + idx + 1\">\n        </div>\n      </div>\n    </div>\n\n    <i\n      *ngIf=\"images.length > 1\"\n      class=\"pi pi-chevron-left images-slider__btn images-slider__btn_prev\"\n      (click)=\"onSlidePrev()\"\n    >\n    </i>\n    <i\n      *ngIf=\"images.length > 1\"\n      class=\"pi pi-chevron-right images-slider__btn images-slider__btn_next\"\n      (click)=\"onSlideNext()\"\n    ></i>\n  </div>\n\n  <div class=\"images-slider__bottom\">\n    <label for=\"file\" class=\"images-slider__file-picker\">\n      <input\n        #inputFile\n        id=\"file\"\n        multiple\n        type=\"file\"\n        (input)=\"onImageManipulation($event, $event.target)\" accept=\"image/*\"\n      >\n      <span>\n        <i class=\"pi pi-upload\"></i>\n        Choice Image\n      </span>\n    </label>\n\n    <div class=\"images-slider__count\" *ngIf=\"images.length > 1\">\n      {{activeSlideIndex}} / {{images.length}}\n    </div>\n\n    <button class=\"images-slider__remove\" (click)=\"onRemoveImage()\" *ngIf=\"images.length > 0\">\n      <i class=\"pi pi-times\"></i>\n      Remove Active Image\n    </button>\n  </div>\n</div>\n\n<ng-template #noneImages>\n  <div [style.width]=\"width\" [style.height]=\"height\" class=\"images-slider__empty\">\n    <i class=\"pi pi-image\"></i>\n  </div>\n</ng-template>\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {Paginator} from 'primeng/paginator';\nimport {debounceTime, map, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'pek-nomenclature-picker',\n  templateUrl: './nomenclature-picker.component.html',\n  styleUrls: ['./nomenclature-picker.component.scss']\n})\nexport class NomenclaturePickerComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  @Output() selectProduct: EventEmitter<Nomenclature> = new EventEmitter<Nomenclature>();\n  @Input() nomenclatureType: ENomenclatureType;\n  @Input() paginationAbsolute = false;\n\n  countNomenclatures = 0;\n\n  isLoading = true;\n  isStartOnePage = false;\n  nomenclatures: Nomenclature[] = [];\n  selectedNomenclature: Nomenclature;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1],\n    name: [''],\n    code: [''],\n    type: [null],\n  });\n\n  queryKey = 'name:/code:/type:null';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true}\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n  ) {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      fromEvent(this.searchBoxName.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxName.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n\n      fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxCode.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  searchNomenclatures() {\n    this.isLoading = true;\n    this.destroy$.next(true);\n    this.selectedNomenclature = null;\n    this.onSelectNomenclature();\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/type:${this.searchForm.get('type').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true},\n    ];\n\n    if (this.searchForm.get('name').value) {\n      this.query.push({\n        name: 'name',\n        value: this.searchForm.get('name').value\n      });\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({\n        name: 'code',\n        value: this.searchForm.get('code').value\n      });\n    }\n\n    if (this.searchForm.get('type').value !== null) {\n      this.query.push({\n        name: 'type',\n        value: this.searchForm.get('type').value\n      });\n    }\n\n    this.getNomenclatures();\n  }\n\n  onSelectNomenclature() {\n    this.selectProduct.emit(this.selectedNomenclature);\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  selectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.searchNomenclatures();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div\n  class=\"nomenclature-picker\"\n  [class.nomenclature-picker_paginator-absolute]=\"paginationAbsolute\"\n>\n  <div class=\"nomenclature-picker__form\">\n    <form [formGroup]=\"searchForm\">\n      <div class=\"form-box form-box_3\">\n        <div class=\"form-group\">\n          <label for=\"code\">Code</label>\n          <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\n        </div>\n        <div class=\"form-group\">\n          <label>Type</label>\n          <pek-nomenclature-type-picker\n            (choiceNomenclatureType)=\"selectNomenclatureType($event)\"\n          ></pek-nomenclature-type-picker>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"table-pagination-preloader\">\n    <p-table\n      [value]=\"nomenclatures\"\n      [rows]=\"10\"\n      selectionMode=\"single\"\n      [(selection)]=\"selectedNomenclature\"\n      (selectionChange)=\"onSelectNomenclature()\"\n    >\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th class=\"text-center\" style=\"width: 7%\">#</th>\n          <th style=\"width: 22%\">Code</th>\n          <th style=\"width: 30%\">Name</th>\n          <th style=\"width: 10%\">UOM</th>\n          <th style=\"width: 15%;\">Technology</th>\n          <th style=\"width: 15%\" class=\"text-center\">Category</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n        <tr [pSelectableRow]=\"nomenclature\">\n          <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n          <td style=\"width: 22%\">{{nomenclature.code}}</td>\n          <td style=\"width: 30%\">{{nomenclature.name}}</td>\n          <td\n            style=\"width: 10%\">{{nomenclature.category?.unit_of_measure?.symbol ? nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\n          <td style=\"width: 15%\">\n            <div *ngFor=\"let technology of nomenclature.technologies\">\n              {{technology.name}}\n            </div>\n          </td>\n          <td style=\"width: 15%\" class=\"text-center\">{{nomenclature.category?.name}}</td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n            <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n            <span *ngIf=\"!isLoading\">No Records Found</span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n    </div>\n  </div>\n  <p-paginator\n    #paginator\n    [class.hide]=\"nomenclatures.length === 0\"\n    [rows]=\"10\"\n    [totalRecords]=\"countNomenclatures\"\n    (onPageChange)=\"paginate($event)\"\n  >\n  </p-paginator>\n</div>\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\n\ntype FileFormat = 'excel' | 'image' | 'all';\n\n@Component({\n  selector: 'pek-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n  @Output() selectFile: EventEmitter<File[]> = new EventEmitter<File[]>();\n  @Output() removeFile: EventEmitter<void> = new EventEmitter<void>();\n  @Input() fileFormat: FileFormat = 'all';\n  @Input() multiple: boolean = false;\n  @ViewChild('addFileInput') addFileInput: ElementRef;\n\n  uploadFiles: File[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onDragOver(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  onDrop(event: DragEvent) {\n    event.preventDefault();\n    const files: File[] = Array.from(event.dataTransfer.files);\n    this.onSelectFile(files);\n  }\n\n  onChangeFile(files: FileList) {\n    const filesArr = Array.from(files);\n    this.onSelectFile(filesArr);\n  }\n\n  onSelectFile(files: File[]) {\n    if (this.multiple) {\n      this.uploadFiles = [...this.uploadFiles, ...files];\n    } else {\n      this.uploadFiles = [...files];\n    }\n\n    this.selectFile.emit(this.uploadFiles);\n    this.addFileInput.nativeElement.value = '';\n  }\n\n  onRemoveFile(idx: number) {\n    this.uploadFiles.splice(idx, 1);\n\n    if (this.multiple) {\n      this.selectFile.emit(this.uploadFiles);\n    } else {\n      this.removeFile.emit();\n    }\n  }\n\n  getFileSize(size: number) {\n    return Math.round(size / 1000);\n  }\n\n  getAcceptFileFormat() {\n    switch (this.fileFormat) {\n      case 'excel':\n        return '.xls, .xlsx';\n      default:\n        return '';\n    }\n  }\n}\n","<div\n  class=\"upload-file\"\n  [class.upload-file_upload-one]=\"uploadFiles.length > 0 && !multiple\"\n  [class.upload-file_upload-many]=\"uploadFiles.length > 0 && multiple\"\n>\n\n  <ng-container [ngSwitch]=\"multiple\">\n\n    <!--  Single Select-->\n    <label\n      *ngSwitchCase=\"false\"\n      class=\"upload-file__input\"\n      (dragover)=\"onDragOver($event)\"\n      (drop)=\"onDrop($event)\"\n    >\n      <div\n        *ngIf=\"uploadFiles.length === 0\"\n        class=\"upload-file__placeholder\"\n      >\n        <span>Select file</span>\n        <ng-container *ngIf=\"fileFormat !== 'all'\">\n          in <span>{{fileFormat}}</span> format\n        </ng-container>\n        or drag and drop it here\n      </div>\n      <input\n        #addFileInput\n        *ngIf=\"uploadFiles.length === 0\"\n        hidden\n        type=\"file\"\n        (change)=\"onChangeFile(addFileInput.files)\"\n        [accept]=\"getAcceptFileFormat()\"\n        [multiple]=\"false\"\n        [disabled]=\"uploadFiles.length > 0\"\n      >\n\n      <div\n        *ngIf=\"uploadFiles.length > 0\"\n        class=\"upload-file__upload-files\"\n      >\n        <div class=\"upload-file__upload-files-inner\">\n          <i class=\"pi pi-check-circle\"></i>\n          <p>{{uploadFiles[0].name}}</p>\n          <span>{{getFileSize(uploadFiles[0].size)}} КБ</span>\n        </div>\n      </div>\n    </label>\n    <div class=\"upload-file__remove\" (click)=\"onRemoveFile(0)\" *ngIf=\"uploadFiles.length > 0 && !multiple\">\n      <i class=\"pi pi-times\"></i>\n    </div>\n\n    <!--  Multiple select-->\n    <label\n      *ngSwitchCase=\"true\"\n      class=\"upload-file__input\"\n      (dragover)=\"onDragOver($event)\"\n      (drop)=\"onDrop($event)\"\n    >\n      <div\n        class=\"upload-file__placeholder\"\n      >\n        <span>Select files</span>\n        <ng-container *ngIf=\"fileFormat !== 'all'\">\n          in <span>{{fileFormat}}</span> format\n        </ng-container>\n        or drag and drop it here\n      </div>\n      <input\n        #addFileInput\n        hidden\n        type=\"file\"\n        (change)=\"onChangeFile(addFileInput.files)\"\n        [accept]=\"getAcceptFileFormat()\"\n        [multiple]=\"true\"\n      >\n    </label>\n\n    <div class=\"upload-file__upload-files\" *ngIf=\"uploadFiles.length > 0 && multiple\">\n      <div class=\"upload-file__files\">\n        <div\n          class=\"upload-file__file\"\n          *ngFor=\"let file of uploadFiles; let idx = index\"\n        >\n          <div class=\"upload-file__upload-files-inner\">\n            <i class=\"pi pi-check-circle\"></i>\n            <p>{{file.name}}</p>\n            <span>{{getFileSize(file.size)}} КБ</span>\n          </div>\n\n          <div\n            class=\"upload-file__remove\"\n            (click)=\"onRemoveFile(idx)\"\n          >\n            <i class=\"pi pi-times\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExternalUriGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const {uri} = route.params;\r\n    // window.open(uri, '_blank');\r\n    window.open(uri, '_self');\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pek-in-icon',\n  templateUrl: './in-icon.component.html',\n  styleUrls: ['./in-icon.component.scss']\n})\nexport class InIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\"\n     fill=\"#fff\">\n  <g>\n    <rect fill=\"none\" height=\"24\" width=\"24\"/>\n  </g>\n  <g>\n    <path\n      d=\"M11,7L9.6,8.4l2.6,2.6H2v2h10.2l-2.6,2.6L11,17l5-5L11,7z M20,19h-8v2h8c1.1,0,2-0.9,2-2V5c0-1.1-0.9-2-2-2h-8v2h8V19z\"/>\n  </g>\n</svg>\n","import {Component, Input, OnInit} from '@angular/core';\n\nexport type Module = 'dashboard' | 'product-structure' | 'confirmation' | 'warehouse' | 'manufacturing-procurement'\n  | 'quality-control' | 'manufacturing' | 'contacts-events' | 'outsourcing' | 'purchasing' | 'sales'\n  | 'reports' | 'administration'\n\n@Component({\n  selector: 'pek-module-icon',\n  templateUrl: './module-icon.component.html',\n  styleUrls: ['./module-icon.component.scss']\n})\nexport class ModuleIconComponent implements OnInit {\n  @Input() module: Module;\n  @Input() isActive: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"module-icon\" [class.module-icon_active]=\"isActive\" [ngSwitch]=\"module\">\n  <svg *ngSwitchCase=\"'product-structure'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M30.2 42v-6.25h-7.7v-20.5h-4.65v6.5H4V6h13.85v6.25H30.2V6H44v15.75H30.2v-6.5h-4.7v17.5h4.7v-6.5H44V42ZM7 9v9.75Zm26.2 20.25V39ZM33.2 9v9.75Zm0 9.75H41V9h-7.8Zm0 20.25H41v-9.75h-7.8ZM7 18.75h7.85V9H7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'dashboard'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M25.5 19.5V6H42v13.5ZM6 25.5V6h16.5v19.5ZM25.5 42V22.5H42V42ZM6 42V28.5h16.5V42Zm3-19.5h10.5V9H9ZM28.5 39H39V25.5H28.5Zm0-22.5H39V9H28.5ZM9 39h10.5v-7.5H9Zm10.5-16.5Zm9-6Zm0 9Zm-9 6Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'confirmation'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M7 40q-1.3 0-2.15-.85Q4 38.3 4 37v-7.65q1.85-.4 3.075-1.875T8.3 24q0-2-1.225-3.5T4 18.65V11q0-1.3.85-2.15Q5.7 8 7 8h34q1.3 0 2.15.85Q44 9.7 44 11v7.65q-1.85.35-3.075 1.85T39.7 24q0 2 1.225 3.475T44 29.35V37q0 1.3-.85 2.15Q42.3 40 41 40Zm0-3h34v-5.45q-1.9-1.3-3.1-3.25-1.2-1.95-1.2-4.3 0-2.35 1.2-4.3 1.2-1.95 3.1-3.25V11H7v5.45q1.95 1.3 3.125 3.25T11.3 24q0 2.35-1.175 4.3Q8.95 30.25 7 31.55Zm17-3.15q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45Zm0-8.35q.6 0 1.05-.45.45-.45.45-1.05 0-.6-.45-1.05-.45-.45-1.05-.45-.6 0-1.05.45-.45.45-.45 1.05 0 .6.45 1.05.45.45 1.05.45ZM24 24Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'warehouse'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M7 39h6V23h22v16h6V16L24 9.2 7 16Zm-3 3V14l20-8 20 8v28H32V26H16v16Zm14.5 0v-3h3v3Zm4-6v-3h3v3Zm4 6v-3h3v3ZM13 23h22Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'manufacturing-procurement'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M5 44q-1.2 0-2.1-.9Q2 42.2 2 41V18.05h3V41h30.45v3Zm6-6q-1.2 0-2.1-.9Q8 36.2 8 35V9.1h12.1V5q0-1.2.9-2.1.9-.9 2.1-.9h7.8q1.2 0 2.1.9.9.9.9 2.1v4.1H46V35q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h32V12.1H11V35ZM23.1 9.1h7.8V5h-7.8ZM11 35V12.1 35Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'quality-control'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M28.55 31.6h3v-6.2h6.15v-3h-6.15v-6.15h-3v6.15h-6.2v3h6.2Zm-16.9 9.2Q6.4 38.7 3.2 34.125 0 29.55 0 23.95q0-5.6 3.225-10.15Q6.45 9.25 11.65 7.15v3.4q-3.95 1.8-6.3 5.425Q3 19.6 3 23.95q0 4.4 2.35 8 2.35 3.6 6.3 5.45ZM30 41.95q-3.75 0-7.025-1.425-3.275-1.425-5.7-3.85-2.425-2.425-3.85-5.7Q12 27.7 12 23.95q0-3.75 1.425-7.025 1.425-3.275 3.85-5.7 2.425-2.425 5.7-3.85Q26.25 5.95 30 5.95q3.75 0 7.025 1.425 3.275 1.425 5.7 3.85 2.425 2.425 3.85 5.7Q48 20.2 48 23.95q0 3.75-1.425 7.025-1.425 3.275-3.85 5.7-2.425 2.425-5.7 3.85Q33.75 41.95 30 41.95Zm0-18Zm.05 15q6.2 0 10.575-4.375Q45 30.2 45 23.95q0-6.2-4.375-10.6Q36.25 8.95 30 8.95q-6.2 0-10.6 4.4-4.4 4.4-4.4 10.6 0 6.25 4.4 10.625t10.65 4.375Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'manufacturing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M4 44V19.95L18 14v4l10-4.05V20h16v24Zm3-3h34V23H25v-4.6l-10 4v-3.95L7 22Zm15.5-5h3v-8h-3Zm-8 0h3v-8h-3Zm16 0h3v-8h-3ZM44 20h-9l2-16h5ZM7 41h34Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'contacts-events'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M9 44q-1.2 0-2.1-.9Q6 42.2 6 41V10q0-1.2.9-2.1Q7.8 7 9 7h3.25V4h3.25v3h17V4h3.25v3H39q1.2 0 2.1.9.9.9.9 2.1v31q0 1.2-.9 2.1-.9.9-2.1.9Zm0-3h30V19.5H9V41Zm0-24.5h30V10H9Zm0 0V10v6.5ZM24 28q-.85 0-1.425-.575Q22 26.85 22 26q0-.85.575-1.425Q23.15 24 24 24q.85 0 1.425.575Q26 25.15 26 26q0 .85-.575 1.425Q24.85 28 24 28Zm-8 0q-.85 0-1.425-.575Q14 26.85 14 26q0-.85.575-1.425Q15.15 24 16 24q.85 0 1.425.575Q18 25.15 18 26q0 .85-.575 1.425Q16.85 28 16 28Zm16 0q-.85 0-1.425-.575Q30 26.85 30 26q0-.85.575-1.425Q31.15 24 32 24q.85 0 1.425.575Q34 25.15 34 26q0 .85-.575 1.425Q32.85 28 32 28Zm-8 8q-.85 0-1.425-.575Q22 34.85 22 34q0-.85.575-1.425Q23.15 32 24 32q.85 0 1.425.575Q26 33.15 26 34q0 .85-.575 1.425Q24.85 36 24 36Zm-8 0q-.85 0-1.425-.575Q14 34.85 14 34q0-.85.575-1.425Q15.15 32 16 32q.85 0 1.425.575Q18 33.15 18 34q0 .85-.575 1.425Q16.85 36 16 36Zm16 0q-.85 0-1.425-.575Q30 34.85 30 34q0-.85.575-1.425Q31.15 32 32 32q.85 0 1.425.575Q34 33.15 34 34q0 .85-.575 1.425Q32.85 36 32 36Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'outsourcing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M38.5 30.25v-16.1L28 6.8l-10.5 7.35v6.45h-3v-7.95L28 3l13.5 9.65v17.6ZM28 6.8ZM29 17h2v-2h-2Zm-4 0h2v-2h-2Zm4 4h2v-2h-2Zm-4 0h2v-2h-2Zm3.3 23.9-15.55-4.45v2.85H2V23.6h15.45l12.75 4.8q1.35.5 2.275 1.625.925 1.125.925 3.225h5.7q2.1 0 3.5 1.5T44 38.8v1.3ZM5 40.3h4.7V26.6H5Zm23.1 1.5 12.8-3.9q-.3-.95-.75-1.3-.45-.35-1.05-.35H28.75q-1.5 0-2.775-.2t-2.425-.55l-4.05-1.25 1.1-2.9 3.65 1.2q1.25.4 2.375.55 1.125.15 3.575.15 0-.6-.225-1.175-.225-.575-.775-.825L16.95 26.6h-4.2v10.7ZM9.7 33.45Zm20.5-.2Zm-20.5.2Zm3.05 0Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'purchasing'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M14.35 43.95q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm20 0q-1.5 0-2.55-1.05-1.05-1.05-1.05-2.55 0-1.5 1.05-2.55 1.05-1.05 2.55-1.05 1.45 0 2.525 1.05t1.075 2.55q0 1.5-1.05 2.55-1.05 1.05-2.55 1.05Zm-22.6-33 5.5 11.4h14.4l6.25-11.4Zm-1.5-3H39.7q1.6 0 2.025.975.425.975-.275 2.175L34.7 23.25q-.5.85-1.4 1.475-.9.625-1.95.625H16.2l-2.8 5.2h24.55v3h-24.1q-2.1 0-3.025-1.4-.925-1.4.025-3.15l3.2-5.9L6.45 7h-3.9V4H8.4Zm7 14.4h14.4Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'sales'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M25.8 44q-.6 0-1.15-.175-.55-.175-1.05-.675L4.85 24.4q-.5-.5-.675-1.05Q4 22.8 4 22.2V7q0-1.3.85-2.15Q5.7 4 7 4h15.2q.6 0 1.2.175t1.1.675L43.15 23.5q1 1 1 2.225t-1 2.225l-15.2 15.2q-.4.4-.975.625Q26.4 44 25.8 44Zm.1-2.9 15.2-15.2L22.2 7H7v15.2ZM12.25 14.8q1.05 0 1.825-.775.775-.775.775-1.825 0-1.05-.775-1.825Q13.3 9.6 12.25 9.6q-1.05 0-1.825.775-.775.775-.775 1.825 0 1.05.775 1.825.775.775 1.825.775ZM7 7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'reports'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M15.95 35.5h16.1v-3h-16.1Zm0-8.5h16.1v-3h-16.1ZM11 44q-1.2 0-2.1-.9Q8 42.2 8 41V7q0-1.2.9-2.1Q9.8 4 11 4h18.05L40 14.95V41q0 1.2-.9 2.1-.9.9-2.1.9Zm16.55-27.7V7H11v34h26V16.3ZM11 7v9.3V7v34V7Z\"/>\n  </svg>\n\n  <svg *ngSwitchCase=\"'administration'\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n    <path\n      d=\"M24 44q-6.9-1.6-11.45-7.825Q8 29.95 8 21.9V9.95l16-6 16 6v13.5q-.7-.35-1.5-.625T37 22.45v-10.4l-13-4.8-13 4.8v9.85q0 3.8 1.225 7t3.125 5.625q1.9 2.425 4.2 4.025 2.3 1.6 4.45 2.3.3.6.9 1.35.6.75 1 1.15-.45.25-.95.375-.5.125-.95.275Zm10.55-9.5q1.3 0 2.2-.95.9-.95.9-2.25t-.9-2.2q-.9-.9-2.2-.9-1.3 0-2.25.9t-.95 2.2q0 1.3.95 2.25t2.25.95Zm-.05 6.25q1.65 0 3-.7t2.3-2q-1.3-.7-2.6-1.05-1.3-.35-2.7-.35-1.4 0-2.725.35-1.325.35-2.575 1.05.95 1.3 2.275 2t3.025.7Zm.15 3.25q-3.9 0-6.65-2.775-2.75-2.775-2.75-6.575 0-3.9 2.75-6.675t6.65-2.775q3.85 0 6.625 2.775t2.775 6.675q0 3.8-2.775 6.575Q38.5 44 34.65 44ZM24 24.05Z\"/>\n  </svg>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'pek-sort-icon',\n  templateUrl: './sort-icon.component.html',\n  styleUrls: ['./sort-icon.component.scss']\n})\nexport class SortIconComponent implements OnInit {\n  @Input() value: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngIf=\"value !== null\">\n  <i\n    class=\"pi\"\n    [class.pi-sort-amount-down]=\"value === true\"\n    [class.pi-sort-amount-down-alt]=\"value === false\"\n  ></i>\n</ng-container>\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {MessageService} from 'primeng/api';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {bufferTime, filter, tap} from 'rxjs/operators';\r\n\r\nclass Message {\r\n  severity: 'success' | 'error';\r\n  status: number;\r\n  text: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  private message$ = new Subject<Message>();\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.message$.pipe(\r\n      bufferTime(1_000),\r\n      filter(messages => Boolean(messages.length)),\r\n    ).subscribe(messages => {\r\n      const succeededMessages = messages.filter(message => message.severity === 'success');\r\n      if (succeededMessages.length) {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: `Succeeded operations: ${succeededMessages.length}`,\r\n          detail: this.getNotificationText(succeededMessages),\r\n        });\r\n      }\r\n      const failedMessages = messages.filter(message => message.severity === 'error');\r\n      if (failedMessages.length) {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: `Failed operations: ${failedMessages.length}`,\r\n          detail: this.getNotificationText(failedMessages),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req).pipe(tap(\r\n      (event) => {\r\n        if (event instanceof HttpResponse) {\r\n          if (req.method === 'PUT' || req.method === 'PATCH') {\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Updated'});\r\n          }\r\n          if (req.method === 'POST') {\r\n\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Created'});\r\n          }\r\n          if (req.method === 'DELETE') {\r\n            this.message$.next({severity: 'success', status: event.status, text: 'Successfully Deleted'});\r\n          }\r\n        }\r\n      },\r\n      (err) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 400 || err.status === 404 || err.status === 502 || err.status === 403) {\r\n            this.message$.next({severity: 'error', status: err.status, text: JSON.stringify(err.error.data)});\r\n          } else if (err.status === 500) {\r\n            console.log(err);\r\n            this.message$.next({\r\n              severity: 'error',\r\n              status: err.status,\r\n              text: JSON.stringify('Unknown error. Contact the developer.')\r\n            });\r\n          }\r\n        }\r\n      }),\r\n    );\r\n  }\r\n\r\n  private getNotificationText(messages: Message[]) {\r\n    return messages\r\n      .map((message) => `${message.status}: ${message.text}`)\r\n      .join(';\\r\\n');\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport type ConfirmType = 'default' | 'success' | 'danger'\n\n@Component({\n  selector: 'pek-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public modalData: { type: ConfirmType, btnConfirmText: string }) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n  <div class=\"confirm\">\n    <div\n      class=\"confirm__icon\"\n      [class.confirm__icon_success]=\"modalData.type === 'success'\"\n      [class.confirm__icon_danger]=\"modalData.type === 'danger'\"\n      [ngSwitch]=\"modalData.type\"\n    >\n      <i *ngSwitchCase=\"'danger'\" class=\"pi pi-times-circle\"></i>\n      <i *ngSwitchCase=\"'default'\" class=\"pi fa-trash-alt\"></i>\n      <i *ngSwitchCase=\"'success'\" class=\"pi pi-check-circle\"></i>\n    </div>\n\n    <div class=\"confirm__text\">\n      Are you sure?\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-secondary\"></button>\n  <ng-container [ngSwitch]=\"modalData.type\">\n    <button\n      *ngSwitchCase=\"'danger'\"\n      pButton\n      type=\"button\"\n      [label]=\"modalData.btnConfirmText ? modalData.btnConfirmText : 'Remove'\"\n      [mat-dialog-close]=\"true\"\n      class=\"p-button-danger\"\n    ></button>\n    <button\n      *ngSwitchCase=\"'success'\"\n      pButton\n      type=\"button\"\n      [label]=\"modalData.btnConfirmText ? modalData.btnConfirmText : 'Confirm'\"\n      [mat-dialog-close]=\"true\"\n      class=\"p-button-success\"\n    ></button>\n  </ng-container>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {NomenclatureImage} from '@shared/models/nomenclature';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\n\n@Component({\n  selector: 'pek-image-gallery',\n  templateUrl: './image-gallery.component.html',\n  styleUrls: ['./image-gallery.component.scss']\n})\nexport class ImageGalleryComponent implements OnInit {\n  images: NomenclatureImage[] = [];\n  offsetSlider = 0;\n  activeSlideIndex = 1;\n  galleryWidth = 1300;\n\n  isLoading = true;\n\n  constructor(\n    private readonly nomenclatureService: NomenclatureService,\n    @Inject(MAT_DIALOG_DATA) public data: { images: NomenclatureImage[], nomenclatureId: number, activeIdx: number },\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.nomenclatureId) {\n      this.loadingImages();\n      return;\n    }\n\n    if (this.data.images) {\n      this.images = this.data.images;\n      this.activeSlideIndex = this.data.activeIdx;\n\n      if (this.activeSlideIndex > 1) {\n        this.offsetSlider = this.galleryWidth * (this.activeSlideIndex - 1);\n      }\n\n      this.isLoading = false;\n    }\n  }\n\n  loadingImages() {\n    this.nomenclatureService.loadImages(this.data.nomenclatureId).subscribe(images => {\n      this.images = images;\n      this.isLoading = false;\n    });\n\n    this.activeSlideIndex = 1;\n  }\n\n  onSlideNext() {\n    if (this.activeSlideIndex === this.images.length) {\n      this.offsetSlider = 0;\n      this.activeSlideIndex = 1;\n    } else {\n      this.offsetSlider = this.galleryWidth * this.activeSlideIndex;\n      this.activeSlideIndex++;\n    }\n  }\n\n  onSlidePrev() {\n    if (this.activeSlideIndex === 1) {\n      this.offsetSlider = this.galleryWidth * (this.images.length - 1);\n      this.activeSlideIndex = this.images.length;\n    } else {\n      this.offsetSlider = (this.activeSlideIndex - 2) * this.galleryWidth;\n      this.activeSlideIndex--;\n    }\n  }\n}\n","<div class=\"image-gallery\" *ngIf=\"!isLoading && images.length > 0\">\n  <div class=\"image-gallery__wrapper\">\n    <div\n      class=\"image-gallery__inner\"\n      [style.width]=\"galleryWidth * images.length + 'px'\"\n      [style.transform]=\"'translateX(-' + offsetSlider + 'px)'\"\n    >\n      <div class=\"image-gallery__slide\" *ngFor=\"let image of images; let idx = index\">\n        <img [src]=\"image.image\" [alt]=\"'Изображение слайда ' + idx + 1\">\n      </div>\n    </div>\n  </div>\n\n  <i\n    *ngIf=\"images.length > 1\"\n    class=\"pi pi-chevron-left image-gallery__btn image-gallery__btn_prev\"\n    (click)=\"onSlidePrev()\"\n  >\n  </i>\n  <i\n    *ngIf=\"images.length > 1\"\n    class=\"pi pi-chevron-right image-gallery__btn image-gallery__btn_next\"\n    (click)=\"onSlideNext()\"\n  >\n  </i>\n</div>\n\n<div class=\"image-gallery__none\" *ngIf=\"isLoading\">\n  <i class=\"pi pi-images\"></i>\n  <p>Images are loading...</p>\n</div>\n\n<div class=\"image-gallery__none\" *ngIf=\"!isLoading && images.length === 0\">\n  <i class=\"pi pi-images\"></i>\n  <p>There are no Images</p>\n</div>\n","import {AfterViewInit, Component, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Paginator} from 'primeng/paginator';\nimport {ENomenclatureType, Nomenclature} from '@shared/models/nomenclature';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuerySearch} from '@shared/models/other';\nimport {fromEvent, Subject, takeUntil} from 'rxjs';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {debounceTime, map, tap} from 'rxjs/operators';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-nomenclature-picker-modal',\n  templateUrl: './nomenclature-picker-modal.component.html',\n  styleUrls: ['./nomenclature-picker-modal.component.scss']\n})\nexport class NomenclaturePickerModalComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('paginator') paginator: Paginator;\n  @ViewChild('searchBoxName') searchBoxName;\n  @ViewChild('searchBoxCode') searchBoxCode;\n\n  countNomenclatures = 0;\n\n  isLoading = true;\n  isStartOnePage = false;\n  nomenclatures: Nomenclature[] = [];\n  selectedNomenclature: Nomenclature;\n\n  nomenclatureType = ENomenclatureType;\n\n  searchForm: FormGroup = this.fb.group({\n    page: [1],\n    name: [''],\n    code: [''],\n    type: [null],\n    categories: [null],\n  });\n\n  queryKey = 'name:/code:/type:null/categories:null';\n\n  query: QuerySearch[] = [\n    {name: 'page', value: this.searchForm.get('page').value},\n    {name: 'paginated', value: true},\n  ];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly nomenclatureService: NomenclatureService,\n    private dialogRef: MatDialogRef<NomenclaturePickerModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ENomenclatureType }\n  ) {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      fromEvent(this.searchBoxName.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxName.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n\n      fromEvent(this.searchBoxCode.nativeElement, 'keyup')\n        .pipe(\n          tap(() => this.selectedNomenclature = null),\n          map(() => this.searchBoxCode.nativeElement.value),\n          debounceTime(350),\n        ).subscribe(() => {\n        this.searchNomenclatures();\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.data.type !== null) {\n      this.searchForm.get('type').patchValue(this.data.type);\n\n      this.searchNomenclatures();\n      return;\n    }\n\n    this.getNomenclatures();\n  }\n\n  getNomenclatures() {\n    this.nomenclatureService.getForPagination(this.query).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(nomenclatures => {\n      this.nomenclatures = nomenclatures.results;\n      this.countNomenclatures = nomenclatures.count;\n\n      if (this.isStartOnePage) {\n        this.paginator.changePage(0);\n      }\n\n      this.isStartOnePage = false;\n      this.isLoading = false;\n    });\n  }\n\n  searchNomenclatures() {\n    this.isLoading = true;\n    this.destroy$.next(true);\n    this.selectedNomenclature = null;\n\n    const newQueryKey = `name:${this.searchForm.get('name').value}/code:${this.searchForm.get('code').value}/type:${this.searchForm.get('type').value}/categories:${this.searchForm.get('categories').value}`;\n\n    if (newQueryKey !== this.queryKey) {\n      this.queryKey = newQueryKey;\n      this.searchForm.get('page').patchValue(1);\n      this.isStartOnePage = true;\n    }\n\n    this.query = [\n      {name: 'page', value: this.searchForm.get('page').value},\n      {name: 'paginated', value: true},\n    ];\n\n    if (this.searchForm.get('name').value) {\n      this.query.push({\n        name: 'name',\n        value: this.searchForm.get('name').value\n      });\n    }\n\n    if (this.searchForm.get('code').value) {\n      this.query.push({\n        name: 'code',\n        value: this.searchForm.get('code').value\n      });\n    }\n\n    if (this.searchForm.get('type').value !== null) {\n      this.query.push({\n        name: 'type',\n        value: this.searchForm.get('type').value\n      });\n    }\n\n    if (this.searchForm.get('categories').value !== null) {\n      this.query.push({\n        name: 'categories',\n        value: this.searchForm.get('categories').value\n      });\n    }\n\n    this.getNomenclatures();\n  }\n\n  paginate(evt: any) {\n    if (!this.isStartOnePage) {\n      this.searchForm.get('page').patchValue(evt.page + 1);\n      this.searchNomenclatures();\n    }\n  }\n\n  selectNomenclatureType(type: ENomenclatureType) {\n    this.searchForm.get('type').patchValue(type);\n    this.searchNomenclatures();\n  }\n\n  onSelectNomenclature() {\n    this.dialogRef.close(this.selectedNomenclature);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  onSelectCategory(category: Category) {\n    if (category) {\n      this.searchForm.get('categories').patchValue(category.id)\n    } else {\n      this.searchForm.get('categories').patchValue(null)\n    }\n\n    this.searchNomenclatures();\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">Choice Nomenclature</h2>\n</div>\n\n<mat-dialog-content>\n  <div\n    class=\"nomenclature-picker-modal\"\n  >\n    <div class=\"nomenclature-picker-modal__form\">\n      <form [formGroup]=\"searchForm\">\n        <div\n          class=\"form-box form-box_3\"\n        >\n          <div class=\"form-group\">\n            <label for=\"code\">Code</label>\n            <input type=\"text\" id=\"code\" pInputText formControlName=\"code\" #searchBoxCode>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" pInputText formControlName=\"name\" #searchBoxName>\n          </div>\n          <div class=\"form-group\" *ngIf=\"data.type === null\">\n            <label>Type</label>\n            <pek-nomenclature-type-picker\n              (choiceNomenclatureType)=\"selectNomenclatureType($event)\"\n            ></pek-nomenclature-type-picker>\n          </div>\n\n          <div class=\"form-group\" *ngIf=\"data.type === nomenclatureType.PURCHASED\">\n            <label>Category</label>\n            <pek-product-category-picker (choiceCategory)=\"onSelectCategory($event)\"></pek-product-category-picker>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"table-pagination-preloader\">\n      <p-table\n        [value]=\"nomenclatures\"\n        [rows]=\"10\"\n        selectionMode=\"single\"\n        [(selection)]=\"selectedNomenclature\"\n      >\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th class=\"text-center\" style=\"width: 7%\">#</th>\n            <th style=\"width: 22%\">Code</th>\n            <th style=\"width: 30%\">Name</th>\n            <th style=\"width: 10%\">UOM</th>\n            <th style=\"width: 15%;\">Technology</th>\n            <th style=\"width: 15%\" class=\"text-center\">Category</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-nomenclature let-i=\"rowIndex\">\n          <tr\n            [pSelectableRow]=\"nomenclature\"\n            [pSelectableRowDisabled]=\"nomenclature.approved === '0' && nomenclature.type === '0'\"\n          >\n            <td style=\"width: 7%\" class=\"text-center\">{{(this.searchForm.get('page').value - 1) * 10 + i + 1}}</td>\n            <td style=\"width: 22%\">{{nomenclature.code}}</td>\n            <td style=\"width: 30%\">\n              <span *ngIf=\"nomenclature.approved === '0' && nomenclature.type === '0'\" class=\"badge badge_warning\">NEW</span>\n              {{nomenclature.name}}\n            </td>\n            <td\n              style=\"width: 10%\">{{nomenclature.category?.unit_of_measure?.symbol ? nomenclature.category?.unit_of_measure?.symbol : 'Pcs' }}</td>\n            <td style=\"width: 15%\">\n              <div *ngFor=\"let technology of nomenclature.technologies\">\n                {{technology.name}}\n              </div>\n            </td>\n            <td style=\"width: 15%\" class=\"text-center\">{{nomenclature.category?.name}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n              <span *ngIf=\"!isLoading\">No Records Found</span>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n\n      <div class=\"pagination-preloader\" *ngIf=\"isLoading\">\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\n      </div>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <p-paginator\n    #paginator\n    [class.hide]=\"nomenclatures.length === 0\"\n    [rows]=\"10\"\n    [totalRecords]=\"countNomenclatures\"\n    (onPageChange)=\"paginate($event)\"\n  >\n  </p-paginator>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [disabled]=\"!selectedNomenclature\"\n    [label]=\"'Choice'\"\n    (click)=\"onSelectNomenclature()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'pek-paste-image',\n  templateUrl: './paste-image.component.html',\n  styleUrls: ['./paste-image.component.scss']\n})\nexport class PasteImageComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<PasteImageComponent>,\n    @Inject(MAT_DIALOG_DATA) public imageSrc: string | ArrayBuffer\n  ) { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"paste-image\">\n  <img [src]=\"imageSrc\" alt=\"Изображение\">\n</div>\n\n<mat-dialog-actions class=\"justify-content-between\">\n    <button\n      pButton\n      type=\"button\"\n      label=\"Cancel\"\n      [mat-dialog-close]=\"false\"\n      class=\"p-button-danger mr-3\"\n    ></button>\n    <button\n      pButton\n      type=\"button\"\n      label=\"Paste Image\"\n      [mat-dialog-close]=\"true\"\n      class=\"p-button-success\"\n    ></button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport {LocatorService} from '../../../../warehouse/services/locator.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ListService} from '../../../../warehouse/services/list.service';\r\n\r\n@Component({\r\n  selector: 'app-complete-list',\r\n  templateUrl: './complete-list.component.html',\r\n  styleUrls: ['./complete-list.component.scss']\r\n})\r\nexport class CompleteListComponent implements OnInit {\r\n\r\n  groupLocators = [];\r\n  locatorsMap = {};\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private locatorService: LocatorService,\r\n    private dialogRef: MatDialogRef<CompleteListComponent>,\r\n    fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private listService: ListService,\r\n    private adapterService:AdapterService) {\r\n    if(this.data.type=='edit'){\r\n      this.form = fb.group({\r\n        locator: [null, Validators.required]\r\n      });\r\n      this.locatorService.getAll().pipe(take(1)).subscribe(res => {\r\n\r\n        res.forEach(element => {\r\n          if (this.locatorsMap[element.warehouse.id]) {\r\n            this.locatorsMap[element.warehouse.id].items.push({ label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place, value: element.id });\r\n          } else {\r\n            this.locatorsMap[element.warehouse.id] = {};\r\n            this.locatorsMap[element.warehouse.id].label = element.warehouse.name;\r\n            this.locatorsMap[element.warehouse.id].value = element.warehouse.id;\r\n            this.locatorsMap[element.warehouse.id].items = [];\r\n            this.locatorsMap[element.warehouse.id].items.push({ label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place, value: element.id });\r\n          }\r\n        })\r\n        Object.keys(this.locatorsMap).forEach(id => {\r\n          this.groupLocators.push(this.locatorsMap[id])\r\n        })\r\n        this.groupLocators = this.groupLocators.filter(x => { return x.value == 5 || x.value == 6 || x.value == 7 })\r\n      })\r\n    }\r\n\r\n    if(this.data.type=='date'){\r\n      this.form = fb.group({\r\n        id: [this.data.entity.list, Validators.required],\r\n        completed: [new Date(this.data.entity.completed), Validators.required]\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  complete() {\r\n    this.listService.process(this.form.value, this.data.entity.id).subscribe(process => {\r\n      this.dialogRef.close(true)\r\n    })\r\n  }\r\n\r\n  setDate() {\r\n    let send = this.form.value;\r\n    send.completed = this.adapterService.dateTimeAdapter(this.form.value.completed);\r\n    this.listService.updatePartly(send).subscribe(process => {\r\n      this.dialogRef.close(true)\r\n    })\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span *ngIf=\"data.type==='edit'\">Set Locator</span>\r\n    <span *ngIf=\"data.type==='date'\">Set Date</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content class=\"overflow-visible\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-group\" *ngIf=\"data.type==='edit'\">\r\n      <label for=\"locator\">Locator</label>\r\n      <p-dropdown formControlName=\"locator\" [options]=\"groupLocators\" id=\"locator\" [filter]=\"true\"\r\n                  placeholder=\"Select Locator\" [group]=\"true\">\r\n        <ng-template let-group pTemplate=\"group\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{group.label}}</span>\r\n          </div>\r\n        </ng-template>\r\n      </p-dropdown>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"data.type==='date'\">\r\n      <label for=\"completed\">Locator</label>\r\n      <p-calendar formControlName=\"completed\" dataType=\"date\" dateFormat=\"dd/mm/yy\" [readonlyInput]=\"true\"></p-calendar>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\" d-flex justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n\r\n  <button\r\n    *ngIf=\"data.type==='edit'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Complete\"\r\n    class=\"p-button-success\"\r\n    (click)=\"complete()\"\r\n  ></button>\r\n\r\n  <button\r\n    *ngIf=\"data.type==='date'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Set Date\"\r\n    class=\"p-button-success\"\r\n    (click)=\"setDate()\"\r\n  ></button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {finalize, take} from 'rxjs/operators';\r\nimport {ListService} from '../../../../warehouse/services/list.service';\r\nimport {ListProductService} from '../../../../warehouse/services/list-product.service';\r\n\r\n@Component({\r\n  selector: 'app-list-products',\r\n  templateUrl: './list-products.component.html',\r\n  styleUrls: ['./list-products.component.scss']\r\n})\r\n\r\nexport class ListProductsComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  isSerial = false;\r\n  isLoading = true;\r\n\r\n  errorStr = '';\r\n\r\n  serialsWarehouse: { id: number, label: string }[] = [];\r\n  serialsProduction: { id: number, label: string }[] = [];\r\n\r\n  constructor(\r\n    private readonly listService: ListService,\r\n    private dialogRef: MatDialogRef<ListProductsComponent>,\r\n    fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: any,\r\n    private listProductService: ListProductService) {\r\n\r\n    console.log(this.data);\r\n    this.form = fb.group({\r\n      id: [data.entity.id],\r\n      isWarehouse: ['0'],\r\n      actual_quantity: [data.entity.actual_quantity],\r\n    });\r\n\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n      this.form.addControl('serial_product_ids', new FormControl([]));\r\n      this.form.addControl('root_serial_numbers_in_production', new FormControl([]));\r\n      // this.form.removeControl('actual_quantity');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n      this.loadInfo();\r\n    }\r\n  }\r\n\r\n  edit() {\r\n    const send = this.form.value;\r\n\r\n    if (this.data.entity.nomenclature.bulk_or_serial === '1') {\r\n\r\n      if (send.isWarehouse === '0') {\r\n        delete send.root_serial_numbers_in_production;\r\n        send.actual_quantity = this.form.value.serial_product_ids.length;\r\n        send.serial_product_ids = this.form.get('serial_product_ids').value;\r\n      } else if (send.isWarehouse === '1') {\r\n        delete send.serial_product_ids;\r\n        delete send.actual_quantity;\r\n        send.root_serial_numbers_in_production = this.form.get('root_serial_numbers_in_production').value;\r\n        send.root_serial_numbers_in_production = send.root_serial_numbers_in_production.map(val => +val);\r\n      }\r\n    } else {\r\n      delete send.root_serial_numbers_in_production;\r\n    }\r\n    delete send.isWarehouse;\r\n\r\n    console.log(send);\r\n    this.listProductService.updatePartly(this.form.value).pipe(take(1)).subscribe(res => this.dialogRef.close(res));\r\n  }\r\n\r\n  loadInfo() {\r\n    this.listService.getNomenclatureInfo(this.data.entity.nomenclature.id).pipe(\r\n      finalize(() => {\r\n        this.isLoading = false;\r\n        this.isSerial = true;\r\n      })\r\n    ).subscribe({\r\n      next: (res) => {\r\n        if (res) {\r\n          console.log(res);\r\n          res.warehouse_products.forEach(item => {\r\n            this.serialsWarehouse.push(\r\n              {id: item.id, label: item.serial_number.type_with_number ? item.serial_number.type_with_number : item.serial_number.id}\r\n            );\r\n          });\r\n\r\n          res.serial_numbers_in_production.forEach(item => {\r\n            this.serialsProduction.push(\r\n              {id: item.id, label: item.type_with_number ? item.type_with_number : item.id}\r\n            );\r\n          });\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.errorStr = 'There are no warehouse products on stock and in production';\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h2 class=\"modal-header__title\">\r\n    <span>Edit Actual Quantity</span>\r\n  </h2>\r\n</div>\r\n\r\n<mat-dialog-content class=\"overflow-visible\">\r\n  <form [formGroup]=\"form\" *ngIf=\"!errorStr\">\r\n    <div class=\"form-group\"\r\n         *ngIf=\"data.entity.serial_warehouse_products.length == 0 && data.entity.nomenclature.bulk_or_serial === '0'\">\r\n      <label>Actual Quantity</label>\r\n      <input formControlName=\"actual_quantity\" pInputText class=\"form-control\" type=\"number\">\r\n    </div>\r\n    <div *ngIf=\"(serialsWarehouse.length > 0 || serialsProduction.length > 0) && isSerial && !isLoading\">\r\n      <div class=\"d-flex mb-3\">\r\n        <div class=\"сol-6 mr-2\">\r\n          <input class=\"mr-2\" id=\"own\" type=\"radio\" value=\"0\" name=\"isWarehouse\" formControlName=\"isWarehouse\">\r\n          <label for=\"own\">Warehouses</label>\r\n        </div>\r\n        <div class=\"col-6\" *ngIf=\"data.entity.nomenclature.type === '1'\">\r\n          <input class=\"mr-2\" id=\"outsource\"  type=\"radio\" value=\"1\" name=\"isWarehouse\"\r\n                 formControlName=\"isWarehouse\">\r\n          <label for=\"outsource\">Production</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\" *ngIf=\"form.get('isWarehouse').value === '0'\">\r\n        <div *ngIf=\"serialsWarehouse.length > 0 && isSerial && !isLoading\">\r\n          <label>Warehouses Serial Numbers</label>\r\n          <p-multiSelect formControlName=\"serial_product_ids\" [options]=\"serialsWarehouse\"\r\n                         optionLabel=\"label\" optionValue=\"id\"></p-multiSelect>\r\n        </div>\r\n\r\n        <div *ngIf=\"serialsWarehouse.length === 0 && isSerial && !isLoading\" class=\"mb-2\">\r\n          <div class=\"empty\">Serial Numbers None</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\" *ngIf=\"form.get('isWarehouse').value === '1'\">\r\n        <div *ngIf=\"serialsProduction.length > 0 && isSerial && !isLoading\">\r\n          <label>Production Serial Numbers</label>\r\n          <p-multiSelect formControlName=\"root_serial_numbers_in_production\" [options]=\"serialsProduction\"\r\n                         optionLabel=\"label\" optionValue=\"id\"></p-multiSelect>\r\n        </div>\r\n\r\n        <div *ngIf=\"serialsProduction.length === 0 && isSerial && !isLoading\" class=\"mb-2\">\r\n          <div class=\"empty\">Serial Numbers None</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n  <div *ngIf=\"errorStr\">\r\n    <div class=\"empty mb-2\">{{errorStr}}</div>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions class=\" d-flex justify-content-between\">\r\n  <button\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Cancel\"\r\n    [mat-dialog-close]=\"false\"\r\n    class=\"p-button-danger\"\r\n  ></button>\r\n<!--  <div>-->\r\n<!--    <button (click)=\"edit()\" type=\"button\" class=\"btn btn-success ml-2\" [disabled]=\"errorStr\">Edit</button>-->\r\n<!--  </div>-->\r\n\r\n  <button\r\n    *ngIf=\"data.type==='edit'\"\r\n    pButton\r\n    type=\"button\"\r\n    label=\"Edit\"\r\n    class=\"p-button-success\"\r\n    [disabled]=\"errorStr\"\r\n    (click)=\"edit()\"\r\n  ></button>\r\n\r\n\r\n</mat-dialog-actions>\r\n","import {Category} from '../../product-structure/models/category';\r\nimport {Technology} from '../../product-structure/models/technology';\r\n\r\nexport class Nomenclature {\r\n  readonly id: number;\r\n  code?: string;\r\n  name?: string;\r\n  status?: string;\r\n  parent?: number | Nomenclature;\r\n  technologies?: Technology[];\r\n  images?: NomenclatureImage[];\r\n  category?: Category;\r\n  // category?: any;\r\n  description?: string;\r\n  type?: ENomenclatureType;\r\n  approved?: ENomenclatureApproval;\r\n  fullName?: string;\r\n  // purchase_category?: PurchasingCategory;\r\n  accounting_number?: string;\r\n  is_fixed_asset?: boolean;\r\n  is_non_ressivable?: boolean;\r\n  qc_protocol?: number;\r\n  bulk_or_serial?: '1' | '0';\r\n  tasks?: Task[];\r\n  root_category?: Category;\r\n  price?: any\r\n}\r\n\r\nexport class NomenclatureImage {\r\n  readonly id: number;\r\n  image: string | ArrayBuffer;\r\n  file?: File;\r\n}\r\n\r\nexport class Nomenclatures {\r\n  count: number;\r\n  next: string;\r\n  previous: string;\r\n  results: Nomenclature[];\r\n}\r\n\r\nexport class NewNomenclature {\r\n  readonly id: number;\r\n  name: string;\r\n  parents?: NomenclatureParent[];\r\n}\r\n\r\nexport class NomenclatureParent {\r\n  readonly id: number;\r\n  name: string;\r\n}\r\n\r\nexport enum ENomenclatureType {\r\n  PURCHASED = '0',\r\n  ASSEMBLY = '1',\r\n  MANUFACTURED = '2'\r\n}\r\n\r\nexport enum ENomenclatureApproval {\r\n  NEW = '0',\r\n  APPROVED = '1',\r\n  DECLINED = '2'\r\n}\r\n\r\nexport enum ENomenclatureBulk {\r\n  BULK = '0',\r\n  SERIAL = '1',\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'pek-accepted-type-picker',\n  templateUrl: './accepted-type-picker.component.html',\n  styleUrls: ['./accepted-type-picker.component.scss']\n})\nexport class AcceptedTypePickerComponent implements OnInit {\n  @Output() selectAcceptedType: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  acceptedTypes: {name: string, value: boolean}[] = [\n    {name: 'Invoices', value: true},\n    {name: 'Orders', value: false}\n  ];\n\n  selectedValue: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSelectAcceptedType() {\n    this.selectAcceptedType.next(this.selectedValue);\n  }\n\n}\n","<div class=\"accepted-type-picker\">\n  <p-dropdown\n    [(ngModel)]=\"selectedValue\"\n    (ngModelChange)=\"onSelectAcceptedType()\"\n    [options]=\"acceptedTypes\"\n    [showClear]=\"true\"\n    placeholder=\"Select Accepted\"\n    optionLabel=\"name\"\n    optionValue=\"value\"\n  >\n  </p-dropdown>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\nexport enum EAccountingType {\n  OUTSOURCE = 2,\n  OWN = 3,\n}\n\n@Component({\n  selector: 'pek-accounting-type-picker',\n  templateUrl: './accounting-type-picker.component.html',\n  styleUrls: ['./accounting-type-picker.component.scss']\n})\nexport class AccountingTypePickerComponent implements OnInit {\n  @Input() currentAccountingType: EAccountingType = null;\n  @Input() isDisabled = false;\n  @Output() choiceAccountingType: EventEmitter<EAccountingType> = new EventEmitter<EAccountingType>();\n\n  selectAccountingType: EAccountingType = null;\n\n  accountingTypes: { label: string, value: EAccountingType }[] = [\n    {label: 'Outsource production', value: EAccountingType.OUTSOURCE},\n    {label: 'Own production', value: EAccountingType.OWN},\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.setCurrentProductionType();\n  }\n\n  setCurrentProductionType() {\n    if (this.currentAccountingType !== null) {\n      this.selectAccountingType = this.currentAccountingType;\n    }\n  }\n\n  onSelectProductionType() {\n    this.choiceAccountingType.emit(this.selectAccountingType);\n  }\n\n}\n","<div class=\"accounting-type-picker\">\n  <p-dropdown\n    [options]=\"accountingTypes\"\n    optionLabel=\"label\"\n    optionValue=\"value\"\n    placeholder=\"Select Type\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n    [(ngModel)]=\"selectAccountingType\"\n    (ngModelChange)=\"onSelectProductionType()\"\n  ></p-dropdown>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyCategoryModule} from '../../../crm/models/company-category';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\nimport {Technology} from '../../../product-structure/models/technology';\n\n@Component({\n  selector: 'pek-company-category-module-picker',\n  templateUrl: './company-category-module-picker.component.html',\n  styleUrls: ['./company-category-module-picker.component.scss']\n})\nexport class CompanyCategoryModulePickerComponent implements OnInit {\n  @Input() currentModulesIds: number[] = [];\n  @Output() selectModule: EventEmitter<CompanyCategoryModule[]> = new EventEmitter<CompanyCategoryModule[]>();\n\n  isLoading = true;\n  modules: CompanyCategoryModule[] = [];\n  selectedModules: CompanyCategoryModule[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyCategoryService: CompanyCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyCategoryService.getModules().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(modules => {\n      this.modules = modules;\n      this.findModules();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentModulesIds' in changes) {\n      this.selectedModules = [];\n      this.findModules();\n    }\n  }\n\n  onSelectModule(technologies: Technology[]) {\n    this.selectModule.emit(technologies);\n  }\n\n  findModules() {\n    if (this.currentModulesIds.length > 0) {\n      this.currentModulesIds.forEach(id => {\n        const findModule = this.modules.find(t => t.id === id);\n        console.log(this.modules)\n        console.log(id);\n\n        console.log(findModule);\n\n        if (findModule) {\n          this.selectedModules.push(findModule);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"company-category-module-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"modules\"\n    [(ngModel)]=\"selectedModules\"\n    optionLabel=\"name\"\n    placeholder=\"Select Modules\"\n    (ngModelChange)=\"onSelectModule($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyCategory} from '../../../crm/models/company-category';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\n\n@Component({\n  selector: 'pek-company-category-picker',\n  templateUrl: './company-category-picker.component.html',\n  styleUrls: ['./company-category-picker.component.scss']\n})\nexport class CompanyCategoryPickerComponent implements OnInit {\n  @Output() selectCompanyCategory: EventEmitter<number> = new EventEmitter<number>();\n  isLoading = true;\n  categories: Partial<CompanyCategory>[] = [];\n  selectedCompanyCategoryId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyCategoryService: CompanyCategoryService,\n  ) { }\n\n  ngOnInit(): void {\n    this.companyCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectCompanyCategory() {\n    this.selectCompanyCategory.emit(this.selectedCompanyCategoryId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"company-category-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categories\"\n    placeholder=\"Select Company Category\"\n    [(ngModel)]=\"selectedCompanyCategoryId\"\n    (ngModelChange)=\"onSelectCompanyCategory()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\n\n@Component({\n  selector: 'pek-company-picker',\n  templateUrl: './company-picker.component.html',\n  styleUrls: ['./company-picker.component.scss']\n})\nexport class CompanyPickerComponent implements OnInit, OnDestroy {\n  @Output() selectCompany: EventEmitter<number> = new EventEmitter<number>();\n  @Input() currentCompanyId: any;\n  isLoading = true;\n  companies: Partial<Company>[] = [];\n  selectedCompanyId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyService: CompanyService,\n  ) { }\n\n  ngOnInit(): void {\n    this.companyService.getShorts().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(companies => {\n      this.companies = companies;\n\n      if (this.currentCompanyId) {\n        this.selectedCompanyId = this.currentCompanyId;\n      }\n\n      this.isLoading = false;\n    });\n  }\n\n  onSelectCompany() {\n    this.selectCompany.emit(this.selectedCompanyId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"company-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    placeholder=\"Select Company\"\n    [(ngModel)]=\"selectedCompanyId\"\n    (ngModelChange)=\"onSelectCompany()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {EmployeeService} from '@shared/services/employee.service';\nimport {Employee} from '@shared/models/employee';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-employee-picker',\n  templateUrl: './employee-picker.component.html',\n  styleUrls: ['./employee-picker.component.scss']\n})\nexport class EmployeePickerComponent implements OnInit, OnDestroy {\n  @Output() selectEmployee: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n\n  selectEmployeeId: number;\n  isLoading = true;\n\n  employees: Employee[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly employeeService: EmployeeService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getEmployees();\n  }\n\n  getEmployees() {\n    this.employeeService.getAll().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(employees => {\n      this.employees = employees;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectTechnology() {\n    this.selectEmployee.emit(this.selectEmployeeId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"employee-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"employees\"\n    placeholder=\"Select Employee\"\n    [(ngModel)]=\"selectEmployeeId\"\n    (ngModelChange)=\"onSelectTechnology()\"\n    optionLabel=\"fullName\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n    [filter]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {LocatorService} from '../../../warehouse/services/locator.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Product} from '../../../product-structure/models/product';\n\n@Component({\n  selector: 'pek-group-locator-picker',\n  templateUrl: './group-locator-picker.component.html',\n  styleUrls: ['./group-locator-picker.component.scss']\n})\nexport class GroupLocatorPickerComponent implements OnInit {\n  @Input() selectedLocatorId: number;\n  @Input() product: Product;\n  @Output() selectLocator: EventEmitter<number> = new EventEmitter<number>();\n\n  isLoading = false;\n  groupLocators = [];\n  locatorsMap = {};\n\n  selectLocatorId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private locatorService: LocatorService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.selectedLocatorId) {\n      this.selectLocatorId = this.selectedLocatorId;\n    }\n\n    this.getLocators();\n  }\n\n  getLocators() {\n    this.locatorService.getAll().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(locators => {\n      locators.forEach(element => {\n        if (this.locatorsMap[element.warehouse.id]) {\n          // if (element.id !== this.product?.locator?.id) {\n          this.locatorsMap[element.warehouse.id].items.push({\n            label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place,\n            value: element.id\n          });\n          // }\n        } else {\n          this.locatorsMap[element.warehouse.id] = {};\n          this.locatorsMap[element.warehouse.id].label = element.warehouse.name;\n          this.locatorsMap[element.warehouse.id].value = element.warehouse.id;\n          this.locatorsMap[element.warehouse.id].items = [];\n          // if (element.id !== this.product?.locator?.id) {\n          this.locatorsMap[element.warehouse.id].items.push({\n            label: element.name + ' R:' + element.row + ' Col:' + element.column + ' Sh:' + element.shelf + ' Pl:' + element.place,\n            value: element.id\n          });\n          // }\n        }\n      });\n\n      Object.keys(this.locatorsMap).forEach(id => {\n        this.groupLocators.push(this.locatorsMap[id]);\n      });\n    });\n  }\n\n  onSelectLocator() {\n    this.selectLocator.emit(this.selectLocatorId);\n  }\n}\n","<div class=\"group-locator-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"groupLocators\"\n    placeholder=\"Select Locator\"\n    [(ngModel)]=\"selectLocatorId\"\n    (ngModelChange)=\"onSelectLocator()\"\n    [showClear]=\"true\"\n    [filter]=\"true\"\n    [group]=\"true\"\n  >\n    <ng-template let-group pTemplate=\"group\">\n      <div class=\"d-flex align-items-center\">\n        <span>{{group.label}}</span>\n      </div>\n    </ng-template>\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {LocatorService} from '../../../warehouse/services/locator.service';\nimport {Subject} from 'rxjs';\nimport {Locator} from '../../../warehouse/models/locator';\n\n@Component({\n  selector: 'pek-locator-picker',\n  templateUrl: './locator-picker.component.html',\n  styleUrls: ['./locator-picker.component.scss']\n})\nexport class LocatorPickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() selectLocator: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isAllLocators = true;\n  @Input() warehouseId: number = null;\n  @Input() isDisabled = false;\n\n  isLoading = false;\n  locators: Locator[] = [];\n\n  selectLocatorId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private locatorService: LocatorService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selectLocatorId = null;\n    if ('warehouseId' in changes) {\n      if (!this.isAllLocators && this.warehouseId) {\n        this.getLocatorsForWarehouse();\n      } else if (!this.warehouseId) {\n        this.locators = [];\n        this.isDisabled = true;\n      }\n    }\n  }\n\n  getLocatorsForWarehouse() {\n    this.isLoading = true;\n    this.locatorService.get([{name: 'warehouse', value: this.warehouseId}]).subscribe(locators => {\n      this.locators = locators;\n      this.isDisabled = false;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectLocator() {\n    this.selectLocator.emit(this.selectLocatorId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"locator-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"locators\"\n    placeholder=\"Select Locator\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [(ngModel)]=\"selectLocatorId\"\n    (ngModelChange)=\"onSelectLocator()\"\n    [showClear]=\"true\"\n    [disabled]=\"isDisabled\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\n\n@Component({\n  selector: 'pek-multi-categories-picker',\n  templateUrl: './multi-categories-picker.component.html',\n  styleUrls: ['./multi-categories-picker.component.scss']\n})\nexport class MultiCategoriesPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  categories: Category[] = [];\n  categoriesTree: TreeNode<Category>[] = [];\n\n  selectedCategories: TreeNode<Category>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productCategoriesService: CategoriesService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories || this.selectedCategories.length === 0) {\n      this.choiceCategories.next(null)\n    } else {\n      this.choiceCategories.next(this.selectedCategories.map(c => c.data.id).join(','))\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-categories-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    selectionMode=\"checkbox\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Company} from '../../../crm/models/company';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {CompanyCategory} from '../../../crm/models/company-category';\nimport {CompanyCategoryService} from '../../../crm/services/company-category.service';\n\n@Component({\n  selector: 'pek-multi-company-category-picker',\n  templateUrl: './multi-company-category-picker.component.html',\n  styleUrls: ['./multi-company-category-picker.component.scss']\n})\nexport class MultiCompanyCategoryPickerComponent implements OnInit, OnChanges {\n  @Input() isDisabled = false;\n  @Output() selectCompanyCategories: EventEmitter<string> = new EventEmitter<string>();\n  @Input() currentCompanyCategoriesIds: number[] = [];\n\n  isLoading = true;\n  companies: Partial<CompanyCategory>[] = [];\n  selectedCompanyCategories: Partial<CompanyCategory>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyCategoryService: CompanyCategoryService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.companies = categories;\n      this.findCompanyCategories();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentCompanyCategoriesIds' in changes) {\n      this.selectedCompanyCategories = [];\n      this.findCompanyCategories();\n    }\n  }\n\n  findCompanyCategories() {\n    if (this.currentCompanyCategoriesIds.length > 0) {\n      this.currentCompanyCategoriesIds.forEach(id => {\n        const findCompany = this.companies.find(t => t.id === id);\n\n        if (findCompany) {\n          this.selectedCompanyCategories.push(findCompany);\n        }\n      });\n    }\n  }\n\n  onSelectCompanyCategories() {\n    if (this.selectedCompanyCategories === null || this.selectedCompanyCategories?.length === 0) {\n      this.selectCompanyCategories.emit(null);\n    } else {\n      this.selectCompanyCategories.emit(this.selectedCompanyCategories.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-company-category-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedCompanyCategories\"\n    optionLabel=\"name\"\n    placeholder=\"Select Company Categories\"\n    (ngModelChange)=\"onSelectCompanyCategories()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Company} from '../../../crm/models/company';\nimport {CompanyService} from '../../../crm/services/company.service';\n\n@Component({\n  selector: 'pek-multi-company-picker',\n  templateUrl: './multi-company-picker.component.html',\n  styleUrls: ['./multi-company-picker.component.scss']\n})\nexport class MultiCompanyPickerComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() isDisabled = false;\n  @Input() currentCompaniesIds: number[] = [];\n  @Output() selectCompanies: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  companies: Partial<Company>[] = [];\n  selectedCompanies: Partial<Company>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly companyService: CompanyService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companyService.getShorts().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(companies => {\n      this.companies = companies;\n      this.findCompanies();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentCompaniesIds' in changes) {\n      this.selectedCompanies = [];\n      this.findCompanies();\n    }\n  }\n\n  findCompanies() {\n    if (this.currentCompaniesIds.length > 0) {\n      this.currentCompaniesIds.forEach(id => {\n        const findCompany = this.companies.find(t => t.id === id);\n\n        if (findCompany) {\n          this.selectedCompanies.push(findCompany);\n        }\n      });\n    }\n  }\n\n  onSelectCompanies() {\n    if (this.selectedCompanies === null || this.selectedCompanies?.length === 0) {\n      this.selectCompanies.emit(null);\n    } else {\n      this.selectCompanies.emit(this.selectedCompanies.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-company-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedCompanies\"\n    optionLabel=\"name\"\n    placeholder=\"Select Companies\"\n    (ngModelChange)=\"onSelectCompanies()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Locator} from '../../../warehouse/models/locator';\nimport {Subject, takeUntil} from 'rxjs';\nimport {LocatorService} from '../../../warehouse/services/locator.service';\n\n@Component({\n  selector: 'pek-multi-locator-picker',\n  templateUrl: './multi-locator-picker.component.html',\n  styleUrls: ['./multi-locator-picker.component.scss']\n})\nexport class MultiLocatorPickerComponent implements OnInit {\n  @Input() isDisabled = false;\n  @Input() currentWarehousesIds: number[] = [];\n  @Output() selectLocators: EventEmitter<Locator[]> = new EventEmitter<Locator[]>();\n\n  isLoading = false;\n  locators: Locator[] = [];\n  selectedLocators: Locator[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly locatorService: LocatorService\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  getLocatorsForWarehouses() {\n    this.isDisabled = false;\n    this.isLoading = true;\n    this.locatorService.get([{name: 'warehouses', value: this.currentWarehousesIds}]).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(locators => {\n      this.locators = locators;\n      this.isLoading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentWarehousesIds' in changes) {\n      this.selectedLocators = [];\n\n      if (this.currentWarehousesIds?.length > 0) {\n        this.getLocatorsForWarehouses();\n      } else {\n        this.locators = [];\n        this.isDisabled = true;\n      }\n    }\n  }\n\n  onSelectLocators(locators: Locator[]) {\n    this.selectLocators.emit(locators);\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"multi-locator-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"locators\"\n    [(ngModel)]=\"selectedLocators\"\n    optionLabel=\"name\"\n    placeholder=\"Select Locators\"\n    (ngModelChange)=\"onSelectLocators($event)\"\n    [disabled]=\"isDisabled\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-multi-product-structure-categories-picker',\n  templateUrl: './multi-product-structure-categories-picker.component.html',\n  styleUrls: ['./multi-product-structure-categories-picker.component.scss']\n})\nexport class MultiProductStructureCategoriesPickerComponent implements OnInit {\n  @Output() choiceCategories: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[] = [];\n\n  selectedCategories: TreeNode<ProductStructureCategory>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productStructureCategoryService: ProductStructureCategoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      this.createTree();\n      this.isLoading = false;\n    });\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<ProductStructureCategory>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <ProductStructureCategory>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategories() {\n    if (!this.selectedCategories || this.selectedCategories.length === 0) {\n      this.choiceCategories.next(null)\n    } else {\n      this.choiceCategories.next(this.selectedCategories.map(c => c.data.id).join(','))\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"multi-product-structure-categories-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    selectionMode=\"checkbox\"\n    [(ngModel)]=\"selectedCategories\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategories()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {SalesStatus} from '../../../sales/models/sales-chain';\nimport {SalesStatusService} from '../../../sales/services/sales-status.service';\n\n@Component({\n  selector: 'pek-multi-sales-status-picker',\n  templateUrl: './multi-sales-status-picker.component.html',\n  styleUrls: ['./multi-sales-status-picker.component.scss']\n})\nexport class MultiSalesStatusPickerComponent implements OnInit {\n\n  @Input() isDisabled = false;\n  @Output() selectStatuses: EventEmitter<string> = new EventEmitter<string>();\n\n  isLoading = true;\n  companies: Partial<SalesStatus>[] = [];\n  selectedStatuses: Partial<SalesStatus>[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly salesStatusService: SalesStatusService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.salesStatusService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(statuses => {\n      this.companies = statuses;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectStatuses() {\n    if (this.selectedStatuses === null || this.selectedStatuses?.length === 0) {\n      this.selectStatuses.emit(null);\n    } else {\n      this.selectStatuses.emit(this.selectedStatuses.map(c => c.id).join(','));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-sales-status-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"companies\"\n    [(ngModel)]=\"selectedStatuses\"\n    optionLabel=\"name\"\n    placeholder=\"Select Sales Statuses\"\n    (ngModelChange)=\"onSelectStatuses()\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {TechnologyService} from '../../../product-structure/services/technology.service';\nimport {Technology} from '../../../product-structure/models/technology';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-multi-technology-picker',\n  templateUrl: './multi-technology-picker.component.html',\n  styleUrls: ['./multi-technology-picker.component.scss']\n})\nexport class MultiTechnologyPickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() currentTechnologiesIds: number[] = [];\n  @Output() selectTechnologies: EventEmitter<Technology[]> = new EventEmitter<Technology[]>();\n\n  isLoading = true;\n  technologies: Technology[] = [];\n  selectedTechnologies: Technology[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly technologyService: TechnologyService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.findTechnologies();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentTechnologiesIds' in changes) {\n      this.selectedTechnologies = [];\n      this.findTechnologies();\n    }\n  }\n\n  onSelectTechnologies(technologies: Technology[]) {\n    this.selectTechnologies.emit(technologies);\n  }\n\n  findTechnologies() {\n    if (this.currentTechnologiesIds.length > 0) {\n      this.currentTechnologiesIds.forEach(id => {\n        const findTechnology = this.technologies.find(t => t.id === id);\n\n        if (findTechnology) {\n          this.selectedTechnologies.push(findTechnology);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"technology-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"technologies\"\n    [(ngModel)]=\"selectedTechnologies\"\n    optionLabel=\"name\"\n    placeholder=\"Select Technologies\"\n    (ngModelChange)=\"onSelectTechnologies($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {WarehouseService} from '../../../warehouse/services/warehouse.service';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\n\n@Component({\n  selector: 'pek-multi-warehouse-picker',\n  templateUrl: './multi-warehouse-picker.component.html',\n  styleUrls: ['./multi-warehouse-picker.component.scss']\n})\nexport class MultiWarehousePickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() currentWarehousesIds: number[] = [];\n  @Output() selectWarehouses: EventEmitter<Warehouse[]> = new EventEmitter<Warehouse[]>();\n\n  isLoading = true;\n  warehouses: Warehouse[] = [];\n  selectedWarehouses: Warehouse[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.findWarehouses();\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('currentWarehousesIds' in changes) {\n      this.selectedWarehouses = [];\n      this.findWarehouses();\n    }\n  }\n\n  onSelectWarehouses(warehouses: Warehouse[]) {\n    this.selectWarehouses.emit(warehouses);\n  }\n\n  findWarehouses() {\n    if (this.currentWarehousesIds?.length > 0) {\n      this.currentWarehousesIds.forEach(id => {\n        const findWarehouses = this.warehouses.find(t => t.id === id);\n\n        if (findWarehouses) {\n          this.selectedWarehouses.push(findWarehouses);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"multi-warehouse-picker\">\n  <p-multiSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"warehouses\"\n    [(ngModel)]=\"selectedWarehouses\"\n    optionLabel=\"name\"\n    placeholder=\"Select Warehouses\"\n    (ngModelChange)=\"onSelectWarehouses($event)\"\n  ></p-multiSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ENomenclatureType} from '@shared/models/nomenclature';\n\n@Component({\n  selector: 'pek-nomenclature-type-picker',\n  templateUrl: './nomenclature-type-picker.component.html',\n  styleUrls: ['./nomenclature-type-picker.component.scss']\n})\nexport class NomenclatureTypePickerComponent implements OnInit {\n  @Input() currentNomenclatureType: ENomenclatureType = null;\n  @Input() isDisabled = false;\n  @Output() choiceNomenclatureType: EventEmitter<ENomenclatureType> = new EventEmitter<ENomenclatureType>();\n  @Input() filteredNomenclatureTypes: ENomenclatureType[] = [];\n\n  selectNomenclatureType: ENomenclatureType = null;\n\n  nomenclatureTypes: { label: string, value: ENomenclatureType }[] = [\n    {label: 'Purchased', value: ENomenclatureType.PURCHASED},\n    {label: 'Assembly', value: ENomenclatureType.ASSEMBLY},\n    {label: 'Manufactured', value: ENomenclatureType.MANUFACTURED}\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n    if (this.filteredNomenclatureTypes.length > 0) {\n      let types = [];\n\n      this.filteredNomenclatureTypes.forEach(type => {\n        types = [...types, ...this.nomenclatureTypes.filter(t => t.value === type)];\n      });\n\n      this.nomenclatureTypes = types;\n    }\n\n    this.setCurrentNomenclatureType();\n  }\n\n  setCurrentNomenclatureType() {\n    if (this.currentNomenclatureType !== null) {\n      this.selectNomenclatureType = this.currentNomenclatureType;\n    }\n  }\n\n  onSelectNomenclatureType() {\n    this.choiceNomenclatureType.emit(this.selectNomenclatureType);\n  }\n}\n","<div class=\"nomenclature-type-picker\">\n  <p-dropdown\n    [options]=\"nomenclatureTypes\"\n    optionLabel=\"label\"\n    optionValue=\"value\"\n    placeholder=\"Select Type\"\n    [disabled]=\"isDisabled\"\n    [showClear]=\"true\"\n    [(ngModel)]=\"selectNomenclatureType\"\n    (ngModelChange)=\"onSelectNomenclatureType()\"\n  ></p-dropdown>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Category} from '../../../product-structure/models/category';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\nimport {TreeNode} from 'primeng/api';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-product-category-picker',\n  templateUrl: './product-category-picker.component.html',\n  styleUrls: ['./product-category-picker.component.scss'],\n})\nexport class ProductCategoryPickerComponent implements OnInit, OnDestroy {\n  @Output() choiceCategory: EventEmitter<Category> = new EventEmitter<Category>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() isAllIds = false;\n  @Input() ignoredCategoryId: number;\n  @Input() currentCategoryId: number;\n\n  isLoading = true;\n  categories: Category[] = [];\n  categoriesTree: TreeNode<Category>[] = [];\n\n  selectedCategory: TreeNode<Category> = null;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productCategoriesService: CategoriesService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productCategoriesService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.findCategory();\n      this.isLoading = false;\n    });\n  }\n\n  findCategory() {\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === this.currentCategoryId) {\n          this.selectedCategory = node;\n          return;\n        } else if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<Category>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <Category>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategory() {\n    if (!this.isAllIds) {\n      this.choiceCategory.emit(this.selectedCategory?.data ? this.selectedCategory.data : null);\n    } else {\n      this.choiceProductForAllIds();\n    }\n  }\n\n  choiceProductForAllIds() {\n    if (!this.selectedCategory) {\n      this.choiceCategoryFolAllIds.emit(null);\n      return;\n    }\n\n    const ids = [];\n\n    ids.push(this.selectedCategory.data.id);\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        ids.push(node.data.id);\n\n        if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.selectedCategory.children);\n    this.choiceCategoryFolAllIds.emit(ids);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"product-category-picker\">\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategory\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategory()\"\n  ></p-treeSelect>\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\nimport {TreeNode} from 'primeng/api';\nimport {ProductStructureCategory} from '../../../product-structure/models/product-structure-category';\nimport {Category} from '../../../product-structure/models/category';\n\n@Component({\n  selector: 'pek-product-structure-category-picker',\n  templateUrl: './product-structure-category-picker.component.html',\n  styleUrls: ['./product-structure-category-picker.component.scss']\n})\nexport class ProductStructureCategoryPickerComponent implements OnInit, OnDestroy {\n  @Output() choiceCategory: EventEmitter<ProductStructureCategory> = new EventEmitter<ProductStructureCategory>();\n  @Output() choiceCategoryFolAllIds: EventEmitter<number[]> = new EventEmitter<number[]>();\n  @Input() isAllIds = false;\n  @Input() currentCategoryId: number;\n  @Input() ignoredCategoryId: number;\n  @Input() isDisabled = false;\n\n  isLoading = true;\n  categories: ProductStructureCategory[] = [];\n  categoriesTree: TreeNode<ProductStructureCategory>[] = [];\n\n  selectedCategory: TreeNode<ProductStructureCategory> = null;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly productStructureCategoryService: ProductStructureCategoryService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.productStructureCategoryService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(categories => {\n      this.categories = categories;\n\n      if (this.ignoredCategoryId) {\n        this.categories = this.categories.filter(c => c.id !== this.ignoredCategoryId);\n      }\n\n      this.createTree();\n      this.findCategory();\n      this.isLoading = false;\n    });\n  }\n\n  findCategory() {\n    const find = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        if (node.data.id === this.currentCategoryId) {\n          this.selectedCategory = node;\n          return;\n        } else if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.categoriesTree);\n  }\n\n  createTree() {\n    const getChildren = (nodes: TreeNode<ProductStructureCategory>[]) => {\n      nodes.forEach(node => {\n        const children = this.categories.filter(c => c.parent === node.data.id);\n\n        if (children.length > 0) {\n          node.children = children.map(category => {\n            return {\n              label: category.name,\n              data: category,\n              children: []\n            };\n          });\n\n          getChildren(node.children);\n        }\n      });\n    };\n\n    const tree: TreeNode<ProductStructureCategory>[] = this.categories.filter(c => !c.parent).map(category => {\n      return {\n        label: category.name,\n        data: <ProductStructureCategory>category,\n        children: [],\n      };\n    });\n\n    getChildren(tree);\n\n    this.categoriesTree = [...tree];\n  }\n\n  onChoiceCategory() {\n    if (!this.isAllIds) {\n      this.choiceCategory.emit(this.selectedCategory?.data ? this.selectedCategory.data : null);\n    } else {\n      this.choiceProductForAllIds();\n    }\n  }\n\n  choiceProductForAllIds() {\n    if (!this.selectedCategory) {\n      this.choiceCategoryFolAllIds.emit(null);\n      return;\n    }\n\n    const ids = [];\n\n    ids.push(this.selectedCategory.data.id);\n\n    const find = (nodes: TreeNode<Category>[]) => {\n      nodes.forEach(node => {\n        ids.push(node.data.id);\n\n        if (node.children.length > 0) {\n          find(node.children);\n        }\n      });\n    };\n\n    find(this.selectedCategory.children);\n    this.choiceCategoryFolAllIds.emit(ids);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"product-root-category-picker\">\n<!--  <p-dropdown-->\n<!--    *ngIf=\"!isLoading; else spinner\"-->\n<!--    [showClear]=\"true\"-->\n<!--    [options]=\"categories\"-->\n<!--    optionLabel=\"name\"-->\n<!--    optionValue=\"id\"-->\n<!--    placeholder=\"Select Product Structure Category\"-->\n<!--    [(ngModel)]=\"selectCategoryId\"-->\n<!--    (ngModelChange)=\"onChangeCategory()\"-->\n<!--    [disabled]=\"isDisabled\"-->\n<!--  ></p-dropdown>-->\n\n  <p-treeSelect\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"categoriesTree\"\n    [(ngModel)]=\"selectedCategory\"\n    [showClear]=\"true\"\n    placeholder=\"Select Category\"\n    (ngModelChange)=\"onChoiceCategory()\"\n    [disabled]=\"isDisabled\"\n  ></p-treeSelect>\n\n\n  <ng-template #spinner>\n    <div class=\"spinner-input\">\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Company} from '../../../crm/models/company';\nimport {Subject, takeUntil} from 'rxjs';\nimport {CompanyService} from '../../../crm/services/company.service';\nimport {Region} from '@shared/models/region';\nimport {RegionService} from '@shared/services/region.service';\n\n@Component({\n  selector: 'pek-region-picker',\n  templateUrl: './region-picker.component.html',\n  styleUrls: ['./region-picker.component.scss']\n})\nexport class RegionPickerComponent implements OnInit {\n  @Output() selectRegion: EventEmitter<number> = new EventEmitter<number>();\n  isLoading = true;\n  regions: Partial<Region>[] = [];\n  selectedRegionId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly regionService: RegionService,\n  ) { }\n\n  ngOnInit(): void {\n    this.regionService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(regions => {\n      this.regions = regions;\n      this.isLoading = false;\n    });\n  }\n\n  onSelectCompany() {\n    this.selectRegion.emit(this.selectedRegionId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"region-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"regions\"\n    placeholder=\"Select Region\"\n    [(ngModel)]=\"selectedRegionId\"\n    (ngModelChange)=\"onSelectCompany()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {Technology} from '../../../product-structure/models/technology';\nimport {TechnologyService} from '../../../product-structure/services/technology.service';\n\n@Component({\n  selector: 'pek-technology-picker',\n  templateUrl: './technology-picker.component.html',\n  styleUrls: ['./technology-picker.component.scss']\n})\nexport class TechnologyPickerComponent implements OnInit {\n  @Output() selectTechnology: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n  @Input() acceptedTechnologyIds: number[] = [];\n\n  selectTechnologyId: number;\n\n  isLoading = true;\n  technologies: Technology[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly technologyService: TechnologyService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getTechnologies();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('acceptedTechnologyIds' in changes) {\n      this.filterTechnologies();\n    }\n  }\n\n  filterTechnologies() {\n    if (this.acceptedTechnologyIds.length > 0) {\n      let newTechnologies: Technology[] = [];\n\n      this.acceptedTechnologyIds.forEach(id => {\n        newTechnologies = [...newTechnologies, ...this.technologies.filter(w => w.id === id)];\n      });\n\n      this.technologies = [...newTechnologies];\n    }\n  }\n\n  getTechnologies() {\n    this.technologyService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(technologies => {\n      this.technologies = technologies;\n      this.filterTechnologies();\n      this.isLoading = false;\n    });\n  }\n\n  onSelectTechnology() {\n    this.selectTechnology.emit(this.selectTechnologyId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"technology-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"technologies\"\n    placeholder=\"Select Technology\"\n    [(ngModel)]=\"selectTechnologyId\"\n    (ngModelChange)=\"onSelectTechnology()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\nimport {Subject, takeUntil} from 'rxjs';\nimport {UnitMeasureService} from '../../../warehouse/services/unit-measure.service';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\n\n@Component({\n  selector: 'pek-unit-measure-picker',\n  templateUrl: './unit-measure-picker.component.html',\n  styleUrls: ['./unit-measure-picker.component.scss']\n})\nexport class UnitMeasurePickerComponent implements OnInit {\n  @Input() currentMeasureUnitId: number;\n  @Output() selectMeasureUnit: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n\n  selectMeasureUnitId: number;\n\n  isLoading = true;\n  unitsMeasure: UnitMeasure[];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly measureUnitService: UnitMeasureService\n  ) { }\n\n  ngOnInit(): void {\n    this.getMeasureUnit();\n\n    if (this.currentMeasureUnitId) {\n      this.selectMeasureUnitId = this.currentMeasureUnitId;\n    }\n  }\n\n  getMeasureUnit() {\n    this.measureUnitService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(unitsMeasure => {\n      this.unitsMeasure = unitsMeasure;\n      this.isLoading = false;\n    })\n  }\n\n  onSelectWarehouse() {\n    this.selectMeasureUnit.emit(this.selectMeasureUnitId)\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"unit-measure-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"unitsMeasure\"\n    placeholder=\"Select Unit of Measure\"\n    [(ngModel)]=\"selectMeasureUnitId\"\n    (ngModelChange)=\"onSelectWarehouse()\"\n    optionLabel=\"label\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Subject, takeUntil} from 'rxjs';\nimport {UserProfile} from '../../../crm/models/user-profile';\nimport {UserProfileService} from '../../../crm/services/user-profile.service';\n\n@Component({\n  selector: 'pek-user-profile-picker',\n  templateUrl: './user-profile-picker.component.html',\n  styleUrls: ['./user-profile-picker.component.scss']\n})\nexport class UserProfilePickerComponent implements OnInit {\n  @Output() selectUserProfile: EventEmitter<number> = new EventEmitter<number>();\n  @Input() currentUserProfileId: number;\n  isLoading = true;\n  userProfiles: UserProfile[] = [];\n  selectedUserProfileId: number;\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly userProfileService: UserProfileService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userProfileService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(userProfiles => {\n      this.userProfiles = userProfiles;\n      console.log(this.currentUserProfileId);\n\n      if (this.currentUserProfileId) this.selectedUserProfileId = this.currentUserProfileId;\n\n      this.isLoading = false;\n    });\n  }\n\n  onSelectCompany() {\n    this.selectUserProfile.emit(this.selectedUserProfileId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"user-profile-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"userProfiles\"\n    placeholder=\"Select User Profile\"\n    [(ngModel)]=\"selectedUserProfileId\"\n    (ngModelChange)=\"onSelectCompany()\"\n    optionLabel=\"fullName\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {WarehouseService} from '../../../warehouse/services/warehouse.service';\nimport {Warehouse} from '../../../warehouse/models/warehouse';\nimport {Subject, takeUntil} from 'rxjs';\n\n@Component({\n  selector: 'pek-warehouse-picker',\n  templateUrl: './warehouse-picker.component.html',\n  styleUrls: ['./warehouse-picker.component.scss']\n})\nexport class WarehousePickerComponent implements OnInit, OnChanges, OnDestroy {\n  @Output() selectWarehouse: EventEmitter<number> = new EventEmitter<number>();\n  @Input() isDisabled: boolean = false;\n  @Input() acceptedWarehouseIds: number[] = [];\n  @Input() selectedWarehouseId: number;\n\n  selectWarehouseId: number;\n\n  isLoading = true;\n  warehouses: Warehouse[] = [];\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private readonly warehouseService: WarehouseService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getWarehouses();\n\n    if (this.selectedWarehouseId) {\n      this.selectWarehouseId = this.selectedWarehouseId;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('acceptedWarehouseIds' in changes) {\n      this.filterWarehouses();\n    }\n  }\n\n  filterWarehouses() {\n    if (this.acceptedWarehouseIds.length > 0) {\n      let newWarehouses: Warehouse[] = [];\n\n      this.acceptedWarehouseIds.forEach(id => {\n        newWarehouses = [...newWarehouses, ...this.warehouses.filter(w => w.id === id)];\n      });\n\n      this.warehouses = [...newWarehouses];\n    }\n  }\n\n  getWarehouses() {\n    this.warehouseService.get().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(warehouses => {\n      this.warehouses = warehouses;\n      this.filterWarehouses();\n      this.isLoading = false;\n    });\n  }\n\n  onSelectWarehouse() {\n    this.selectWarehouse.emit(this.selectWarehouseId);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n","<div class=\"warehouse-picker\">\n  <p-dropdown\n    *ngIf=\"!isLoading; else spinner\"\n    [options]=\"warehouses\"\n    placeholder=\"Select Warehouse\"\n    [(ngModel)]=\"selectWarehouseId\"\n    (ngModelChange)=\"onSelectWarehouse()\"\n    optionLabel=\"name\"\n    optionValue=\"id\"\n    [showClear]=\"true\"\n  >\n  </p-dropdown>\n</div>\n\n<ng-template #spinner>\n  <div class=\"spinner-input\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\n  </div>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'moneyFormat'\r\n})\r\nexport class MoneyFormatPipe implements PipeTransform {\r\n\r\n  transform(value: number, ...args: any[]): string {\r\n    return parseFloat(value as any).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ').split('.').join(',');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdapterService {\n\n  constructor() {\n  }\n\n  isValidHttpUrl(string: string): boolean {\n    return string.includes('http:') || string.includes('https:');\n  }\n\n  dateAdapter(date: Date) {\n    if (date === null) {\n      return null;\n    } else {\n      return (date.getFullYear() + '-' +\n        ('0' + (date.getMonth() + 1)).slice(-2) + '-' +\n        ('0' + date.getDate()).slice(-2));\n    }\n  }\n\n  dateTimeAdapter(date: Date) {\n    if (date === null) {\n      return null;\n    } else {\n      return date.toISOString();\n    }\n  }\n\n  downloadFile(filename: string, response: Blob) {\n    const dataType = response.type;\n    const binaryData = [];\n    binaryData.push(response);\n    const downloadLink = document.createElement('a');\n    downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n    downloadLink.setAttribute('download', filename);\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {Employee} from '@shared/models/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  API_URL = environment.base_url + environment.staff_url;\n  readonly url = 'employees/';\n\n  employees: Employee[];\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n\n  }\n\n  get(query?: QuerySearch[]): Observable<Employee[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Employee[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getAll(): Observable<Employee[]> {\n    if (this.employees) {\n      return of(this.employees);\n    }\n\n    return this.httpClient.get<{ data: Employee[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const employees = response.data;\n        employees.forEach(e => e.fullName = `${e.first_name} ${e.last_name}`);\n        this.employees = employees;\n        return employees;\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmComponent, ConfirmType} from '@shared/modals/confirm/confirm.component';\nimport {Observable} from 'rxjs';\nimport {GuideComponent} from '../../guide/guide/guide.component';\nimport {PasteImageComponent} from '@shared/modals/paste-image/paste-image.component';\nimport {ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\nimport {ImageGalleryComponent} from '@shared/modals/image-gallery/image-gallery.component';\nimport {\n  NomenclaturePickerModalComponent\n} from '@shared/modals/nomenclature-picker-modal/nomenclature-picker-modal.component';\nimport {CompleteListComponent} from '@shared/modals/refactoring/complete-list/complete-list.component';\nimport {ListProductsComponent} from '@shared/modals/refactoring/list-products/list-products.component';\nimport {Overlay} from '@angular/cdk/overlay';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(\n    private dialog: MatDialog\n  ) {\n  }\n\n  confirm(type: ConfirmType = 'default', btnConfirmText: string = ''): Observable<boolean> {\n    return this.dialog\n      .open<ConfirmComponent>(ConfirmComponent, {\n        width: '25rem',\n        height: '22.5rem',\n        data: {type, btnConfirmText},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  showPasteImageModal(imageSrc: string | ArrayBuffer) {\n    return this.dialog\n      .open<PasteImageComponent>(PasteImageComponent, {\n        width: 'auto',\n        height: 'auto',\n        data: imageSrc,\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed()\n      .pipe();\n  }\n\n  showImageGallery(images?: NomenclatureImage[], nomenclatureId?: number, activeIdx = 1) {\n    return this.dialog\n      .open<ImageGalleryComponent>(ImageGalleryComponent, {\n        width: 'auto',\n        height: 'auto',\n        panelClass: 'gallery-modal',\n        data: {images, nomenclatureId, activeIdx},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed()\n      .pipe();\n  }\n\n  showGuide(): Observable<any> {\n    return this.dialog\n      .open<GuideComponent>(GuideComponent, {\n        width: '100%',\n        height: '77%',\n        autoFocus: false,\n        disableClose: true,\n        backdropClass: 'guide-modalbox',\n      })\n      .afterClosed()\n      .pipe();\n  }\n\n  choiceNomenclatureModal(type: ENomenclatureType = null): Observable<Nomenclature> {\n    return this.dialog\n      .open<NomenclaturePickerModalComponent>(NomenclaturePickerModalComponent, {\n        width: '90rem',\n        height: 'auto',\n        data: {type},\n        autoFocus: false,\n        enterAnimationDuration: '250ms',\n        panelClass: 'modal-overflow-visible',\n      })\n      .afterClosed()\n      .pipe();\n  }\n\n  completeList(entity) {\n    return this.dialog\n      .open<CompleteListComponent>(CompleteListComponent, {\n        width: '800px',\n        data: { type: 'edit', entity: entity },\n        disableClose: true,\n        panelClass: 'modal-overflow-visible'\n      })\n      .afterClosed()\n      .pipe();\n  }\n\n  editListProduct(entity) {\n    return this.dialog\n      .open<ListProductsComponent>(ListProductsComponent, {\n        width: '800px',\n        data: { type: 'edit', entity: entity },\n        disableClose: true,\n        panelClass: 'modal-overflow-visible',\n      })\n      .afterClosed()\n      .pipe();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {NewNomenclature, Nomenclature, NomenclatureImage, Nomenclatures} from '@shared/models/nomenclature';\nimport {map} from 'rxjs/operators';\nimport {forkJoin, Observable} from 'rxjs';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NomenclatureService {\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'nomenclatures/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Nomenclature[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Nomenclature[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getForPagination(query?: QuerySearch[]): Observable<Nomenclatures> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: Nomenclatures }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id: number): Observable<Nomenclature> {\n    return this.httpClient.get<{ data: Nomenclature }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\n    const formData = new FormData();\n\n    if (nomenclature.technologies && nomenclature.technologies.length > 0) {\n      nomenclature.technologies.forEach(technology => {\n        formData.append('technologies', technology.id + '');\n      });\n    }\n\n    for (const key in nomenclature) {\n      if (nomenclature[key] !== null && key !== 'technologies') {\n        formData.append(key, nomenclature[key]);\n      }\n    }\n\n    if (nomenclature.category === null) {\n      formData.append('category', '');\n    }\n\n    return this.httpClient.post<{ data: Nomenclature }>(this.API_URL + this.url, formData).pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\n    return this.httpClient.patch<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, nomenclature).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\n    const formData = new FormData();\n\n    if (nomenclature.technologies && nomenclature.technologies.length > 0) {\n      nomenclature.technologies.forEach(technology => {\n        formData.append('technologies', technology.id + '');\n      });\n    }\n\n    for (const key in nomenclature) {\n      if (nomenclature[key] !== null && key !== 'technologies') {\n        formData.append(key, nomenclature[key]);\n      }\n    }\n\n    if (nomenclature.category === null) {\n      formData.append('category', '');\n    }\n\n    return this.httpClient.put<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, formData).pipe(\n      map(response => response.data)\n    );\n  }\n\n  searchWhereUsed(id: number): Observable<Nomenclature[]> {\n    return this.httpClient.get<{ data: Nomenclature[] }>(this.API_URL + this.url + id + '/used_in_list/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  // updateRoot(nomenclature: Partial<Nomenclature>): Observable<Nomenclature> {\n  //   const formData = new FormData();\n  //\n  //   if (nomenclature.technologies && nomenclature.technologies.length > 0) {\n  //     nomenclature.technologies.forEach(technology => {\n  //       formData.append('technologies', technology.id + '');\n  //     });\n  //   }\n  //\n  //   for (const key in nomenclature) {\n  //     if (nomenclature[key] !== null && key !== 'technologies') {\n  //       formData.append(key, nomenclature[key]);\n  //     }\n  //   }\n  //\n  //   if (nomenclature.category === null) {\n  //     formData.append('category', '');\n  //   }\n  //\n  //   return this.httpClient.put<{ data: Nomenclature }>(this.API_URL + this.url + `${nomenclature.id}/`, formData).pipe(\n  //     map(response => response.data)\n  //   );\n  // }\n\n  // Nomenclatures for confirmation\n  getNewNomenclatures(): Observable<NewNomenclature[]> {\n    return this.httpClient.get<{ data: NewNomenclature[] }>(this.API_URL + 'products_new_nomenclatures/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  updateSeveralPartly(nomenclatures: Partial<Nomenclature>[]): Observable<Nomenclature[]> {\n    return forkJoin(...nomenclatures.map(nomenclature =>\n      this.httpClient.patch<{ data: Nomenclature }>(this.API_URL + this.url + nomenclature.id + '/', nomenclature).pipe(\n        map(response => response.data)\n      ))\n    );\n  }\n\n  uploadImage(send: any): Observable<NomenclatureImage> {\n    const formData = new FormData();\n\n    for (const key in send) {\n      if (send[key] !== null) {\n        formData.append(key, send[key]);\n      }\n    }\n\n    return this.httpClient.post<{ data: NomenclatureImage }>(this.API_URL + 'nomenclature_images/', formData).pipe(\n      map(response => response.data)\n    );\n  }\n\n  loadImages(id: number): Observable<NomenclatureImage[]> {\n    return this.httpClient.get<{ data: NomenclatureImage[] }>(this.API_URL + `nomenclature_images/?nomenclature=${id}`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  uploadImagesSeveral(send: any[]): Observable<NomenclatureImage[]> {\n    const data = [];\n\n    send.forEach(s => {\n      const formData = new FormData();\n\n      for (const key in s) {\n        if (s[key] !== null) {\n          formData.append(key, s[key]);\n        }\n      }\n\n      data.push(formData);\n    });\n\n    return forkJoin(...data.map(d => this.httpClient.post<{ data: NomenclatureImage }>(this.API_URL + 'nomenclature_images/', d).pipe(\n      map(response => response.data)\n    )));\n  }\n\n  removeImage(id: number): Observable<any> {\n    return this.httpClient.delete(this.API_URL + `nomenclature_images/${id}/`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {QuerySearch} from '@shared/models/other';\nimport {Observable} from 'rxjs';\nimport {Region} from '@shared/models/region';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionService {\n  API_URL = environment.base_url + environment.business_partners_url;\n  readonly url = 'regions/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<Region[]> {\n    let queryParams = '';\n\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Region[] }>(this.API_URL + this.url + queryParams).pipe(\n        map(response => response.data)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {TreeNode} from 'primeng/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  constructor() { }\n\n  createTree(categories: any[], expanseMap?: any): TreeNode[] {\n    const prepareNodes: Partial<TreeNode>[] = [];\n\n    categories.forEach(element => {\n      const ins = {data: element, expanded: false, children: []};\n\n      if (expanseMap) {\n        ins.expanded = expanseMap[element.id];\n      }\n      prepareNodes.push(ins);\n    });\n\n    const root: TreeNode[] = [];\n\n    const idMapping = prepareNodes.reduce((acc, el, i) => {\n      acc[el.data.id] = i;\n      return acc;\n    }, {});\n\n    prepareNodes.forEach(el => {\n      if (el.data.parent === null) {\n        root.push(el);\n        return;\n      }\n\n      const parentEl = prepareNodes[idMapping[el.data.parent]];\n      parentEl.children = [...(parentEl.children || []), el];\n\n      if (parentEl.children.length === 0) {\n        // delete parentEl.children;\n      }\n    });\n\n    return root;\n  }\n\n  mapExpansion(nodes: TreeNode[], expanseMap: any): void {\n    const createExpanseMap = (node: TreeNode) => {\n      if (node.expanded) {\n        expanseMap[node.data.id] = node.expanded;\n      } else {\n        expanseMap[node.data.id] = false;\n      }\n\n      if (node.children) {\n        node.children.forEach(element => {\n          createExpanseMap(element);\n        });\n      }\n    }\n\n    nodes.forEach(element => {\n      createExpanseMap(element);\n    });\n  }\n\n  findSelectedNode(selectedNode: TreeNode, tree: TreeNode[]): TreeNode {\n    let newSelectedNode: TreeNode;\n\n    if (selectedNode.parent) {\n      let parent = selectedNode.parent;\n      let parentIds = [];\n\n      while (parent) {\n        parentIds.push(parent.data.id);\n        parent = parent.parent;\n      }\n\n      parentIds = parentIds.reverse();\n      let node = tree.find(cat => cat.data.id === parentIds[0]);\n\n      let i = 1;\n      while (node.data.id !== parentIds[parentIds.length - 1]) {\n        node = node.children.find(t => t.data.id === parentIds[i]);\n        i++;\n      }\n\n      newSelectedNode = node.children.find(item => item.data.id === selectedNode.data.id);\n    } else {\n      newSelectedNode = tree.find(category => category.data.id === selectedNode.data.id);\n    }\n\n    return newSelectedNode;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModuleIconComponent } from './icons/module-icon/module-icon.component';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {TreeTableModule} from 'primeng/treetable';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MenubarModule} from 'primeng/menubar';\nimport { ConfirmComponent } from './modals/confirm/confirm.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {TableModule} from 'primeng/table';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {TabViewModule} from 'primeng/tabview';\nimport {MoneyFormatPipe} from '@shared/pipes/money-format.pipe';\nimport {TieredMenuModule} from 'primeng/tieredmenu';\nimport { InIconComponent } from './icons/in-icon/in-icon.component';\nimport { NomenclaturePickerComponent } from './components/nomenclature-picker/nomenclature-picker.component';\nimport { ProductCategoryPickerComponent } from './pickers/product-category-picker/product-category-picker.component';\nimport {TreeSelectModule} from 'primeng/treeselect';\nimport {PaginatorModule} from 'primeng/paginator';\nimport { PasteImageComponent } from './modals/paste-image/paste-image.component';\nimport {ImagesSliderComponent} from '@shared/components/images-slider/images-slider.component';\nimport { ImageGalleryComponent } from './modals/image-gallery/image-gallery.component';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {\n  MultiTechnologyPickerComponent\n} from '@shared/pickers/multi-technology-picker/multi-technology-picker.component';\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\nimport { WarehousePickerComponent } from './pickers/warehouse-picker/warehouse-picker.component';\nimport { LocatorPickerComponent } from './pickers/locator-picker/locator-picker.component';\nimport { NomenclatureTypePickerComponent } from './pickers/nomenclature-type-picker/nomenclature-type-picker.component';\nimport {\n  ProductStructureCategoryPickerComponent\n} from '@shared/pickers/product-structure-category-picker/product-structure-category-picker.component';\nimport { UnitMeasurePickerComponent } from './pickers/unit-measure-picker/unit-measure-picker.component';\nimport { AcceptedTypePickerComponent } from './pickers/accepted-type-picker/accepted-type-picker.component';\nimport {MultiWarehousePickerComponent} from '@shared/pickers/multi-warehouse-picker/multi-warehouse-picker.component';\nimport { MultiLocatorPickerComponent } from './pickers/multi-locator-picker/multi-locator-picker.component';\nimport { GroupLocatorPickerComponent } from './pickers/group-locator-picker/group-locator-picker.component';\nimport { TechnologyPickerComponent } from './pickers/technology-picker/technology-picker.component';\nimport { NomenclaturePickerModalComponent } from './modals/nomenclature-picker-modal/nomenclature-picker-modal.component';\nimport {CalendarModule} from 'primeng/calendar';\nimport { EmployeePickerComponent } from './pickers/employee-picker/employee-picker.component';\nimport {CompleteListComponent} from '@shared/modals/refactoring/complete-list/complete-list.component';\nimport {ListProductsComponent} from '@shared/modals/refactoring/list-products/list-products.component';\nimport {AccountingTypePickerComponent} from '@shared/pickers/accounting-type-picker/accounting-type-picker.component';\nimport { MultiCategoriesPickerComponent } from './pickers/multi-categories-picker/multi-categories-picker.component';\nimport { MultiProductStructureCategoriesPickerComponent } from './pickers/multi-product-structure-categories-picker/multi-product-structure-categories-picker.component';\nimport { MultiCompanyPickerComponent } from './pickers/multi-company-picker/multi-company-picker.component';\nimport { MultiSalesStatusPickerComponent } from './pickers/multi-sales-status-picker/multi-sales-status-picker.component';\nimport { MultiCompanyCategoryPickerComponent } from './pickers/multi-company-category-picker/multi-company-category-picker.component';\nimport { CompanyPickerComponent } from './pickers/company-picker/company-picker.component';\nimport { CompanyCategoryPickerComponent } from './pickers/company-category-picker/company-category-picker.component';\nimport { RegionPickerComponent } from './pickers/region-picker/region-picker.component';\nimport { CompanyCategoryModulePickerComponent } from './pickers/company-category-module-picker/company-category-module-picker.component';\nimport { UserProfilePickerComponent } from './pickers/user-profile-picker/user-profile-picker.component';\nimport { SortIconComponent } from './icons/sort-icon/sort-icon.component';\n\n\n@NgModule({\n  declarations: [\n    ModuleIconComponent,\n    ConfirmComponent,\n    ProductStructureCategoryPickerComponent,\n    MoneyFormatPipe,\n    InIconComponent,\n    NomenclaturePickerComponent,\n    ProductCategoryPickerComponent,\n    ImagesSliderComponent,\n    PasteImageComponent,\n    ImageGalleryComponent,\n    MultiTechnologyPickerComponent,\n    UploadFileComponent,\n    WarehousePickerComponent,\n    LocatorPickerComponent,\n    NomenclatureTypePickerComponent,\n    UnitMeasurePickerComponent,\n    AcceptedTypePickerComponent,\n    MultiWarehousePickerComponent,\n    MultiLocatorPickerComponent,\n    GroupLocatorPickerComponent,\n    TechnologyPickerComponent,\n    NomenclaturePickerModalComponent,\n    EmployeePickerComponent,\n    CompleteListComponent,\n    ListProductsComponent,\n    AccountingTypePickerComponent,\n    MultiCategoriesPickerComponent,\n    MultiProductStructureCategoriesPickerComponent,\n    MultiCompanyPickerComponent,\n    MultiSalesStatusPickerComponent,\n    MultiCompanyCategoryPickerComponent,\n    CompanyPickerComponent,\n    CompanyCategoryPickerComponent,\n    RegionPickerComponent,\n    CompanyCategoryModulePickerComponent,\n    UserProfilePickerComponent,\n    SortIconComponent\n  ],\n  exports: [\n    ButtonModule,\n    InputTextModule,\n    TreeTableModule,\n    ReactiveFormsModule,\n    MenubarModule,\n    MatDialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    FormsModule,\n    CheckboxModule,\n    ProductStructureCategoryPickerComponent,\n    TableModule,\n    RadioButtonModule,\n    ModuleIconComponent,\n    TabViewModule,\n    MoneyFormatPipe,\n    TieredMenuModule,\n    InIconComponent,\n    NomenclaturePickerComponent,\n    PaginatorModule,\n    ProductCategoryPickerComponent,\n    ImagesSliderComponent,\n    MultiTechnologyPickerComponent,\n    UploadFileComponent,\n    WarehousePickerComponent,\n    LocatorPickerComponent,\n    NomenclatureTypePickerComponent,\n    UnitMeasurePickerComponent,\n    AcceptedTypePickerComponent,\n    MultiWarehousePickerComponent,\n    MultiLocatorPickerComponent,\n    GroupLocatorPickerComponent,\n    TechnologyPickerComponent,\n    CalendarModule,\n    EmployeePickerComponent,\n    AccountingTypePickerComponent,\n    MultiCategoriesPickerComponent,\n    MultiProductStructureCategoriesPickerComponent,\n    MultiCompanyPickerComponent,\n    MultiSalesStatusPickerComponent,\n    MultiCompanyCategoryPickerComponent,\n    CompanyPickerComponent,\n    CompanyCategoryPickerComponent,\n    RegionPickerComponent,\n    CompanyCategoryModulePickerComponent,\n    UserProfilePickerComponent,\n    SortIconComponent,\n    NomenclaturePickerModalComponent\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    InputTextModule,\n    TreeTableModule,\n    ReactiveFormsModule,\n    MenubarModule,\n    MatDialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    FormsModule,\n    CheckboxModule,\n    TableModule,\n    RadioButtonModule,\n    TabViewModule,\n    TieredMenuModule,\n    TreeSelectModule,\n    PaginatorModule,\n    MultiSelectModule,\n    CalendarModule\n  ]\n})\nexport class SharedModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {LocatorService} from '../../services/locator.service';\nimport {Locator} from '../../models/locator';\n\n@Component({\n  selector: 'pek-create-edit-locator',\n  templateUrl: './create-edit-locator.component.html',\n  styleUrls: ['./create-edit-locator.component.scss']\n})\nexport class CreateEditLocatorComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    warehouse: [0, Validators.required],\n    row: [0, [Validators.required, Validators.min(0)]],\n    shelf: [0, [Validators.required, Validators.min(0)]],\n    column: [0, [Validators.required, Validators.min(0)]],\n    place: [0, [Validators.required, Validators.min(0)]],\n    description: ['', Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly locatorService: LocatorService,\n    private dialogRef: MatDialogRef<CreateEditLocatorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, locator: Locator }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.locator.id));\n      this.form.patchValue(<any>this.data.locator);\n      this.form.get('warehouse').patchValue(this.data.locator.warehouse.id)\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createLocator();\n        break;\n      }\n      case 'edit': {\n        this.editLocator();\n        break;\n      }\n    }\n  }\n\n  createLocator() {\n    const send = <any>this.form.value;\n    this.locatorService.create(send).subscribe({\n      next: locator => this.dialogRef.close(locator),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editLocator() {\n    const send = <any>this.form.value;\n    this.locatorService.update(send).subscribe({\n      next: locator => this.dialogRef.close(locator),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onSelectWarehouse(id: number) {\n    this.form.get('warehouse').patchValue(id);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Locator\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Warehouse*</label>\n      <pek-warehouse-picker\n        [selectedWarehouseId]=\"+form.get('warehouse').value\"\n        (selectWarehouse)=\"onSelectWarehouse($event)\"\n      ></pek-warehouse-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"row\">Row*</label>\n          <input formControlName=\"row\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"row\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"column\">Column*</label>\n          <input formControlName=\"column\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"column\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"shelf\">Shelf*</label>\n          <input formControlName=\"shelf\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"shelf\" required=\"required\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"place\">Place*</label>\n          <input formControlName=\"place\" pInputText min=\"0\" class=\"form-control\" type=\"number\" id=\"place\" required=\"required\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {UnitMeasure} from '../../../product-structure/models/unit-measure';\nimport {UnitMeasureService} from '../../services/unit-measure.service';\n\n@Component({\n  selector: 'pek-create-edit-unit-measure',\n  templateUrl: './create-edit-unit-measure.component.html',\n  styleUrls: ['./create-edit-unit-measure.component.scss']\n})\nexport class CreateEditUnitMeasureComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    symbol: ['', [Validators.required]],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly unitMeasureService: UnitMeasureService,\n    private dialogRef: MatDialogRef<CreateEditUnitMeasureComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, unitMeasure: UnitMeasure }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.unitMeasure.id));\n      this.form.patchValue(this.data.unitMeasure);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createUnitMeasure();\n        break;\n      }\n      case 'edit': {\n        this.editUnitMeasure();\n        break;\n      }\n    }\n  }\n\n  createUnitMeasure() {\n    const send = <Partial<UnitMeasure>>this.form.value;\n    this.unitMeasureService.create(send).subscribe({\n      next: unitMeasure => this.dialogRef.close(unitMeasure),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editUnitMeasure() {\n    const send = <Partial<UnitMeasure>>this.form.value;\n    this.unitMeasureService.update(send).subscribe({\n      next: unitMeasure => this.dialogRef.close(unitMeasure),\n      error: () => this.isSaving = false,\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Unit Measure\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"symbol\">Symbol*</label>\n      <input type=\"text\" id=\"symbol\" pInputText formControlName=\"symbol\">\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Warehouse} from '../../models/warehouse';\nimport {Category} from '../../../product-structure/models/category';\nimport {CategoriesService} from '../../../product-structure/services/categories.service';\n\n@Component({\n  selector: 'pek-create-edit-warehouse-category',\n  templateUrl: './create-edit-warehouse-category.component.html',\n  styleUrls: ['./create-edit-warehouse-category.component.scss']\n})\nexport class CreateEditWarehouseCategoryComponent implements OnInit {\n\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', Validators.required],\n    description: ['', Validators.required],\n    unit_of_measure: [null, Validators.required],\n    parent: [null],\n    is_for_root: [true]\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly categoriesService: CategoriesService,\n    private dialogRef: MatDialogRef<CreateEditWarehouseCategoryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, category: Category }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.category.id));\n      this.form.patchValue(<any>this.data.category);\n      this.form.get('unit_of_measure').patchValue(<any>this.data.category.unit_of_measure.id);\n\n      if (this.data.category.parent) {\n        this.form.get('parent').patchValue(this.data.category.parent);\n      } else {\n        this.form.get('is_for_root').patchValue(true);\n      }\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createCategory();\n        break;\n      }\n      case 'edit': {\n        this.editCategory();\n        break;\n      }\n    }\n  }\n\n  createCategory() {\n    const send = <any>this.form.value;\n    this.categoriesService.create(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editCategory() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.categoriesService.updatePartly(send).subscribe({\n      next: category => this.dialogRef.close(category),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  onChoiceCategory(category: Category) {\n    if (category) {\n      this.form.get('parent').patchValue(category.id);\n      this.form.get('is_for_root').patchValue(false);\n    } else {\n      this.form.get('parent').patchValue(null);\n      this.form.get('is_for_root').patchValue(true);\n    }\n  }\n\n  onSelectMeasureUnit(id: number) {\n    this.form.get('unit_of_measure').patchValue(<any>id);\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Category\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label>Parent Category</label>\n      <pek-product-category-picker\n        [currentCategoryId]=\"form.get('parent').value\"\n        [ignoredCategoryId]=\"data.category?.id\"\n        (choiceCategory)=\"onChoiceCategory($event)\"\n      ></pek-product-category-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"form-group\">\n      <label>Unit of measure*</label>\n      <pek-unit-measure-picker\n        (selectMeasureUnit)=\"onSelectMeasureUnit($event)\"\n        [currentMeasureUnitId]=\"+form.get('unit_of_measure').value\"\n      ></pek-unit-measure-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {NomenclatureService} from '@shared/services/nomenclature.service';\nimport {ENomenclatureType, Nomenclature, NomenclatureImage} from '@shared/models/nomenclature';\nimport {Product} from '../../../product-structure/models/product';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-create-edit-warehouse-product',\n  templateUrl: './create-edit-warehouse-product.component.html',\n  styleUrls: ['./create-edit-warehouse-product.component.scss']\n})\nexport class CreateEditWarehouseProductComponent implements OnInit {\n  isSaving = false;\n  isLoading = true;\n  nomenclatureType = ENomenclatureType;\n\n  selectionTypeMode = true;\n\n  product: Partial<Product> = {\n    nomenclature: null\n  };\n\n  newProduct: Partial<Product> = {\n    nomenclature: {\n      id: null,\n      category: null,\n      technologies: [],\n      images: [],\n      type: null,\n    }\n  };\n\n  isFormInvalid: boolean = false;\n  formValue: Partial<Product & Nomenclature>;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, nomenclatureId: number },\n    private readonly nomenclatureService: NomenclatureService,\n    private dialogRef: MatDialogRef<CreateEditWarehouseProductComponent>,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.dialogRef.updateSize('50rem', 'auto');\n      this.getProduct();\n    } else {\n      this.isLoading = false;\n    }\n  }\n\n  getProduct() {\n    this.nomenclatureService.getById(this.data.nomenclatureId).subscribe(nomenclature => {\n      this.product.nomenclature = nomenclature;\n\n      if (this.product.nomenclature.type !== ENomenclatureType.PURCHASED) {\n        this.dialogRef.updateSize('60rem', 'auto');\n      }\n\n      this.isLoading = false;\n    });\n  }\n\n  onChangeFormValue(data: { invalid: boolean, formValue: Partial<Product & Nomenclature> }) {\n    this.formValue = data.formValue;\n    this.isFormInvalid = data.invalid;\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createWarehouseProduct();\n        break;\n      }\n      case 'edit': {\n        this.editWarehouseProduct();\n        break;\n      }\n    }\n  }\n\n  onUploadImage(files: File[]) {\n    files.forEach(newFile => {\n      const send = {\n        nomenclature: this.product.nomenclature.id,\n        image: newFile,\n      };\n\n      this.nomenclatureService.uploadImage(send).subscribe(image => {\n        this.product.nomenclature.images.push(image);\n      });\n    });\n  }\n\n  onRemoveImage(index: number) {\n    this.nomenclatureService.removeImage(this.product.nomenclature.images[index].id).subscribe(() => {\n      this.product.nomenclature.images.splice(index, 1);\n    });\n  }\n\n  onNewProductRemoveImage(idx: number) {\n    this.newProduct.nomenclature.images.splice(idx, 1);\n  }\n\n  onNewProductUploadImage(files: File[]) {\n    files.forEach(file => {\n      const fileReader = new FileReader();\n\n      fileReader.onload = (fileLoadedEvent) => {\n        const srcData = fileLoadedEvent.target.result;\n\n        const newImage: NomenclatureImage = {\n          file,\n          image: srcData,\n          id: null\n        };\n\n        this.newProduct.nomenclature.images.push(newImage);\n      };\n\n      fileReader.readAsDataURL(file);\n    });\n  }\n\n  createWarehouseProduct() {\n    if (!this.isFormInvalid) {\n      this.isSaving = true;\n\n      const send: Partial<Nomenclature> = {\n        name: this.formValue.name,\n        code: this.formValue.code,\n        description: this.formValue.description,\n        type: this.formValue.type,\n      };\n\n      if (this.formValue.type === ENomenclatureType.PURCHASED) {\n        send.category = this.formValue.category;\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\n        delete send.code;\n      } else {\n        send.technologies = [...this.formValue.technologies];\n        send.category = null;\n      }\n\n      this.nomenclatureService.create(send).pipe(\n        finalize(() => this.isSaving = false)\n      ).subscribe(nomenclature => {\n        this.isSaving = true;\n\n        const send = [];\n\n        if (this.newProduct.nomenclature.images.length > 0) {\n          this.newProduct.nomenclature.images.forEach(file => {\n            send.push({\n              nomenclature: nomenclature.id,\n              image: file.file,\n            });\n          });\n\n          this.nomenclatureService.uploadImagesSeveral(send).pipe(\n            finalize(() => this.isSaving = false)\n          ).subscribe(() => this.dialogRef.close(true));\n        } else {\n          this.dialogRef.close(true);\n        }\n      });\n    }\n  }\n\n  editWarehouseProduct() {\n    if (!this.isFormInvalid) {\n      this.isSaving = true;\n\n      const send: Partial<Nomenclature> = {\n        id: this.product.nomenclature.id,\n        name: this.formValue.name,\n        code: this.formValue.code,\n        description: this.formValue.description,\n        type: this.formValue.type,\n      };\n\n      if (this.product.nomenclature.type === ENomenclatureType.PURCHASED) {\n        send.category = this.formValue.category;\n        send.bulk_or_serial = this.formValue.bulk_or_serial;\n        delete send.code;\n      } else {\n        send.technologies = [...this.formValue.technologies];\n        send.category = null;\n      }\n\n      this.nomenclatureService.update(send).pipe(\n        finalize(() => this.isSaving = false)\n      ).subscribe(() => {\n        this.dialogRef.close(true);\n      });\n    }\n  }\n\n  choiceType(type: ENomenclatureType) {\n    this.newProduct.nomenclature.type = type;\n\n    if (this.newProduct.nomenclature.type !== ENomenclatureType.PURCHASED) {\n      this.dialogRef.updateSize('60rem', 'auto');\n    } else {\n      this.dialogRef.updateSize('50rem', 'auto');\n    }\n\n    this.selectionTypeMode = false;\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Item\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <div class=\"create-edit-warehouse-product\">\n    <ng-container *ngIf=\"data.type === 'edit'\">\n      <ng-container *ngIf=\"!isLoading; else loading\">\n        <pek-create-edit-form\n          [isShowQuantity]=\"false\"\n          [product]=\"product\"\n          (formChange)=\"onChangeFormValue($event)\"\n          (uploadImage)=\"onUploadImage($event)\"\n          (removeImage)=\"onRemoveImage($event)\"\n        ></pek-create-edit-form>\n      </ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.type === 'create'\">\n      <ng-container *ngIf=\"!selectionTypeMode; else selectionType\">\n        <pek-create-edit-form\n          type=\"create\"\n          [isShowQuantity]=\"false\"\n          [product]=\"newProduct\"\n          (formChange)=\"onChangeFormValue($event)\"\n          (uploadImage)=\"onNewProductUploadImage($event)\"\n          (removeImage)=\"onNewProductRemoveImage($event)\"\n        ></pek-create-edit-form>\n      </ng-container>\n    </ng-container>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <ng-container *ngIf=\"!isLoading\">\n    <button\n      pButton\n      type=\"button\"\n      label=\"Cancel\"\n      [mat-dialog-close]=\"false\"\n      class=\"p-button-danger\"\n    ></button>\n    <button\n      *ngIf=\"data.type === 'edit' || (data.type === 'create' && !this.selectionTypeMode)\"\n      pButton\n      type=\"button\"\n      [label]=\"data.type\"\n      class=\"p-button-success\"\n      [disabled]=\"isFormInvalid\"\n      [loading]=\"isSaving\"\n      (click)=\"onSave()\"\n    ></button>\n  </ng-container>\n</mat-dialog-actions>\n\n<ng-template #loading>\n  <div class=\"loading\">\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 3.25rem\"></i>\n  </div>\n</ng-template>\n\n<ng-template #selectionType>\n  <div class=\"choice-type\">\n    <h3>Please select the type of new position</h3>\n\n    <div class=\"choice-type__buttons\">\n      <button\n        pButton\n        type=\"button\"\n        label=\"Purchased\"\n        (click)=\"choiceType(nomenclatureType.PURCHASED)\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        label=\"Assembly\"\n        (click)=\"choiceType(nomenclatureType.ASSEMBLY)\"\n      ></button>\n      <button\n        pButton\n        type=\"button\"\n        label=\"Manufactured\"\n        (click)=\"choiceType(nomenclatureType.MANUFACTURED)\"\n      ></button>\n    </div>\n  </div>\n</ng-template>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {WarehouseService} from '../../services/warehouse.service';\nimport {Warehouse} from '../../models/warehouse';\n\n@Component({\n  selector: 'pek-create-edit-warehouse',\n  templateUrl: './create-edit-warehouse.component.html',\n  styleUrls: ['./create-edit-warehouse.component.scss']\n})\nexport class CreateEditWarehouseComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    name: ['', [Validators.required]],\n    description: ['', Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly warehouseService: WarehouseService,\n    private dialogRef: MatDialogRef<CreateEditWarehouseComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { type: ModalActionType, warehouse: Warehouse }\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.data.type === 'edit') {\n      this.form.addControl('id' as any, new FormControl(this.data.warehouse.id));\n      this.form.patchValue(this.data.warehouse);\n    }\n  }\n\n  onSave() {\n    this.isSaving = true;\n\n    switch (this.data.type) {\n      case 'create': {\n        this.createWarehouse();\n        break;\n      }\n      case 'edit': {\n        this.editWarehouse();\n        break;\n      }\n    }\n  }\n\n  createWarehouse() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.warehouseService.create(send).subscribe({\n      next: warehouse => this.dialogRef.close(warehouse),\n      error: () => this.isSaving = false,\n    });\n  }\n\n  editWarehouse() {\n    const send = <Partial<Warehouse>>this.form.value;\n    this.warehouseService.update(send).subscribe({\n      next: warehouse => this.dialogRef.close(warehouse),\n      error: () => this.isSaving = false,\n    });\n  }\n}\n","<div class=\"modal-header\">\n  <h2 class=\"modal-header__title\">\n    {{data.type}} Warehouse\n  </h2>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name*</label>\n      <input type=\"text\" id=\"name\" pInputText formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description*</label>\n      <textarea id=\"description\" [rows]=\"2\" pInputTextarea [autoResize]=\"true\" formControlName=\"description\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button pButton type=\"button\" label=\"Cancel\" [mat-dialog-close]=\"false\" class=\"p-button-danger\"></button>\n  <button\n    pButton\n    type=\"button\"\n    class=\"p-button-success\"\n    [label]=\"data.type\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onSave()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {WarehouseProductService} from '../../services/warehouse-product.service';\nimport {WarehouseProduct, WarehouseProducts} from '../../models/warehouse-product';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-move-warehouse-product',\n  templateUrl: './move-warehouse-product.component.html',\n  styleUrls: ['./move-warehouse-product.component.scss']\n})\nexport class MoveWarehouseProductComponent implements OnInit {\n  isSaving = false;\n\n  form = this.fb.group({\n    quantity: [0, [Validators.max(this.product.quantity ? this.product.quantity : this.product.total_locator_quantity), Validators.min(1), Validators.required]],\n    nomenclature: [this.product.nomenclature.id, Validators.required],\n    to_locator: [null, Validators.required],\n    from_locator: [this.product.locator.id, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<MoveWarehouseProductComponent>,\n    private readonly warehouseProductService: WarehouseProductService,\n    @Inject(MAT_DIALOG_DATA) public product: WarehouseProduct,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectLocator(id: number) {\n    this.form.get('to_locator').patchValue(<any>id);\n  }\n\n  onMoveProduct() {\n    if (this.form.valid) {\n      this.isSaving = true;\n\n      if (this.product.serial_numbers) {\n        this.warehouseProductService.moveSerial(<Partial<WarehouseProduct>>this.form.value).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(() => this.dialogRef.close(true));\n      }\n      if (!this.product.serial_numbers) {\n        this.warehouseProductService.moveBulk(<Partial<WarehouseProduct>>this.form.value).pipe(\n          finalize(() => this.isSaving = false)\n        ).subscribe(() => this.dialogRef.close(true));\n      }\n    }\n  }\n\n  onChangeQuantity(value: any) {\n    const maxQuantity = this.product.quantity ? this.product.quantity : this.product.total_locator_quantity;\n    if (value > maxQuantity) {\n      this.form.get('quantity').patchValue(maxQuantity);\n    }\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Move Items {{product.nomenclature.name}} ({{product.nomenclature.code}})\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Locator*</label>\n      <pek-group-locator-picker\n        [product]=\"product\"\n        (selectLocator)=\"selectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity* (Max: {{product?.quantity ? product.quantity : product?.total_locator_quantity }})</label>\n      <input\n        type=\"number\"\n        id=\"quantity\"\n        pInputText\n        formControlName=\"quantity\"\n        class=\"form-control\"\n        (ngModelChange)=\"onChangeQuantity($event)\"\n      >\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Move\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onMoveProduct()\"\n  ></button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {ListService} from '../../services/list.service';\nimport {finalize} from 'rxjs';\n\n@Component({\n  selector: 'pek-set-production-list-locator',\n  templateUrl: './set-production-list-locator.component.html',\n  styleUrls: ['./set-production-list-locator.component.scss']\n})\nexport class SetProductionListLocatorComponent implements OnInit {\n  isSaving = false;\n\n  form: FormGroup = this.fb.group({\n    id: [null, Validators.required],\n    locator: [null, Validators.required],\n  });\n\n  constructor(\n    private readonly fb: FormBuilder,\n    private readonly dialogRef: MatDialogRef<SetProductionListLocatorComponent>,\n    private readonly listService: ListService,\n    @Inject(MAT_DIALOG_DATA) public listId: number,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.form.get('id').patchValue(<any>this.listId);\n  }\n\n  setLocator() {\n    this.isSaving = true;\n    this.listService.updatePartly(this.form.value).pipe(\n      finalize(() => this.isSaving = false)\n    ).subscribe(response => {\n      if (response) {\n        this.dialogRef.close(true);\n      }\n    });\n  }\n\n  selectLocator(id: number) {\n    this.form.get('locator').patchValue(<any>id);\n  }\n}\n","<div class=\"modal-header modal-header_vertical\">\n  <div class=\"add-product__header-wrapper\">\n    <div class=\"add-product__header\">\n      <h2 class=\"modal-header__title\">\n        Set Locator\n      </h2>\n    </div>\n  </div>\n</div>\n\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label>Locator*</label>\n      <pek-group-locator-picker\n        (selectLocator)=\"selectLocator($event)\"\n      ></pek-group-locator-picker>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"justify-content-between\">\n  <button\n    pButton\n    type=\"button\"\n    label=\"Cancel\"\n    [mat-dialog-close]=\"false\"\n    class=\"p-button-danger\"\n  ></button>\n  <button\n    pButton\n    type=\"button\"\n    label=\"Move\"\n    class=\"p-button-success\"\n    [loading]=\"isSaving\"\n    [disabled]=\"form.invalid\"\n    (click)=\"setLocator()\"\n  ></button>\n</mat-dialog-actions>\n","import {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Locator} from './locator';\r\n\r\nexport class WarehouseProduct {\r\n  readonly id: number;\r\n  quantity?: number;\r\n  total_quantity?: number;\r\n  total_area_locator_quantity?: number;\r\n  total_locator_quantity?: number;\r\n  name?: string;\r\n  code?: string;\r\n  fullName?: string;\r\n  nomenclature?: number & Nomenclature;\r\n  // serial_number?: string | SerialNumber;\r\n  serial_number?: any;\r\n  serial_numbers?: any;\r\n  locator?: Locator;\r\n  // invoice?: number | Invoice;\r\n  uid?: number;\r\n  uom?: string;\r\n  freeQuantity?: number;\r\n  // extra_info: WarehouseProductExtraInfo[];\r\n  checkedForGeneration?: boolean;\r\n}\r\n\r\nexport class WarehouseProducts {\r\n  prev: string;\r\n  next: string;\r\n  count: number;\r\n  results: WarehouseProduct[]\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {ListProduct} from '../models/list-product';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {QuerySearch} from '@shared/models/other';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListProductService {\n\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'list_products/';\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getPartly(ids: number[]): Observable<ListProduct[][]> {\n    return forkJoin(...ids.map(id => this.httpClient.get<{ data: ListProduct[] }>(this.API_URL + this.url + `?list=${id}`).pipe(\n      map(response => response.data)\n    )));\n  }\n\n  get(query?: QuerySearch[]): Observable<ListProduct[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n\n    return this.httpClient.get<{ data: ListProduct[] }>(this.API_URL + this.url + queryParams).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  updatePartly(listProduct: ListProduct): Observable<ListProduct> {\n    return this.httpClient.patch<{ data: ListProduct }>(this.API_URL + this.url + listProduct.id + '/', listProduct).pipe(\n      map(response => response.data)\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {concat, forkJoin, Observable, toArray} from 'rxjs';\nimport {List, Lists} from '../models/list';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {QuerySearch} from '@shared/models/other';\nimport {MatDialog} from '@angular/material/dialog';\nimport {\n  SetProductionListLocatorComponent\n} from '../modals/set-production-list-locator/set-production-list-locator.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n  API_URL = environment.base_url + environment.production_url;\n  readonly url = 'lists/';\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<List[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: List[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  setQuantities(id: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + id + '/set_actual_quantities/', null);\n  }\n\n  make_deficit(id: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + id + '/deficit_request/', null);\n  }\n\n  makeRequestsForAll(list: List): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + list.id + '/bulk_deficit_request/', list.id);\n  }\n\n  makeDeficitOne(id: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + `list_products/${id}/deficit_request/`, null);\n  }\n\n  makeProductionList(entity: Partial<List>): Observable<any> {\n    return this.httpClient.post(this.API_URL + 'list_creation_requests/', entity).pipe(\n        map(response => response\n      ));\n  }\n\n  canceledActualQuantity(id: number): Observable<any> {\n    return this.httpClient.post<{ data: any }>(this.API_URL + `list_products/${id}/set_actual_quantity_null/`, null).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getById(id: number): Observable<List> {\n    return this.httpClient.get<{ data: List }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  getForPagination(query?: QuerySearch[]): Observable<Lists> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n\n    return this.httpClient.get<{ data: Lists }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getProductionLists(): Observable<List[]> {\n    return this.httpClient.get<{ data: List[] }>(this.API_URL + 'list_creation_requests/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  updatePartly(list: Partial<List>): Observable<List> {\n    return this.httpClient.patch<{ data: List }>(this.API_URL + this.url + list.id + '/', list).pipe(\n      map(response => response.data)\n    );\n  }\n\n  process(list: Partial<List>, id: number): Observable<any> {\n    return this.httpClient.post(this.API_URL + this.url + id + '/process/', list);\n  }\n\n  updateListSeveral(lists: List[]): Observable<any> {\n    return concat(...lists.map(list => this.httpClient.patch<{ data: List }>(this.API_URL + 'list_creation_requests/' + list.id + '/', list))).pipe(\n      toArray()\n    )\n  }\n\n  getNomenclatureInfo(id: number): Observable<any> {\n    return this.httpClient.get<{ data: any }>(environment.base_url + `product_structure/nomenclatures/${id}/available_on_stock/`).pipe(\n      map(response => response.data)\n    );\n  }\n\n  openSetProductionListLocatorModal(id: number): Observable<any> {\n    return this.dialog\n      .open<SetProductionListLocatorComponent>(SetProductionListLocatorComponent, {\n        width: '40rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: id,\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {Locator} from '../models/locator';\nimport {QuerySearch} from '@shared/models/other';\nimport {map} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {CreateEditLocatorComponent} from '../modals/create-edit-locator/create-edit-locator.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocatorService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'locators/';\n\n  locators: Locator[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n\n  }\n\n  getAll(): Observable<Locator[]> {\n    if (this.locators) {\n      return of(this.locators);\n    }\n\n    return this.httpClient.get<{ data: Locator[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const locators = response.data;\n        this.locators = locators;\n        return locators;\n      })\n    );\n  }\n\n  get(query?: QuerySearch[]): Observable<Locator[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n\n    return this.httpClient.get<{ data: Locator[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(locator: Partial<Locator>): Observable<Locator> {\n    return this.httpClient.post<{ data: Locator }>(this.API_URL + this.url, locator).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(locator: Partial<Locator>): Observable<Locator> {\n    return this.httpClient.put<{ data: Locator }>(this.API_URL + this.url + `${locator.id}/`, locator).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(locator: Locator): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${locator.id}/`);\n  };\n\n  createEditLocatorModal(type: ModalActionType, locator?: Locator): Observable<Locator> {\n    return this.dialog\n      .open<CreateEditLocatorComponent>(CreateEditLocatorComponent, {\n        width: '50rem',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, locator},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '@env/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {UnitMeasure} from '../../product-structure/models/unit-measure';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditUnitMeasureComponent} from '../modals/create-edit-unit-measure/create-edit-unit-measure.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitMeasureService {\n\n  API_URL = environment.base_url + environment.product_structure_url;\n  readonly url = 'units_of_measure/';\n\n  measureUnits: UnitMeasure[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<UnitMeasure[]> {\n    if (this.measureUnits) {\n      return of(this.measureUnits);\n    }\n\n    return this.httpClient.get<{ data: UnitMeasure[] }>(this.API_URL + this.url + 'all/').pipe(\n      map(response => {\n        const measureUnits = response.data.map(m => {\n          return {\n            ...m,\n            label: `${m.name} (${m.symbol})`\n          };\n        });\n        this.measureUnits = measureUnits;\n\n        return measureUnits;\n      })\n    );\n  }\n\n  create(unitMeasure: Partial<UnitMeasure>): Observable<UnitMeasure> {\n    return this.httpClient.post<{ data: UnitMeasure }>(this.API_URL + this.url, unitMeasure).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(unitMeasure: Partial<UnitMeasure>): Observable<UnitMeasure> {\n    return this.httpClient.put<{ data: UnitMeasure }>(this.API_URL + this.url + `${unitMeasure.id}/`, unitMeasure).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(unitMeasure: UnitMeasure): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${unitMeasure.id}/`);\n  };\n\n  createEditUnitMeasureModal(type: ModalActionType, unitMeasure?: UnitMeasure): Observable<UnitMeasure> {\n    return this.dialog\n      .open<CreateEditUnitMeasureComponent>(CreateEditUnitMeasureComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, unitMeasure},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {WarehouseProduct, WarehouseProducts} from '../models/warehouse-product';\nimport {map} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {QuerySearch} from '@shared/models/other';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {Technology} from '../../product-structure/models/technology';\nimport {\n  CreateEditWarehouseProductComponent\n} from '../modals/create-edit-warehouse-item/create-edit-warehouse-product.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MoveWarehouseProductComponent} from '../modals/move-warehouse-product/move-warehouse-product.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseProductService {\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'products/';\n\n  constructor(\n    private readonly httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(query?: QuerySearch[]): Observable<WarehouseProduct[]> {\n    let queryParams = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          queryParams += '&' + element.name + '=' + element.value;\n        } else {\n          queryParams += '?' + element.name + '=' + element.value;\n        }\n      });\n    }\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + this.url + queryParams).pipe(\n      map(response => response.data)\n    );\n  }\n\n  getReservations(): Observable<WarehouseProduct[]> {\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + 'warehouse_products_reservations/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  getGrouped(query?: { name: string, value: any }[]): Observable<WarehouseProduct[]> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n    return this.httpClient.get<{ data: WarehouseProduct[] }>(this.API_URL + this.url + 'grouped_by_warehouse_locator/' + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  getGroupedPagination(query?: { name: string, value: any }[]): Observable<WarehouseProducts> {\n    let qString = '';\n    if (query) {\n      query.forEach((element, index) => {\n        if (index > 0) {\n          qString += '&' + element.name + '=' + element.value;\n        } else {\n          qString += '?' + element.name + '=' + element.value;\n        }\n\n      });\n    }\n    return this.httpClient.get<{ data: WarehouseProducts }>(this.API_URL + this.url + 'grouped_by_warehouse_locator/' + qString).pipe(map(response => {\n      return response.data;\n    }));\n  }\n\n  severalUpdateReservations(ids: number[], send: { is_confirmed: boolean }): Observable<any> {\n    return forkJoin(...ids.map(id => this.httpClient.patch(this.API_URL + `warehouse_products_reservations/${id}/`, send)));\n  }\n\n  severalWriteOff(ids: number[]): Observable<WarehouseProduct[]> {\n    return forkJoin(...ids.map(id => this.httpClient.post<{ data: WarehouseProduct }>(this.API_URL + this.url + id + '/write_off/', null).pipe(\n      map(response => response.data)\n    )));\n  }\n\n  openCreateEditWarehouseProductModal(type: ModalActionType, nomenclatureId?: number): Observable<Technology> {\n    return this.dialog\n      .open<CreateEditWarehouseProductComponent>(CreateEditWarehouseProductComponent, {\n        width: 'auto',\n        height: 'auto',\n        panelClass: 'modal-overflow-visible',\n        data: {type, nomenclatureId},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  openMoveWarehouseProductModal(product: WarehouseProduct) {\n    return this.dialog\n      .open<MoveWarehouseProductComponent>(MoveWarehouseProductComponent, {\n        width: '40rem',\n        height: 'auto',\n        data: product,\n        panelClass: 'modal-overflow-visible',\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n\n  moveBulk(product: Partial<WarehouseProduct>): Observable<any> {\n    return this.httpClient.post(this.API_URL + 'bulk_move_bulk_products/', product);\n  }\n\n  moveSerial(product: Partial<WarehouseProduct>): Observable<any> {\n    return this.httpClient.post(this.API_URL + 'bulk_move_serial_products/', product);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {environment} from '@env/environment';\nimport {Warehouse} from '../models/warehouse';\nimport {HttpClient} from '@angular/common/http';\nimport {ModalActionType} from '@shared/models/modal-action';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditWarehouseComponent} from '../modals/create-edit-warehouse/create-edit-warehouse.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n\n  API_URL = environment.base_url + environment.warehouse_url;\n  readonly url = 'warehouses/';\n\n  warehouses: Warehouse[];\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  get(): Observable<Warehouse[]> {\n    if (this.warehouses) {\n      return of(this.warehouses);\n    }\n\n    return this.httpClient.get<{ data: Warehouse[] }>(this.API_URL + this.url).pipe(\n      map(response => {\n        const warehouses = response.data;\n        this.warehouses = warehouses;\n        return warehouses;\n      }));\n  }\n\n  getById(id: number): Observable<Warehouse> {\n    if (this.warehouses) {\n      return of(this.warehouses.find(w => w.id === id));\n    }\n\n    return this.httpClient.get<{ data: Warehouse }>(this.API_URL + this.url + id + '/').pipe(\n      map(response => response.data)\n    );\n  }\n\n  create(warehouse: Partial<Warehouse>): Observable<Warehouse> {\n    return this.httpClient.post<{ data: Warehouse }>(this.API_URL + this.url, warehouse).pipe(\n      map(response => response.data)\n    );\n  }\n\n  update(warehouse: Partial<Warehouse>): Observable<Warehouse> {\n    return this.httpClient.put<{ data: Warehouse }>(this.API_URL + this.url + `${warehouse.id}/`, warehouse).pipe(\n      map(response => response.data)\n    );\n  }\n\n  delete(warehouse: Warehouse): Observable<any> {\n    return this.httpClient.delete(this.API_URL + this.url + `${warehouse.id}/`);\n  };\n\n  createEditWarehouseModal(type: ModalActionType, warehouse?: Warehouse): Observable<Warehouse> {\n    return this.dialog\n      .open<CreateEditWarehouseComponent>(CreateEditWarehouseComponent, {\n        width: '35rem',\n        height: 'auto',\n        data: {type, warehouse},\n        autoFocus: false,\n        enterAnimationDuration: '250ms'\n      })\n      .afterClosed();\n  }\n}\n","export const environment = {\n  production: true,\n  base_url: '/api/',\n  product_structure_url: 'product_structure/',\n  warehouse_url: 'warehouse/',\n  production_url: 'production/',\n  business_partners_url: 'crm/',\n  procurement_url: 'procurement/',\n  accounting_url: 'accounting/',\n  users_url: 'users/',\n  staff_url: 'staff/',\n  sales_url: 'sales/',\n  // link_url: 'http://localhost:4201/'\n  link_url: 'https://rwave.pekauto.com/'\n};\n","export const environment = {\n  production: false,\n  /** Смотри все api в [Swagger]{@link http://erp.slopehelper.com/swagger/ } */\n  base_url: 'https://erp.slopehelper.com/api/',\n  product_structure_url: 'product_structure/',\n  warehouse_url: 'warehouse/',\n  production_url: 'production/',\n  business_partners_url: 'crm/',\n  procurement_url: 'procurement/',\n  accounting_url: 'accounting/',\n  users_url: 'users/',\n  staff_url: 'staff/',\n  sales_url: 'sales/',\n  link_url: 'https://pekauto.unitcode.ru/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}