{"version":3,"file":"src_app_manufacturing_manufacturing_module_ts.js","mappings":"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","sources":["./src/app/layout/components/header/services/expand-collapse-header.service.ts","./src/app/manufacturing/components/manufacturing-all-plans/manufacturing-all-plans.component.ts","./src/app/manufacturing/components/manufacturing-all-plans/manufacturing-all-plans.component.html","./src/app/manufacturing/components/manufacturing-chart/manufacturing-chart.component.ts","./src/app/manufacturing/components/manufacturing-chart/manufacturing-chart.component.html","./src/app/manufacturing/components/manufacturing-employees/manufacturing-employees.component.ts","./src/app/manufacturing/components/manufacturing-employees/manufacturing-employees.component.html","./src/app/manufacturing/components/manufacturing-layout/manufacturing-layout.component.ts","./src/app/manufacturing/components/manufacturing-layout/manufacturing-layout.component.html","./src/app/manufacturing/components/manufacturing-machines/manufacturing-machines.component.ts","./src/app/manufacturing/components/manufacturing-machines/manufacturing-machines.component.html","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-page-print/manufacturing-order-page-print.component.ts","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-page-print/manufacturing-order-page-print.component.html","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-page.component.ts","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-page.component.html","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-products-info-print/manufacturing-order-products-info-print.component.ts","./src/app/manufacturing/components/manufacturing-order-page/manufacturing-order-products-info-print/manufacturing-order-products-info-print.component.html","./src/app/manufacturing/components/manufacturing-order-statuses/manufacturing-order-statuses.component.ts","./src/app/manufacturing/components/manufacturing-order-statuses/manufacturing-order-statuses.component.html","./src/app/manufacturing/components/manufacturing-orders/manufacturing-orders.component.ts","./src/app/manufacturing/components/manufacturing-orders/manufacturing-orders.component.html","./src/app/manufacturing/components/manufacturing-plan-list/manufacturing-plan-list.component.ts","./src/app/manufacturing/components/manufacturing-plan-list/manufacturing-plan-list.component.html","./src/app/manufacturing/components/manufacturing-plan/manufacturing-plan.component.ts","./src/app/manufacturing/components/manufacturing-plan/manufacturing-plan.component.html","./src/app/manufacturing/components/manufacturing-positions/manufacturing-positions.component.ts","./src/app/manufacturing/components/manufacturing-positions/manufacturing-positions.component.html","./src/app/manufacturing/components/manufacturing-production-calendar/manufacturing-production-calendar.component.ts","./src/app/manufacturing/components/manufacturing-production-calendar/manufacturing-production-calendar.component.html","./src/app/manufacturing/components/manufacturing-slice-tasks/manufacturing-slice-tasks.component.ts","./src/app/manufacturing/components/manufacturing-slice-tasks/manufacturing-slice-tasks.component.html","./src/app/manufacturing/components/manufaturing-list-product-production/manufacturing-list-product-production.component.ts","./src/app/manufacturing/components/manufaturing-list-product-production/manufacturing-list-product-production.component.html","./src/app/manufacturing/manufacturing.module.ts","./src/app/manufacturing/manufacturing.routing.ts","./src/app/manufacturing/models/list-product-production.ts","./src/app/manufacturing/pickers/manufacturing-material-picker/manufacturing-material-picker.component.ts","./src/app/manufacturing/pickers/manufacturing-material-picker/manufacturing-material-picker.component.html","./src/app/manufacturing/services/calendar.service.ts","./src/app/shared/enums/view-mode.ts","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/rxjs/dist/esm/internal/operators/ignoreElements.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpandCollapseHeaderService {\r\n  private isCollapseSingleDisabled$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  private expandCollapseSingle$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  private expandCollapseAll$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public setIsCollapseSingleDisabled(isDisabled: boolean) {\r\n    console.log('setIsCollapseSingleDisabled', isDisabled);\r\n    this.isCollapseSingleDisabled$.next(isDisabled);\r\n  }\r\n\r\n  public setExpandCollapseSingle(isExpanded: boolean) {\r\n    this.expandCollapseSingle$.next(isExpanded);\r\n  }\r\n\r\n  public setExpandCollapseAll(isExpanded: boolean) {\r\n    this.expandCollapseAll$.next(isExpanded);\r\n  }\r\n\r\n  public get isCollapseSingleDisabled() {\r\n    return this.isCollapseSingleDisabled$;\r\n  };\r\n\r\n\r\n  public get expandCollapseSingle() {\r\n    return this.expandCollapseSingle$;\r\n  }\r\n\r\n  public get expandCollapseAll() {\r\n    return this.expandCollapseAll$;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-all-plans',\r\n  templateUrl: './manufacturing-all-plans.component.html',\r\n  styleUrls: ['./manufacturing-all-plans.component.scss']\r\n})\r\nexport class ManufacturingAllPlansComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"manufacturing-all-plans\">\r\n  <pek-manufacturing-chart [isPlan]=\"true\"></pek-manufacturing-chart>\r\n</div>\r\n","import {ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Task, TaskSet, TechnologyName} from '@shared/models/task';\r\nimport {filter, map, mapTo, take, tap} from 'rxjs/operators';\r\nimport {forkJoin, fromEvent, Observable, of, Subject, Subscription, takeUntil} from 'rxjs';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {TechnologyService} from '../../../product-structure/services/technology.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Technology} from '../../../product-structure/models/technology';\r\nimport {ListProductProduction} from '../../models/list-product-production';\r\nimport {ENomenclatureType} from '@shared/models/nomenclature';\r\nimport {ShiftTypes} from '../../enums/shift-types.enum';\r\nimport {PlanningStatus} from '../../enums/planning-status.enum';\r\nimport {CalendarService} from '../../services/calendar.service';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {ExpandCollapseHeaderService} from '../../../layout/components/header/services/expand-collapse-header.service';\r\n\r\nclass Status {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nclass Week {\r\n  start: Date;\r\n  end: Date;\r\n}\r\n\r\ntype ID = number;\r\n/** id_номенклатуры + \":\" + левел */\r\ntype ProductionKey = string;\r\n/** id номенклатуры + \":\" + технология + \":\" + левел */\r\ntype UITaskKey = string;\r\n\r\nclass DateInfo {\r\n  date: Date;\r\n  isVac: boolean;\r\n  x: number;\r\n}\r\n\r\nclass WeekInfo {\r\n  start: Date;\r\n  end: Date;\r\n  days: DateInfo[];\r\n}\r\n\r\nexport class UITask extends TaskSet {\r\n  production: ListProductProduction;\r\n  left?: number;\r\n  width?: number;\r\n  unconfirmedLeft?: number;\r\n  unconfirmedBiggerWidth?: number;\r\n  unconfirmedSmallerWidth?: number;\r\n  days?: DateInfo[];\r\n  created_order?: TaskOrder\r\n  created_orders?: TaskOrder[];\r\n  rma_reception_date?: any;\r\n  is_in_rma_process?: any;\r\n}\r\n\r\nexport class TaskOrder {\r\n  id: number;\r\n  accounting_type: number;\r\n}\r\n\r\nclass ProductionType {\r\n  value: string;\r\n  name: string;\r\n}\r\n\r\ntype Display = 'days' | 'weeks';\r\n\r\nclass DisplayOption {\r\n  label: string;\r\n  option: Display;\r\n}\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-chart',\r\n  templateUrl: './manufacturing-chart.component.html',\r\n  styleUrls: ['./manufacturing-chart.component.scss']\r\n})\r\nexport class ManufacturingChartComponent implements OnInit {\r\n  PlanningStatus = PlanningStatus;\r\n  planScale = 100;\r\n\r\n  nomenclaturesTypes = {'0': 3, '1': 1, '2': 2};\r\n\r\n  selectedStatuses: string[] = [];\r\n  selectedFilterTechnologies: string[] = [];\r\n\r\n  selectedProductionTypes: string[] = [];\r\n\r\n  productionsTypes: ProductionType[] = [\r\n    {value: '0', name: 'Outsource'},\r\n    {value: '1', name: 'Own production'},\r\n    {value: '2', name: 'Purchased'},\r\n  ];\r\n\r\n  statuses: Status[] = [\r\n    {value: 'Not processed', label: 'Not processed'},\r\n    {value: 'Deficit', label: 'Deficit'},\r\n    {value: 'Rework', label: 'Rework'},\r\n    {value: 'Ordered', label: 'Ordered'},\r\n    {value: 'On stock', label: 'On stock'},\r\n    {value: 'Reserved', label: 'Reserved'},\r\n  ];\r\n\r\n  selectedDisplay: Display = 'days';\r\n\r\n  displayOptions: DisplayOption[] = [\r\n    {option: 'days', label: 'Days'},\r\n    {option: 'weeks', label: 'Weeks'}\r\n  ];\r\n\r\n  @Input() isPlan = false;\r\n  @Input() rootId: string;\r\n\r\n  @ViewChild('panelBorder', {read: ElementRef}) panelBorder: ElementRef;\r\n\r\n  isRoot = false;\r\n  isRootFiltered = false;\r\n\r\n  productionNameWidth = 150; // ширина столбца name в диаграмме\r\n\r\n  mode: 'planning' | 'edit-tasks' | 'make-order' | 'add-items' = 'planning';\r\n\r\n  /** Все задачи, необходимые для производства детали */\r\n  loadingTasks: Task[] = [];\r\n  chartRootTasks: Task[] = [];\r\n  tasks: Task[] = [];\r\n  selectedTasks = new Set<UITask>();\r\n\r\n  innerContentWidth = 516; // ширина шапки с датами (500px - ширина .task-header-name, + 16px отступ)\r\n\r\n  /** Корневая последовательность сборки - сборка финальной детали из запчастей */\r\n  rootProductions: ListProductProduction[] = [];\r\n  /** Все последовательности сплошным списком */\r\n  productions: ListProductProduction[] = [];\r\n\r\n  marginTimeLeft = 34;\r\n\r\n  scaleHourVacationDay = 1;\r\n  scaleHourWeekdayDay = 12;\r\n\r\n  vacationCoords = 24;\r\n  weekdayCoords = 288;\r\n\r\n  weekWeekDayCoords = 41.125;\r\n  weekScaleHourDay = 1.717;\r\n\r\n  allTechnologies: Technology[] = [];\r\n  technologies: Technology[] = [];\r\n  technologiesPlanning: Technology[] = [];\r\n  availableTechnologies = new Set<TechnologyName>();\r\n  availableTechnologiesPlanning = new Set<TechnologyName>();\r\n\r\n\r\n  filteredTasksSet = new Set<number>();\r\n\r\n  selectedTechnologies: TechnologyName[] = [];\r\n  selectedTechnologiesPlanning: TechnologyName[] = [];\r\n\r\n  selectedProductions: any[] = [];\r\n\r\n  allProductsOnSelected = true;\r\n\r\n  isShowBorder = false;\r\n  frameBorderRight = 0; // положение рамки при ресайзе левой панели\r\n\r\n  reserveTasks: Task[] = [];\r\n\r\n  childrenEndHighlighted = false;\r\n\r\n  /** Соответствие началу даты (00 часов) информации о ней. */\r\n  dates = new Map<number, DateInfo>();\r\n  weekDates = new Map<number, WeekInfo>();\r\n  /** Для поиска информации о дате по координате */\r\n  datesByCoords: DateInfo[] = [];\r\n\r\n  hours: number[];\r\n  // rootId = this.route.snapshot.paramMap.get('rootId');\r\n  colors = [\r\n    '#fbf8cc',\r\n    '#fde4cf',\r\n    '#ffcfd2',\r\n    '#f1c0e8',\r\n    '#cfbaf0',\r\n    '#a3c4f3',\r\n    '#e8e8e4',\r\n    '#d7e3fc',\r\n    '#dbfdd8',\r\n    '#f9f195',\r\n    '#bdd7d2',\r\n    '#ebf4ff',\r\n    '#ccd5ae',\r\n    '#e3d5ca',\r\n    '#e0d4ed',\r\n\r\n\r\n    // '#FFF587',\r\n    // '#c1b9eb',\r\n    // '#F2C5BB',\r\n    // '#F2E1AE',\r\n    // '#A5D3E6',\r\n    // '#CAFFBF',\r\n    // '#BABFD9',\r\n    // '#d3daac',\r\n    // '#9BF6FF',\r\n    // '#D9C877',\r\n    // '#c9c7c5',\r\n    // '#e9f6eb',\r\n    // '#F2C9E0',\r\n    // '#BBDDF2',\r\n    // '#F3FEB0',\r\n  ];\r\n  isExpanded = true;\r\n  hasDeliveryDateChanges = false;\r\n  hasRootDeliveryDateChanges = false;\r\n  hasChildDeliveryDateChanges = false;\r\n\r\n  /** Соответствие ключа строки в графике строке */\r\n  private productionMap = new Map<ID | ProductionKey, ListProductProduction>();\r\n\r\n  private uiTaskMap = new Map<UITaskKey, UITask>();\r\n\r\n  private destroy$ = new Subject();\r\n  private taskDeleteSub: Subscription;\r\n\r\n  isLoading = true;\r\n  isShowConfirmationMenu = false;\r\n\r\n  private selectedListProductsGroupUIds: Set<number> = new Set<number>();\r\n\r\n  constructor(\r\n    private tasksService: TaskService,\r\n    private technologiesService: TechnologyService,\r\n    private modalService: ModalService,\r\n    private cd: ChangeDetectorRef,\r\n    private adapterService: AdapterService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private calendar: CalendarService,\r\n    public expandCollapseHeaderService: ExpandCollapseHeaderService\r\n  ) {\r\n    this.hours = Array(7).fill(0).map((x, i) => i);\r\n  }\r\n\r\n  /** @deprecated */\r\n  public get startDate() {\r\n    return this.dates.values().next().value;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.isPlan) {\r\n      this.isExpanded = false;\r\n      this.isRoot = true;\r\n    }\r\n\r\n    this.technologiesService.get().subscribe(technologies => {\r\n      this.technologies = technologies;\r\n      this.allTechnologies = technologies;\r\n      this.technologiesPlanning = technologies;\r\n      this.getTasks().subscribe();\r\n    });\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    this.taskDeleteSub = this.tasksService.delete$.subscribe(taskSet => this.onTaskDelete(taskSet));\r\n\r\n    // on esc return to planing mode\r\n    fromEvent<KeyboardEvent>(window, 'keydown').pipe(\r\n      takeUntil(this.destroy$),\r\n      filter(event => event.key === 'Escape'),\r\n      filter(() => this.mode !== 'planning'),\r\n    ).subscribe(event => this.mode = 'planning');\r\n\r\n    requestAnimationFrame(() => {\r\n      this.expandCollapseHeaderService.setIsCollapseSingleDisabled(true);\r\n    });\r\n\r\n    this.expandCollapseHeaderService.expandCollapseAll.pipe(takeUntil(this.destroy$)).subscribe(res => {\r\n      this.isExpanded = res;\r\n      this.expandCollapseAll(false);\r\n    });\r\n  }\r\n\r\n  updateTechnologies() {\r\n    this.availableTechnologies.clear();\r\n    this.availableTechnologiesPlanning.clear();\r\n    // this.tasks.filter(t => !t.is_locked && t.status !== 'Ordered' && t.status !== 'On stock')\r\n    this.tasks.filter(t => !t.is_locked && t.status === 'Deficit')\r\n      .forEach(task => {\r\n        if (!task.technology && task.list_product.nomenclature.type === '1') {\r\n          this.availableTechnologies.add('Assembly');\r\n        } else {\r\n          this.availableTechnologies.add(task.technology);\r\n        }\r\n      });\r\n\r\n    this.tasks.forEach(task => {\r\n      if (!task.technology && task.list_product.nomenclature.type === '1') {\r\n        this.availableTechnologiesPlanning.add('Assembly');\r\n      } else {\r\n        this.availableTechnologiesPlanning.add(task.technology);\r\n      }\r\n    });\r\n    this.technologies = this.allTechnologies.filter(t => this.availableTechnologies.has(t.name));\r\n    this.technologiesPlanning = this.allTechnologies.filter(t => this.availableTechnologiesPlanning.has(t.name));\r\n  }\r\n\r\n  getTasks(rootId = null): Observable<Task[]> {\r\n    // Используются для получения тасков\r\n    this.rootId = rootId ? rootId : this.rootId;\r\n\r\n    let querySearch: QuerySearch[] = [{name: 'for_root_id__in', value: this.rootId}];\r\n\r\n    // let option = 'for_root_id__in';\r\n    // let value: string | boolean = this.rootId;\r\n\r\n    if (this.isPlan && !rootId) {\r\n      // option = 'is_root';\r\n      // value = true;\r\n\r\n      querySearch = [\r\n        {name: 'is_root', value: true},\r\n        {name: 'statuses', value: '0,1,2,3'}\r\n      ];\r\n    }\r\n\r\n    return this.tasksService.get(querySearch).pipe(map(tasks => {\r\n        // избавляемся от дубликатов задач\r\n        tasks = tasks.filter(task => !this.tasks.find(t => task.id === t.id));\r\n\r\n        // преобразуем строки даты в дату\r\n        tasks = tasks.map(task => {\r\n          return {\r\n            ...task,\r\n            status: task.refunded_orders.length > 0 && !task.is_refunded ? 'Deficit' : task.status,\r\n            production_type: task.list_product.nomenclature.type === '0' ? '2' : task.production_type,\r\n            start_date: new Date(task.start_date),\r\n            end_date: new Date(task.end_date),\r\n            unconfirmed_end_date: task.unconfirmed_end_date ? new Date(task.unconfirmed_end_date) : null,\r\n          };\r\n        });\r\n\r\n        // добавляем технологии загруженных задач в список всех используемых технологий\r\n        // tasks.filter(t => !t.is_locked && t.status !== 'Ordered' && t.status !== 'On stock')\r\n        tasks.filter(t => !t.is_locked && t.status === 'Deficit')\r\n          .forEach(task => {\r\n            if (!task.technology && task.list_product.nomenclature.type === '1') {\r\n              task.technology = 'Assembly';\r\n              this.availableTechnologies.add('Assembly');\r\n            } else {\r\n              this.availableTechnologies.add(task.technology);\r\n            }\r\n          });\r\n\r\n        tasks.forEach(task => {\r\n          if (!task.technology && task.list_product.nomenclature.type === '1') {\r\n            this.availableTechnologiesPlanning.add('Assembly');\r\n          } else {\r\n            this.availableTechnologiesPlanning.add(task.technology);\r\n          }\r\n\r\n          task.list_product.task_required_quantity = task.required_quantity;\r\n          task.groupId = '';\r\n        });\r\n\r\n        this.technologies = this.allTechnologies.filter(t => this.availableTechnologies.has(t.name));\r\n        this.technologiesPlanning = this.allTechnologies.filter(t => this.availableTechnologiesPlanning.has(t.name));\r\n\r\n        this.tasks.push(...tasks);\r\n        this.loadingTasks = [...this.tasks];\r\n        if (this.isPlan && this.isRoot) {\r\n          this.chartRootTasks = [];\r\n\r\n          this.tasks.forEach(task => {\r\n            if (!this.chartRootTasks.find(t => t.family_id === task.family_id &&\r\n              t.list_product.id === task.list_product.id && t.technology === task.technology &&\r\n              task.list_product.tree_id === t.list_product.tree_id)) {\r\n              this.chartRootTasks.push(task);\r\n            }\r\n          });\r\n\r\n          this.chartRootTasks.forEach(root => root.label = `(${root.list_product.id}) ${root.list_product.nomenclature.name}`);\r\n          this.chartRootTasks.sort((a, b) =>\r\n            new Date(b.created).getTime() - new Date(a.created).getTime() ||\r\n            this.nomenclaturesTypes[a.list_product.nomenclature.type] - this.nomenclaturesTypes[b.list_product.nomenclature.type] ||\r\n            a.list_product.nomenclature.id - b.list_product.nomenclature.id\r\n          );\r\n          this.isRoot = false;\r\n        }\r\n\r\n        this.updateTimeline();\r\n        this.updateTree();\r\n        this.update();\r\n        this.paint();\r\n\r\n        this.isLoading = false;\r\n        this.clearSelectedListProductsGroupUIds();\r\n        return tasks;\r\n      }),\r\n      untilDestroyed(this)\r\n    );\r\n  }\r\n\r\n  generateTasksGroups() {\r\n    this.tasks.forEach(task => {\r\n      if (task.list_product.level !== 0) {\r\n        const filteredTasks = this.tasks.filter(t => t.list_product.nomenclature.id ===\r\n          task.list_product.nomenclature.id && t.list_product.level === task.list_product.level &&\r\n          t.family_id === task.family_id);\r\n\r\n        const firstTasks = filteredTasks.filter(t => !t.previous_task);\r\n\r\n        const parentTasks: Task[] = [];\r\n\r\n        let groupId = 0;\r\n\r\n        firstTasks.forEach(t => {\r\n          const uiParent = t.list_product.id;\r\n          groupId++;\r\n\r\n          let currentTask = t;\r\n\r\n          while (currentTask?.next_task) {\r\n            currentTask.uiGroupId = groupId;\r\n            currentTask.uiParent = uiParent;\r\n            parentTasks.push(currentTask);\r\n            currentTask = this.tasks.find(t2 => t2.id === currentTask.next_task);\r\n          }\r\n\r\n          currentTask.uiGroupId = groupId;\r\n          currentTask.uiParent = uiParent;\r\n          parentTasks.push(currentTask);\r\n        });\r\n\r\n        parentTasks.filter(t => t.uiGroupId === task.uiGroupId).forEach(t => {\r\n          task.groupId += `${t.technology}/${t.status}/${t.list_product.nomenclature.id}/${t.list_product.level}/${t.created_orders.map(o => o.id).join(',')}`;\r\n          // const ff = this.tasks.filter(p => p.list_product.parent === task.uiParent);\r\n          // ff.forEach(p => {\r\n          //   task.groupId += `${p.technology}/${p.status}/${p.list_product.nomenclature.id}/${p.list_product.level}`;\r\n          // });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTimeline() {\r\n    /** Прибалвяет к дате дни */\r\n    const addDays = (d: Date, days: number): Date => {\r\n      const result = new Date(d.getTime());\r\n      result.setDate(result.getDate() + days);\r\n      result.setHours(0, 0, 0, 0);\r\n      return result;\r\n    };\r\n\r\n    const min = new Date(Math.min(...this.tasks.filter(t => t.start_date).map(t => t.start_date.getTime())));\r\n    let max = new Date(Math.max(...this.tasks.filter(t => t.end_date).map(t => t.end_date.getTime())));\r\n    const maxUnconfirmed = new Date(Math.max(...this.tasks.filter(t => t.unconfirmed_end_date).map(t => t.unconfirmed_end_date.getTime())));\r\n    if (maxUnconfirmed && maxUnconfirmed > max) {\r\n      max = maxUnconfirmed;\r\n    }\r\n\r\n    let x = 0;\r\n\r\n    this.dates.clear();\r\n    this.weekDates.clear();\r\n\r\n    if (this.selectedDisplay === 'days') {\r\n\r\n      let date = addDays(min, 0);\r\n      do {\r\n        const dateInfo = {\r\n          date: new Date(date),\r\n          isVac: this.calendar.isVac(date),\r\n          x,\r\n        };\r\n\r\n        dateInfo.date.setHours(0, 0, 0, 0);\r\n\r\n        this.dates.set(dateInfo.date.getTime(), dateInfo);\r\n\r\n        date = addDays(date, 1);\r\n        x += dateInfo.isVac ? this.vacationCoords : this.weekdayCoords;\r\n\r\n      } while (date <= max);\r\n    } else {\r\n      const weeks = this.getWeeksBetween(min, max);\r\n\r\n      weeks.forEach(week => {\r\n        let i = 0;\r\n        const days: DateInfo[] = [];\r\n\r\n        while (i < 7) {\r\n          const date = new Date(week.start.getTime() + 86400000 * i);\r\n\r\n          const day: DateInfo = {\r\n            date: new Date(date),\r\n            isVac: this.calendar.isVac(date),\r\n            x,\r\n          };\r\n\r\n          days.push(day);\r\n\r\n          x += this.weekWeekDayCoords;\r\n          i++;\r\n        }\r\n\r\n        const weekInfo: WeekInfo = {\r\n          start: week.start,\r\n          end: week.end,\r\n          days,\r\n        };\r\n\r\n        this.weekDates.set(week.start.getTime(), weekInfo);\r\n      });\r\n    }\r\n\r\n    this.innerContentWidth = 516;\r\n\r\n    // высчитываем длину контейнера\r\n\r\n    if (this.selectedDisplay === 'days') {\r\n      this.dates.forEach(day => {\r\n        if (!day.isVac) {\r\n          this.innerContentWidth += this.weekdayCoords;\r\n        } else {\r\n          this.innerContentWidth += this.vacationCoords;\r\n        }\r\n      });\r\n\r\n      this.datesByCoords = Array.from(this.dates.values()).reverse();\r\n    } else {\r\n      this.innerContentWidth += Array.from(this.weekDates.values())\r\n        .map(d => d.days)\r\n        .flat()\r\n        .reduce((sum, day) => sum += this.weekWeekDayCoords, 0);\r\n\r\n      this.datesByCoords = Array.from(this.weekDates.values()).map(p => p.days).flat().reverse();\r\n    }\r\n\r\n  }\r\n\r\n  getWeeksBetween(startDate: Date, endDate: Date) {\r\n    const weeks: Week[] = [];\r\n    let currentDate = new Date(startDate.setHours(0, 0, 0, 0) - 86400000 * (startDate.getDay() - 1));\r\n    currentDate.setHours(0, 0, 0, 0);\r\n\r\n    while (currentDate.getTime() <= endDate.getTime()) {\r\n      let weekEndDate = new Date(currentDate);\r\n      weekEndDate.setDate(currentDate.getDate() + 6);\r\n\r\n      if (weekEndDate > endDate) {\r\n        weekEndDate = endDate;\r\n      }\r\n\r\n      weeks.push({\r\n        start: new Date(currentDate),\r\n        end: weekEndDate,\r\n      });\r\n\r\n      currentDate.setDate(currentDate.getDate() + 7);\r\n    }\r\n\r\n    const lastWeek = {...weeks[weeks.length - 1]};\r\n    weeks[weeks.length - 1].end = new Date(lastWeek.end.setHours(0, 0, 0, 0) + 86400000 * (7 - lastWeek.end.getDay()));\r\n\r\n    return weeks;\r\n  };\r\n\r\n  testWeek() {\r\n    const min = new Date(Math.min(...this.tasks.filter(t => t.start_date).map(t => t.start_date.getTime())));\r\n    let max = new Date(Math.max(...this.tasks.filter(t => t.end_date).map(t => t.end_date.getTime())));\r\n    const maxUnconfirmed = new Date(Math.max(...this.tasks.filter(t => t.unconfirmed_end_date).map(t => t.unconfirmed_end_date.getTime())));\r\n    if (maxUnconfirmed && maxUnconfirmed > max) {\r\n      max = maxUnconfirmed;\r\n    }\r\n\r\n    const weeks = this.getWeeksBetween(min, max);\r\n\r\n    let x = 0;\r\n\r\n    weeks.forEach(week => {\r\n      let i = 0;\r\n      const days: DateInfo[] = [];\r\n\r\n      while (i < 7) {\r\n        const date = new Date(week.start.getTime() + 86400000 * i);\r\n\r\n        const day: DateInfo = {\r\n          date: new Date(date),\r\n          isVac: this.calendar.isVac(date),\r\n          x,\r\n        };\r\n\r\n        days.push(day);\r\n\r\n        x += this.weekWeekDayCoords;\r\n        i++;\r\n      }\r\n\r\n      const weekInfo: WeekInfo = {\r\n        start: week.start,\r\n        end: week.end,\r\n        days,\r\n      };\r\n\r\n      this.weekDates.set(week.start.getTime(), weekInfo);\r\n    });\r\n\r\n    this.datesByCoords = Array.from(this.weekDates.values()).map(p => p.days).flat().reverse();\r\n\r\n    this.updateProductions();\r\n  }\r\n\r\n  updateProductions() {\r\n    this.productions.forEach(production => {\r\n      production.tasks.forEach(task => {\r\n        task.left = this.getX(task.start_date);\r\n        task.width = this.getX(task.end_date) - task.left;\r\n        this.getTaskDays(task);\r\n        this.updateTimeline();\r\n        this.updateMargins(production);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  getX(date: Date): number {\r\n    const dateInfo = this.getDateInfo(date);\r\n\r\n    let hoursShift: number;\r\n\r\n    const dateShift = dateInfo?.x;\r\n    if (this.selectedDisplay === 'days') {\r\n      hoursShift = date.getHours() * (dateInfo?.isVac ? this.scaleHourVacationDay : this.scaleHourWeekdayDay);\r\n    } else {\r\n      hoursShift = date.getHours() * this.weekScaleHourDay;\r\n    }\r\n\r\n    return dateShift + hoursShift;\r\n  }\r\n\r\n  getDate(x: number): Date {\r\n    const dateInfo = this.getDateInfo(x);\r\n\r\n    const delta = x - dateInfo.x;\r\n\r\n    let hourScale: number;\r\n    if (this.selectedDisplay === 'days') {\r\n      hourScale = dateInfo.isVac ? this.scaleHourVacationDay : this.scaleHourWeekdayDay;\r\n    } else {\r\n      hourScale = this.weekScaleHourDay;\r\n    }\r\n\r\n\r\n    const result = new Date(dateInfo.date);\r\n\r\n    result.setHours(delta / hourScale);\r\n    return result;\r\n  }\r\n\r\n  getDateInfo(x: number | Date): DateInfo {\r\n\r\n    if (this.selectedDisplay === 'days') {\r\n\r\n      let info: DateInfo;\r\n\r\n      if (x instanceof Date) {\r\n        const dateStart = new Date(x);\r\n        dateStart.setHours(0, 0, 0, 0);\r\n        info = this.dates?.get(dateStart.getTime());\r\n      } else {\r\n        info = this.datesByCoords.find(i => i.x <= x);\r\n      }\r\n\r\n      // if (!info) {\r\n      //   throw new Error(`Координата \"${x}\" выходит за пределы графика`);\r\n      // }\r\n      return info;\r\n    } else {\r\n      let info: DateInfo;\r\n\r\n      if (x instanceof Date) {\r\n        const dateStart = new Date(x);\r\n        dateStart.setHours(0, 0, 0, 0);\r\n        // info = this.dates?.get(dateStart.getTime());\r\n\r\n        for (let week of this.weekDates.values()) {\r\n          if (!info) {\r\n            info = week.days.find(d => d.date.getTime() === dateStart.getTime());\r\n          }\r\n        }\r\n\r\n      } else {\r\n        info = this.datesByCoords.find(i => i.x <= x);\r\n      }\r\n\r\n      return info;\r\n    }\r\n  }\r\n\r\n  getTaskDays(task: UITask) {\r\n    const dates = new Map<number, DateInfo>();\r\n\r\n    /** Прибалвяет к дате дни */\r\n    const addDays = (d: Date, days: number): Date => {\r\n      const result = new Date(d.getTime());\r\n      result.setDate(result.getDate() + days);\r\n      return result;\r\n    };\r\n\r\n    dates.clear();\r\n\r\n    let date = addDays(task.start_date, 0);\r\n    date.setHours(0, 0, 0, 0);\r\n    // const taskEndDate = task.unconfirmed_end_date ? task.unconfirmed_end_date : task.end_date;\r\n    const taskEndDate = task.end_date;\r\n    do {\r\n\r\n      const dateInfo = {\r\n        date: new Date(date),\r\n        isVac: this.calendar.isVac(date),\r\n        x: this.getX(date) - task.left,\r\n      };\r\n\r\n      dateInfo.date.setHours(0, 0, 0, 0);\r\n\r\n      dates.set(dateInfo.date.getTime(), dateInfo);\r\n\r\n      date = addDays(date, 1);\r\n    } while (date <= taskEndDate);\r\n    if (task.unconfirmed_end_date && task.unconfirmed_end_date > task.end_date) {\r\n      do {\r\n        const dateInfo = {\r\n          date: new Date(date),\r\n          isVac: this.calendar.isVac(date),\r\n          x: this.getX(date) - task.left,\r\n        };\r\n\r\n        dateInfo.date.setHours(0, 0, 0, 0);\r\n\r\n        dates.set(dateInfo.date.getTime(), dateInfo);\r\n\r\n        date = addDays(date, 1);\r\n      } while (date <= task.unconfirmed_end_date);\r\n    }\r\n\r\n\r\n    task.days = (Array.from(dates.values()));\r\n  }\r\n\r\n  moveBorder(event) {\r\n    this.isShowBorder = true;\r\n\r\n    if (this.frameBorderRight !== event.edges.left) {\r\n      if (this.frameBorderRight < event.edges.left) {\r\n        this.frameBorderRight += 12;\r\n      } else {\r\n        this.frameBorderRight -= 12;\r\n      }\r\n      if (this.panelBorder) {\r\n        this.panelBorder.nativeElement.style.right = `${-this.frameBorderRight}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  resizePanel(event) {\r\n    const newSize = this.productionNameWidth + event.edges.left;\r\n\r\n    if (newSize > 70) {\r\n      this.productionNameWidth = newSize;\r\n    } else {\r\n      this.productionNameWidth = 70;\r\n    }\r\n\r\n    this.frameBorderRight = 0;\r\n    this.isShowBorder = false;\r\n\r\n    if (this.panelBorder) {\r\n      this.panelBorder.nativeElement.style.right = `0px`;\r\n    }\r\n  }\r\n\r\n  filteredRoot(evt) {\r\n    const ids: number[] = this.selectedProductions.map(t => t.family_id);\r\n    if (ids.length > 0) {\r\n      this.isRootFiltered = true;\r\n      this.productions.forEach(production => {\r\n        production.isVisible = false;\r\n        ids.forEach(id => {\r\n          if (id === production.tasks[0].family_id) {\r\n            production.isVisible = true;\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      this.isRootFiltered = false;\r\n      this.productions.forEach(production => production.isVisible = true);\r\n    }\r\n  }\r\n\r\n  filterTasks(isFilteredAll?) {\r\n    this.productions.forEach(production => production.isVisible = false);\r\n    this.productions.forEach(production => {\r\n      production.isFiltered = Boolean(production.tasks.find(task => {\r\n        return !this.selectedTechnologies.length ||\r\n          (isFilteredAll ?\r\n            this.selectedTechnologies.includes(task.technology ? task.technology : 'Assembly') :\r\n            this.isTaskMeetsFilterConditions(task));\r\n      }));\r\n\r\n      // делаем видимыми родительские элементы\r\n      if (production.isFiltered) {\r\n        let parent = production;\r\n        while (parent) {\r\n          parent.isVisible = true;\r\n          parent = parent.parent;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  filterTasksForStatus() {\r\n    const selectedTasks: Task[] = [];\r\n    this.filteredTasksSet.clear();\r\n\r\n    if (!this.selectedStatuses) {\r\n      this.selectedStatuses = [];\r\n    }\r\n\r\n    if (!this.selectedFilterTechnologies) {\r\n      this.selectedFilterTechnologies = [];\r\n    }\r\n\r\n    if (!this.selectedProductionTypes) {\r\n      this.selectedProductionTypes = [];\r\n    }\r\n\r\n    this.productions.forEach(production => production.isVisible = false);\r\n    this.productions.forEach(production => {\r\n      let tasks = production.tasks;\r\n      let filteredTasks = [];\r\n\r\n      if (this.isPlan) {\r\n        if (this.selectedProductions.length) {\r\n          this.selectedProductions.forEach((prod, idx) => {\r\n            const tt = tasks.filter(t => t.family_id === prod);\r\n            filteredTasks = filteredTasks.concat(tt);\r\n\r\n            if (idx === this.selectedProductions.length - 1) {\r\n              tasks = [...filteredTasks];\r\n              filteredTasks = [];\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      console.log(this.selectedStatuses);\r\n      console.log(this.selectedFilterTechnologies);\r\n\r\n      if (this.selectedStatuses.length) {\r\n        this.selectedStatuses.forEach((status, idx) => {\r\n          const tt = tasks.filter(t => t.status === status);\r\n          filteredTasks = filteredTasks.concat(tt);\r\n\r\n          if (idx === this.selectedStatuses.length - 1) {\r\n            tasks = [...filteredTasks];\r\n            filteredTasks = [];\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.selectedFilterTechnologies.length) {\r\n        this.selectedFilterTechnologies.forEach((technology, idx) => {\r\n          const tt = tasks.filter(t => t.technology === technology);\r\n          filteredTasks = filteredTasks.concat(tt);\r\n\r\n          if (idx === this.selectedFilterTechnologies.length - 1) {\r\n            tasks = [...filteredTasks];\r\n            filteredTasks = [];\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.selectedProductionTypes.length) {\r\n        this.selectedProductionTypes.forEach((type, idx) => {\r\n          const tt = tasks.filter(t => t.production_type === type);\r\n          filteredTasks = filteredTasks.concat(tt);\r\n\r\n          if (idx === this.selectedProductionTypes.length - 1) {\r\n            tasks = [...filteredTasks];\r\n            filteredTasks = [];\r\n          }\r\n        });\r\n      }\r\n\r\n      tasks.forEach(t => {\r\n        this.filteredTasksSet.add(t.id);\r\n        if (this.isPlan) {\r\n          t.tasks.forEach(task => selectedTasks.push(task));\r\n        }\r\n      });\r\n\r\n      production.isFiltered = Boolean(production.tasks.find(task => {\r\n        return this.test(task);\r\n      }));\r\n\r\n      // делаем видимыми родительские элементы\r\n      if (production.isFiltered) {\r\n        let parent = production;\r\n        while (parent) {\r\n          parent.isVisible = true;\r\n\r\n          if (this.isPlan) {\r\n            parent.tasks[0].tasks.forEach(task => selectedTasks.push(task));\r\n            this.updateMargins(parent);\r\n          }\r\n\r\n          parent = parent.parent;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.isPlan) {\r\n      this.reserveTasks = [...this.tasks];\r\n      this.tasks = [...selectedTasks];\r\n\r\n      this.productions.filter(p => p.isVisible).forEach(production => {\r\n        production.tasks.forEach(task => {\r\n          task.left = this.getX(task.start_date);\r\n          task.width = this.getX(task.end_date) - task.left;\r\n          this.updateTimeline();\r\n          this.getTaskDays(task);\r\n          this.updateMargins(production);\r\n        });\r\n      });\r\n\r\n      this.updateTechnologies();\r\n    }\r\n  }\r\n\r\n\r\n  selectTasks() {\r\n    this.selectedTasks.clear();\r\n    this.selectedTechnologiesPlanning.forEach(t => {\r\n      this.productions.forEach(production => {\r\n        production.tasks.forEach(task => {\r\n          task.production = production;\r\n          if (task.technology === t) {\r\n            this.selectedTasks.add(task);\r\n          } else if (task.list_product.nomenclature.type !== '0' && !task.technology && t === 'Assembly') {\r\n            this.selectedTasks.add(task);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  makeOrder() {\r\n    const technologies = this.getSelectedTechnologies();\r\n    const productions = this.getSelectedProduction();\r\n    if (technologies.length > 0) {\r\n      this.tasksService.makeOrderDialog(technologies).subscribe(response => {\r\n        if (response) {\r\n          this.filterTasks();\r\n\r\n          const tasks = [];\r\n\r\n          technologies.forEach(tech => {\r\n            tech.tasks.forEach(task => {\r\n              tasks.push(task);\r\n            });\r\n          });\r\n\r\n          forkJoin(...tasks.map(task => this.tasksService.getById(task.id))).subscribe(newTasks => {\r\n            const nTasks = newTasks.flat();\r\n\r\n            tasks.forEach(ta => {\r\n              const findTask = this.tasks.find(t => t.id === ta.id);\r\n\r\n              if (findTask) {\r\n                const newFindTask = nTasks.find(task => task.id === ta.id);\r\n                findTask.created_order = newFindTask.created_order;\r\n                findTask.created_orders = newFindTask.created_orders;\r\n                findTask.status = newFindTask.refunded_orders.length > 0 && !newFindTask.is_refunded ? 'Deficit' : newFindTask.status;\r\n                findTask.start_date = new Date(newFindTask.start_date);\r\n                findTask.end_date = new Date(newFindTask.end_date);\r\n              }\r\n            });\r\n\r\n            productions.forEach(p => {\r\n              p.tasks.forEach(uiTask => {\r\n                uiTask.tasks.forEach(task => {\r\n                  const findTask = tasks.find(t => t.id === task.id);\r\n\r\n                  if (findTask) {\r\n                    const newFindTask = nTasks.find(t => task.id === t.id);\r\n                    findTask.created_order = newFindTask.created_order;\r\n                    findTask.created_orders = newFindTask.created_orders;\r\n                    findTask.start_date = new Date(newFindTask.start_date);\r\n                    findTask.end_date = new Date(newFindTask.end_date);\r\n                    findTask.status = newFindTask.refunded_orders.length > 0 && !newFindTask.is_refunded ? 'Deficit' : newFindTask.status;\r\n                    uiTask.created_order = newFindTask.created_order;\r\n                    uiTask.created_orders = newFindTask.created_orders;\r\n                    uiTask.status = newFindTask.refunded_orders.length > 0 && !newFindTask.is_refunded ? 'Deficit' : newFindTask.status;\r\n                    uiTask.start_date = new Date(newFindTask.start_date);\r\n                    uiTask.end_date = new Date(newFindTask.end_date);\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          });\r\n\r\n          tasks.forEach(task => {\r\n            this.tasks.find(t => t.id === task.id).is_locked = true;\r\n          });\r\n          this.updateTechnologies();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  editTasks() {\r\n    if (this.selectedTasks.size > 0) {\r\n      const selectedTasks = Array.from(this.selectedTasks);\r\n      this.tasksService.editTasksDialog(selectedTasks).subscribe((positions) => {\r\n        if (positions.start && positions.end) {\r\n          selectedTasks.forEach(task => {\r\n            this.applyPositionTask(task, task.production, positions);\r\n          });\r\n        }\r\n\r\n        if (positions.shiftByAmount && positions.shiftByType) {\r\n          this.updateIfShiftIsApplied(selectedTasks, positions);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateIfShiftIsApplied(selectedTasks: UITask[], positions) {\r\n    selectedTasks.forEach(task => {\r\n      if (task.list_product.nomenclature.type !== ENomenclatureType.PURCHASED) {\r\n\r\n        const shiftAmount = positions.shiftByAmount;\r\n        const shiftType = positions.shiftByType;\r\n\r\n        let startDate = new Date(task.start_date);\r\n        let endDate = new Date(task.end_date);\r\n\r\n        if (shiftType === ShiftTypes.DAYS) {\r\n          startDate = new Date(startDate.setDate(startDate.getDate() + shiftAmount));\r\n          endDate = new Date(endDate.setDate(endDate.getDate() + shiftAmount));\r\n        }\r\n\r\n        if (shiftType === ShiftTypes.HOURS) {\r\n          startDate = new Date(startDate.setHours(startDate.getHours() + shiftAmount));\r\n          endDate = new Date(endDate.setHours(endDate.getHours() + shiftAmount));\r\n        }\r\n\r\n        if (shiftType === ShiftTypes.WEEKS) {\r\n          startDate = new Date(startDate.setDate(startDate.getDate() + shiftAmount * 7));\r\n          endDate = new Date(endDate.setDate(endDate.getDate() + shiftAmount * 7));\r\n        }\r\n\r\n        if (shiftType === ShiftTypes.MONTHS) {\r\n          startDate = new Date(startDate.setMonth(startDate.getMonth() + shiftAmount));\r\n          endDate = new Date(endDate.setMonth(endDate.getMonth() + shiftAmount));\r\n        }\r\n\r\n        const newDates = {\r\n          start: startDate,\r\n          end: endDate\r\n        };\r\n\r\n        this.applyPositionTask(task, task.production, newDates);\r\n      }\r\n    });\r\n  }\r\n\r\n  getDuration(task) {\r\n    return (task.end_date.getTime() - task.start_date.getTime()) / 1000 / 60 / 60;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.style.overflow = '';\r\n    this.destroy$.next(null);\r\n    this.taskDeleteSub.unsubscribe();\r\n  }\r\n\r\n  onTaskDelete(set: TaskSet) {\r\n    if (!set.production.parent) {\r\n      this.router.navigateByUrl('dash/production/plan').then();\r\n      return;\r\n    }\r\n\r\n    this.tasks = this.tasks.filter(t => !set.tasks.includes(t));\r\n    this.selectedTasks.delete(set as UITask);\r\n    set.production.tasks = set.production.tasks.filter(t => t !== set);\r\n    this.updateTechnologies();\r\n\r\n    if (set.production.tasks.length === 0) {\r\n      set.production.parent.children = set.production.parent.children.filter(p => p !== set.production);\r\n      this.productions = this.productions.filter(p => p !== set.production);\r\n      this.paint();\r\n    }\r\n  }\r\n\r\n  public updateTaskDates(task: UITask) {\r\n    const data = {\r\n      start_date: task.start_date,\r\n      end_date: task.end_date\r\n    };\r\n\r\n    const rootTask = this.getLastTask;\r\n\r\n    if (rootTask && rootTask.list_product.id === task.list_product.id && rootTask.planning_status === PlanningStatus.PLANNED) {\r\n      rootTask.planning_status = PlanningStatus.WAITING_CONFIRMATION;\r\n    }\r\n    this.tasksService.update(task, data).pipe(take(1)).subscribe(() => {\r\n      task.isSaved = true;\r\n      setTimeout(() => task.isSaved = false, 1000);\r\n    });\r\n  }\r\n\r\n  get getLastTask(): Task {\r\n    return this.rootProductions[0]?.tasks?.find(task => !task.next_task && !task.parent_task);\r\n  }\r\n\r\n  public updateMargins(production: ListProductProduction) {\r\n    production.tasks.map(task => {\r\n      task.left = this.getX(task.start_date);\r\n      task.width = this.getX(task.end_date) - task.left;\r\n\r\n      if (production.product && task.unconfirmed_end_date) {\r\n        task.unconfirmedLeft = null;\r\n        task.unconfirmedSmallerWidth = null;\r\n        task.unconfirmedBiggerWidth = null;\r\n        if (task.unconfirmed_end_date > task.end_date) {\r\n          task.unconfirmedLeft = task.left;\r\n          task.unconfirmedBiggerWidth = this.getX(task.unconfirmed_end_date) - task.left;\r\n        }\r\n        if (task.unconfirmed_end_date < task.end_date) {\r\n          const date = task.unconfirmed_end_date;\r\n          task.unconfirmedLeft = this.getX(date);\r\n          task.unconfirmedSmallerWidth = this.getX(task.end_date) - task.unconfirmedLeft;\r\n        }\r\n\r\n        this.hasDeliveryDateChanges = true;\r\n        if (!task.parent_task && !task.next_task && task.list_product.level === 0) {\r\n          this.hasRootDeliveryDateChanges = true;\r\n        } else {\r\n          this.hasChildDeliveryDateChanges = true;\r\n        }\r\n      }\r\n      this.getTaskDays(task);\r\n      return task;\r\n    });\r\n  }\r\n\r\n  public updateParentMargins(production: ListProductProduction, isSaved = true) {\r\n    let parent = production;\r\n    while (parent) {\r\n      const childrenEnd = parent.getChildrenEnd();\r\n      parent.tasks.reduce((end, task) => {\r\n        if (task.start_date.getTime() < end.getTime()) {\r\n          task.duration = (task.end_date.getTime() - task.start_date.getTime()) / 1000 / 60 / 60;\r\n          const startDate = end;\r\n          task.start_date = startDate;\r\n          task.end_date = new Date(task.start_date.getTime() + task.duration * 60 * 60_000);\r\n          task.apply();\r\n          this.updateTimeline();\r\n          task.left = this.getX(task.start_date);\r\n          task.width = this.getX(task.end_date) - task.left;\r\n          if (isSaved) this.updateTaskDates(task);\r\n          this.getTaskDays(task);\r\n        }\r\n        return task.end_date;\r\n      }, childrenEnd);\r\n      parent = parent.parent;\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n    this.expandCollapseAll();\r\n  }\r\n\r\n  expandCollapseAll(considerActive: boolean = true) {\r\n    let prods = [];\r\n    if (considerActive) {\r\n      prods = this.isPlan ? this.productions.filter(p => p.isActive && p.isVisible && !p.isBlocked) : this.productions.filter(p => p.isActive && !p.isBlocked);\r\n    }\r\n    console.log('prods', prods);\r\n    if (this.isPlan) {\r\n      const toggleProductions = (productions: ListProductProduction[]) => productions.forEach(production => {\r\n        this.toggleProduction(production, this.isExpanded)\r\n          .subscribe(() => {\r\n            toggleProductions(production.children);\r\n          });\r\n      });\r\n      toggleProductions(prods.length > 0 ? prods : this.productions.filter(p => p.isVisible && !p.isBlocked));\r\n    } else {\r\n      const toggleProductions = (productions: ListProductProduction[]) => productions.filter(p => !p.isBlocked).forEach(production => {\r\n        this.toggleProduction(production, this.isExpanded)\r\n          .subscribe(() => toggleProductions(production.children));\r\n      });\r\n      toggleProductions(prods.length > 0 ? prods : this.productions);\r\n    }\r\n  }\r\n\r\n  toggleProduction(production: ListProductProduction, isExpanded?: boolean): Observable<boolean> {\r\n    return new Observable((subscriber) => {\r\n      production.isExpanded = isExpanded !== undefined ? isExpanded : !production.isExpanded;\r\n\r\n      if (production.isExpanded && production.hasChildren && !production.children.length) {\r\n        this.getTasks(production.tasks[0].tasks[0].id).subscribe(() => {\r\n          if (this.isRootFiltered) this.updateTimeline();\r\n          production.updateGroups();\r\n          subscriber.next(isExpanded);\r\n          subscriber.complete();\r\n        }, error => subscriber.error(error));\r\n      } else {\r\n        subscriber.next(production.isExpanded);\r\n        subscriber.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  expandCollapseSelected(productions: ListProductProduction[], isExpanded?: boolean) {\r\n    if (this.isPlan) {\r\n      const toggleProductions = (productions: ListProductProduction[]) => productions.forEach(production => {\r\n        this.toggleProduction(production, isExpanded)\r\n          .subscribe(() => {\r\n            toggleProductions(production.children);\r\n          });\r\n      });\r\n      toggleProductions(productions.filter(p => p.isVisible && !p.isBlocked));\r\n    } else {\r\n      const toggleProductions = (productions: ListProductProduction[]) => productions.filter(p => !p.isBlocked).forEach(production => {\r\n        this.toggleProduction(production, isExpanded)\r\n          .subscribe(() => {\r\n            toggleProductions(production.children);\r\n          });\r\n      });\r\n      toggleProductions(productions);\r\n    }\r\n  }\r\n\r\n  toggleProduction2(production: ListProductProduction, isExpanded?: boolean): Observable<boolean> {\r\n    production.isExpanded = isExpanded !== undefined ? isExpanded : !production.isExpanded;\r\n\r\n    if (production.isExpanded && production.hasChildren && !production.children.length) {\r\n      return this.getTasks(production.product.tree_id).pipe(\r\n        tap(() => production.updateGroups()),\r\n        mapTo(production.isExpanded),\r\n      );\r\n    }\r\n\r\n    return of(production.isExpanded);\r\n  }\r\n\r\n  toggleAllProductsSelected() {\r\n    if (!this.allProductsOnSelected) {\r\n      this.productions.map(p => p.isSelected = false);\r\n    } else {\r\n      this.productions.map(p => p.isSelected = true);\r\n    }\r\n  }\r\n\r\n  changeAllProductsOnSelected() {\r\n    // Если не выбрана хотя бы одна загруженность, значение all становится false\r\n    this.allProductsOnSelected = this.productions.every(p => p.isSelected);\r\n  }\r\n\r\n  cancelEditTasks() {\r\n    this.mode = 'planning';\r\n    this.selectedTasks.clear();\r\n    this.productions.map(t => t.isVisible = true);\r\n    this.selectedTechnologies = [];\r\n    this.selectedTechnologiesPlanning = [];\r\n  }\r\n\r\n  cancelMakeOrder() {\r\n    this.mode = 'planning';\r\n    this.productions.map(t => t.isVisible = true);\r\n    this.selectedTechnologies = [];\r\n    this.filterTasksForStatus();\r\n  }\r\n\r\n  type(type: ENomenclatureType): string {\r\n    switch (type) {\r\n      case ENomenclatureType.PURCHASED:\r\n        return 'Purchased';\r\n      case ENomenclatureType.ASSEMBLY:\r\n        return 'Assembly';\r\n      case ENomenclatureType.MANUFACTURED:\r\n        return 'Manufactured';\r\n    }\r\n  }\r\n\r\n  addTasks(production) {\r\n    this.tasksService.addTasks(production.tasks[0].tasks, this.rootId).pipe(\r\n      map(tasks => tasks.filter(task => !this.tasks.find(t => task.id === t.id))))\r\n      .subscribe(tasks => {\r\n        console.log(tasks);\r\n        tasks.forEach(task => {\r\n          task.production_type = task.list_product.nomenclature.type === '0' ? '2' : task.production_type;\r\n          task.start_date = new Date(task.start_date);\r\n          task.end_date = new Date(task.end_date);\r\n          task.list_product.task_required_quantity = task.required_quantity;\r\n        });\r\n\r\n        this.tasks.push(...tasks);\r\n        this.updateTimeline();\r\n        this.updateTree();\r\n        this.updateParentMargins(production);\r\n        this.updateMargins(production);\r\n        this.updateTree();\r\n        this.update();\r\n        this.paint();\r\n        this.updateTechnologies();\r\n      });\r\n  }\r\n\r\n  private highlightChildrenEnd() {\r\n    this.childrenEndHighlighted = true;\r\n    setTimeout(() => this.childrenEndHighlighted = false, 2_500);\r\n  }\r\n\r\n  private applyPositionTask(task: UITask, production: ListProductProduction, position: { start: Date, end: Date }) {\r\n    // validate new position\r\n    const prevTasks = production.tasks.filter(t => t.start_date.getTime() < task.start_date.getTime());\r\n\r\n    // запретить двигать левее предыдущих задач\r\n    if (prevTasks.length) {\r\n      prevTasks.forEach(prevTask => {\r\n        if (prevTask.end_date.getTime() > position.start.getTime()) {\r\n          position.start.setTime(prevTask.end_date.getTime());\r\n          // если переместили, а не изменили размер\r\n          if (position.end.getTime() < task.end_date.getTime()) {\r\n            position.end.setTime(position.start.getTime() + task.duration * 60 * 60_000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const childrenEnd = production.getChildrenEnd();\r\n      if (childrenEnd.getTime() > position.start.getTime()) {\r\n        this.highlightChildrenEnd();\r\n        position.start.setTime(childrenEnd.getTime());\r\n        // если переместили, а не изменили размер\r\n        if (position.end.getTime() < task.end_date.getTime()) {\r\n          position.end.setTime(position.start.getTime() + task.duration * 60 * 60_000);\r\n        }\r\n      }\r\n    }\r\n    const nextTasks = production.tasks.filter(t => t.start_date.getTime() > task.start_date.getTime());\r\n\r\n    // подвинуть следующие задачи\r\n    nextTasks.reduce((prevEnd, nextTask) => {\r\n      if (nextTask.start_date.getTime() < prevEnd.getTime()) {\r\n        nextTask.duration = (nextTask.end_date.getTime() - nextTask.start_date.getTime()) / 60 / 1000;\r\n        nextTask.start_date.setTime(prevEnd.getTime());\r\n        nextTask.end_date.setTime(nextTask.start_date.getTime() + nextTask.duration * 60_000);\r\n        this.updateTaskDates(nextTask);\r\n      }\r\n      return nextTask.end_date;\r\n    }, position.end);\r\n\r\n    // apply new position\r\n    task.start_date = position.start;\r\n    task.end_date = position.end;\r\n    task.duration = task.duration = this.getDuration(task);\r\n\r\n    task.apply();\r\n\r\n    this.updateTimeline();\r\n    this.updateMargins(production);\r\n    this.updateParentMargins(production.parent);\r\n    this.updateTaskDates(task);\r\n  }\r\n\r\n  public updateTree() {\r\n    this.productionMap = new Map<ID | ProductionKey, ListProductProduction>();\r\n    this.uiTaskMap = new Map<UITaskKey, UITask>();\r\n    this.productions = [];\r\n    this.rootProductions = [];\r\n\r\n    this.generateTasksGroups();\r\n\r\n    const taskMap = new Map<string, Task>();\r\n\r\n    // Заполняем соответствия структуры продуктов\r\n    this.tasks.forEach(task => {\r\n      const productKey = `${task.family_id}:${task.list_product.id}`;\r\n      taskMap.set(productKey, task);\r\n    });\r\n\r\n    const getProductionKey = (task: Task) => {\r\n      let key = ``;\r\n      do {\r\n        key = `${task.family_id}:${task.list_product.nomenclature.id}:${task.groupId}:${task.list_product.level}/${key}`;\r\n        task = taskMap.get(`${task.family_id}:${task.list_product.parent}`);\r\n      } while (task);\r\n      return key;\r\n    };\r\n\r\n    this.tasks.filter(t => t.is_added_manually).forEach((t, i) => t.technologyUid = i + 1);\r\n\r\n    // Заполняем соответствия продакшнов с учётом группировок\r\n    this.tasks.forEach(task => {\r\n      const productId = task.list_product.id;\r\n      const productionKey = getProductionKey(task);\r\n      if (!this.productionMap.has(productionKey)) {\r\n        const newProduction = new ListProductProduction({\r\n          // @ts-ignore\r\n          task,\r\n          product: task.list_product,\r\n          isExpanded: !this.isPlan,\r\n          isGrouped: task.is_grouped,\r\n        });\r\n        this.productions.push(newProduction);\r\n        this.productionMap.set(productionKey, newProduction);\r\n      }\r\n\r\n      const production = this.productionMap.get(productionKey);\r\n      this.productionMap.set(`${productId}:${task.family_id}`, production);\r\n\r\n      if (!production.products.find(p => p.id === task.list_product.id)) {\r\n        production.products.push(task.list_product);\r\n      }\r\n\r\n      if (production.products.length > 1) {\r\n        production.isGrouped = true;\r\n      }\r\n      const tech = task.technology ? task.technology : this.type(task.list_product.nomenclature.type);\r\n\r\n      const taskKey = `${productionKey}:${tech}`;\r\n      if (!this.uiTaskMap.has(taskKey)) {\r\n        const newUiTask = new UITask(task);\r\n        this.uiTaskMap.set(taskKey, newUiTask);\r\n        production.tasks.push(newUiTask);\r\n      }\r\n\r\n      const uiTask = this.uiTaskMap.get(taskKey);\r\n      if (!uiTask.tasks.find(t => t.id === task.id)) {\r\n        uiTask.tasks.push(task);\r\n      }\r\n    });\r\n\r\n    // Построение дерева\r\n    let index = 0;\r\n    this.productionMap.forEach((production) => {\r\n      production.index = index++;\r\n      production.parent = this.productionMap.get(`${production.product.parent}:${production.tasks[0].family_id}`);\r\n\r\n      production.isExpanded = production.task.list_product.level === 0 ? !this.isPlan : !production.isBlocked;\r\n\r\n      if (production.parent) {\r\n        if (!production.parent.children.includes(production)) {\r\n          production.parent.children.push(production);\r\n        }\r\n      } else {\r\n        if (!this.rootProductions.includes(production)) {\r\n          this.rootProductions.push(production);\r\n        }\r\n      }\r\n    });\r\n\r\n    const rewireProductions = (production: ListProductProduction) => {\r\n      production.isRootProductionCompleted = true;\r\n      production.isExpanded = true;\r\n\r\n      if (production.children.length) {\r\n        production.children.forEach(p => rewireProductions(p));\r\n      }\r\n    };\r\n\r\n    this.rootProductions.forEach(production => {\r\n      if (production.task.status === 'On stock') {\r\n        rewireProductions(production);\r\n      }\r\n    });\r\n\r\n    this.sortProductions(this.rootProductions);\r\n  }\r\n\r\n  sortProductions(productions: ListProductProduction[]) {\r\n    productions.sort((a, b) =>\r\n      // new Date(b.tasks[0].created).getTime() - new Date(a.tasks[0].created).getTime() ||\r\n      this.nomenclaturesTypes[a.task.list_product.nomenclature.type] - this.nomenclaturesTypes[b.task.list_product.nomenclature.type] ||\r\n      a.task.list_product.nomenclature.id - b.task.list_product.nomenclature.id\r\n    );\r\n\r\n    productions.forEach(production => {\r\n      if (production.children.length > 0) {\r\n        this.sortProductions(production.children);\r\n      }\r\n    });\r\n  }\r\n\r\n  update() {\r\n    // this.rootProductions = this.rootProductions.sort((a, b) =>\r\n    //   new Date(b.tasks[0].created).getTime() - new Date(a.tasks[0].created).getTime() ||\r\n    //   this.nomenclaturesTypes[a.task.list_product.nomenclature.type] - this.nomenclaturesTypes[b.task.list_product.nomenclature.type] ||\r\n    //   a.task.list_product.nomenclature.id - b.task.list_product.nomenclature.id\r\n    // );\r\n\r\n    this.sortProductions(this.rootProductions);\r\n\r\n    this.productionMap.forEach((production) => {\r\n      this.updateMargins(production);\r\n      production.updateGroups();\r\n    });\r\n  }\r\n\r\n  private paint() {\r\n    // рекурсивный проход по дереву\r\n    const paintingProduction = (production: ListProductProduction, colorIndex = 0) => {\r\n      if (production.product.nomenclature.type === '1') {\r\n        production.color = this.colors[colorIndex++ % this.colors.length];\r\n      }\r\n      return production.children.reduce((index, child) => paintingProduction(child, index), colorIndex);\r\n    };\r\n\r\n    this.rootProductions.reduce((index, rootProduction) => paintingProduction(rootProduction, index), 0);\r\n  }\r\n\r\n  private getSelectedTechnologies() {\r\n    return this.productions\r\n      // берём отфильтрованные линии производства\r\n      .filter(p => p.isFiltered)\r\n      // берём только отмеченные галочками\r\n      .filter(p => p.isSelected)\r\n      // берём из них задачи\r\n      .map(p => p.tasks)\r\n      // делаем плоский список задач без вложенностей\r\n      .reduce((acc, val) => acc.concat(val), [])\r\n      // фильтруем задачи отдельно т.к. в одной линии может быть несколько задач\r\n      .filter(task => this.isTaskMeetsFilterConditions(task))\r\n      ;\r\n  }\r\n\r\n  private getSelectedProduction() {\r\n    return this.productions\r\n      // берём отфильтрованные линии производства\r\n      .filter(p => p.isFiltered)\r\n      // берём только отмеченные галочками\r\n      .filter(p => p.isSelected);\r\n  }\r\n\r\n  private isTaskMeetsFilterConditions(task: Task) {\r\n    return this.selectedTechnologies.includes(task.technology)\r\n      && !task.is_locked && task.status !== 'Not processed' && task.status !== 'Ordered' && task.status !== 'On stock';\r\n  }\r\n\r\n  private test(task: Task) {\r\n    if (this.filteredTasksSet.has(task.id)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  togglePlanScale(operation?: 'plus' | 'minus') {\r\n    if (operation === 'minus') {\r\n      this.planScale -= 25;\r\n    }\r\n\r\n    if (operation === 'plus') {\r\n      this.planScale += 25;\r\n    }\r\n\r\n    if (this.planScale < 25) {\r\n      this.planScale = 25;\r\n    }\r\n\r\n    if (this.planScale > 100) {\r\n      this.planScale = 100;\r\n    }\r\n\r\n    switch (this.planScale) {\r\n      case 100: {\r\n        this.vacationCoords = 24;\r\n        this.weekdayCoords = 288;\r\n        this.marginTimeLeft = 34;\r\n        this.scaleHourVacationDay = 1;\r\n        this.scaleHourWeekdayDay = 12;\r\n        this.weekWeekDayCoords = 41.125;\r\n        this.weekScaleHourDay = 1.717;\r\n        break;\r\n      }\r\n      case 75: {\r\n        this.vacationCoords = 18;\r\n        this.weekdayCoords = 216;\r\n        this.marginTimeLeft = 25;\r\n        this.scaleHourVacationDay = 1;\r\n        this.scaleHourWeekdayDay = 9;\r\n        this.weekWeekDayCoords = 30.84375;\r\n        this.weekScaleHourDay = 1.2825;\r\n        break;\r\n      }\r\n      case 50: {\r\n        this.vacationCoords = 12;\r\n        this.weekdayCoords = 144;\r\n        this.marginTimeLeft = 16;\r\n        this.scaleHourVacationDay = 1;\r\n        this.scaleHourWeekdayDay = 6;\r\n        this.weekWeekDayCoords = 21.0625;\r\n        this.weekScaleHourDay = 0.855;\r\n        break;\r\n      }\r\n      case 25: {\r\n        this.vacationCoords = 6;\r\n        this.weekdayCoords = 72;\r\n        this.marginTimeLeft = 7.125;\r\n        this.scaleHourVacationDay = 0.5;\r\n        this.scaleHourWeekdayDay = 3;\r\n        this.weekWeekDayCoords = 10.28125;\r\n        this.weekScaleHourDay = 0.4275;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.updateProductions();\r\n  }\r\n\r\n  confirmDateChanges(setRootUnconfirmed: boolean = false) {\r\n\r\n    this.modalService.confirm('success').pipe(take(1)).subscribe(confirm => {\r\n      if (confirm) {\r\n        this.tasksService.confirmEndDates(+this.rootId, {is_unconfirmed_root_date: setRootUnconfirmed}).subscribe(res => {\r\n          window.location.reload();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  sendPlanToConfirmation() {\r\n    const rootTask = this.getLastTask;\r\n    const familyId = rootTask.family_id;\r\n    this.tasksService.sendToPlanningConfirmation({family_id: familyId}).subscribe(() => {\r\n      rootTask.planning_status = PlanningStatus.WAITING_CONFIRMATION;\r\n    });\r\n  }\r\n\r\n  sendPlanToCorrections() {\r\n    const rootTask = this.getLastTask;\r\n    const familyId = rootTask.family_id;\r\n    this.tasksService.sendToPlanningCorrections({family_id: familyId, change_request: true}).subscribe(() => {\r\n      rootTask.change_request = true;\r\n    });\r\n  }\r\n\r\n  toggleShowConfirmation() {\r\n    this.isShowConfirmationMenu = !this.isShowConfirmationMenu;\r\n  }\r\n\r\n  getDays(days: DateInfo[]) {\r\n    return days.filter((d, i) => i !== 0);\r\n  }\r\n\r\n  get dayWidth() {\r\n    return (this.weekdayCoords - 10) / 7;\r\n  }\r\n\r\n  onSelectDisplay() {\r\n    switch (this.selectedDisplay) {\r\n      case 'weeks':\r\n        this.testWeek();\r\n        break;\r\n      case 'days':\r\n        this.togglePlanScale();\r\n    }\r\n  }\r\n\r\n  public toggleSelectedListProducts(id: number) {\r\n    if (this.selectedListProductsGroupUIds.has(id)) {\r\n      this.selectedListProductsGroupUIds.delete(id);\r\n    } else {\r\n      this.selectedListProductsGroupUIds.add(id);\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this.expandCollapseHeaderService.setIsCollapseSingleDisabled(this.selectedListProductsGroupUIds.size === 0);\r\n    });\r\n  }\r\n\r\n  clearSelectedListProductsGroupUIds() {\r\n    this.selectedListProductsGroupUIds.clear();\r\n    requestAnimationFrame(() => {\r\n      this.expandCollapseHeaderService.setIsCollapseSingleDisabled(this.selectedListProductsGroupUIds.size === 0);\r\n    });\r\n  }\r\n}\r\n","<div class=\"content\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div\r\n        class=\"chart-wrapper\"\r\n        [class.pl-15]=\"mode === 'make-order'\"\r\n      >\r\n        <div class=\"all-selected\" *ngIf=\"selectedTechnologies?.length && mode === 'make-order'\">\r\n          <label for=\"all-selected\">All</label>\r\n          <input\r\n            id=\"all-selected\"\r\n            type=\"checkbox\"\r\n            [(ngModel)]=\"allProductsOnSelected\"\r\n            (change)=\"toggleAllProductsSelected()\"\r\n          >\r\n        </div>\r\n        <!--        <div-->\r\n        <!--          class=\"mb-2 info-container\"-->\r\n        <!--          *ngIf=\"!isPlan\"-->\r\n        <!--        >-->\r\n        <!--          <div *ngIf=\"hasDeliveryDateChanges && !isPlan\">-->\r\n        <!--            {{hasRootDeliveryDateChanges && !hasChildDeliveryDateChanges ? 'Root' : ''}} Dates Of Delivery Changed-->\r\n\r\n        <!--            <button-->\r\n        <!--              *ngIf=\"hasChildDeliveryDateChanges\"-->\r\n        <!--              class=\"btn btn-danger ml-2 mr-5\"-->\r\n        <!--              (click)=\"confirmDateChanges(true)\"-->\r\n        <!--            >-->\r\n        <!--              Confirm-->\r\n        <!--            </button>-->\r\n        <!--            <button-->\r\n        <!--              *ngIf=\"hasRootDeliveryDateChanges && !hasChildDeliveryDateChanges\"-->\r\n        <!--              class=\"btn btn-danger ml-2 mr-5\"-->\r\n        <!--              (click)=\"confirmDateChanges(false)\"-->\r\n        <!--            >-->\r\n        <!--              Confirm-->\r\n        <!--            </button>-->\r\n        <!--          </div>-->\r\n        <!--          <div *ngIf=\"getLastTask?.planning_status && !isPlan\">-->\r\n\r\n        <!--            <ng-container [ngSwitch]=\"getLastTask?.planning_status\">-->\r\n        <!--              <span *ngSwitchCase=\"PlanningStatus.ON_STOCK\" class=\"text-success\">On Stock</span>-->\r\n        <!--              <span *ngSwitchCase=\"PlanningStatus.PLANNED\">-->\r\n        <!--              <span class=\"text-success\">Confirmed</span>-->\r\n        <!--              <button-->\r\n        <!--                *ngIf=\"!getLastTask?.change_request\"-->\r\n        <!--                class=\"btn btn-primary ml-3\"-->\r\n        <!--                (click)=\"sendPlanToCorrections()\"-->\r\n        <!--              >-->\r\n        <!--                request for planing corrections-->\r\n        <!--              </button>-->\r\n        <!--                {{getLastTask?.change_request ? '(Requested For Planing Corrections)' : ''}}-->\r\n        <!--            </span>-->\r\n        <!--              <span *ngSwitchCase=\"PlanningStatus.WAITING_CONFIRMATION\">Waiting Confirmation</span>-->\r\n        <!--              <button-->\r\n        <!--                *ngSwitchCase=\"PlanningStatus.REQUIRES_PLANNING\"-->\r\n        <!--                class=\"btn btn-primary mr-2\"-->\r\n        <!--                (click)=\"sendPlanToConfirmation()\"-->\r\n        <!--              >-->\r\n        <!--                Sent To Confirmation-->\r\n        <!--              </button>-->\r\n        <!--            </ng-container>-->\r\n\r\n        <!--          </div>-->\r\n        <!--        </div>-->\r\n        <div class=\"tasks-container\" [class.tasks-container_small]=\"isPlan\" [class.disabled-chart]=\"isLoading\">\r\n          <div class=\"items-container\">\r\n            <div class=\"d-flex\" [style.minWidth.px]=\"innerContentWidth\">\r\n              <div class=\"left-panel-wrapper\" [class.pl-33]=\"mode === 'make-order'\">\r\n                <div\r\n                  class=\"d-flex task-header-name\"\r\n                  mwlResizable\r\n                  [enableGhostResize]=\"false\"\r\n                  [resizeSnapGrid]=\"{left: 12}\"\r\n                  (resizeEnd)=\"resizePanel($event)\"\r\n                  (resizing)=\"moveBorder($event)\"\r\n                >\r\n                  <div class=\"d-flex header-items\">\r\n                    <div style=\"width: 30px;\" class=\"d-flex align-items-center justify-content-center pl-0 task-toggle\">\r\n                      <i class=\"pi\"\r\n                         [class.pi-minus]=\"isExpanded\"\r\n                         [class.pi-plus]=\"!isExpanded\"\r\n                         (click)=\"toggle()\"\r\n                      ></i>\r\n                    </div>\r\n                    <div style=\"width: 190px;\" class=\"d-flex align-items-center\">Code</div>\r\n                    <div [style.width.px]=\"productionNameWidth\" class=\"d-flex align-items-center\">Name</div>\r\n                    <div style=\"width: 80px;\" class=\"d-flex align-items-center justify-content-center pl-0\">Quantity\r\n                    </div>\r\n                    <div style=\"width: 50px;\" class=\"d-flex align-items-center justify-content-center pl-0\">UOM</div>\r\n                    <div *ngIf=\"isShowBorder\" class=\"bord\" #panelBorder></div>\r\n\r\n\r\n                    <div class=\"info-container\" *ngIf=\"!isPlan && isShowConfirmationMenu\">\r\n                      <div *ngIf=\"hasDeliveryDateChanges && !isPlan\" class=\"d-flex align-items-center\">\r\n                        {{hasRootDeliveryDateChanges && !hasChildDeliveryDateChanges ? 'Root' : ''}} Dates Of Delivery\r\n                        Changed\r\n                        <button\r\n                          pButton\r\n                          *ngIf=\"hasChildDeliveryDateChanges\"\r\n                          class=\"p-button-success ml-3 mr-3\"\r\n                          (click)=\"confirmDateChanges(true)\"\r\n                        >\r\n                          Confirm\r\n                        </button>\r\n                        <button\r\n                          pButton\r\n                          *ngIf=\"hasRootDeliveryDateChanges && !hasChildDeliveryDateChanges\"\r\n                          class=\"p-button-success ml-3 mr-3\"\r\n                          (click)=\"confirmDateChanges(false)\">\r\n                          Confirm\r\n                        </button>\r\n                      </div>\r\n                      <div *ngIf=\"getLastTask?.planning_status && !isPlan\">\r\n                        <ng-container [ngSwitch]=\"getLastTask?.planning_status\">\r\n                          <div *ngSwitchCase=\"PlanningStatus.ON_STOCK\" class=\"text-success\">On Stock</div>\r\n                          <div *ngSwitchCase=\"PlanningStatus.PLANNED\">\r\n                            <span class=\"text-success\">Confirmed</span>\r\n                            <button\r\n                              pButton\r\n                              *ngIf=\"!getLastTask?.change_request\"\r\n                              class=\"ml-3\"\r\n                              (click)=\"sendPlanToCorrections()\"\r\n                            >\r\n                              Request for planing corrections\r\n                            </button>\r\n                            {{getLastTask?.change_request ? '(Requested For Planing Corrections)' : ''}}\r\n                          </div>\r\n                          <span *ngSwitchCase=\"PlanningStatus.WAITING_CONFIRMATION\">Waiting Confirmation</span>\r\n                          <button\r\n                            pButton\r\n                            class=\"mr-3\"\r\n                            *ngSwitchCase=\"PlanningStatus.REQUIRES_PLANNING\"\r\n                            (click)=\"sendPlanToConfirmation()\"\r\n                          >\r\n                            Sent To Confirmation\r\n                          </button>\r\n                        </ng-container>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div class=\"resize-handle-right\" mwlResizeHandle [resizeEdges]=\"{ left: true }\"></div>\r\n                    <div class=\"drag-handle\" cdkDragHandle></div>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  class=\"production-panel-left\"\r\n                  mwlResizable\r\n                  [enableGhostResize]=\"false\"\r\n                  [resizeSnapGrid]=\"{left: 12}\"\r\n                  (resizeEnd)=\"resizePanel($event)\"\r\n                  (resizing)=\"moveBorder($event)\"\r\n                >\r\n                  <pek-manufacturing-list-product-production\r\n                    *ngFor=\"let rootProduction of rootProductions\"\r\n                    [production]=\"rootProduction\"\r\n                    [productionNameWidth]=\"productionNameWidth\"\r\n                    [isRoot]=\"true\"\r\n                    [isLeftPanel]=\"true\"\r\n                  >\r\n                  </pek-manufacturing-list-product-production>\r\n                  <div class=\"resize-handle-right\" mwlResizeHandle [resizeEdges]=\"{ left: true }\"></div>\r\n                  <div class=\"drag-handle\" cdkDragHandle></div>\r\n                </div>\r\n              </div>\r\n              <div class=\"right-panel-wrapper\">\r\n                <div class=\"d-flex days-header\">\r\n                  <div class=\"d-flex\" *ngIf=\"selectedDisplay === 'days'\">\r\n                    <div class=\"day-header\" [class.ml-3]=\"idx === 0\" [class.day-header_week]=\"dateInfo.value.isVac\"\r\n                         [style.width]=\"(dateInfo.value.isVac ? vacationCoords : weekdayCoords) + 'px'\"\r\n                         *ngFor=\"let dateInfo of (dates | keyvalue); let idx = index\">\r\n                      <div class=\"day-name\" [class.day-name_small]=\"planScale === 25\">\r\n                        <span *ngIf=\"!dateInfo.value.isVac\">{{dateInfo.value?.date | date}}</span>\r\n                        <span class=\"text-center\" *ngIf=\"dateInfo.value.isVac\"\r\n                              style=\"color: '#f1716d'; display: block\">{{dateInfo.value.date | date:'d'}}</span>\r\n                      </div>\r\n                      <div class=\"d-flex hour-container\">\r\n                        <div\r\n                          *ngFor=\"let time of hours\"\r\n                          class=\"hour-line\"\r\n                          [style.marginLeft]=\"marginTimeLeft + 'px'\"\r\n                          [ngClass]=\"{'middle': time == 3}\"\r\n                          tooltipPosition=\"bottom\"\r\n                          pTooltip=\"{{(time + 1) * 3 + ':' + '00'}}\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"d-flex\" *ngIf=\"selectedDisplay === 'weeks'\" [class.week-header]=\"planScale === 50\">\r\n                    <div\r\n                      class=\"day-header\"\r\n                      [class.ml-3]=\"idx === 0\"\r\n                      [style.width]=\"weekdayCoords + 'px'\"\r\n                      *ngFor=\"let dateInfo of (weekDates | keyvalue); let idx = index\"\r\n                    >\r\n                      <div\r\n                        class=\"day-name\"\r\n                        [class.day-name_small]=\"planScale === 25\"\r\n                      >\r\n                        <span *ngIf=\"planScale !== 25\">{{dateInfo.value?.start | date}} - {{dateInfo.value?.end | date}}</span>\r\n                        <span *ngIf=\"planScale === 25\">{{dateInfo.value?.start | date}}</span>\r\n                        <!--                        <span-->\r\n                        <!--                          class=\"text-center\"-->\r\n                        <!--                          *ngIf=\"dateInfo.value.isVac\"-->\r\n                        <!--                          style=\"color: '#f1716d'; display: block\"-->\r\n                        <!--                        >-->\r\n                        <!--                          {{dateInfo.value.date | date:'d'}}-->\r\n                        <!--                        </span>-->\r\n                      </div>\r\n                      <div class=\"d-flex hour-container\">\r\n                        <div\r\n                          *ngFor=\"let day of getDays(dateInfo.value?.days); let dayIdx = index\"\r\n                          class=\"hour-line\"\r\n                          [class.hour-line-week]=\"dayIdx === 4 || dayIdx === 5\"\r\n                          [style.marginLeft]=\"dayWidth + 'px'\"\r\n                          tooltipPosition=\"bottom\"\r\n                          pTooltip=\"{{day.date | date: 'MMMM d'}}\">\r\n                          <div\r\n                            class=\"vac-bord vac-bord_left\"\r\n                            *ngIf=\"dayIdx === 4\"\r\n                          ></div>\r\n                          <div\r\n                            class=\"vac-bord vac-bord_right\"\r\n                            *ngIf=\"dayIdx === 4 || dayIdx === 5\"\r\n                            [style.right]=\"'-' + (dayWidth - 2) + 'px'\"\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"production-panel-right\" *ngIf=\"!isLoading; else loading\">\r\n                  <pek-manufacturing-list-product-production\r\n                    *ngFor=\"let rootProduction of rootProductions\"\r\n                    [production]=\"rootProduction\"\r\n                  ></pek-manufacturing-list-product-production>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"filter pl-5 pr-5\" [class.disabled-panel]=\"isLoading\">\r\n      <div [ngSwitch]=\"mode\" class=\"plan-d\">\r\n\r\n        <div *ngSwitchCase=\"'edit-tasks'\" class=\"form-group edit-tasks d-flex align-items-center buttons\">\r\n          <!--          <button type=\"button\" class=\"btn btn-default mr-2\" (click)=\"cancelEditTasks()\">-->\r\n          <!--            <i class=\"fas fa-times\"></i>-->\r\n          <!--          </button>-->\r\n\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            class=\"plan-close-btn mr-2\"\r\n            (click)=\"cancelEditTasks()\"\r\n            icon=\"pi pi-times\"\r\n          >\r\n          </button>\r\n\r\n          <div class=\"unlocked-technologies mr-3\">\r\n            <p-multiSelect\r\n              (onChange)=\"selectTasks()\"\r\n              [options]=\"technologiesPlanning\"\r\n              [(ngModel)]=\"selectedTechnologiesPlanning\"\r\n              optionValue=\"name\"\r\n              optionLabel=\"name\"\r\n              placeholder=\"Unlocked Technologies\"\r\n            ></p-multiSelect>\r\n          </div>\r\n\r\n          <p class=\"mr-3\">Selected {{selectedTasks.size}} tasks</p>\r\n\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            label=\"Edit Tasks\"\r\n            icon=\"pi pi-pencil\"\r\n            [disabled]=\"!selectedTasks.size\"\r\n            (click)=\"editTasks()\"\r\n          ></button>\r\n\r\n          <!--          <mat-form-field class=\"mr-3 technologies-filter\" appearance=\"fill\">-->\r\n          <!--            <mat-label>Unlocked technologies</mat-label>-->\r\n          <!--            <mat-select multiple [(value)]=\"selectedTechnologiesPlanning\" (valueChange)=\"selectTasks()\">-->\r\n          <!--              <mat-option *ngFor=\"let tech of technologiesPlanning\" [value]=\"tech.name\"-->\r\n          <!--                          [disabled]=\"!availableTechnologiesPlanning.has(tech.name)\">{{tech.name}}</mat-option>-->\r\n          <!--            </mat-select>-->\r\n          <!--          </mat-form-field>-->\r\n\r\n          <!--          <span>Selected {{selectedTasks.size}} tasks</span>-->\r\n\r\n          <!--          <button type=\"button\"-->\r\n          <!--                  class=\"btn btn-primary btn-edit\"-->\r\n          <!--                  [disabled]=\"!selectedTasks.size\"-->\r\n          <!--                  (click)=\"editTasks()\"-->\r\n          <!--          >-->\r\n          <!--            Edit-->\r\n          <!--          </button>-->\r\n        </div>\r\n\r\n        <div *ngSwitchCase=\"'make-order'\" class=\"form-group d-flex align-items-start planning\">\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            class=\"plan-close-btn mr-2\"\r\n            (click)=\"cancelMakeOrder()\"\r\n            icon=\"pi pi-times\"\r\n          >\r\n          </button>\r\n          <!--          <mat-form-field class=\"mr-3\" appearance=\"fill\">-->\r\n          <!--            <mat-label>Unlocked technologies</mat-label>-->\r\n          <!--            <mat-select multiple [(value)]=\"selectedTechnologies\" (valueChange)=\"filterTasks()\">-->\r\n          <!--              <mat-option *ngFor=\"let tech of technologies\" [value]=\"tech.name\"-->\r\n          <!--                          [disabled]=\"!availableTechnologies.has(tech.name)\">{{tech.name}}</mat-option>-->\r\n          <!--            </mat-select>-->\r\n          <!--          </mat-form-field>-->\r\n          <!--          <button-->\r\n          <!--            type=\"button\"-->\r\n          <!--            class=\"btn btn-primary btn-edit\"-->\r\n          <!--            (click)=\"makeOrder()\"-->\r\n          <!--            [disabled]=\"selectedTechnologies.length === 0\">-->\r\n          <!--            Create order-->\r\n          <!--          </button>-->\r\n\r\n          <div class=\"unlocked-technologies mr-2\">\r\n            <p-multiSelect\r\n              (onChange)=\"filterTasks()\"\r\n              [options]=\"technologies\"\r\n              [(ngModel)]=\"selectedTechnologies\"\r\n              optionValue=\"name\"\r\n              optionLabel=\"name\"\r\n              placeholder=\"Unlocked Technologies\"\r\n            ></p-multiSelect>\r\n          </div>\r\n\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            label=\"CREATE ORDER\"\r\n            icon=\"pi pi-plus\"\r\n            [disabled]=\"selectedTechnologies.length === 0\"\r\n            (click)=\"makeOrder()\"\r\n          ></button>\r\n        </div>\r\n\r\n        <div *ngSwitchCase=\"'add-items'\" class=\"form-group d-flex align-items-center add-tasks buttons\">\r\n          <!--          <button type=\"button\" class=\"btn btn-default mr-2\" (click)=\"mode = 'planning'\">-->\r\n          <!--            <i class=\"fas fa-times\"></i>-->\r\n          <!--          </button>-->\r\n\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            class=\"plan-close-btn mr-2\"\r\n            (click)=\"mode = 'planning'\"\r\n            icon=\"pi pi-times\"\r\n          >\r\n          </button>\r\n          <div class=\"d-flex\">\r\n            <div>Click on the button</div>\r\n            <button class=\"ml-2 mr-2 task-btn task-btn_icon position-relative\">\r\n              <i class=\"pi pi-plus\"></i>\r\n            </button>\r\n            <div>to add items to the plan</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngSwitchDefault class=\"form-group d-flex align-items-center buttons\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <p class=\"footer-text mr-2\">Initialize:</p>\r\n            <!--            <button type=\"button\" class=\"btn btn-primary btn-edit\" (click)=\"mode = 'make-order'\">Order creation</button>-->\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              label=\"Order Creation\"\r\n              icon=\"pi pi-database\"\r\n              (click)=\"mode = 'make-order'\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              label=\"Task Planning\"\r\n              icon=\"pi pi-sliders-h\"\r\n              (click)=\"mode = 'edit-tasks'\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              class=\"mr-2\"\r\n              icon=\"pi pi-plus\"\r\n              label=\"Add Items\"\r\n              (click)=\"mode = 'add-items'\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              [icon]=\"'pi ' + (isShowConfirmationMenu ? 'pi-eye-slash' : 'pi-eye')\"\r\n              [label]=\"(isShowConfirmationMenu ? 'Hide' : 'Show') + ' Confirmation'\"\r\n              (click)=\"toggleShowConfirmation()\"\r\n            ></button>\r\n            <!--            <button type=\"button\" class=\"btn btn-primary btn-edit\" (click)=\"mode = 'edit-tasks'\">Task planning</button>-->\r\n            <!--            <button type=\"button\" class=\" btn btn-primary btn-edit\" (click)=\"mode = 'add-items'\">Add Items</button>-->\r\n            <div class=\"ml-4 mr-4 d-flex align-items-center chart-scale-btns\">\r\n              <!--              <button class=\"btn btn-primary mr-2\" (click)=\"togglePlanScale('minus')\" [disabled]=\"planScale === 25\">—-->\r\n              <!--              </button>-->\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-search-minus\"\r\n                (click)=\"togglePlanScale('minus')\"\r\n                [disabled]=\"planScale === 25\"\r\n              ></button>\r\n\r\n              <!--              <button-->\r\n              <!--                pButton-->\r\n              <!--                type=\"button\"-->\r\n              <!--                label=\"test\"-->\r\n              <!--                (click)=\"testWeek()\"-->\r\n              <!--              ></button>-->\r\n\r\n              <div class=\"plan-scale\">{{planScale}}%</div>\r\n              <!--              <button class=\"class ml-2 btn btn-primary\" (click)=\"togglePlanScale('plus')\"-->\r\n              <!--                      [disabled]=\"planScale === 100\">-->\r\n              <!--              </button>-->\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-search-plus\"\r\n                (click)=\"togglePlanScale('plus')\"\r\n                [disabled]=\"planScale === 100\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"prod-picker mr-2\" *ngIf=\"isPlan\">\r\n              <p-multiSelect\r\n                class=\"plan-multi\"\r\n                (onChange)=\"filterTasksForStatus()\"\r\n                [options]=\"chartRootTasks\"\r\n                [(ngModel)]=\"selectedProductions\"\r\n                optionValue=\"family_id\"\r\n                optionLabel=\"label\"\r\n                placeholder=\"Production Lists\"\r\n              ></p-multiSelect>\r\n            </div>\r\n\r\n            <div class=\"statuses-picker mr-2\">\r\n              <p-multiSelect\r\n                [options]=\"statuses\"\r\n                [(ngModel)]=\"selectedStatuses\"\r\n                optionLabel=\"label\"\r\n                optionValue=\"value\"\r\n                placeholder=\"Statuses\"\r\n                (ngModelChange)=\"filterTasksForStatus()\"\r\n                [showClear]=\"true\"\r\n              ></p-multiSelect>\r\n            </div>\r\n\r\n            <div class=\"technologies-picker mr-2\">\r\n              <p-multiSelect\r\n                [options]=\"technologiesPlanning\"\r\n                [(ngModel)]=\"selectedFilterTechnologies\"\r\n                optionLabel=\"name\"\r\n                optionValue=\"name\"\r\n                placeholder=\"Technologies\"\r\n                (ngModelChange)=\"filterTasksForStatus()\"\r\n                [showClear]=\"true\"\r\n              ></p-multiSelect>\r\n            </div>\r\n\r\n            <div class=\"type-picker\">\r\n              <p-multiSelect\r\n                [options]=\"productionsTypes\"\r\n                [(ngModel)]=\"selectedProductionTypes\"\r\n                optionLabel=\"name\"\r\n                optionValue=\"value\"\r\n                placeholder=\"Type\"\r\n                (ngModelChange)=\"filterTasksForStatus()\"\r\n                [showClear]=\"true\"\r\n              ></p-multiSelect>\r\n            </div>\r\n\r\n            <div class=\"display-picker ml-3\">\r\n              <p class=\"mr-2\">Displaying: </p>\r\n\r\n              <p-dropdown\r\n                [options]=\"displayOptions\"\r\n                [(ngModel)]=\"selectedDisplay\"\r\n                (ngModelChange)=\"onSelectDisplay()\"\r\n                optionLabel=\"label\"\r\n                optionValue=\"option\"\r\n                placeholder=\"Displaying\"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <!--                    <div class=\"ml-3 statuses-pick\">-->\r\n          <!--                      <p-dropdown-->\r\n          <!--                        [options]=\"technologies\"-->\r\n          <!--                        placeholder=\"Select Technology\"-->\r\n          <!--                        [(ngModel)]=\"selectTechnologyId\"-->\r\n          <!--                        (ngModelChange)=\"onSelectTechnology()\"-->\r\n          <!--                        optionLabel=\"name\"-->\r\n          <!--                        optionValue=\"id\"-->\r\n          <!--                        [showClear]=\"showClear\"-->\r\n          <!--                      >-->\r\n          <!--                      </p-dropdown>-->\r\n          <!--                      <mat-form-field appearance=\"fill\">-->\r\n          <!--                        <mat-label>Statuses</mat-label>-->\r\n          <!--                        <mat-select multiple [(value)]=\"selectedStatuses\" (valueChange)=\"filterTasksForStatus()\">-->\r\n          <!--                          <mat-option *ngFor=\"let status of statuses\" [value]=\"status.value\">{{status.label}}</mat-option>-->\r\n          <!--                        </mat-select>-->\r\n          <!--                      </mat-form-field>-->\r\n          <!--                    </div>-->\r\n          <!--                    <div class=\"ml-3 statuses-pick\">-->\r\n          <!--                      <mat-form-field appearance=\"fill\">-->\r\n          <!--                        <mat-label>Technologies</mat-label>-->\r\n          <!--                        <mat-select multiple [(value)]=\"selectedFilterTechnologies\" (valueChange)=\"filterTasksForStatus()\">-->\r\n          <!--                          <mat-option *ngFor=\"let tech of technologiesPlanning\" [value]=\"tech.name\">{{tech.name}}</mat-option>-->\r\n          <!--                        </mat-select>-->\r\n          <!--                      </mat-form-field>-->\r\n          <!--                    </div>-->\r\n\r\n          <!--          <div class=\"ml-3 statuses-pick\">-->\r\n          <!--            <mat-form-field appearance=\"fill\">-->\r\n          <!--              <mat-label>Type</mat-label>-->\r\n          <!--              <mat-select multiple [(value)]=\"selectedProductionTypes\" (valueChange)=\"filterTasksForStatus()\">-->\r\n          <!--                          <mat-option [value]=\"'0'\">Outsource</mat-option>-->\r\n          <!--                          <mat-option [value]=\"'1'\">Own production</mat-option>-->\r\n          <!--                          <mat-option [value]=\"'2'\">Purchased</mat-option>-->\r\n          <!--              </mat-select>-->\r\n          <!--            </mat-form-field>-->\r\n          <!--          </div>-->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <div class=\"loading\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 3rem\"></i>\r\n\r\n    <p>Chart loading in progress</p>\r\n  </div>\r\n</ng-template>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Employee} from '@shared/models/employee';\r\nimport {BehaviorSubject, Observable, switchMap} from 'rxjs';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {EmployeeService} from '@shared/services/employee.service';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ModalService} from '@shared/services/modal.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-employees',\r\n  templateUrl: './manufacturing-employees.component.html',\r\n  styleUrls: ['./manufacturing-employees.component.scss']\r\n})\r\nexport class ManufacturingEmployeesComponent implements OnInit {\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Employee',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditEmployee()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveEmployee()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  employees: Employee[] = [];\r\n  selectedEmployee: Employee;\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  isLoading = false;\r\n\r\n\r\n  employees$: Observable<Employee[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.employeeService.get()),\r\n    map(employees => this.convertEmployees(employees)),\r\n    tap(employees => this.employees = employees),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private employeeService: EmployeeService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.employees$.subscribe();\r\n  }\r\n\r\n  convertEmployees(employees: Employee[]): Employee[] {\r\n    return employees.map(employee => {\r\n      return {\r\n        ...employee,\r\n        start_time: employee.start_time.split(':').splice(-3, 2).join(':'),\r\n        max_working_time: employee.max_working_time.split(':').splice(-3, 2).join(':'),\r\n      };\r\n    });\r\n  }\r\n\r\n  convertEmployee(employee: Employee): Employee {\r\n    return {\r\n      ...employee,\r\n      start_time: employee.start_time.split(':').splice(-3, 2).join(':'),\r\n      max_working_time: employee.max_working_time.split(':').splice(-3, 2).join(':'),\r\n    }\r\n  }\r\n\r\n  onAddEmployee() {\r\n    this.employeeService.createEditEmployeeModal('create').pipe(\r\n      filter(employee => !!employee)\r\n    ).subscribe(employee => this.employees.unshift(this.convertEmployee(employee)));\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedEmployee = null;\r\n    this.employees = [];\r\n  }\r\n\r\n  private onEditEmployee() {\r\n    this.employeeService.createEditEmployeeModal('edit', this.selectedEmployee).pipe(\r\n      filter(employee => !!employee)\r\n    ).subscribe(employee => {\r\n      const index = this.employees.findIndex(t => t.id === this.selectedEmployee.id);\r\n      this.employees[index] = this.convertEmployee(employee);\r\n      this.selectedEmployee = this.employees[index];\r\n    });\r\n  }\r\n\r\n  private onRemoveEmployee() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(confirm => {\r\n      this.employeeService.delete(this.selectedEmployee.id).subscribe(() => {\r\n        const index = this.employees.findIndex(e => e.id === this.selectedEmployee.id);\r\n        this.employees.splice(index, 1);\r\n        this.selectedEmployee = null;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Employees</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Employee\" (click)=\"onAddEmployee()\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"employees.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedEmployee\"\r\n        [value]=\"employees\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedEmployee\">Choose the Employee to edit</p>\r\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedEmployee\"></p-menubar>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">First Name </th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Last Name</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Start Time</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Max Working Time</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Position</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-employee let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"employee\">\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i +1 }}</td>\r\n            <td style=\"width: 20%\" class=\"text-center\">{{employee.first_name}}</td>\r\n            <td style=\"width: 20%\" class=\"text-center\">{{employee.last_name}}</td>\r\n            <td style=\"width: 15%\" class=\"text-center\">{{employee.start_time}}</td>\r\n            <td style=\"width: 20%\" class=\"text-center\">{{employee.max_working_time}}</td>\r\n            <td style=\"width: 20%\" class=\"text-center\">{{employee.position?.title}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && employees.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {NavigationLink} from '../../../layout/navigation-route';\r\nimport {ExpandCollapseHeaderService} from '../../../layout/components/header/services/expand-collapse-header.service';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-layout',\r\n  templateUrl: './manufacturing-layout.component.html',\r\n  styleUrls: ['./manufacturing-layout.component.scss']\r\n})\r\nexport class ManufacturingLayoutComponent implements OnInit {\r\n\r\n  routes: NavigationLink[] = [\r\n    {label: 'Plans', commands: ['plans']},\r\n    {label: 'Orders To Own Production', commands: ['orders']},\r\n    {label: 'Slice Tasks', commands: ['slice-tasks']},\r\n  ];\r\n\r\n  settingsRoutes: NavigationLink[] = [\r\n    {label: 'Employees', commands: ['employees']},\r\n    {label: 'Positions', commands: ['positions']},\r\n    {label: 'Machines', commands: ['machines']},\r\n    {label: 'Order Statuses', commands: ['order-statuses']},\r\n  ];\r\n\r\n  constructor(\r\n    public expandCollapseHeaderService: ExpandCollapseHeaderService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  expandCollapse(isExpand: boolean = true) {\r\n    this.expandCollapseHeaderService.setExpandCollapseSingle(isExpand);\r\n  }\r\n\r\n  expandCollapseAll(isExpand: boolean = true) {\r\n    this.expandCollapseHeaderService.setExpandCollapseAll(isExpand);\r\n  }\r\n}\r\n","<pek-header\r\n  [module]=\"'Manufacturing'\"\r\n  [routes]=\"routes\"\r\n  [settingsRoutes]=\"settingsRoutes\"\r\n>\r\n  <div additionalButtons>\r\n    <button\r\n      pButton\r\n      [disabled]=\"expandCollapseHeaderService.isCollapseSingleDisabled | async\"\r\n      type=\"button\"\r\n      icon=\"pi pi-angle-down\"\r\n      label=\"Expand\"\r\n      class=\"mr-2\"\r\n      (click)=\"expandCollapse()\"\r\n    ></button>\r\n    <button\r\n      pButton\r\n      [disabled]=\"expandCollapseHeaderService.isCollapseSingleDisabled | async\"\r\n      type=\"button\"\r\n      icon=\"pi pi-angle-up\"\r\n      label=\"Collapse\"\r\n      class=\"mr-2\"\r\n      (click)=\"expandCollapse(false)\"\r\n    ></button>\r\n    <button\r\n      class=\"mr-2\"\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Expand All\"\r\n      icon=\"pi pi-angle-down\"\r\n      (click)=\"expandCollapseAll()\"\r\n    ></button>\r\n    <button\r\n      pButton\r\n      type=\"button\"\r\n      label=\"Collapse All\"\r\n      icon=\"pi pi-angle-up\"\r\n      class=\"mr-2\"\r\n      (click)=\"expandCollapseAll(false)\"\r\n    ></button>\r\n  </div>\r\n</pek-header>\r\n<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {BehaviorSubject, Observable, switchMap} from 'rxjs';\r\nimport {filter, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Machine} from '../../models/machine';\r\nimport {MachineService} from '../../services/machine.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-machines',\r\n  templateUrl: './manufacturing-machines.component.html',\r\n  styleUrls: ['./manufacturing-machines.component.scss']\r\n})\r\nexport class ManufacturingMachinesComponent implements OnInit {\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Machine',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditMachine()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveMachine()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  machines: Machine[] = [];\r\n  selectedMachine: Machine;\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  isLoading = false;\r\n\r\n\r\n  machines$: Observable<Machine[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.machineService.get()),\r\n    tap(machines => this.machines = machines),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private readonly modalService: ModalService,\r\n    private readonly machineService: MachineService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.machines$.subscribe();\r\n  }\r\n\r\n  onAddMachine() {\r\n    this.machineService.createEditMachineModal('create').pipe(\r\n      filter(position => !!position)\r\n    ).subscribe(position => this.machines.unshift(position));\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedMachine = null;\r\n    this.machines = [];\r\n  }\r\n\r\n  private onEditMachine() {\r\n    this.machineService.createEditMachineModal('edit', this.selectedMachine).pipe(\r\n      filter(position => !!position)\r\n    ).subscribe(position => {\r\n      const index = this.machines.findIndex(t => t.id === this.selectedMachine.id);\r\n      this.machines[index] = position;\r\n      this.selectedMachine = this.machines[index];\r\n    });\r\n  }\r\n\r\n  private onRemoveMachine() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.machineService.delete(this.selectedMachine.id).subscribe(() => {\r\n        const index = this.machines.findIndex(e => e.id === this.selectedMachine.id);\r\n        this.machines.splice(index, 1);\r\n        this.selectedMachine = null;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Machines</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Machine\" (click)=\"onAddMachine()\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"machines.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedMachine\"\r\n        [value]=\"machines\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedMachine\">Choose the Machine to edit</p>\r\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedMachine\"></p-menubar>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 35%\">Name</th>\r\n            <th style=\"width: 35%\">Description</th>\r\n            <th style=\"width: 25%\" class=\"text-center\">Max working time</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-machine let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"machine \">\r\n            <td class=\"text-center\" style=\"width: 5%\">{{i + 1 }}</td>\r\n            <td style=\"width: 35%\">{{machine.name}}</td>\r\n            <td style=\"width: 35%\">{{machine.description}}</td>\r\n            <td style=\"width: 25%\" class=\"text-center\">{{machine.max_working_time}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"4\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && machines.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Order} from '../../../../procurement/models/order';\r\nimport {OrderMachine, OrderMaterial, OrderProduct} from '../../../../procurement/models/order-product';\r\nimport {AuthService} from '../../../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-order-page-print',\r\n  templateUrl: './manufacturing-order-page-print.component.html',\r\n  styleUrls: ['./manufacturing-order-page-print.component.scss']\r\n})\r\nexport class ManufacturingOrderPagePrintComponent implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() orderId: number;\r\n  @Input() products: OrderProduct[] = [];\r\n  @Input() materials: OrderMaterial[] = [];\r\n  @Input() machines: OrderMachine[] = [];\r\n\r\n  currentDate = new Date()\r\n  constructor(\r\n    public readonly auth: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"print-order print-order_show\">\r\n  <div class=\"print-content\">\r\n    <h2>Execution Order Information</h2>\r\n    <div class=\"print-content__header\" *ngIf=\"order\">\r\n      <div class=\"print-content__header-col print-content__header-col_code\">\r\n        <h4>Code</h4>\r\n        <p>{{order.root_production_list_products[0]?.nomenclature.code}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_name\">\r\n        <h4>Name</h4>\r\n        <p>{{order.root_production_list_products[0]?.nomenclature.name}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_id\">\r\n        <h4>Id</h4>\r\n        <p>{{orderId}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_date\">\r\n        <h4>Order Creation Date</h4>\r\n        <p>{{order.created | date: 'dd.MM.y'}}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Ordered Items</h3>\r\n\r\n    <div class=\"table-empty\" *ngIf=\"products.length === 0\">\r\n      No Records Found\r\n    </div>\r\n\r\n    <div class=\"print-content__table print-content__table_items\" *ngIf=\"products.length > 0\">\r\n      <div\r\n        class=\"print-content__table-row\"\r\n        *ngFor=\"let product of products; let idx = index\"\r\n      >\r\n        <div class=\"print-content__table-inner\">\r\n          <div class=\"print-content__table-col\" style=\"width: 5%;\">\r\n            <h4>#</h4>\r\n            <p>{{idx + 1}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n            <h4>Code</h4>\r\n            <p>{{product.nomenclature.code}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n            <h4>Name</h4>\r\n            <p>{{product.nomenclature.name}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n            <h4>Technology</h4>\r\n            <p>{{product.current_technology?.name}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 15%;\">\r\n            <h4>Quantity</h4>\r\n            {{product.quantity}}\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 35%;\">\r\n            <h4>Employees</h4>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n            <h4>Ready</h4>\r\n            <i class=\"fas fa-check text-success\" *ngIf=\"product.isReady\"></i>\r\n            <p *ngIf=\"!product.isReady\">X</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n            <h4>QC passed</h4>\r\n            <p *ngIf=\"!product.quality_control && !product.is_technology_ready\">—</p>\r\n            <p *ngIf=\"product.is_technology_ready && !product.quality_control\">In QC</p>\r\n            <p *ngIf=\"product.quality_control\">{{product.passed_quantity}}/{{product.initial_quantity}}\r\n              <span *ngIf=\"product.quality_control === '0'\">(Not passed)</span>\r\n              <span *ngIf=\"product.quality_control === '1'\">(Passed)</span>\r\n              <span *ngIf=\"product.quality_control === '2'\">(Partly passed)</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Materials</h3>\r\n    <div class=\"table-empty\" *ngIf=\"materials.length === 0\">\r\n      No Records Found\r\n    </div>\r\n\r\n    <div class=\"print-content__table print-content__table_materials\" *ngIf=\"materials.length > 0\">\r\n      <div\r\n        class=\"print-content__table-row\"\r\n        *ngFor=\"let material of materials; let idx = index\"\r\n      >\r\n        <div class=\"print-content__table-inner\">\r\n          <div class=\"print-content__table-col\" style=\"width: 5%;\">\r\n            <h4>#</h4>\r\n            <p>{{idx + 1}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n            <h4>Code</h4>\r\n            <p *ngIf=\"material.material_nomenclature\">\r\n              {{material.material_nomenclature.code}}\r\n            </p>\r\n            <p *ngIf=\"material.order_product_nomenclature\">\r\n              {{material.order_product_nomenclature.code}}\r\n            </p>\r\n            <p *ngIf=\"material.list_product\">\r\n              {{material.list_product.nomenclature.code}}\r\n            </p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 25%;\">\r\n            <h4>Name</h4>\r\n            <p *ngIf=\"material.material_nomenclature\">\r\n              {{material.material_nomenclature.name}}\r\n            </p>\r\n            <p *ngIf=\"material.order_product_nomenclature\">\r\n              {{material.order_product_nomenclature.name}}\r\n            </p>\r\n            <p *ngIf=\"material.list_product\">\r\n              {{material.list_product.nomenclature.name}}\r\n            </p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n            <h4>Technology</h4>\r\n            <p>{{material?.technology}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n            <h4>Req Quantity</h4>\r\n            {{material?.totalInitialQuantity}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <h3>Machines</h3>\r\n    <div class=\"table-empty\" *ngIf=\"machines.length === 0\">\r\n      No Records Found\r\n    </div>\r\n\r\n    <div class=\"print-content__table print-content__table_materials\" *ngIf=\"machines.length > 0\">\r\n      <div\r\n        class=\"print-content__table-row\"\r\n        *ngFor=\"let machine of machines; let idx = index\"\r\n      >\r\n        <div class=\"print-content__table-inner\">\r\n          <div class=\"print-content__table-col\" style=\"width: 5%;\">\r\n            <h4>#</h4>\r\n            <p>{{idx + 1}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 40%;\">\r\n            <h4>Name</h4>\r\n            <p>{{machine.machine.name}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 35%;\">\r\n            <h4>Description</h4>\r\n            <p>{{machine.machine.description}}</p>\r\n          </div>\r\n          <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n            <h4>Duration</h4>\r\n            <p>{{machine.duration}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"pagebreak\"> </div>\r\n  <div class=\"user-info\">\r\n    <div class=\"left\">\r\n      <div>\r\n        <h3>Sent</h3>\r\n        <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Date</h3>\r\n        <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Signed</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"right\">\r\n      <div>\r\n        <h3>Retrieved</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Date</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Signed</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, HostListener, OnInit} from '@angular/core';\r\nimport {concatMap, delay, filter, finalize, map, tap} from 'rxjs/operators';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {OrderMachine, OrderMaterial, OrderProduct} from '../../../procurement/models/order-product';\r\nimport {OrderProductService} from '../../../procurement/services/order-product.service';\r\nimport {OrderTechnicalEquipment} from '../../../warehouse/models/order-technical-equipment';\r\nimport {OrderTechnicalEquipmentsService} from '../../../warehouse/services/order-technical-equipments.service';\r\nimport {MenuItem, TreeNode} from 'primeng/api';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {RequestService} from '../../../warehouse/services/request.service';\r\nimport {from} from 'rxjs';\r\nimport {ViewMode} from '@shared/enums/view-mode';\r\nimport {List} from '../../../warehouse/models/list';\r\nimport {deepCopy} from 'deep-copy-ts';\r\nimport {UntilDestroy} from '@ngneat/until-destroy';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-order-page',\r\n  templateUrl: './manufacturing-order-page.component.html',\r\n  styleUrls: ['./manufacturing-order-page.component.scss']\r\n})\r\nexport class ManufacturingOrderPageComponent implements OnInit {\r\n  productMenuItems: MenuItem[] = [{\r\n    label: 'Selected Item',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditOrderProductQuantity(),\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveOrderProduct(),\r\n      }\r\n    ]\r\n  }];\r\n\r\n  ViewMode = ViewMode;\r\n  viewMode = ViewMode.LIST;\r\n\r\n  orderId: number;\r\n  order: Order;\r\n  isOrderLoading = true;\r\n  isMovingToQC = false;\r\n\r\n  isShowPrint = false;\r\n  isShowOrderProductsPrint = false;\r\n\r\n  isCancellation = false;\r\n\r\n  selectedProduct: OrderProduct;\r\n  products: OrderProduct[] = [];\r\n  isLoadingProducts = true;\r\n  isLoadingTechnicalEquipments = true;\r\n\r\n  orderMaterials: OrderMaterial[] = [];\r\n  orderMaterialsByOrderProduct: OrderMaterial[] = [];\r\n  machines: OrderMachine[] = [];\r\n\r\n  technicalEquipments: OrderTechnicalEquipment[] = [];\r\n\r\n  // Hierarchy Mode View data\r\n  requestTree: TreeNode[] = [];\r\n  hierarchyRequests: OrderMaterial[] = [];\r\n  selectedOrderMaterial: OrderMaterial;\r\n  isDeletingOrderMaterial = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly orderService: OrderService,\r\n    private readonly orderProductService: OrderProductService,\r\n    private readonly orderTechnicalEquipmentService: OrderTechnicalEquipmentsService,\r\n    private readonly modalService: ModalService,\r\n    private readonly requestService: RequestService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('id')),\r\n      tap(id => this.orderId = +id),\r\n      tap(() => this.getOrder()),\r\n      tap(() => this.getOrderTechnicalEquipments()),\r\n      tap(() => this.getProducts()),\r\n    ).subscribe();\r\n  }\r\n\r\n  getOrder() {\r\n    this.orderService.getById(this.orderId).subscribe(order => {\r\n      order.statuses.map(x => x.estimated_date_sort = new Date(x.estimated_date));\r\n      order.statuses.sort((a, b) => a.estimated_date_sort - b.estimated_date_sort || a.is_active - b.is_active);\r\n      this.order = order;\r\n      this.isOrderLoading = false;\r\n    });\r\n  }\r\n\r\n  onEditOrder() {\r\n    this.orderService.openEditOrderModal(this.order, 'manufacturing').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.getOrder();\r\n      }\r\n    });\r\n  }\r\n\r\n  getProducts() {\r\n    this.machines = [];\r\n    this.orderMaterials = [];\r\n    this.orderMaterialsByOrderProduct = [];\r\n    this.products = [];\r\n    this.isLoadingProducts = true;\r\n\r\n    this.orderProductService.getOrderProducts(this.orderId).subscribe(products => {\r\n      products.forEach((product, idx) => {\r\n        product.isReady = product.is_technology_ready ? product.is_technology_ready : false;\r\n        if (product.task_materials && product.task_materials?.length > 0) {\r\n          const tempMaterials = deepCopy(product.task_materials);\r\n          tempMaterials.forEach(m => {\r\n            let nomenclatureId: number;\r\n            let currentTechnology: string;\r\n            if (m.material_nomenclature) {\r\n              nomenclatureId = m.material_nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n            if (m.order_product_nomenclature) {\r\n              nomenclatureId = m.order_product_nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n            if (m.list_product) {\r\n              nomenclatureId = m.list_product.nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n\r\n            const orderProductTechnologyId = product.current_technology ? product.current_technology.id : null;\r\n            const inOrderProductMaterials = this.orderMaterialsByOrderProduct\r\n              .filter(el => el.for_order_product.nomenclature.id === m.for_order_product.nomenclature.id\r\n                && el.orderProductTechnologyId === orderProductTechnologyId)\r\n              .find(material => {\r\n                if (material.material_nomenclature) {\r\n                  return material.material_nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n                }\r\n                if (material.order_product_nomenclature) {\r\n                  return material.order_product_nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n                }\r\n                if (material.list_product) {\r\n                  return material.list_product.nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n                }\r\n              });\r\n            if (inOrderProductMaterials) {\r\n              inOrderProductMaterials.allIds.push(m.id);\r\n              inOrderProductMaterials.totalInitialQuantity += m.initial_quantity;\r\n              inOrderProductMaterials.totalRequiredQuantity += m.required_quantity;\r\n            } else {\r\n              m.allIds = [m.id];\r\n              m.totalInitialQuantity = m.initial_quantity;\r\n              m.totalRequiredQuantity = m.required_quantity;\r\n              m.orderProductTechnologyId = orderProductTechnologyId;\r\n              this.orderMaterialsByOrderProduct.push(m);\r\n            }\r\n          });\r\n\r\n          product.task_materials.forEach(m => {\r\n            let nomenclatureId: number;\r\n            let currentTechnology: string;\r\n            if (m.material_nomenclature) {\r\n              nomenclatureId = m.material_nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n            if (m.order_product_nomenclature) {\r\n              nomenclatureId = m.order_product_nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n            if (m.list_product) {\r\n              nomenclatureId = m.list_product.nomenclature.id;\r\n              currentTechnology = m.technology;\r\n            }\r\n            const inMaterials = this.orderMaterials.find(material => {\r\n              if (material.material_nomenclature) {\r\n                return material.material_nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n              }\r\n              if (material.order_product_nomenclature) {\r\n                return material.order_product_nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n              }\r\n              if (material.list_product) {\r\n                return material.list_product.nomenclature.id === nomenclatureId && material.technology === currentTechnology;\r\n              }\r\n            });\r\n            if (inMaterials) {\r\n              inMaterials.allIds.push(m.id);\r\n              inMaterials.totalInitialQuantity += m.initial_quantity;\r\n              inMaterials.totalRequiredQuantity += m.required_quantity;\r\n            } else {\r\n              m.allIds = [m.id];\r\n              m.totalInitialQuantity = m.initial_quantity;\r\n              m.totalRequiredQuantity = m.required_quantity;\r\n              this.orderMaterials.push(m);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (product?.task_machines && product?.task_machines?.length > 0) {\r\n          product.task_machines.forEach(m => {\r\n            this.machines.push(m);\r\n          });\r\n        }\r\n      });\r\n\r\n      const newProducts = [];\r\n\r\n      products.forEach(product => {\r\n        const newProduct = {...product};\r\n\r\n        const findProduct = newProducts.find(p =>\r\n          p.nomenclature.id === product.nomenclature.id &&\r\n          p.current_technology.id === product.current_technology.id\r\n        );\r\n\r\n        if (!findProduct) {\r\n          newProduct.quantity = products.filter(p =>\r\n            p.nomenclature.id === product.nomenclature.id &&\r\n            p.current_technology.id === product.current_technology.id\r\n          ).reduce((sum, p) => sum + p.quantity, 0);\r\n\r\n          newProduct.ids = products.filter(p =>\r\n            p.nomenclature.id === product.nomenclature.id &&\r\n            p.current_technology.id === product.current_technology.id\r\n          ).map(p => p.id);\r\n\r\n          newProducts.push(newProduct);\r\n        }\r\n      });\r\n      this.products = newProducts.map(p => p);\r\n      this.machines = this.machines.map(m => m);\r\n      this.orderMaterials = [...this.orderMaterials];\r\n      this.hierarchyRequests = deepCopy(this.orderMaterialsByOrderProduct);\r\n      this.prepareTreeCategories();\r\n      this.isLoadingProducts = false;\r\n    });\r\n  }\r\n\r\n  toggleAllReady(evt: any) {\r\n    this.products.forEach(product => {\r\n      if (!product.is_technology_ready) {\r\n        product.isReady = evt.checked;\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderTechnicalEquipments() {\r\n    this.orderTechnicalEquipmentService.get([{name: 'order', value: this.orderId}]).subscribe(technicalEquipments => {\r\n      this.technicalEquipments = technicalEquipments;\r\n      this.isLoadingTechnicalEquipments = false;\r\n    });\r\n  }\r\n\r\n  onAddProduct() {\r\n    this.orderProductService.openAddOutsourcingRequestModal(this.orderId).subscribe(product => {\r\n      if (product) {\r\n        this.getProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  private onRemoveOrderProduct() {\r\n    this.modalService.confirm('danger').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.orderProductService.removeFromOrder(this.selectedProduct).subscribe(() => {\r\n          this.products = this.products.filter(p => p.id !== this.selectedProduct.id);\r\n          this.selectedProduct = null;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditOrderProductQuantity() {\r\n    this.orderProductService.editOrderProductQuantity(<OrderProduct>this.selectedProduct).subscribe(orderProduct => {\r\n      if (orderProduct) {\r\n        this.selectedProduct.quantity = orderProduct.quantity;\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelOrderMaterials() {\r\n    this.modalService.confirm('danger', 'Confirm').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isCancellation = true;\r\n        this.requestService.cancel(this.orderId).pipe(\r\n          finalize(() => this.isCancellation = false)\r\n        ).subscribe(() => {\r\n          this.orderMaterials = [];\r\n          this.products = [];\r\n          this.machines = [];\r\n          this.selectedProduct = null;\r\n          this.isLoadingProducts = true;\r\n          this.getProducts()\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onPrintPage() {\r\n    this.isShowPrint = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  @HostListener('window:afterprint', [])\r\n  onWindowAfterPrint() {\r\n    this.isShowPrint = false;\r\n  }\r\n\r\n  moveToQc() {\r\n    this.isMovingToQC = true;\r\n    const orderData = {\r\n      id: this.order.id,\r\n      order: {\r\n        completed: true\r\n      }\r\n    };\r\n    this.orderService.moveToQc(orderData).subscribe(() => {\r\n      if (productsUpdateToSend.length === 0) {\r\n        this.isMovingToQC = false;\r\n      }\r\n    });\r\n\r\n    const productsUpdateToSend = [];\r\n    this.products.forEach((product) => {\r\n      if (product.isReady && !product.is_technology_ready && !product.quality_control) {\r\n        product.ids.forEach(id => {\r\n          const productData = {\r\n            id,\r\n            product: {\r\n              is_technology_ready: true\r\n            }\r\n          };\r\n          productsUpdateToSend.push(productData);\r\n        });\r\n      }\r\n    });\r\n\r\n    from(productsUpdateToSend).pipe(\r\n      concatMap(data => this.makeRequest(data)),\r\n    ).subscribe(\r\n      value => this.isMovingToQC = false,\r\n      error => this.isMovingToQC = false\r\n    );\r\n  }\r\n\r\n  makeRequest(productData) {\r\n    return this.orderProductService.moveToQc(productData).pipe(delay(200), tap(res => {\r\n      const prod = this.products.find(el => el.ids.findIndex(id => id === res.id) > -1);\r\n      if (prod) {\r\n        prod.is_technology_ready = true;\r\n      }\r\n    }));\r\n  }\r\n\r\n  onAddMaterial() {\r\n    this.orderProductService.openAddPMaterialToOrder(this.selectedProduct.id).subscribe(request => {\r\n      if (request) {\r\n        // this.getOrder();\r\n        this.getProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  openHierarchyMode() {\r\n    this.viewMode = ViewMode.HIERARCHY;\r\n  }\r\n\r\n  openListMode() {\r\n    this.viewMode = ViewMode.LIST;\r\n  }\r\n\r\n  prepareTreeCategories(): void {\r\n    const categoriesTemp: {\r\n      id: number,\r\n      level: number,\r\n      listId: number,\r\n      parentId: number,\r\n      name: string,\r\n      for_order_product?: any,\r\n      listProduct?: any\r\n    }[] = [];\r\n    this.hierarchyRequests.forEach(request => {\r\n      if (request.for_order_product) {\r\n        const parentProducts = request.for_order_product.nomenclature;\r\n        const listId = request.list_product ? (request.list_product.list as List).id : null;\r\n        const isAdded = categoriesTemp.findIndex(el => el.id === parentProducts.id);\r\n        if (isAdded < 0) {\r\n          categoriesTemp.push({\r\n            name: parentProducts.code + ' ' + parentProducts.name,\r\n            listId: listId,\r\n            id: parentProducts.id,\r\n            level: 0,\r\n            parentId: null,\r\n            for_order_product: request.for_order_product\r\n          });\r\n        }\r\n      } else if (request.list_product) {\r\n        const parentProducts = request.list_product.list as List;\r\n        const isAdded = categoriesTemp.findIndex(el => el.id === parentProducts.nomenclature.id);\r\n        if (isAdded < 0) {\r\n          categoriesTemp.push({\r\n            name: parentProducts.nomenclature.code + ' ' + parentProducts.nomenclature.name,\r\n            listId: parentProducts.id,\r\n            id: parentProducts.nomenclature.id,\r\n            level: 0,\r\n            parentId: null,\r\n            listProduct: request.list_product\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.requestTree = [];\r\n    categoriesTemp.forEach(cat => {\r\n      this.requestTree.push({\r\n        data: cat,\r\n        expanded: false,\r\n        parent: null\r\n      });\r\n    });\r\n\r\n    this.fillTree();\r\n  }\r\n\r\n  fillTree(): void {\r\n    this.requestTree = this.requestTree.map(node => {\r\n      return {\r\n        ...node,\r\n        children: []\r\n      };\r\n    });\r\n\r\n    this.hierarchyRequests.forEach(request => {\r\n      this.requestTree.forEach(node => {\r\n        let parentNomenclature;\r\n        if (request.for_order_product) {\r\n          parentNomenclature = request.for_order_product.nomenclature;\r\n        } else if (request.list_product) {\r\n          // @ts-ignore\r\n          parentNomenclature = request.list_product.list.nomenclature;\r\n        }\r\n\r\n        if (node.data.id === parentNomenclature.id) {\r\n          node.children.push({\r\n            data: {request, level: 4},\r\n            expanded: false,\r\n            children: []\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.requestTree.forEach(node => {\r\n      const materialChild = node.children.filter(child => child.data.request.material_nomenclature).sort((a, b) => {\r\n        return b.data.request.id - a.data.request.id;\r\n      });\r\n      const nonMaterialChild = node.children.filter(child => !child.data.request.material_nomenclature).sort((a, b) => {\r\n        return b.data.request.id - a.data.request.id;\r\n      });\r\n      node.children = [...materialChild, ...nonMaterialChild];\r\n    });\r\n  }\r\n\r\n  expandCollapseAllOrders(isToExpand = true): void {\r\n    const temp = cloneDeep(this.requestTree);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, isToExpand);\r\n    });\r\n    this.requestTree = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  printOrderProductsInfo() {\r\n    this.isShowOrderProductsPrint = true;\r\n    setTimeout(() => {\r\n      window.print();\r\n    });\r\n  }\r\n\r\n  onDeleteOrderMaterial() {\r\n    console.log(this.selectedOrderMaterial);\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(Boolean)\r\n    ).subscribe(() => {\r\n      this.isDeletingOrderMaterial = true;\r\n      this.orderProductService.severalDeleteMaterial(this.selectedOrderMaterial.allIds).pipe(\r\n        finalize(() => this.isDeletingOrderMaterial = false)\r\n      ).subscribe(() => {\r\n        this.orderMaterials = this.orderMaterials.filter(m => m.id !== this.selectedOrderMaterial.id);\r\n        this.selectedOrderMaterial = null;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"manufacturing-order-page\">\r\n  <div class=\"page\">\r\n    <div class=\"page__header\">\r\n      <div class=\"page__title\">\r\n        <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n        <h1>\r\n          Order {{orderId}}\r\n          <ng-container *ngIf=\"isOrderLoading\">(...)</ng-container>\r\n          <ng-container\r\n            *ngIf=\"!isOrderLoading && order.root_production_list_products[0]?.nomenclature\"\r\n          >\r\n            ({{order.root_production_list_products[0].nomenclature.code}} {{order.root_production_list_products[0].nomenclature.name}})\r\n          </ng-container>\r\n        </h1>\r\n      </div>\r\n      <div class=\"page__tools\">\r\n        <div class=\"page__tools\">\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            class=\"mr-2\"\r\n            icon=\"pi pi-pencil\"\r\n            label=\"Lead Date & Status\"\r\n            (click)=\"onEditOrder()\"\r\n            [disabled]=\"isOrderLoading\"\r\n          >\r\n          </button>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            class=\"mr-2 p-button-icon\"\r\n            icon=\"pi pi-angle-double-right\"\r\n            label=\"Move To QC\"\r\n            [disabled]=\"isOrderLoading\"\r\n            [loading]=\"isMovingToQC\"\r\n            (click)=\"moveToQc()\"\r\n          >\r\n          </button>\r\n          <button\r\n            pButton\r\n            type=\"button\"\r\n            icon=\"pi pi-print\"\r\n            label=\"Print\"\r\n            (click)=\"onPrintPage()\"\r\n            [disabled]=\"isOrderLoading || isLoadingProducts\"\r\n          >\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"page__content\">\r\n    <h2 class=\"mb-4\">Ordered Items</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #dt\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"products.length > 0\"\r\n          [rows]=\"10\"\r\n          [(selection)]=\"selectedProduct\"\r\n          [value]=\"products\"\r\n          selectionMode=\"single\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <p class=\"subtitle\" *ngIf=\"!selectedProduct\">Choose the Item to edit</p>\r\n              <p-menubar\r\n                class=\"ml-auto\"\r\n                [model]=\"productMenuItems\"\r\n                [class.disabled]=\"!selectedProduct\">\r\n              </p-menubar>\r\n              <button\r\n                (click)=\"onAddProduct()\"\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Add Item\"\r\n                [disabled]=\"isLoadingProducts\"\r\n              >\r\n              </button>\r\n              <button\r\n                pButton type=\"button\"\r\n                icon=\"pi pi-plus\"\r\n                class=\"ml-2\"\r\n                label=\"Add Material\"\r\n                (click)=\"onAddMaterial()\"\r\n                [disabled]=\"!selectedProduct\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\">Code</th>\r\n              <th style=\"width: 20%\">Name</th>\r\n              <th style=\"width: 10%\">Technology</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Quantity</th>\r\n              <th style=\"width: 20%\">Employees</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">\r\n                <label class=\"all-checked\">\r\n                  <p-checkbox\r\n                    (onChange)=\"toggleAllReady($event)\"\r\n                    inputId=\"ready\"\r\n                    [binary]=\"true\"\r\n                  ></p-checkbox>\r\n                  <span class=\"ml-2\">Ready</span>\r\n                </label>\r\n              </th>\r\n              <th class=\"text-center\" style=\"width: 10%\">QC Pass</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-product let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"product\" class=\"table-row\">\r\n              <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n              <td style=\"width: 15%\">{{product.nomenclature.code}} </td>\r\n              <td style=\"width: 20%\">{{product.nomenclature.name}} </td>\r\n              <td style=\"width: 10%\">\r\n                {{product.current_technology?.name}}\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">{{product.quantity}}</td>\r\n              <td style=\"width: 20%\">\r\n                <div class=\"d-flex\" *ngFor=\"let empl of product?.task_employees\">\r\n                  <span class=\"mr-2\">{{empl.employee.first_name}} {{empl.employee.last_name}}</span>\r\n                  <span>({{empl.duration}})</span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 10%\">\r\n                <div class=\"d-flex align-items-center justify-content-center\">\r\n                  <p-checkbox\r\n                    [(ngModel)]=\"product.isReady\"\r\n                    [disabled]=\"product.quality_control || product.is_technology_ready\"\r\n                    [binary]=\"true\"\r\n                  ></p-checkbox>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <div *ngIf=\"!product.quality_control && !product.is_technology_ready\">—</div>\r\n                <div *ngIf=\"product.is_technology_ready && !product.quality_control\">In QC</div>\r\n                <div *ngIf=\"product.quality_control\">{{product.passed_quantity}}/{{product.initial_quantity}}\r\n                  <span *ngIf=\"product.quality_control === '0'\">(Not passed)</span>\r\n                  <span *ngIf=\"product.quality_control === '1'\">(Passed)</span>\r\n                  <span *ngIf=\"product.quality_control === '2'\">(Partly passed)</span>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"10\">\r\n                <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!dt.paginator && !isLoadingProducts && products.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"dt.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">\r\n      Parts/Materials List\r\n    </h2>\r\n\r\n\r\n    <div class=\"page__card mb-4\"  *ngIf=\"viewMode === ViewMode.LIST\">\r\n      <div class=\"page__table\" >\r\n        <p-table\r\n          #mt\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"orderMaterials.length > 0\"\r\n          [rows]=\"10\"\r\n          [value]=\"orderMaterials\"\r\n          [(selection)]=\"selectedOrderMaterial\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                (click)=\"onCancelOrderMaterials()\"\r\n                pButton\r\n                [loading]=\"isCancellation\"\r\n                type=\"button\"\r\n                label=\"Cancelation\"\r\n                icon=\"pi pi-times\"\r\n                class=\"ml-auto p-button-danger p-button-icon\"\r\n              >\r\n              </button>\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                (click)=\"onDeleteOrderMaterial()\"\r\n                pButton\r\n                [disabled]=\"!selectedOrderMaterial || selectedOrderMaterial?.totalRequiredQuantity === 0\"\r\n                [loading]=\"isDeletingOrderMaterial\"\r\n                type=\"button\"\r\n                label=\"Delete\"\r\n                icon=\"pi pi-trash\"\r\n                class=\"ml-2 p-button p-button-danger p-button-icon\"\r\n              >\r\n              </button>\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                (click)=\"openHierarchyMode()\"\r\n                pButton\r\n                [loading]=\"isCancellation\"\r\n                type=\"button\"\r\n                label=\"Hierarchy\"\r\n                icon=\"pi pi-table\"\r\n                class=\"ml-2 p-button p-button-icon\"\r\n              >\r\n              </button>\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                pButton\r\n                type=\"button\"\r\n                class=\"ml-2\"\r\n                icon=\"pi pi-print\"\r\n                label=\"Print\"\r\n                (click)=\"printOrderProductsInfo()\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 15%\">Code</th>\r\n              <th style=\"width: 35%\">Name</th>\r\n              <th style=\"width: 20%\">Technology</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Required Quantity</th>\r\n              <th style=\"width: 10%\" class=\"text-center\">Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-material let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"material\">\r\n              <td style=\"width: 5%\" class=\"text-center\">{{i + 1}}</td>\r\n              <td style=\"width: 15%\">\r\n                <div *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.code}}\r\n                </div>\r\n                <div *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.code}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 35%\">\r\n                <div *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.name}}\r\n                </div>\r\n                <div *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.name}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 20%\">\r\n                <span *ngIf=\"material.technology\">{{material.technology}}</span>\r\n              </td>\r\n              <td style=\"width: 15%\" class=\"text-center\">\r\n                {{material?.totalInitialQuantity}}\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <i *ngIf=\"material?.totalRequiredQuantity === 0\" class=\"pi pi-check-circle\"></i>\r\n                <i *ngIf=\"material?.totalRequiredQuantity > 0\" class=\"pi pi-times\"></i>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"mt.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div  *ngIf=\"!mt.paginator && !isLoadingProducts && orderMaterials.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"mt.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"page__card mb-4\"  *ngIf=\"viewMode === ViewMode.HIERARCHY\">\r\n      <div class=\"page__table\" >\r\n        <p-treeTable\r\n          class=\"orders-tree\"\r\n          [value]=\"requestTree\"\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 16.5rem)\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex\">\r\n\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"ml-auto\"\r\n                icon=\"pi pi-angle-down\"\r\n                label=\"Expand all\"\r\n                (click)=\"expandCollapseAllOrders()\"\r\n              ></button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"ml-2\"\r\n                icon=\"pi pi-angle-up\"\r\n                label=\"Collapse all\"\r\n                (click)=\"expandCollapseAllOrders(false)\"\r\n              ></button>\r\n              <button\r\n                *ngIf=\"orderMaterials.length > 0\"\r\n                (click)=\"openListMode()\"\r\n                pButton\r\n                [loading]=\"isCancellation\"\r\n                type=\"button\"\r\n                label=\"List\"\r\n                icon=\"pi pi-list\"\r\n                class=\"p-button p-button-icon ml-2\"\r\n              >\r\n              </button>\r\n              <button\r\n                pButton\r\n                type=\"button\"\r\n                class=\"ml-2\"\r\n                icon=\"pi pi-print\"\r\n                label=\"Print\"\r\n                (click)=\"printOrderProductsInfo()\"\r\n              ></button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 25%; padding-left: 3.3125rem\">ID</th>\r\n              <th style=\"width: 15%;\">Code</th>\r\n              <th style=\"width: 10%;\">Name</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">Technology</th>\r\n              <th class=\"text-center\" style=\"width: 20%;\">Required Quantity</th>\r\n              <th class=\"text-center\" style=\"width: 20%;\">Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-i=\"rowIndex\">\r\n            <tr\r\n              class=\"pagebreak\"\r\n              [ttRow]=\"rowNode\"\r\n              [class.is-added-after-order-creation]=\"rowData.request?.material_nomenclature\"\r\n              [id]=\"rowData.request ? 'row-' + rowData.request?.id : null\"\r\n              [class.tr-toggler]=\"rowNode.node.children.length > 0\"\r\n            >\r\n              <td style=\"width: 25%;\" class=\"ids-container\">\r\n                <h3 class=\"td-title\">ID</h3>\r\n                <div class=\"toggle-row hovered-info\">\r\n                  <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                  <span [class.bold]=\"rowData.level < 4\">\r\n                    {{rowData.name}}  {{rowData.listId ? '(' + rowData.listId + ')' : ''}}\r\n                  </span>\r\n                  <span *ngIf=\"rowData.level === 4\">\r\n                     {{rowData.request.id}}\r\n                    <span *ngIf=\"rowData.request.allIds?.length > 0\">L({{rowData.request.allIds?.length}})</span>\r\n\r\n                   <pek-hover-detailed-info-component\r\n                     [moveLeft]=\"0\"\r\n                     *ngIf=\"rowData.request.allIds?.length > 0\">\r\n                                     <span class=\"ids\">\r\n                    <div *ngFor=\"let id of rowData.request.allIds\">\r\n                      {{id}}\r\n                    </div>\r\n                  </span>\r\n                  </pek-hover-detailed-info-component>\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 15%;\">\r\n                <h3 class=\"td-title\">Code</h3>\r\n                <div *ngIf=\"rowData.level === 4\">\r\n                  <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                    {{rowData.request.material_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                    {{rowData.request.order_product_nomenclature.code}}\r\n                  </div>\r\n                  <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                    {{rowData.request.list_product.nomenclature.code}}\r\n                  </div>\r\n                </div>\r\n\r\n              </td>\r\n              <td style=\"width: 10%;\" class=\"serial-numbers-container\">\r\n                <h3 class=\"td-title\">Name</h3>\r\n                <div *ngIf=\"rowData.level === 4\">\r\n                  <div *ngIf=\"rowData.request.material_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.material_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"rowData.request.order_product_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.order_product_nomenclature.name}}\r\n                  </div>\r\n                  <div *ngIf=\"!rowData.request.material_nomenclature && !rowData.request.order_product_nomenclature\">\r\n                    <b *ngIf=\"rowData.request?.list_product?.nomenclature?.bulk_or_serial === '1'\">(S)</b>\r\n                    {{rowData.request.list_product.nomenclature.name}}\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 10%\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Technology</h3>\r\n                <div *ngIf=\"rowData.level === 4\">\r\n                  <span *ngIf=\"rowData.request.technology\">{{rowData.request.technology}}</span>\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 20%;\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Required Quantity</h3>\r\n                <div *ngIf=\"rowData.level === 4\">\r\n                  {{rowData.request.totalInitialQuantity}}\r\n                </div>\r\n              </td>\r\n              <td style=\"width: 20%;\" class=\"text-center\">\r\n                <h3 class=\"td-title\">Status</h3>\r\n                <i *ngIf=\"rowData.request?.totalRequiredQuantity === 0\" class=\"pi pi-check-circle\"></i>\r\n                <i *ngIf=\"rowData.request?.totalRequiredQuantity > 0\" class=\"pi pi-times\"></i>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr class=\"tr-spinner\">\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"8\">\r\n                <i  class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span>No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-treeTable>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">\r\n      Machines\r\n    </h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #ht\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"machines.length > 0\"\r\n          [rows]=\"10\"\r\n          [value]=\"machines\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 35%\">Name</th>\r\n              <th style=\"width: 30%\">Description</th>\r\n              <th style=\"width: 30%\" class=\"text-center\">Duration</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-machine let-i=\"rowIndex\">\r\n            <tr>\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td>{{machine.machine.name}}</td>\r\n              <td>{{machine.machine.description}}</td>\r\n              <td class=\"text-center\">{{machine.duration}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingProducts\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingProducts\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"ht.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!ht.paginator && !isLoadingProducts && machines.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"ht.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">\r\n      Technical Equipments\r\n    </h2>\r\n\r\n    <div class=\"page__card\">\r\n      <div class=\"page__table\">\r\n        <p-table\r\n          #et\r\n          selectionMode=\"single\"\r\n          scrollHeight=\"calc(100vh - 24rem)\"\r\n          [scrollable]=\"true\"\r\n          [paginator]=\"technicalEquipments.length > 0\"\r\n          [rows]=\"10\"\r\n          [value]=\"technicalEquipments\"\r\n        >\r\n          <ng-template pTemplate=\"caption\">\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n              <th style=\"width: 25%\">Code</th>\r\n              <th style=\"width: 25%\">Name</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Locator</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Quantity</th>\r\n              <th style=\"width: 15%\" class=\"text-center\">Status</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-technicalEquipment let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"technicalEquipment\" class=\"table-row\">\r\n              <td class=\"text-center\">{{i + 1}}</td>\r\n              <td>{{technicalEquipment.nomenclature.code}}</td>\r\n              <td>{{technicalEquipment.nomenclature.name}}</td>\r\n              <td class=\"text-center\">\r\n                <span *ngFor=\"let locator of technicalEquipment.locators\">\r\n                  {{locator.name}}\r\n                </span>\r\n              </td>\r\n              <td class=\"text-center\">{{technicalEquipment.max_initial_quantity}}</td>\r\n              <td class=\"text-center\"\r\n                  [class.text-danger]=\"!technicalEquipment.in_use || technicalEquipment.in_use && technicalEquipment.locators.length < 1\"\r\n                  [class.text-success]=\"technicalEquipment.in_use && technicalEquipment.locators.length > 0\"\r\n              >{{technicalEquipment.in_use && technicalEquipment.locators.length > 0 ? 'Received' : 'Not Received'}}</td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"6\">\r\n                <i *ngIf=\"isLoadingTechnicalEquipments \" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoadingTechnicalEquipments \">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"et.paginator=false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!et.paginator && !isLoadingTechnicalEquipments && technicalEquipments.length > 0\"\r\n           class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"et.paginator=true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"manufacturing-order-page-print\" *ngIf=\"isShowPrint\">\r\n  <pek-manufacturing-order-page-print\r\n    [machines]=\"machines\"\r\n    [materials]=\"orderMaterials\"\r\n    [order]=\"order\"\r\n    [orderId]=\"orderId\"\r\n    [products]=\"products\"\r\n  >\r\n  </pek-manufacturing-order-page-print>\r\n</div>\r\n\r\n<div class=\"manufacturing-order-page-print\" *ngIf=\"isShowOrderProductsPrint\">\r\n  <pek-manufacturing-order-products-info-print\r\n    [order]=\"order\"\r\n    [orderId]=\"orderId\"\r\n    [products]=\"products\"\r\n    [materials]=\"orderMaterialsByOrderProduct\"></pek-manufacturing-order-products-info-print>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {OrderMaterial, OrderProduct} from '../../../../procurement/models/order-product';\r\nimport {AuthService} from '../../../../auth/auth.service';\r\nimport {Order} from '../../../../procurement/models/order';\r\n\r\nexport class PrintGroupedOrderProduct {\r\n  orderProduct: OrderProduct;\r\n  materials: OrderMaterial[];\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-order-products-info-print',\r\n  templateUrl: './manufacturing-order-products-info-print.component.html',\r\n  styleUrls: ['./manufacturing-order-products-info-print.component.scss']\r\n})\r\nexport class ManufacturingOrderProductsInfoPrintComponent implements OnInit {\r\n  @Input() order: Order;\r\n  @Input() orderId: number;\r\n  @Input() products: OrderProduct[] = [];\r\n  @Input() materials: OrderMaterial[] = [];\r\n  preparedForPrintInfo: PrintGroupedOrderProduct[] = [];\r\n  currentDate = new Date();\r\n\r\n  constructor(\r\n    public readonly auth: AuthService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.products.sort((a, b) => a.id - b.id).forEach(product => {\r\n      const materials = this.materials.filter(el => product.ids.findIndex(elId => elId === el.for_order_product.id) >= 0);\r\n\r\n      this.preparedForPrintInfo.push({\r\n        orderProduct: product,\r\n        materials: materials\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"print-order print-order_show\">\r\n  <div class=\"print-content\">\r\n    <h2>Execution Ordered Products Information</h2>\r\n    <div class=\"print-content__header\" *ngIf=\"order\">\r\n      <div class=\"print-content__header-col print-content__header-col_code\">\r\n        <h4>Code</h4>\r\n        <p>{{order.root_production_list_products[0]?.nomenclature.code}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_name\">\r\n        <h4>Name</h4>\r\n        <p>{{order.root_production_list_products[0]?.nomenclature.name}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_id\">\r\n        <h4>Id</h4>\r\n        <p>{{orderId}}</p>\r\n      </div>\r\n      <div class=\"print-content__header-col print-content__header-col_date\">\r\n        <h4>Order Creation Date</h4>\r\n        <p>{{order.created | date: 'dd.MM.y'}}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"table-empty\" *ngIf=\"preparedForPrintInfo.length === 0\">\r\n      No Records Found\r\n    </div>\r\n\r\n\r\n    <div class=\"print-content__table print-content__table_items\" *ngIf=\"preparedForPrintInfo.length > 0\">\r\n      <ng-template ngFor [ngForOf]=\"preparedForPrintInfo\" let-product let-idx=index>\r\n        <h5 class=\"mt-4\">Ordered Product</h5>\r\n        <div\r\n          class=\"print-content__table-row\">\r\n          <div class=\"print-content__table-inner\">\r\n            <div class=\"print-content__table-col\" style=\"width: 5%;\">\r\n              <h4>#</h4>\r\n              <p>{{idx + 1}}</p>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n              <h4>Code</h4>\r\n              <p>{{product.orderProduct.nomenclature.code}}</p>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n              <h4>Name</h4>\r\n              <p>{{product.orderProduct.nomenclature.name}}</p>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n              <h4>Technology</h4>\r\n              <p>{{product.orderProduct.current_technology?.name}}</p>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 15%;\">\r\n              <h4>Quantity</h4>\r\n              {{product.orderProduct.quantity}}\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 35%;\">\r\n              <h4>Employees</h4>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n              <h4>Ready</h4>\r\n              <i class=\"fas fa-check text-success\" *ngIf=\"product.orderProduct.isReady\"></i>\r\n              <p *ngIf=\"!product.orderProduct.isReady\">X</p>\r\n            </div>\r\n            <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n              <h4>QC passed</h4>\r\n              <p *ngIf=\"!product.orderProduct.quality_control && !product.orderProduct.is_technology_ready\">—</p>\r\n              <p *ngIf=\"product.orderProduct.is_technology_ready && !product.orderProduct.quality_control\">In QC</p>\r\n              <p *ngIf=\"product.orderProduct.quality_control\">{{product.orderProduct.passed_quantity}}/{{product.orderProduct.initial_quantity}}\r\n                <span *ngIf=\"product.orderProduct.quality_control === '0'\">(Not passed)</span>\r\n                <span *ngIf=\"product.orderProduct.quality_control === '1'\">(Passed)</span>\r\n                <span *ngIf=\"product.orderProduct.quality_control === '2'\">(Partly passed)</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h5 class=\"mt-4\" *ngIf=\"product.materials.length > 0\">Materials</h5>\r\n        <div class=\"print-content__table print-content__table_materials\" *ngIf=\"product.materials.length > 0\">\r\n          <div\r\n            class=\"print-content__table-row\"\r\n            *ngFor=\"let material of product.materials; let idx = index\"\r\n          >\r\n            <div class=\"print-content__table-inner\">\r\n              <div class=\"print-content__table-col\" style=\"width: 5%;\">\r\n                <h4>#</h4>\r\n                <p>{{idx + 1}}</p>\r\n              </div>\r\n              <div class=\"print-content__table-col\" style=\"width: 30%;\">\r\n                <h4>Code</h4>\r\n                <p *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.code}}\r\n                </p>\r\n                <p *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.code}}\r\n                </p>\r\n                <p *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.code}}\r\n                </p>\r\n              </div>\r\n              <div class=\"print-content__table-col\" style=\"width: 25%;\">\r\n                <h4>Name</h4>\r\n                <p *ngIf=\"material.material_nomenclature\">\r\n                  {{material.material_nomenclature.name}}\r\n                </p>\r\n                <p *ngIf=\"material.order_product_nomenclature\">\r\n                  {{material.order_product_nomenclature.name}}\r\n                </p>\r\n                <p *ngIf=\"material.list_product\">\r\n                  {{material.list_product.nomenclature.name}}\r\n                </p>\r\n              </div>\r\n              <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n                <h4>Technology</h4>\r\n                <p>{{material?.technology}}</p>\r\n              </div>\r\n              <div class=\"print-content__table-col\" style=\"width: 20%;\">\r\n                <h4>Req Quantity</h4>\r\n                {{material?.totalInitialQuantity}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n  <div class=\"pagebreak\"> </div>\r\n  <div class=\"user-info\">\r\n    <div class=\"left\">\r\n      <div>\r\n        <h3>Sent</h3>\r\n        <p>{{auth.user.first_name}} {{auth.user.last_name}}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Date</h3>\r\n        <p>{{currentDate | date: 'dd.MM.y'}}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Signed</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"right\">\r\n      <div>\r\n        <h3>Retrieved</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Date</h3>\r\n        <p></p>\r\n      </div>\r\n      <div>\r\n        <h3>Signed</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-order-statuses',\r\n  templateUrl: './manufacturing-order-statuses.component.html',\r\n  styleUrls: ['./manufacturing-order-statuses.component.scss']\r\n})\r\nexport class ManufacturingOrderStatusesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"procurement-order-statuses\">\r\n  <div class=\"page\">\r\n    <div class=\"page__header\">\r\n      <div class=\"page__title\">\r\n        <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n        <h1>Order Statuses</h1>\r\n      </div>\r\n      <div class=\"page__tools\">\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"page__content\">\r\n    <h2 class=\"mb-4\">Manual Statuses</h2>\r\n\r\n    <div class=\"page__card mb-4\">\r\n      <pek-order-statuses [statusType]=\"3\"></pek-order-statuses>\r\n    </div>\r\n\r\n    <h2 class=\"mb-4\">Automatic Statuses</h2>\r\n\r\n    <div class=\"page__card\">\r\n      <pek-order-statuses [statusType]=\"3\" [isAutoStatus]=\"true\"></pek-order-statuses>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {BehaviorSubject, iif, Observable, switchMap} from 'rxjs';\r\nimport {OrderService} from '../../../procurement/services/order.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {Order} from '../../../procurement/models/order';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Router} from '@angular/router';\r\nimport {MenuItem} from 'primeng/api';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-orders',\r\n  templateUrl: './manufacturing-orders.component.html',\r\n  styleUrls: ['./manufacturing-orders.component.scss']\r\n})\r\nexport class ManufacturingOrdersComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    order_root_list_id: [null],\r\n    active_status__in: [null],\r\n    created_after: [null],\r\n    created_before: [null],\r\n  });\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Order',\r\n    items: [\r\n      {\r\n        label: 'Own Production Item',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onGoToOderPage()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemoveOrder()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  isStartFirstPage = false;\r\n  isShowAll = false;\r\n\r\n  finalStatusSelected = false;\r\n\r\n  currentPage = 1;\r\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n  query: QuerySearch[] = [];\r\n  isLoading = true;\r\n  ordersCount = 0;\r\n\r\n  selectedOrder: Order = null;\r\n\r\n  isCreating = false;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  orders$: Observable<Order[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() =>\r\n      iif(() =>\r\n          !this.isShowAll,\r\n        this.orderService.getForPagination(this.query).pipe(\r\n          tap(response => this.ordersCount = response.count),\r\n          map(response => response.results),\r\n          map(orders => this.transformOrders(orders))\r\n        ),\r\n        this.orderService.get(this.query).pipe(\r\n          tap(orders => this.ordersCount = orders.length),\r\n          map(orders => this.transformOrders(orders))\r\n        )\r\n      ),\r\n    ),\r\n    tap(() => this.paginateToFistPage()),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly orderService: OrderService,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n    private readonly router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  transformOrders(orders: Order[]): Order[] {\r\n    orders.forEach(order => {\r\n      order.order_products.forEach(prod => {\r\n        if (prod.is_task_date_overdue) {\r\n          order.isReceiptDateOverdue = true;\r\n        }\r\n      });\r\n      if (order.statuses.length === 0) {\r\n        order.statuses = [{status: {value: 'Empty'}}];\r\n      }\r\n      order.list_ids = [...new Set(order.list_ids)];\r\n    });\r\n\r\n    return orders;\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedOrder = null;\r\n\r\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.currentPage = 1;\r\n      this.queryKey = newQueryKey;\r\n      this.isStartFirstPage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'accounting_type', value: 3},\r\n      {name: 'exclude_with_active_final_status', value: !this.finalStatusSelected},\r\n      {name: 'page', value: this.currentPage},\r\n    ];\r\n\r\n    if (!this.isShowAll) {\r\n      this.query.push({name: 'paginated', value: true});\r\n    }\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  paginate(event: any) {\r\n    if (!this.isStartFirstPage) {\r\n      this.currentPage = event.page + 1;\r\n      this.search$.next();\r\n    }\r\n  }\r\n\r\n  paginateToFistPage() {\r\n    if (this.isStartFirstPage) {\r\n      this.paginator?.changePage(0);\r\n    }\r\n\r\n    this.isStartFirstPage = false;\r\n  }\r\n\r\n  onShowAll(value: boolean) {\r\n    this.isShowAll = value;\r\n\r\n    if (!this.isShowAll) {\r\n      this.currentPage = 1;\r\n    }\r\n\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectStatuses(ids: number[]) {\r\n    this.searchForm.get('active_status__in').patchValue(ids?.join(',') || null);\r\n    this.search$.next();\r\n  }\r\n\r\n  onSelectRootList(id: number) {\r\n    this.searchForm.get('order_root_list_id').patchValue(id);\r\n    this.search$.next();\r\n  }\r\n\r\n  onCreateOrder() {\r\n    this.modalService.confirm('success').subscribe(confirm => {\r\n      if (confirm) {\r\n        this.isCreating = true;\r\n        this.orderService.create({accounting_type: 3, can_select_supplier: false}).subscribe(order => {\r\n          this.isCreating = false;\r\n          this.router.navigate(['/manufacturing/orders/order/', order.id]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private onRemoveOrder() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm),\r\n      tap(() => this.isCreating = true),\r\n      switchMap(() => this.orderService.delete(this.selectedOrder.id)),\r\n      tap(() => this.isCreating = false),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  private onGoToOderPage() {\r\n    window.open('/manufacturing/orders/order/' + this.selectedOrder?.id, '_blank');\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Execution Orders</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        pButton\r\n        (click)=\"onCreateOrder()\"\r\n        [loading]=\"isCreating\"\r\n        type=\"button\"\r\n        icon=\"pi pi-plus\"\r\n        label=\"Create Order to Own Production\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form mb-3\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>From</label>\r\n            <p-calendar\r\n              formControlName=\"created_after\"\r\n              dataType=\"date\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"search$.next()\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>To</label>\r\n            <p-calendar\r\n              dataType=\"date\"\r\n              formControlName=\"created_before\"\r\n              [showButtonBar]=\"true\"\r\n              dateFormat=\"dd/mm/yy\"\r\n              [readonlyInput]=\"true\"\r\n              (ngModelChange)=\"search$.next()\"\r\n            >\r\n            </p-calendar>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Root List</label>\r\n            <pek-root-list-picker\r\n              (selectRootListId)=\"onSelectRootList($event)\"\r\n              [accountingType]=\"3\"\r\n            ></pek-root-list-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Status</label>\r\n            <pek-multi-statuses-picker\r\n              (selectStatuses)=\"onSelectStatuses($event)\"\r\n              (isFinalStatusSelected)=\"finalStatusSelected = $event\"\r\n              [accountingType]=\"3\"\r\n            ></pek-multi-statuses-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3 d-flex align-items-center\">\r\n          <p class=\"subtitle\" *ngIf=\"!selectedOrder\">Choose the Order to edit</p>\r\n        </div>\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-3\"></div>\r\n        <div class=\"col-3 d-flex\">\r\n          <p-menubar class=\"ml-auto menubar\" [model]=\"menuItems\" [class.disabled]=\"!selectedOrder\"></p-menubar>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n    <div class=\"table-pagination-preloader\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        [rows]=\"10\"\r\n        [scrollable]=\"true\"\r\n        [(selection)]=\"selectedOrder\"\r\n        scrollHeight=\"calc(100vh - 24.5rem)\"\r\n        [value]=\"orders$ | async\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 15%\" class=\"index-header text-center\">List ID's</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Date</th>\r\n            <th style=\"width: 10%\" class=\"text-center\">Order ID</th>\r\n            <th style=\"width: 20%\">Comment</th>\r\n            <th style=\"width: 25%\">Root Lists</th>\r\n            <th style=\"width: 15%\" class=\"text-center\">Status</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-order let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"order\" [class.time-overdue]=\"order.isReceiptDateOverdue\">\r\n            <td style=\"width: 5%\" class=\"text-center\">\r\n              {{(currentPage - 1) * 10 + i + 1}}\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n                <span *ngFor=\"let id of order.list_ids; let idx = index\">\r\n                  {{id}}<span *ngIf=\"idx < order.list_ids.length - 1\">,</span>\r\n                </span>\r\n            </td>\r\n            <td style=\"width: 15%\" class=\"text-center\">\r\n              <div>{{order.created | date: 'dd/MM/yyyy HH:mm'}}</div>\r\n            </td>\r\n            <td style=\"width: 10%\" class=\"text-center\">\r\n              {{order.id}} <b *ngIf=\"order.contains_rma_invoices\">(RMA)</b>\r\n            </td>\r\n            <td style=\"width: 20%\">\r\n              <div>{{order.comment}}</div>\r\n            </td>\r\n            <td style=\"width: 25%\">\r\n              <ng-container *ngIf=\"order.root_production_list_products.length > 0\">\r\n                {{order.root_production_list_products[0].nomenclature.code}}\r\n                ~{{order.root_production_list_products[0].nomenclature.name}}\r\n              </ng-container>\r\n              <ng-container *ngIf=\"order.root_production_list_products?.length > 0\">\r\n                ({{order.root_production_list_products?.length}})\r\n              </ng-container>\r\n            </td>\r\n            <td style=\"width: 15%\">\r\n              <div\r\n                *ngFor=\"let statusChild of order.statuses\"\r\n                class=\"text-center\"\r\n              >\r\n                <div *ngIf=\"statusChild.is_active\">\r\n                  {{statusChild.status.value}}\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr class=\"table-pagination-preloader\" *ngIf=\"isLoading\">\r\n            <div>\r\n              <i class=\"fas fa-circle-notch fa-spin fa-3x\"></i>\r\n            </div>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"7\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n      <div class=\"pagination-preloader pagination-preloader_bord\" *ngIf=\"isLoading\">\r\n        <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n      </div>\r\n      <div\r\n        *ngIf=\"!isShowAll\"\r\n        class=\"paginator-wrapper\"\r\n        [class.paginator-wrapper_hide]=\"ordersCount === 0\"\r\n      >\r\n        <p-paginator\r\n          #paginator\r\n          [rows]=\"10\"\r\n          [totalRecords]=\"ordersCount\"\r\n          (onPageChange)=\"paginate($event)\"\r\n        >\r\n        </p-paginator>\r\n        <p-button\r\n          (click)=\"onShowAll(true)\"\r\n          class=\"paginator-all\"\r\n          type=\"button\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          All\r\n        </p-button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isShowAll\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"onShowAll(false)\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject, switchMap} from 'rxjs';\r\nimport {Task} from '@shared/models/task';\r\nimport {debounceTime, distinctUntilChanged, filter, finalize, map, tap} from 'rxjs/operators';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {TreeNode} from 'primeng/api';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {Category} from '../../../product-structure/models/category';\r\nimport {cloneDeep} from 'lodash-es';\r\nimport {ProductStructureCategoryService} from '../../../product-structure/services/product-structure-category.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Table} from 'primeng/table';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-plan-list',\r\n  templateUrl: './manufacturing-plan-list.component.html',\r\n  styleUrls: ['./manufacturing-plan-list.component.scss']\r\n})\r\nexport class ManufacturingPlanListComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('dt') dt: Table;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    list_product__nomenclature__name: [null],\r\n    list_product__nomenclature__code: [null],\r\n    statuses: [null],\r\n    type_with_number: [''],\r\n  });\r\n\r\n  first = 0;\r\n\r\n  statuses = [\r\n    {id: 0, name: 'Not processed', value: '0'},\r\n    {id: 1, name: 'Deficit', value: '1'},\r\n    {id: 2, name: 'Rework', value: '2'},\r\n    {id: 3, name: 'Ordered', value: '3'},\r\n    {id: 4, name: 'On stock', value: '4'},\r\n  ];\r\n\r\n  mode: 'hierarchy' | 'list' = 'hierarchy';\r\n\r\n  isDeleting = false;\r\n\r\n  tasks: Task[] = [];\r\n  categories: Category[] = [];\r\n  structureCategories: TreeNode[];\r\n\r\n  selectedTasksNodes: TreeNode<any>[] = [];\r\n\r\n  ownProductionCategorizedList: TreeNode<Task>[];\r\n\r\n  expanseMap = {};\r\n\r\n  currentPage = 1;\r\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n  query: QuerySearch[] = [];\r\n  isLoading = true;\r\n  selectedTasks: Task[] = [];\r\n\r\n  isStartFirstPage = false;\r\n  isShowAll = false;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  name$: Subject<void> = new Subject<void>();\r\n  code$: Subject<void> = new Subject<void>();\r\n  serial$: Subject<void> = new Subject<void>();\r\n\r\n  tasks$: Observable<Task[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.taskService.get(this.query)),\r\n    tap(response => this.tasksCount = response.length),\r\n    map(response => this.filterTasks(response)),\r\n    tap(() => this.paginateToFistPage()),\r\n    tap(() => this.getCategories()),\r\n    tap(() => this.fillCategorizedTree()),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  tasksCount = 0;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly modalService: ModalService,\r\n    private readonly taskService: TaskService,\r\n    private categoryService: ProductStructureCategoryService,\r\n    private readonly router: Router,\r\n    private readonly route: ActivatedRoute,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tasks$.subscribe();\r\n\r\n    this.name$.pipe(\r\n      debounceTime(150),\r\n      tap(() => this.search$.next()),\r\n      distinctUntilChanged(),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n\r\n    this.code$.pipe(\r\n      debounceTime(150),\r\n      tap(() => this.search$.next()),\r\n      distinctUntilChanged(),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n\r\n    this.serial$.pipe(\r\n      debounceTime(150),\r\n      tap(() => this.search$.next()),\r\n      distinctUntilChanged(),\r\n      untilDestroyed(this)\r\n    ).subscribe();\r\n\r\n    this.getStructureCategories();\r\n  }\r\n\r\n  getStructureCategories() {\r\n    if (this.structureCategories) {\r\n      this.mapExpansion();\r\n    }\r\n    this.categoryService.get().pipe(\r\n      tap((categories) => this.createStructureCategoriesTree(categories))\r\n    ).subscribe();\r\n  }\r\n\r\n  createStructureCategoriesTree(data) {\r\n    const dd = [];\r\n    data.forEach(element => {\r\n      const ins = {data: element, expanded: false};\r\n      if (this.expanseMap) {\r\n        ins.expanded = this.expanseMap[element.id];\r\n      }\r\n      dd.push(ins);\r\n    });\r\n    const root = [];\r\n    const idMapping = dd.reduce((acc, el, i) => {\r\n      acc[el.data.id] = i;\r\n      return acc;\r\n    }, {});\r\n    dd.forEach(el => {\r\n      // Handle the root element\r\n      if (el.data.parent === null) {\r\n        root.push(el);\r\n        return;\r\n      }\r\n      // Use our mapping to locate the parent element in our data array\r\n      const parentEl = dd[idMapping[el.data.parent]];\r\n      // Add our current el to its parent's `children` array\r\n      parentEl.children = [...(parentEl.children || []), el];\r\n      if (parentEl.children.length === 0) {\r\n        delete parentEl.children;\r\n      }\r\n\r\n    });\r\n    this.structureCategories = root;\r\n    // this.ownProductionCategorizedList = cloneDeep(this.categories);\r\n  }\r\n\r\n  mapExpansion() {\r\n    this.structureCategories.forEach(element => {\r\n      this.createExpanseMap(element);\r\n    });\r\n  }\r\n\r\n  createExpanseMap(node) {\r\n    if (node.expanded) {\r\n      this.expanseMap[node.data.id] = node.expanded;\r\n    } else {\r\n      this.expanseMap[node.data.id] = false;\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(element => {\r\n        this.createExpanseMap(element);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectMode(mode: 'hierarchy' | 'list') {\r\n    this.mode = mode;\r\n  }\r\n\r\n  filterTasks(tasks: Task[]) {\r\n    let newTasks: Task[] = [];\r\n\r\n    tasks.forEach(task => {\r\n      if (!newTasks.find(t => t.family_id === task.family_id && t.list_product.nomenclature.id === task.list_product.nomenclature.id\r\n        && t.technology === task.technology)) {\r\n\r\n        const filteredTasks = tasks.filter(t => t.family_id === task.family_id && t.list_product.nomenclature.id\r\n          === task.list_product.nomenclature.id && t.technology === task.technology);\r\n\r\n        const count = tasks.filter(t => t.family_id === task.family_id && t.list_product.nomenclature.id === task.list_product.nomenclature.id\r\n          && t.technology === task.technology).length;\r\n        task.required_quantity = task.required_quantity * count;\r\n        task.serials = [];\r\n        // @ts-ignore\r\n        task.production_list_id = filteredTasks.at(-1).production_list_id;\r\n\r\n        filteredTasks.forEach(t => {\r\n          if (task.serial_numbers.length > 0) {\r\n            t.serial_numbers.forEach(serial => {\r\n              task.serials.push(serial);\r\n            });\r\n          } else if (task.serial_products.length > 0) {\r\n            t.serial_products.forEach(serial => {\r\n              task.serials.push(serial.serial_number);\r\n            });\r\n          }\r\n        });\r\n\r\n        task.ids = tasks.filter(t => t.family_id === task.family_id && t.list_product.nomenclature.id === task.list_product.nomenclature.id\r\n          && t.technology === task.technology).map(t => t.id)\r\n        newTasks.push(task);\r\n      }\r\n    });\r\n\r\n\r\n    newTasks.sort((a, b) => new Date(a.created) > new Date(b.created) ? -1 : 1);\r\n    this.tasks = newTasks;\r\n    this.tasks = this.tasks.map(t => t);\r\n\r\n    return newTasks;\r\n  }\r\n\r\n  paginateToFistPage() {\r\n    if (this.isStartFirstPage) {\r\n      this.first = 0;\r\n      this.paginator?.changePage(0);\r\n    }\r\n\r\n    this.isStartFirstPage = false;\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedTasks = [];\r\n    this.selectedTasksNodes = [];\r\n    this.ownProductionCategorizedList = [];\r\n    this.tasks = [];\r\n\r\n\r\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.currentPage = 1;\r\n      this.queryKey = newQueryKey;\r\n      this.isStartFirstPage = true;\r\n    }\r\n\r\n    this.query = [\r\n      {name: 'is_root', value: true},\r\n      // {name: 'page', value: this.currentPage},\r\n      // {name: 'statuses', value: [0, 1, 2, 3]}\r\n    ];\r\n\r\n    if (!this.searchForm.get('statuses').value) {\r\n      this.query.push({name: 'statuses', value: [0, 1, 2, 3]});\r\n    }\r\n\r\n    // if (!this.isShowAll) {\r\n    //   this.query.push({name: 'paginated', value: true},);\r\n    // }\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getStatus(status: string): string {\r\n    switch (status) {\r\n      case '0':\r\n        return 'Not processed';\r\n      case '1':\r\n        return 'Deficit';\r\n      case '2':\r\n        return 'Rework';\r\n      case '3':\r\n        return 'Ordered';\r\n      case '4':\r\n        return 'On stock';\r\n    }\r\n  }\r\n\r\n  paginate($event: any) {\r\n\r\n  }\r\n\r\n  onShowAll(b: boolean) {\r\n\r\n  }\r\n\r\n  getTippyContent(task: Task): string {\r\n    let childContent = '';\r\n    task.serials.forEach((serial, idx) => {\r\n      childContent += `\r\n          <li>${idx + 1}. ${serial.type_with_number ? serial.type_with_number : serial.id}</li>\r\n      `;\r\n    });\r\n\r\n    return `<ul class=\"plan-row\">${childContent}</ul>`;\r\n  }\r\n\r\n  getCategories() {\r\n    this.categories = this.tasks.filter(t => t.root_nomenclature?.category).map(t => t.root_nomenclature.category);\r\n    this.categories = this.adapterService.removeDuplicates(this.categories, x => x.id) as Category[];\r\n\r\n    this.categories.forEach(category => {\r\n      category.categories = this.adapterService.removeDuplicates(\r\n        this.tasks\r\n          .filter(t => t.root_nomenclature?.category?.id === category.id)\r\n          .map(t => t.root_nomenclature),\r\n        x => x.id) as Nomenclature[];\r\n\r\n      category.categories.forEach(cat => {\r\n        cat.tasks = this.adapterService.removeDuplicates(this.tasks\r\n          .filter(t => t.root_nomenclature?.id === cat.id)\r\n          .map(t => t), x => x.list_product.nomenclature.id) as Task[];\r\n\r\n        cat.tasks = cat.tasks.map(t => {\r\n          return {\r\n            ...t,\r\n          };\r\n        });\r\n\r\n        cat.tasks.map(t => t).forEach(task => {\r\n          task.required_quantity = this.tasks\r\n            .filter(t => t.list_product.nomenclature.id === task.list_product.nomenclature.id)\r\n            .reduce((sum, t) => sum += t.required_quantity, 0);\r\n\r\n          task.tasks = this.tasks.filter(t => t.list_product.nomenclature.id === task.list_product.nomenclature.id);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  fillCategorizedTree(): void {\r\n    const categoriesTemp: { id: number, level: number, parentId: number, name: string }[] = [];\r\n\r\n    this.tasks.forEach(task => {\r\n      if (task.root_nomenclature && task.root_nomenclature.root_category) {\r\n        const rootCatId = task.root_nomenclature.root_category.id;\r\n        const rootCatName = task.root_nomenclature.root_category.name;\r\n        const rootLevel = 1;\r\n\r\n        const catId = task.root_nomenclature.id;\r\n        const catName = task.root_nomenclature.name;\r\n        const catLevel = 2;\r\n\r\n        const rootExistsIndex = categoriesTemp.findIndex(cat => cat.id === rootCatId && rootLevel === cat.level);\r\n\r\n        if (rootExistsIndex < 0) {\r\n          categoriesTemp.push({\r\n            id: rootCatId,\r\n            level: rootLevel,\r\n            name: rootCatName,\r\n            parentId: null\r\n          });\r\n        }\r\n\r\n        const catExistsIndex = categoriesTemp.findIndex(cat => cat.id === catId && catLevel === cat.level);\r\n\r\n        if (catExistsIndex < 0) {\r\n          categoriesTemp.push({\r\n            id: catId,\r\n            level: catLevel,\r\n            name: catName,\r\n            parentId: rootCatId\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    const temp = cloneDeep(this.structureCategories);\r\n\r\n    temp.forEach(node => {\r\n      this.appendCategories(node, categoriesTemp);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.fillWithTheData(node, this.tasks);\r\n    });\r\n\r\n    temp.forEach(node => {\r\n      this.removeUpdateEmptyCategories(node);\r\n    });\r\n\r\n    this.ownProductionCategorizedList = [...temp];\r\n\r\n    if (this.ownProductionCategorizedList.every(f => f.children.length === 0)) {\r\n      this.ownProductionCategorizedList = [];\r\n    }\r\n  }\r\n\r\n  appendCategories(node: TreeNode, categoriesTemp: {\r\n    id: number,\r\n    level: number,\r\n    parentId: number,\r\n    name: string\r\n  }[]): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    categoriesTemp.forEach(cat => {\r\n      if (cat.parentId === node.data.id) {\r\n        node.children.push({\r\n          data: {\r\n            id: cat.id,\r\n            name: cat.name,\r\n            level: cat.level,\r\n            parentId: cat.parentId,\r\n            isCategory: true,\r\n            categories: 0\r\n          },\r\n          expanded: false,\r\n          children: []\r\n        });\r\n      }\r\n    });\r\n\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.appendCategories(childNode, categoriesTemp);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillWithTheData(node: TreeNode, orders): void {\r\n    if (!node.children) {\r\n      node.children = [];\r\n    }\r\n\r\n    if (node.data.isCategory) {\r\n      orders.forEach(task => {\r\n        if (task.root_nomenclature) {\r\n          const catId = task.root_nomenclature.id;\r\n          if (node.data.id === catId) {\r\n            const existingCatChildIndex = node.children.findIndex(cat => cat.data.id === task.list_product.nomenclature.id);\r\n\r\n            if (existingCatChildIndex < 0) {\r\n              node.children.push({\r\n                data: {\r\n                  id: task.list_product.nomenclature.id,\r\n                  name: task.list_product.nomenclature.name,\r\n                  level: 3,\r\n                  categories: 0,\r\n                },\r\n                expanded: false,\r\n                children: [{\r\n                  data: {task, level: 4},\r\n                  expanded: false,\r\n                  children: []\r\n                }]\r\n              });\r\n            } else {\r\n              node.children[existingCatChildIndex].children.push({\r\n                data: {task, level: 4},\r\n                expanded: false,\r\n                children: []\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.fillWithTheData(childNode, orders);\r\n      });\r\n    }\r\n  }\r\n\r\n  removeUpdateEmptyCategories(node: TreeNode): void {\r\n    if (!node.data.isCategory && !node.data.task) {\r\n      let hideFromTable = true;\r\n      const hasContent = node.children.filter(child => child.data.task).length > 0;\r\n      if (hasContent) {\r\n        hideFromTable = false;\r\n      }\r\n\r\n      node.children.forEach(childNode => {\r\n        if (hideFromTable) {\r\n          const hasContentInner = childNode.children.filter(child => child.data.task).length > 0;\r\n          if (hasContentInner) {\r\n            hideFromTable = false;\r\n          }\r\n        }\r\n\r\n        childNode.children.forEach(childNode2 => {\r\n          if (hideFromTable) {\r\n            const hasContentInner = childNode2.children.filter(child => child.data.task).length > 0;\r\n            if (hasContentInner) {\r\n              hideFromTable = false;\r\n            }\r\n          }\r\n\r\n          childNode2.children.forEach(childNode3 => {\r\n            if (hideFromTable) {\r\n              const hasContentInner = childNode3.children.filter(child => child.data.task).length > 0;\r\n              if (hasContentInner) {\r\n                hideFromTable = false;\r\n              }\r\n            }\r\n            childNode3.children.forEach(childNode4 => {\r\n              if (hideFromTable) {\r\n                const hasContentInner = childNode4.children.filter(child => child.data.task).length > 0;\r\n                if (hasContentInner) {\r\n                  hideFromTable = false;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        });\r\n      });\r\n      node.data.hideFromTable = hideFromTable;\r\n    }\r\n\r\n    node.data.categories = node.children.length;\r\n    if (node.children) {\r\n      node.children.forEach((childNode, indexChild) => {\r\n        this.removeUpdateEmptyCategories(childNode);\r\n      });\r\n    }\r\n  }\r\n\r\n  onExpandAll() {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, true);\r\n    });\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n\r\n  onCollapseAll() {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(node => {\r\n      this.expandCollapseRecursive(node, false);\r\n    });\r\n    this.ownProductionCategorizedList = temp;\r\n  }\r\n\r\n  expandCollapseRecursive(node: TreeNode, isExpand: boolean): void {\r\n    node.expanded = isExpand;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.expandCollapseRecursive(childNode, isExpand);\r\n      });\r\n    }\r\n  }\r\n\r\n  goToSelectedPlans() {\r\n    const ids = this.selectedTasks.map(t => t.id).join(',');\r\n\r\n    const url = this.router.serializeUrl(\r\n      this.router.createUrlTree(['plan', ids], {relativeTo: this.route})\r\n    );\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  goToSelectedNodesPlans() {\r\n    const ids = this.selectedTasksNodes.map(t => t.data.task.id).join(',');\r\n    this.router.navigate(['plan', ids], {relativeTo: this.route});\r\n  }\r\n\r\n  onSplitPlan() {\r\n    this.taskService.splitTasksDialog(this.selectedTasks[0]).pipe(\r\n      filter(response => !!response),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  onSplitNodePlan() {\r\n    this.taskService.splitTasksDialog(this.selectedTasksNodes[0].data).pipe(\r\n      filter(response => !!response),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n  onDeletePlan() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isDeleting = true;\r\n      this.taskService.deletePlans(this.selectedTasks[0].ids).pipe(\r\n        finalize(() => this.isDeleting = false)\r\n      ).subscribe(() => {\r\n        const taskIndex = this.tasks.findIndex(t => t.id === this.selectedTasks[0].id);\r\n        this.tasks.splice(taskIndex, 1);\r\n        this.fillCategorizedTree();\r\n\r\n        this.selectedTasks = [];\r\n        this.selectedTasksNodes = [];\r\n      });\r\n    });\r\n  }\r\n\r\n  onDeleteNodePlan() {\r\n    console.log(this.selectedTasksNodes);\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(() => {\r\n      this.isDeleting = true;\r\n      this.taskService.deletePlans(this.selectedTasksNodes[0].data.task.ids).pipe(\r\n        finalize(() => this.isDeleting = false)\r\n      ).subscribe(() => {\r\n        const taskIndex = this.tasks.findIndex(t => t.id === this.selectedTasksNodes[0].data.task.id);\r\n        this.tasks.splice(taskIndex, 1);\r\n        this.fillCategorizedTree();\r\n\r\n        this.selectedTasks = [];\r\n        this.selectedTasksNodes = [];\r\n      });\r\n    });\r\n  }\r\n\r\n  goToAllPlans() {\r\n    const url = this.router.serializeUrl(\r\n      this.router.createUrlTree(['all'], {relativeTo: this.route})\r\n    );\r\n\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  disabled() {\r\n    return this.selectedTasksNodes.some(n => !n.data?.task)\r\n  }\r\n\r\n  expandCollapse(nodes: TreeNode[], isToExpand) {\r\n    const temp = cloneDeep(this.ownProductionCategorizedList);\r\n    temp.forEach(n => {\r\n      nodes.forEach(node => {\r\n        this.makeRow(n, node, isToExpand)\r\n      })\r\n    })\r\n    this.ownProductionCategorizedList = temp;\r\n\r\n  }\r\n\r\n  makeRow(node: TreeNode, dat, isExpanded) {\r\n    if (node.data?.id === dat.data?.id) {\r\n      this.expandCollapseRecursive(node, isExpanded);\r\n    } else {\r\n      if (node.children) {\r\n        node.children.forEach(element => {\r\n          this.makeRow(element, dat, isExpanded);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Plans</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-calendar\"\r\n        routerLink=\"/manufacturing/production-calendar\"\r\n        label=\"Production Calendar\"\r\n      ></button>\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-chart-line\"\r\n        label=\"Workload\"\r\n      ></button>\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-sliders-v\"\r\n        (click)=\"goToAllPlans()\"\r\n        label=\"All Plans\"\r\n      ></button>\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-table\"\r\n        label=\"Hierarchy\"\r\n        [disabled]=\"mode === 'hierarchy'\"\r\n        (click)=\"onSelectMode('hierarchy')\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-list\"\r\n        label=\"List\"\r\n        [disabled]=\"mode === 'list'\"\r\n        (click)=\"onSelectMode('list')\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Status</label>\r\n            <p-dropdown\r\n              [showClear]=\"true\"\r\n              [options]=\"statuses\"\r\n              formControlName=\"statuses\"\r\n              (ngModelChange)=\"search$.next()\"\r\n              optionValue=\"value\"\r\n              optionLabel=\"name\"\r\n              placeholder=\"Choose Status\"\r\n            >\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              pInputText\r\n              placeholder=\"Enter a Name\"\r\n              formControlName=\"list_product__nomenclature__name\"\r\n              (ngModelChange)=\"name$.next()\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Code</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter a Code\"\r\n              pInputText\r\n              formControlName=\"list_product__nomenclature__code\"\r\n              (ngModelChange)=\"code$.next()\"\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Serial Number</label>\r\n            <input\r\n              pInputText\r\n              formControlName=\"type_with_number\"\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              id=\"type_with_number\"\r\n              (ngModelChange)=\"serial$.next()\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <ng-container *ngIf=\"mode === 'list'\">\r\n      <div class=\"table-pagination-preloader\">\r\n        <p-table\r\n          #dt\r\n          selectionMode=\"multiple\"\r\n          [rows]=\"10\"\r\n          [paginator]=\"tasks.length > 0\"\r\n          [scrollable]=\"true\"\r\n          scrollHeight=\"calc(100vh - 24.25rem)\"\r\n          [value]=\"tasks\"\r\n          [(selection)]=\"selectedTasks\"\r\n          [(first)]=\"first\"\r\n        >\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n              <th class=\"text-center\" style=\"width: 20%;\">Serial Numbers</th>\r\n              <th class=\"text-center\" style=\"width: 10%;\">List ID</th>\r\n              <th style=\"width: 15%;\"> Code</th>\r\n              <th style=\"width: 25%;\">Name</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">Created</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">Status</th>\r\n              <th style=\"width: 10%;\" class=\"text-center\">Quantity</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"d-flex table-caption\">\r\n              <button\r\n                class=\"ml-auto mr-2 p-button-icon\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-chart-pie\"\r\n                label=\"Add Split\"\r\n                [disabled]=\"selectedTasks.length !== 1 || selectedTasks[0]?.required_quantity === 1\"\r\n                (click)=\"onSplitPlan()\"\r\n              >\r\n              </button>\r\n              <button\r\n                class=\"p-button-icon mr-2\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-chart-bar\"\r\n                label=\"Selected Plans\"\r\n                [disabled]=\"selectedTasks.length === 0\"\r\n                (click)=\"goToSelectedPlans()\"\r\n              >\r\n              </button>\r\n              <button\r\n                class=\"p-button-icon p-button-danger\"\r\n                pButton\r\n                type=\"button\"\r\n                icon=\"pi pi-trash\"\r\n                label=\"Delete Plan\"\r\n                [loading]=\"isDeleting\"\r\n                [disabled]=\"selectedTasks.length !== 1\"\r\n                (click)=\"onDeletePlan()\"\r\n              >\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-task let-i=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"task\">\r\n              <td style=\"width: 5%;\" class=\"text-center\">{{i + 1 }}</td>\r\n              <td style=\"width: 20%;\" class=\"text-center\">\r\n                <ng-container *ngIf=\"task.serials.length > 0\">\r\n                  <div pekTippy [content]=\"getTippyContent(task)\" class=\"serials\">\r\n                    <span>{{1}}\r\n                      . {{task.serials[0].type_with_number ? task.serials[0].type_with_number : task.serials[0].id}}</span>\r\n                    <span *ngIf=\"task.serials.length > 1\">...</span>\r\n                  </div>\r\n                </ng-container>\r\n\r\n              </td>\r\n              <td class=\"text-center\" style=\"width: 10%\">\r\n                <a [routerLink]=\"['/warehouse/production-lists', task.production_list_id]\" target=\"_blank\">\r\n                {{task.production_list_id}}\r\n                </a>\r\n              </td>\r\n              <td style=\"width: 15%;\">\r\n                <a\r\n                  rel=\"noopener noreferrer\"\r\n                  [routerLink]=\"['plan', task.id]\"\r\n                  routerLinkActive=\"router-link-active\"\r\n                  target=\"_blank\"\r\n                >\r\n                  {{task.list_product.nomenclature.code}}\r\n                  <b *ngIf=\"task.contains_refunded_positions\">(RMA)</b>\r\n                </a>\r\n              </td>\r\n              <td style=\"width: 25%;\">\r\n                <b *ngIf=\"task.list_product.nomenclature.bulk_or_serial === '1'\">(S) </b>\r\n                <b *ngIf=\"task.list_product.nomenclature.has_technical_equipment\">(T) </b>\r\n                {{task.list_product.nomenclature.name}}\r\n              </td>\r\n              <td style=\"width: 10%;\" class=\"text-center\">\r\n                {{task.created | date: 'dd/MM/y'}}\r\n              </td>\r\n              <td style=\"width: 10%;\" class=\"text-center\">\r\n                {{task.status}}\r\n              </td>\r\n              <td style=\"width: 10%;\" class=\"text-center\">\r\n                {{task.required_quantity}}\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n              <td class=\"text-center p-4\" [attr.colspan]=\"16\">\r\n                <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n                <span *ngIf=\"!isLoading\">No Records Found</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"paginatorright\">\r\n            <p-button\r\n              type=\"button\"\r\n              (click)=\"dt.paginator = false\"\r\n              styleClass=\"p-button-text\"\r\n            >\r\n              All\r\n            </p-button>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div *ngIf=\"!dt.paginator && !isLoading && tasks.length > 0\" class=\"paginator-return-pagination\">\r\n        <p-button\r\n          type=\"button\"\r\n          (click)=\"dt.paginator = true\"\r\n          styleClass=\"p-button-text\"\r\n        >\r\n          Return pagination\r\n        </p-button>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"mode === 'hierarchy'\">\r\n      <p-treeTable\r\n        [value]=\"ownProductionCategorizedList\"\r\n        selectionMode=\"multiple\"\r\n        [scrollable]=\"true\" scrollHeight=\"calc(100vh - 24.5rem)\"\r\n        [(selection)]=\"selectedTasksNodes\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"padding-left: 48px; width: 30%\">Name</th>\r\n            <th style=\"width: 20%\">Code</th>\r\n            <th style=\"width: 20%\" class=\"text-center\">Serial Numbers</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">List ID</th>\r\n            <th style=\"width: 8%\" class=\"text-center\">Created</th>\r\n            <th style=\"width: 7%\" class=\"text-center\">Status</th>\r\n            <th style=\"width: 8%;\" class=\"text-center\">Quantity</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex table-caption\">\r\n            <button\r\n              [disabled]=\"!selectedTasksNodes.length\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-down\"\r\n              label=\"Expand\"\r\n              class=\"ml-auto mr-2\"\r\n              (click)=\"expandCollapse(selectedTasksNodes, true)\"\r\n            ></button>\r\n            <button\r\n              [disabled]=\"!selectedTasksNodes.length\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-up\"\r\n              class=\"mr-2\"\r\n              label=\"Collapse\"\r\n              (click)=\"expandCollapse(selectedTasksNodes, false)\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-down\"\r\n              label=\"Expand All\"\r\n              class=\"mr-2\"\r\n              (click)=\"onExpandAll()\"\r\n              [disabled]=\"isLoading\"\r\n            ></button>\r\n            <button\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-angle-up\"\r\n              label=\"Collapse All\"\r\n              class=\"mr-2\"\r\n              (click)=\"onCollapseAll()\"\r\n              [disabled]=\"isLoading\"\r\n            ></button>\r\n            <button\r\n              class=\"mr-2 p-button-icon\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-chart-pie\"\r\n              label=\"Add Split\"\r\n              [disabled]=\"selectedTasksNodes.length !== 1 || disabled() || selectedTasksNodes[0]?.data?.task?.required_quantity === 1\"\r\n              (click)=\"onSplitNodePlan()\"\r\n            >\r\n            </button>\r\n            <button\r\n              class=\"p-button-icon mr-2\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-chart-bar\"\r\n              label=\"Selected Plans\"\r\n              [disabled]=\"selectedTasksNodes.length === 0 || disabled()\"\r\n              (click)=\"goToSelectedNodesPlans()\"\r\n            >\r\n            </button>\r\n            <button\r\n              class=\"p-button-icon p-button-danger\"\r\n              pButton\r\n              type=\"button\"\r\n              icon=\"pi pi-trash\"\r\n              label=\"Delete Plan\"\r\n              [loading]=\"isDeleting\"\r\n              [disabled]=\"selectedTasksNodes.length !== 1 || disabled()\"\r\n              (click)=\"onDeleteNodePlan()\"\r\n            >\r\n            </button>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n          <tr *ngIf=\"!rowData.hideFromTable\" [ttRow]=\"rowNode\" [ttSelectableRow]=\"rowNode\">\r\n            <td style=\"width: 30%\" class=\"word-break\">\r\n              <div class=\"toggle-row\">\r\n                <p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n                <span [class.bold]=\"!rowData.task\" *ngIf=\"!rowData.task\">\r\n                      {{rowData.name}}\r\n                  <i *ngIf=\"!rowData.task\" style=\"font-style: normal\">(L {{rowData.categories}})</i>\r\n                    </span>\r\n                <span *ngIf=\"rowData.task\">\r\n                        <b *ngIf=\"rowData.task && rowData.task.serial_numbers.length > 0\">(S)</b>\r\n                      <b *ngIf=\"rowData.task.list_product.nomenclature.has_technical_equipment\">(T)</b>\r\n                  {{rowData.task.list_product.nomenclature.name}} (L {{rowData.task.required_quantity}})\r\n                    </span>\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 20%\">\r\n              <span *ngIf=\"rowData.task\">\r\n                <a rel=\"noopener noreferrer\" class=\"plan-link\" target=\"_blank\" [routerLink]=\"['plan', rowData.task.id]\">\r\n                  {{rowData.task.list_product.nomenclature.code}}\r\n                  <b *ngIf=\"rowData.task.contains_refunded_positions\">(RMA)</b>\r\n                </a>\r\n              </span>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 20%\">\r\n              <ng-container *ngIf=\"rowData.task?.serials?.length > 0\">\r\n                <div pekTippy [content]=\"getTippyContent(rowData.task)\" class=\"serials\">\r\n                  <span>{{1}}\r\n                    . {{rowData.task.serials[0].type_with_number ? rowData.task.serials[0].type_with_number : rowData.task.serials.serial.id}}</span>\r\n                  <span *ngIf=\"rowData.task.serials.length > 1\">...</span>\r\n                </div>\r\n              </ng-container>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 7%\">\r\n              <span *ngIf=\"rowData.task\">\r\n                <a [routerLink]=\"['/warehouse/production-lists', rowData.task.production_list_id]\" target=\"_blank\">\r\n                {{rowData.task.production_list_id}}\r\n                </a>\r\n              </span>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 8%\">\r\n              <span *ngIf=\"rowData.task\">\r\n                {{rowData.task.created | date: 'dd/MM/y' }}\r\n              </span>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 7%\">\r\n              <span *ngIf=\"rowData.task\">\r\n                {{rowData.task.status}}\r\n              </span>\r\n            </td>\r\n            <td class=\"text-center\" style=\"width: 7%\">\r\n              <span *ngIf=\"rowData.task\">\r\n                {{rowData.task.required_quantity}}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-treeTable>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-plan',\r\n  templateUrl: './manufacturing-plan.component.html',\r\n  styleUrls: ['./manufacturing-plan.component.scss']\r\n})\r\nexport class ManufacturingPlanComponent implements OnInit {\r\n  rootId: string;\r\n  constructor(\r\n    private readonly route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      map(params => params.get('rootId')),\r\n      tap(id => this.rootId = id),\r\n    ).subscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"manufacturing-plan\">\r\n  <pek-manufacturing-chart\r\n    *ngIf=\"rootId\"\r\n    [rootId]=\"rootId\"\r\n  ></pek-manufacturing-chart>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {BehaviorSubject, Observable, switchMap} from 'rxjs';\r\nimport {filter, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {EmployeePosition} from '@shared/models/employee-position';\r\nimport {EmployeePositionService} from '@shared/services/employee-position.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-positions',\r\n  templateUrl: './manufacturing-positions.component.html',\r\n  styleUrls: ['./manufacturing-positions.component.scss']\r\n})\r\nexport class ManufacturingPositionsComponent implements OnInit {\r\n\r\n  menuItems: MenuItem[] = [{\r\n    label: 'Selected Position',\r\n    items: [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'pi pi-pencil',\r\n        command: () => this.onEditPosition()\r\n      },\r\n      {\r\n        label: 'Remove',\r\n        icon: 'pi pi-trash',\r\n        command: () => this.onRemovePosition()\r\n      }\r\n    ]\r\n  }];\r\n\r\n  positions: EmployeePosition[] = [];\r\n  selectedPosition: EmployeePosition;\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n  isLoading = false;\r\n\r\n\r\n  positions$: Observable<EmployeePosition[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.employeePositionService.get()),\r\n    tap(positions => this.positions = positions),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  constructor(\r\n    private readonly modalService: ModalService,\r\n    private readonly employeePositionService: EmployeePositionService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.positions$.subscribe();\r\n  }\r\n\r\n  onAddPosition() {\r\n    this.employeePositionService.createEditPositionModal('create').pipe(\r\n      filter(position => !!position)\r\n    ).subscribe(position => this.positions.unshift(position));\r\n  }\r\n\r\n  private prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.selectedPosition = null;\r\n    this.positions = [];\r\n  }\r\n\r\n  private onEditPosition() {\r\n    this.employeePositionService.createEditPositionModal('edit', this.selectedPosition).pipe(\r\n      filter(position => !!position)\r\n    ).subscribe(position => {\r\n      const index = this.positions.findIndex(t => t.id === this.selectedPosition.id);\r\n      this.positions[index] = position;\r\n      this.selectedPosition = this.positions[index];\r\n    });\r\n  }\r\n\r\n  private onRemovePosition() {\r\n    this.modalService.confirm('danger').pipe(\r\n      filter(confirm => confirm)\r\n    ).subscribe(confirm => {\r\n      this.employeePositionService.delete(this.selectedPosition.id).subscribe(() => {\r\n        const index = this.positions.findIndex(e => e.id === this.selectedPosition.id);\r\n        this.positions.splice(index, 1);\r\n        this.selectedPosition = null;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Positions</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"New Position\" (click)=\"onAddPosition()\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"page__table\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"single\"\r\n        scrollHeight=\"calc(100vh - 18.8rem)\"\r\n        [scrollable]=\"true\"\r\n        [paginator]=\"positions.length > 0\"\r\n        [rows]=\"10\"\r\n        [(selection)]=\"selectedPosition\"\r\n        [value]=\"positions\"\r\n      >\r\n        <ng-template pTemplate=\"caption\">\r\n          <div class=\"d-flex\">\r\n            <p class=\"subtitle\" *ngIf=\"!selectedPosition\">Choose the Position to edit</p>\r\n            <p-menubar class=\"ml-auto\" [model]=\"menuItems\" [class.disabled]=\"!selectedPosition\"></p-menubar>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th style=\"width: 5%\" class=\"index-header text-center\">#</th>\r\n            <th style=\"width: 50%\">Name</th>\r\n            <th style=\"width: 45%\">Rate</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-position let-i=\"rowIndex\">\r\n          <tr [pSelectableRow]=\"position\">\r\n            <td style=\"width: 5%\" class=\"text-center\">{{i + 1 }}</td>\r\n            <td style=\"width: 50%\">{{position.title}}</td>\r\n            <td style=\"width: 45%\">{{position.rate}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"3\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >All\r\n          </p-button>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && positions.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Holiday} from '../../models/calendar';\r\nimport {CalendarService} from '../../services/calendar.service';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {finalize} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-production-calendar',\r\n  templateUrl: './manufacturing-production-calendar.component.html',\r\n  styleUrls: ['./manufacturing-production-calendar.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ManufacturingProductionCalendarComponent implements OnInit {\r\n  weekendDates: Date[];\r\n  holidays: Holiday[];\r\n  defaultDate: Date = new Date();\r\n  isSaving = false;\r\n\r\n  constructor(\r\n    private calendar: CalendarService,\r\n    private adapterService: AdapterService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(new Date());\r\n    this.defaultDate = new Date();\r\n    this.getDates();\r\n  }\r\n\r\n  getDates() {\r\n    this.calendar.getDates().subscribe(dates => {\r\n      dates = dates.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n\r\n      if (dates.length > 0) {\r\n        this.weekendDates = dates.map(date => {\r\n          const dd = new Date(date.date).setHours(0, 0, 0, 0);\r\n          return new Date(dd);\r\n        });\r\n      } else {\r\n        this.weekendDates = null;\r\n      }\r\n\r\n      this.holidays = dates.map(date => {\r\n        date.date = new Date(new Date(date.date).setHours(0, 0, 0, 0));\r\n        return date;\r\n      });\r\n    });\r\n  }\r\n\r\n  save() {\r\n    this.isSaving = true;\r\n    let addedDates = [];\r\n    const deletedDates = [];\r\n\r\n    if (this.weekendDates) {\r\n      this.weekendDates.forEach(w => {\r\n        if (!this.holidays.find(h => h.date.getTime() === w.getTime())) {\r\n          addedDates.push(w);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.weekendDates) {\r\n      this.holidays.forEach(holiday => {\r\n        if (!this.weekendDates.find(d => d.getTime() === holiday.date.getTime())) {\r\n          deletedDates.push(holiday);\r\n        }\r\n      });\r\n    } else {\r\n      this.holidays.forEach(holiday => deletedDates.push(holiday));\r\n    }\r\n\r\n    if (addedDates.length > 0) {\r\n      addedDates = addedDates.map(date => {\r\n        return {\r\n          date: this.adapterService.dateAdapter(date)\r\n        };\r\n      });\r\n      this.calendar.saveDates(addedDates).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe((holidays) => {\r\n        holidays.forEach(holiday => {\r\n          this.holidays.push({\r\n            id: holiday.id,\r\n            date: new Date((new Date(holiday.date).setHours(0, 0, 0, 0)))\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    if (deletedDates.length > 0) {\r\n      this.calendar.deleteDates(deletedDates).pipe(\r\n        finalize(() => this.isSaving = false)\r\n      ).subscribe(() => {\r\n        deletedDates.forEach(date => {\r\n          const index = this.holidays.findIndex(h => h.id === date.id);\r\n          this.holidays.splice(index, 1);\r\n        });\r\n      });\r\n    }\r\n\r\n    if (!deletedDates.length && !addedDates.length) {\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>Production Calendar</h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2 p-button-icon\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-check\"\r\n        label=\"Save Calendar\"\r\n        [loading]=\"isSaving\"\r\n        (click)=\"save()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <div class=\"production-calendar\">\r\n      <p-calendar\r\n        selectionMode=\"multiple\"\r\n        [inline]=\"true\"\r\n        [numberOfMonths]=\"12\"\r\n        [showOtherMonths]=\"false\"\r\n        [(ngModel)]=\"weekendDates\"\r\n        [defaultDate]=\"defaultDate\"\r\n        [firstDayOfWeek]=\"1\"\r\n      ></p-calendar>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Task} from '@shared/models/task';\r\nimport {BehaviorSubject, Observable, switchMap} from 'rxjs';\r\nimport {filter, tap} from 'rxjs/operators';\r\nimport {UntilDestroy, untilDestroyed} from '@ngneat/until-destroy';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {QuerySearch} from '@shared/models/other';\r\nimport {Paginator} from 'primeng/paginator';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Table} from 'primeng/table';\r\nimport {Employee} from '@shared/models/employee';\r\nimport {Nomenclature} from '@shared/models/nomenclature';\r\nimport {MenuItem} from 'primeng/api';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'pek-manufacturing-slice-tasks',\r\n  templateUrl: './manufacturing-slice-tasks.component.html',\r\n  styleUrls: ['./manufacturing-slice-tasks.component.scss']\r\n})\r\nexport class ManufacturingSliceTasksComponent implements OnInit {\r\n  @ViewChild('paginator') paginator: Paginator;\r\n  @ViewChild('dt') table: Table;\r\n\r\n  taskStatuses = [\r\n    {id: 0, name: 'Not processed'},\r\n    {id: 1, name: 'Deficit'},\r\n    {id: 2, name: 'Rework'},\r\n    {id: 3, name: 'Ordered'},\r\n    {id: 4, name: 'On Stock'},\r\n  ];\r\n\r\n  employees: Employee[] = [];\r\n\r\n  currentDate: Date = new Date();\r\n\r\n  startDate: Date;\r\n  endDate: Date;\r\n\r\n  lists: Nomenclature[] = [];\r\n\r\n  isStartFirstPage = false;\r\n  isPeriod: boolean = false;\r\n\r\n  searchForm: FormGroup = this.fb.group({\r\n    employees_id: [null],\r\n    status: [null],\r\n    technology_id: [null],\r\n    product_list_origin_id: [null],\r\n  });\r\n\r\n  queryKey: string = this.adapterService.generateQueryKey(this.searchForm);\r\n  query: QuerySearch[] = [];\r\n\r\n  tasks: Task[] = [];\r\n\r\n  tasksCount = 0;\r\n\r\n  isLoading = true;\r\n\r\n  search$: BehaviorSubject<void> = new BehaviorSubject<void>(null);\r\n\r\n  tasks$: Observable<Task[]> = this.search$.pipe(\r\n    tap(() => this.prepareForSearch()),\r\n    switchMap(() => this.taskService.get(this.query)),\r\n    tap(response => this.tasksCount = response.length),\r\n    tap(tasks => this.filterTasks(tasks)),\r\n    tap(() => this.isLoading = false),\r\n    untilDestroyed(this)\r\n  );\r\n\r\n  isLoadingFilters = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly adapterService: AdapterService,\r\n    private readonly taskService: TaskService,\r\n    private readonly modalService: ModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tasks$.subscribe();\r\n  }\r\n\r\n  onChoiceDate() {\r\n    this.modalService.openChoiceDateDialog('Select the day for which you want to view the tasks').pipe(\r\n      filter(response => !!response),\r\n      tap(() => this.isLoadingFilters = false),\r\n      tap(() => this.isPeriod = false),\r\n      tap(date => this.currentDate = date),\r\n      tap(() => this.search$.next())\r\n    ).subscribe();\r\n  }\r\n\r\n\r\n  onChoicePeriod() {\r\n    this.modalService.openChoicePeriodDateDialog()\r\n      .pipe(\r\n        filter(response => !!response),\r\n        tap(() => this.isLoadingFilters = false),\r\n        tap(dates => {\r\n          this.isPeriod = true;\r\n          this.startDate = dates.startDate;\r\n          this.endDate = dates.endDate;\r\n        }),\r\n        tap(() => this.search$.next())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  prepareForSearch() {\r\n    this.isLoading = true;\r\n    this.tasks = [];\r\n\r\n    const newQueryKey = this.adapterService.generateQueryKey(this.searchForm);\r\n\r\n    if (newQueryKey !== this.queryKey) {\r\n      this.queryKey = newQueryKey;\r\n    }\r\n\r\n    this.query = [];\r\n\r\n    if (!this.isPeriod) {\r\n      this.query.push({name: 'date', value: this.convertDate(this.currentDate)});\r\n    } else {\r\n      this.query.push({name: 'start_date__gte', value: this.adapterService.dateAdapter(this.startDate)});\r\n      this.query.push({name: 'end_date__lte', value: this.adapterService.dateAdapter(this.endDate)});\r\n    }\r\n\r\n    for (const key in this.searchForm.controls) {\r\n      if (this.searchForm.controls[key].value !== null) {\r\n\r\n        if (this.searchForm.controls[key].value instanceof Date) {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.adapterService.dateAdapter(this.searchForm.controls[key].value)\r\n          });\r\n        } else {\r\n          this.query.push({\r\n            name: key,\r\n            value: this.searchForm.controls[key].value\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  convertDate(date: Date): string {\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n\r\n  private filterTasks(tasks: Task[]) {\r\n    this.tasks = tasks.filter(t => t.list_product.nomenclature.type !== '0');\r\n\r\n    if (!this.isLoadingFilters) {\r\n      this.generateTasksEmployees();\r\n      this.generateLists();\r\n      this.isLoadingFilters = true;\r\n    }\r\n\r\n  }\r\n\r\n  generateTasksEmployees() {\r\n    this.employees = [];\r\n\r\n    this.tasks.forEach(task => {\r\n      task.employees.forEach(employee => {\r\n        if (!this.employees.find(e => e.id === employee.employee.id)) {\r\n          employee.employee.fullName = `${employee.employee.first_name} ${employee.employee.last_name}`;\r\n          this.employees.push(employee.employee);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onSelectEmployees(evt: any) {\r\n    this.searchForm.get('employees_id').patchValue(evt?.value?.join(',').length > 0 ? evt.value.join(',') : null);\r\n    this.search$.next();\r\n  }\r\n\r\n  private generateLists() {\r\n    this.lists = [];\r\n\r\n    this.tasks.forEach(task => {\r\n      if (task.root_nomenclature && !this.lists.find(l => l.id === task.root_nomenclature.id)) {\r\n        task.root_nomenclature.fullName = `(${task.production_list_id}) ${task.root_nomenclature.name}`\r\n        // @ts-ignore\r\n        task.root_nomenclature.production_list_id = task.production_list_id;\r\n        this.lists.push(task.root_nomenclature);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page\">\r\n  <div class=\"page__header\">\r\n    <div class=\"page__title\">\r\n      <pek-module-icon [module]=\"'manufacturing'\" [isActive]=\"true\"></pek-module-icon>\r\n      <h1>\r\n        <ng-container *ngIf=\"!isPeriod; else period\">\r\n          Slice of Tasks on {{currentDate | date: 'dd/MM/yyyy'}}\r\n        </ng-container>\r\n\r\n        <ng-template #period>\r\n          Slice of tasks from {{startDate| date: 'dd/MM/y'}} to {{endDate| date: 'dd/MM/y'}}\r\n        </ng-template>\r\n      </h1>\r\n    </div>\r\n    <div class=\"page__tools\">\r\n      <button\r\n        class=\"mr-2\"\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-calendar\"\r\n        label=\"Choice Date\"\r\n        (click)=\"onChoiceDate()\"\r\n      ></button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        icon=\"pi pi-calendar\"\r\n        label=\"Choice Period\"\r\n        (click)=\"onChoicePeriod()\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"page__content\">\r\n  <div class=\"page__card\">\r\n    <form\r\n      [formGroup]=\"searchForm\"\r\n      class=\"form mb-3\"\r\n    >\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Employees</label>\r\n            <p-multiSelect\r\n              *ngIf=\"!isLoading || isLoadingFilters; else spinner\"\r\n              [options]=\"employees\"\r\n              (onChange)=\"onSelectEmployees($event)\"\r\n              (onClear)=\"onSelectEmployees($event)\"\r\n              optionValue=\"id\"\r\n              optionLabel=\"fullName\"\r\n              placeholder=\"Choose Employees\"\r\n              [showClear]=\"true\"\r\n            >\r\n            </p-multiSelect>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Status</label>\r\n            <p-dropdown\r\n              [showClear]=\"true\"\r\n              [options]=\"taskStatuses\"\r\n              formControlName=\"status\"\r\n              (ngModelChange)=\"search$.next()\"\r\n              optionValue=\"id\"\r\n              optionLabel=\"name\"\r\n              placeholder=\"Choose status\"\r\n            >\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Technologies</label>\r\n            <pek-technology-picker></pek-technology-picker>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"form-group\">\r\n            <label>Production List Origin</label>\r\n            <p-dropdown\r\n              *ngIf=\"!isLoading || isLoadingFilters; else spinner\"\r\n              formControlName=\"product_list_origin_id\"\r\n              [showClear]=\"true\"\r\n              [options]=\"lists\"\r\n              optionValue=\"production_list_id\"\r\n              optionLabel=\"fullName\"\r\n              placeholder=\"Choose List\"\r\n              (ngModelChange)=\"search$.next()\"\r\n            >\r\n            </p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"table-pagination-preloader\">\r\n      <p-table\r\n        #dt\r\n        selectionMode=\"multiple\"\r\n        [rows]=\"10\"\r\n        [paginator]=\"tasks.length > 0\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"calc(100vh - 22rem)\"\r\n        [value]=\"tasks\"\r\n      >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th class=\"text-center\" style=\"width: 5%;\">#</th>\r\n            <th style=\"width: 13%;\"> Code</th>\r\n            <th style=\"width: 13%;\">Name</th>\r\n            <th style=\"width: 12%;\" class=\"text-center\">Start Date</th>\r\n            <th style=\"width: 12%;\" class=\"text-center\">End Date</th>\r\n            <th style=\"width: 10%;\" class=\"text-center\">Technology</th>\r\n            <th style=\"width: 7%;\" class=\"text-center\">Qnty</th>\r\n            <th style=\"width: 10%;\" pSortableColumn=\"searchFieldEmployee\">Employees\r\n              <p-sortIcon field=\"searchFieldEmployee\"></p-sortIcon>\r\n            </th>\r\n            <th style=\"width: 8%;\">Machines</th>\r\n            <th style=\"width: 10%\" class=\"text-center\" pSortableColumn=\"status\">Status\r\n              <p-sortIcon field=\"status\"></p-sortIcon>\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-task let-i=\"rowIndex\">\r\n          <tr>\r\n            <td style=\"width: 5%;\" class=\"text-center\">{{i + 1}}</td>\r\n            <td style=\"width: 13%;\">{{task.list_product.nomenclature.code}}</td>\r\n            <td style=\"width: 13%;\">{{task.list_product.nomenclature.name}}</td>\r\n            <td style=\"width: 12%;\" class=\"text-center\">{{task.start_date | date: 'dd/MM/yyyy, HH:mm'}}</td>\r\n            <td style=\"width: 12%;\" class=\"text-center\">{{task.end_date| date: 'dd/MM/yyyy, HH:mm'}}</td>\r\n            <td style=\"width: 10%;\" class=\"text-center\">{{task.technology ? task.technology : 'Purchased'}}</td>\r\n            <td style=\"width: 7%;\" class=\"text-center\">{{task.list_product.required_quantity}}</td>\r\n            <td style=\"width: 10%;\">\r\n              <div *ngFor=\"let employee of task.employees\">\r\n                {{employee.employee.first_name + ' ' + employee.employee.last_name}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 8%;\">\r\n              <div *ngFor=\"let machine of task.machines\">\r\n                {{machine.machine.name}}\r\n              </div>\r\n            </td>\r\n            <td style=\"width: 10%;\" class=\"text-center\">{{task.status}}</td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"paginatorright\">\r\n          <p-button\r\n            type=\"button\"\r\n            (click)=\"dt.paginator=false\"\r\n            styleClass=\"p-button-text\"\r\n          >\r\n            All\r\n          </p-button>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td class=\"text-center p-4\" [attr.colspan]=\"16\">\r\n              <i *ngIf=\"isLoading\" class=\"pi pi-spin pi-spinner\" style=\"font-size: 2.25rem\"></i>\r\n              <span *ngIf=\"!isLoading\">No Records Found</span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <div *ngIf=\"!dt.paginator && !isLoading && tasks.length > 0\" class=\"paginator-return-pagination\">\r\n      <p-button\r\n        type=\"button\"\r\n        (click)=\"dt.paginator=true\"\r\n        styleClass=\"p-button-text\"\r\n      >\r\n        Return pagination\r\n      </p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #spinner>\r\n  <div class=\"spinner-input\">\r\n    <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 1.25rem\"></i>\r\n  </div>\r\n</ng-template>\r\n","import {Component, ElementRef, Input, OnInit} from '@angular/core';\r\nimport {CDK_DRAG_CONFIG, CdkDragEnd} from '@angular/cdk/drag-drop';\r\nimport {ManufacturingChartComponent, UITask} from '../manufacturing-chart/manufacturing-chart.component';\r\nimport {ListProductProduction} from '../../models/list-product-production';\r\nimport {PlanningStatus} from '../../enums/planning-status.enum';\r\nimport {ENomenclatureBulk, ENomenclatureType} from '@shared/models/nomenclature';\r\nimport {filter} from 'rxjs/operators';\r\nimport {AdapterService} from '@shared/services/adapter.service';\r\nimport {TaskService} from '@shared/services/task.service';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {ExpandCollapseHeaderService} from '../../../layout/components/header/services/expand-collapse-header.service';\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-list-product-production',\r\n  templateUrl: './manufacturing-list-product-production.component.html',\r\n  styleUrls: ['./manufacturing-list-product-production.component.scss'],\r\n  providers: [{provide: CDK_DRAG_CONFIG, useValue: {dragStartThreshold: 12}}]\r\n})\r\nexport class ManufacturingListProductProductionComponent implements OnInit {\r\n\r\n  @Input() production: ListProductProduction;\r\n  @Input() isLeftPanel: boolean;\r\n  @Input() productionNameWidth = 150;\r\n  @Input() isRoot: boolean;\r\n  @Input() rootTask: Task;\r\n\r\n  childrenEndHighlighted = false;\r\n\r\n  dragging = false;\r\n\r\n  private taskDeleteSub: Subscription;\r\n  taskHovered: UITask;\r\n\r\n  constructor(\r\n    private modalService: ModalService,\r\n    private tasksService: TaskService,\r\n    private adapterService: AdapterService,\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    public chart: ManufacturingChartComponent,\r\n    public expandCollapseHeaderService: ExpandCollapseHeaderService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.production.product.nomenclature.bulk_or_serial === ENomenclatureBulk.SERIAL) {\r\n\r\n      this.production.reservedFromOtherTaskQuantity = 0;\r\n      this.production.tasks.forEach(task => {\r\n        task.tasks.forEach(taskInner => {\r\n          taskInner.serial_numbers?.forEach(serialNumber => {\r\n            if (serialNumber.reserved_for_root_production_list_info) {\r\n              this.production.reservedFromOtherTaskQuantity++;\r\n            }\r\n          });\r\n        });\r\n      });\r\n      console.log('this.production.reservedFromOtherTaskQuantity', this.production.reservedFromOtherTaskQuantity);\r\n\r\n    }\r\n    if (this.production.product.nomenclature.type === '1') {\r\n      this.elementRef.nativeElement.style.background = this.production.color;\r\n      this.elementRef.nativeElement.style.zIndex = String(99999 - this.production.index);\r\n    }\r\n\r\n    this.taskDeleteSub = this.tasksService.delete$.subscribe(() => {\r\n      this.production.updateGroups();\r\n    });\r\n\r\n    this.expandCollapseHeaderService.expandCollapseSingle.subscribe(isExpand => {\r\n      if (this.production.hasChildren && this.production.isActive) {\r\n        this.chart.expandCollapseSelected([this.production], isExpand);\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(task: UITask) {\r\n    const rootTask = this.getRootTaskInfo(this.production);\r\n    this.tasksService.editTaskDialog(task, this.production.tasks, rootTask).pipe(filter(isApplied => isApplied)).subscribe(position => {\r\n      if (position === 'reload') {\r\n        // this.applyPosition(task, position)\r\n        location.reload();\r\n        return;\r\n      }\r\n\r\n      if (position) {\r\n        this.applyPosition(task, position);\r\n      }\r\n    });\r\n  }\r\n\r\n  resize(task: UITask, event) {\r\n    // игнорируем изменения покупок т.к. их даты указываются в разделе закупок + если елемент заблокирован по статусу\r\n    if (task.list_product.nomenclature.type === ENomenclatureType.PURCHASED || this.getIfDisabled(task)) {\r\n      return;\r\n    }\r\n\r\n    const position = {start: task.start_date, end: task.end_date};\r\n\r\n    if (event.edges.left) {\r\n      let startX = this.chart.getX(task.start_date);\r\n      startX += event.edges.left;\r\n      if (startX < 0) startX = 0;\r\n      // if (this.chart.getDateInfo(startX).isVac) {\r\n      //   return;\r\n      //   // TODO сделать анимацию мигания задачи\r\n      // }\r\n\r\n      position.start = this.chart.getDate(startX);\r\n    } else if (event.edges.right) {\r\n      const endX = this.chart.getX(task.end_date);\r\n      // if (this.chart.getDateInfo(endX + event.edges.right).isVac) {\r\n      //   return;\r\n      // }\r\n      position.end = this.chart.getDate(endX + event.edges.right);\r\n    }\r\n\r\n    task.is_planned = true;\r\n    this.applyPosition(task, position);\r\n  }\r\n\r\n  getDuration(task) {\r\n    return (task.end_date.getTime() - task.start_date.getTime()) / 1000 / 60 / 60;\r\n  }\r\n\r\n  move(task: UITask, event: CdkDragEnd) {\r\n    task.duration = this.getDuration(task);\r\n    task.is_planned = true;\r\n    event.source.reset();\r\n    // игнорируем изменения покупок т.к. их даты указываются в разделе закупок\r\n    if (task.list_product.nomenclature.type === ENomenclatureType.PURCHASED) {\r\n      // TODO вывести сообщение юзеру\r\n      return;\r\n    }\r\n\r\n\r\n    const startX = this.chart.getX(task.start_date);\r\n\r\n    // if (this.chart.getDateInfo(startX + event.distance.x)?.isVac) {\r\n    //   return;\r\n    // }\r\n\r\n    const newStartX = startX + event.distance.x;\r\n\r\n    const start = this.chart.getDate(newStartX < 0 ? 0 : newStartX);\r\n    const end = new Date(start.getTime() + task.duration * 60 * 60 * 1000);\r\n\r\n    // if (this.chart.getDateInfo(end)?.isVac) {\r\n    //   return;\r\n    // }\r\n\r\n    this.applyPosition(task, {start, end});\r\n  }\r\n\r\n  onTaskClick(task: UITask, production: ListProductProduction, event: MouseEvent) {\r\n    switch (this.chart.mode) {\r\n      case 'edit-tasks':\r\n        // toggle task selection\r\n        const selectedProductions = this.chart.selectedTasks;\r\n        task.production = production;\r\n        if (selectedProductions.has(task)) {\r\n          selectedProductions.delete(task);\r\n        } else {\r\n          selectedProductions.add(task);\r\n        }\r\n        break;\r\n      case 'planning':\r\n      case 'make-order':\r\n        // task dragging\r\n        if (!this.dragging) {\r\n          task.production = production;\r\n          this.edit(task);\r\n        }\r\n        this.dragging = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // использую такой синтаксис, чтобы не терять this\r\n  validateResize = event => {\r\n    console.log('EVENT RESIZE VALIDATE', event);\r\n    console.log('EVENT RESIZE VALIDATE this.taskHovered', this.taskHovered);\r\n    // console.log('EVENT RESIZE this', this);\r\n    // const x = event.rectangle.left - (event.rectangle.width / 2);\r\n    // const y = event.rectangle.top - (event.rectangle.height / 2);\r\n    // const el = document.elementFromPoint(x, y);\r\n    // console.log('EVENT RESIZE this', el);\r\n    return !this.getIfDisabled(this.taskHovered);\r\n  }\r\n\r\n  validateTest(): boolean {\r\n    return true;\r\n  }\r\n\r\n  type(type: ENomenclatureType): string {\r\n    switch (type) {\r\n      case ENomenclatureType.PURCHASED:\r\n        return 'Purchased';\r\n      case ENomenclatureType.ASSEMBLY:\r\n        return 'Assembly';\r\n      case ENomenclatureType.MANUFACTURED:\r\n        return 'Manufactured';\r\n    }\r\n  }\r\n\r\n  toggleActiveProduction(production) {\r\n    if (production.hasChildren) {\r\n      production.isActive = !production.isActive;\r\n      this.chart.toggleSelectedListProducts(production.product.group_uid)\r\n    }\r\n  }\r\n\r\n  private highlightChildrenEnd() {\r\n    this.childrenEndHighlighted = true;\r\n    setTimeout(() => this.childrenEndHighlighted = false, 2_500);\r\n  }\r\n\r\n  private applyPosition(task: UITask, position: { start: Date, end: Date }) {\r\n    // validate new position\r\n    const prevTasks = this.production.tasks.filter(t => t.start_date.getTime() < task.start_date.getTime());\r\n\r\n    // запретить двигать левее предыдущих задач\r\n    if (prevTasks.length) {\r\n      prevTasks.forEach(prevTask => {\r\n        if (prevTask.end_date.getTime() > position.start.getTime()) {\r\n          position.start.setTime(prevTask.end_date.getTime());\r\n          // если переместили, а не изменили размер\r\n          if (position.end.getTime() < task.end_date.getTime()) {\r\n            position.end.setTime(position.start.getTime() + task.duration * 60 * 60_000);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      const childrenEnd = this.production.getChildrenEnd();\r\n      if (childrenEnd.getTime() > position.start.getTime()) {\r\n        this.highlightChildrenEnd();\r\n        position.start.setTime(childrenEnd.getTime());\r\n        // если переместили, а не изменили размер\r\n        if (position.end.getTime() < task.end_date.getTime()) {\r\n          position.end.setTime(position.start.getTime() + task.duration * 60 * 60_000);\r\n        }\r\n      }\r\n    }\r\n    const nextTasks = this.production.tasks.filter(t => t.start_date.getTime() > task.start_date.getTime());\r\n\r\n    // подвинуть следующие задачи\r\n    nextTasks.reduce((prevEnd, nextTask) => {\r\n      if (nextTask.start_date.getTime() < prevEnd.getTime()) {\r\n        nextTask.duration = (nextTask.end_date.getTime() - nextTask.start_date.getTime()) / 60 / 1000;\r\n        nextTask.start_date.setTime(prevEnd.getTime());\r\n        nextTask.end_date.setTime(nextTask.start_date.getTime() + nextTask.duration * 60_000);\r\n        this.chart.updateTaskDates(nextTask);\r\n      }\r\n      return nextTask.end_date;\r\n    }, position.end);\r\n\r\n    // apply new position\r\n    task.start_date = position.start;\r\n    task.end_date = position.end;\r\n    task.duration = task.duration = this.getDuration(task);\r\n\r\n    task.apply();\r\n\r\n    this.chart.updateTimeline();\r\n    this.chart.updateMargins(this.production);\r\n    this.chart.updateParentMargins(this.production.parent);\r\n    this.chart.update();\r\n    this.chart.updateTaskDates(task);\r\n  }\r\n\r\n  mouseoverFromTask(production) {\r\n    production.isHover = true;\r\n  }\r\n\r\n  getTaskWidth(width: number) {\r\n    return width * this.chart.vacationCoords / 24;\r\n  }\r\n\r\n  getTaskLeft(left: number) {\r\n    return left * this.chart.scaleHourWeekdayDay / 12;\r\n  }\r\n\r\n  mouseoutFromTask(production) {\r\n    production.isHover = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.taskDeleteSub.unsubscribe();\r\n  }\r\n\r\n  getIfDisabled(task: UITask): boolean {\r\n    const rootTask = this.getRootTaskInfo(this.production);\r\n    const isWaitingForConfirmation = rootTask.planning_status === PlanningStatus.WAITING_CONFIRMATION;\r\n    const rootPlanProductionId = rootTask.list_product.id;\r\n    if (rootPlanProductionId === task.list_product.id && !isWaitingForConfirmation) {\r\n      return rootTask.planning_status === PlanningStatus.PLANNED;\r\n    } else {\r\n      return isWaitingForConfirmation;\r\n    }\r\n  }\r\n\r\n  getRootTaskInfo(listProductProduction: ListProductProduction): UITask | undefined {\r\n    if (listProductProduction.parent) {\r\n      return this.getRootTaskInfo(listProductProduction.parent);\r\n    } else {\r\n      return listProductProduction.tasks?.find(task => !task.next_task && !task.parent_task);\r\n    }\r\n  }\r\n\r\n  mouseEntered(task: UITask) {\r\n    this.taskHovered = task;\r\n  }\r\n\r\n  mouseLeave(task: UITask) {\r\n    this.taskHovered = task;\r\n  }\r\n\r\n}\r\n","<!--<div-->\r\n<!--  *ngIf=\"production?.isExpanded\"-->\r\n<!--  class=\"children\"-->\r\n<!--  [class.highlighted-end]=\"childrenEndHighlighted\"-->\r\n<!--  [class.test]=\"!isLeftPanel\"-->\r\n<!--&gt;-->\r\n<!--  &lt;!&ndash; Группируем в один контейнер задачи без дочерних &ndash;&gt;-->\r\n<!--  <div-->\r\n<!--    class=\"child-group\"-->\r\n<!--    *ngFor=\"let group of production.groups\"-->\r\n<!--    [style.background]=\"production.color\"-->\r\n<!--  >-->\r\n<!--    <pek-manufacturing-list-product-production-->\r\n<!--      *ngFor=\"let child of group\"-->\r\n<!--      [rootTask]=\"rootTask\"-->\r\n<!--      [isLeftPanel]=\"isLeftPanel\"-->\r\n<!--      [productionNameWidth]=\"productionNameWidth\"-->\r\n<!--      [production]=\"child\"-->\r\n<!--    >-->\r\n<!--    </pek-manufacturing-list-product-production>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n\r\n<div\r\n  class=\"task\"\r\n  [class.m-0]=\"production?.children?.length\"\r\n  [class.root]=\"isRoot\"\r\n  [class.selected]=\"production?.isSelected\"\r\n  [class.filtered]=\"production?.isFiltered\"\r\n  [class.visible]=\"production?.isVisible\"\r\n  [class.parent]=\"production.hasChildren\"\r\n  [class.task_hover]=\"production.isHover\"\r\n  [class.task_active]=\"production.isActive\"\r\n  [style.marginLeft.px]=\"isLeftPanel ? -15 * production?.product.level : 0\"\r\n  (mouseover)=\"mouseoverFromTask(production)\"\r\n  (mouseout)=\"mouseoutFromTask(production)\"\r\n>\r\n  <div\r\n    *ngIf=\"isLeftPanel\"\r\n    class=\"d-flex task-content align-items-center\"\r\n    [class.task-parent]=\"production?.hasChildren\"\r\n  >\r\n    <input\r\n      *ngIf=\"chart.selectedTechnologies?.length && production.isFiltered && chart.mode === 'make-order'\"\r\n      [(ngModel)]=\"production.isSelected\"\r\n      (change)=\"chart.changeAllProductsOnSelected()\"\r\n      type=\"checkbox\"\r\n      class=\"task-checkbox\"\r\n    >\r\n    <!--      [style.left]=\"production.hasChildren ? -(33 + production.product.level * 7) + 'px' : ''\"-->\r\n    <button\r\n      class=\"task-btn\"\r\n      *ngIf=\"production?.hasChildren && chart.mode === 'add-items'\"\r\n      (click)=\"chart.addTasks(production)\"\r\n    ></button>\r\n    <div style=\"width: 30px\" [class.toggle-disable]=\"chart.mode === 'add-items'\">\r\n      <i *ngIf=\"production?.hasChildren && !production?.isBlocked\"\r\n         class=\"pi\"\r\n         [class.pi-minus]=\"production.isExpanded\"\r\n         [class.pi-plus]=\"!production.isExpanded\"\r\n         (click)=\"chart.toggleProduction(production).subscribe()\"\r\n      ></i>\r\n    </div>\r\n    <div class=\"d-flex\" (click)=\"toggleActiveProduction(production)\">\r\n      <div\r\n        class=\"task-item task-item-code\"\r\n        [ngStyle]=\"{\r\n          width: production?.hasChildren ? 190 - 15 * production?.product.level + 'px' : '190px',\r\n          paddingLeft: isLeftPanel && !production?.hasChildren ? 15 * (production?.product.level - 1) + 'px' : 0\r\n        }\"\r\n      >\r\n        <span class=\"production-code\">{{production?.product.nomenclature.code}}</span>\r\n        <span class=\"production-code production-code_hide\">\r\n        <span class=\"text\">{{production?.product.nomenclature.code}}</span>\r\n      </span>\r\n      </div>\r\n\r\n      <!-- Название продукта -->\r\n      <div class=\"task-item task-item-name\">\r\n      <span class=\"production-name\" [style.width.px]=\"productionNameWidth\">\r\n        <b *ngIf=\"production?.product.nomenclature.bulk_or_serial === '1' &&\r\n                  production.reservedFromOtherTaskQuantity > 0\">\r\n          (R-{{production.reservedFromOtherTaskQuantity}})&nbsp;\r\n        </b>\r\n        <b *ngIf=\"production?.product.nomenclature.bulk_or_serial === '1'\">(S)</b>\r\n        <b *ngIf=\"production?.product.nomenclature.has_technical_equipment\">(T)</b>\r\n        <b *ngIf=\"production.task.refunded_orders.length > 0 && !production.task.is_refunded\">(RR)</b>\r\n        <b *ngIf=\"production.task.is_in_rma_process\">(Reordered)</b>\r\n        {{production?.product.nomenclature.name}}\r\n      </span>\r\n\r\n        <span class=\"production-name production-name_hide\" [style.width.px]=\"productionNameWidth\">\r\n        <span class=\"text\">\r\n          <b *ngIf=\"production.task.refunded_orders.length > 0 && !production.task.is_refunded\">(RR)</b>\r\n          <b *ngIf=\"production.task.is_in_rma_process\">(Reordered)</b>\r\n          {{production?.product.nomenclature.name}}\r\n        </span>\r\n      </span>\r\n      </div>\r\n\r\n      <!--    <div style=\"width: 80px;\" class=\"task-item justify-content-center\">{{production?.product.required_quantity * production.products.length}}</div>-->\r\n      <div\r\n        style=\"width: 80px;\"\r\n        class=\"task-item justify-content-center\"\r\n      >\r\n        {{production?.product.task_required_quantity * production?.tasks[0].tasks.length}}\r\n      </div>\r\n      <div style=\"width: 50px;\" class=\"task-item justify-content-center\">\r\n        {{production?.product.nomenclature.category?.unit_of_measure?.symbol ? production?.product.nomenclature.category?.unit_of_measure?.symbol : 'Pcs'}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"!isLeftPanel\"\r\n    class=\"d-flex timeline-tasks ml-3\"\r\n    [style.width.px]=\"chart?.getX(production?.getEnd())\"\r\n  >\r\n    <ng-container *ngFor=\"let task of production?.tasks\">\r\n      <div\r\n        class=\"task-time\"\r\n        (mouseenter)=\"mouseEntered(task)\"\r\n        (mouseleave)=\"mouseLeave(task)\"\r\n        *ngIf=\"task.start_date\"\r\n        [class.selected]=\"chart.selectedTasks.has(task)\"\r\n        [class.deselected]=\"chart.mode === 'edit-tasks' && !chart.selectedTasks.has(task)\"\r\n        [class.disabled]=\"chart.selectedTechnologies.length && !chart.selectedTechnologies.includes(task.technology)\"\r\n        [class.disabled_status]=\"chart.mode !== 'make-order' &&\r\n           (chart.selectedStatuses.length && !chart.selectedStatuses.includes(task.status)) ||\r\n           (chart.selectedFilterTechnologies.length && !chart.selectedFilterTechnologies.includes(task.technology)) ||\r\n           (chart.selectedProductionTypes.length && !chart.selectedProductionTypes.includes(task.production_type))\"\r\n        [class.is-saved]=\"task.isSaved\"\r\n        [class.small]=\"task.width <= 24 && chart.selectedDisplay === 'days'\"\r\n        [class.not-planned]=\"!task.is_planned\"\r\n        [class.planned]=\"task.is_planned\"\r\n        [class.deficit_not-planned]=\"task.status === 'Deficit' && !task.is_planned\"\r\n        [class.deficit_planned]=\"task.status === 'Deficit' && task.is_planned\"\r\n        [class.ordered-own]=\"task.status === 'Ordered' && task.production_type === '1'\"\r\n        [class.ordered-own-p]=\"task.status === 'Ordered' && task.list_product.nomenclature.type === '0'\"\r\n        [class.ordered-outsource]=\"task.status === 'Ordered' && task.production_type === '0'\"\r\n        [class.on-stock]=\"task.status === 'On stock'\"\r\n        [class.task-reserved]=\"task.status === 'Reserved'\"\r\n        [class.rework]=\"task.status === 'Rework'\"\r\n        [ngStyle]=\"{'left': task.left + 'px', 'width' : task.width + 'px'}\"\r\n        [id]=\"production.product.id\"\r\n        [class.small-font]=\"chart.selectedDisplay === 'weeks'\"\r\n        cdkDrag\r\n        cdkDragLockAxis=\"x\"\r\n        (cdkDragStarted)=\"dragging = true\"\r\n        (cdkDragEnded)=\"move(task, $event)\"\r\n        [cdkDragDisabled]=\"getIfDisabled(task)\"\r\n        mwlResizable\r\n        [enableGhostResize]=\"true\"\r\n        [resizeSnapGrid]=\"{left: chart.scaleHourWeekdayDay, right: chart.scaleHourWeekdayDay}\"\r\n        (resizeEnd)=\"resize(task, $event)\"\r\n        [validateResize]=\"validateResize\"\r\n        (click)=\"onTaskClick(task, production, $event)\"\r\n        [pTooltip]=\"(task.refunded_orders.length > 0 && !task.is_refunded ? '(RR) ' : '') + (task.is_in_rma_process ? '(Reordered) ' : '') + (task.technology ?? 'Purchased')\"\r\n      >\r\n        <svg [style.width]=\"task.width\" height=\"22\" *ngIf=\"task.status === 'Rework'\">\r\n          <defs>\r\n            <pattern\r\n              id=\"transformedPattern\"\r\n              x=\"0\" y=\"0\" width=\"1\" height=\"20\"\r\n              patternUnits=\"userSpaceOnUse\"\r\n              patternTransform=\"rotate(45)\"\r\n            >\r\n              <circle cx=\"1\" cy=\"1\" r=\"2\" style=\"stroke: none; fill: #000000\"/>\r\n            </pattern>\r\n          </defs>\r\n\r\n          <rect\r\n            x=\"0\"\r\n            y=\"0\"\r\n            [style.width]=\"task.width\"\r\n            height=\"22\"\r\n            style=\"stroke: #000000; fill: url(#transformedPattern);\"/>\r\n        </svg>\r\n        <div class=\"days\">\r\n          <div\r\n            *ngFor=\"let day of task.days\"\r\n            class=\"day\"\r\n            [style.width]=\"chart.selectedDisplay === 'days' ? chart.vacationCoords + 'px' : chart.weekWeekDayCoords + 'px'\"\r\n            [class.day_is-vac]=\"day.isVac\"\r\n            [style.left.px]=\"day.x\"\r\n          >\r\n          </div>\r\n        </div>\r\n        <div class=\"tech-name\" [class.tech-name_small]=\"chart.planScale === 25\">\r\n          <b *ngIf=\"task.refunded_orders.length > 0 && !task.is_refunded\">(RR)</b>\r\n          <b *ngIf=\"task.is_in_rma_process\">(Reordered)</b>\r\n          {{task.technology ? task.technology : type(task.list_product.nomenclature.type)}}\r\n        </div>\r\n        <div\r\n          class=\"resize-handle-right\"\r\n          [class.resize-handle-right_medium]=\"task.width <= 24\"\r\n          mwlResizeHandle [resizeEdges]=\"{ right: true }\"></div>\r\n        <div\r\n          class=\"resize-handle-left\"\r\n          [class.resize-handle-left_medium]=\"task.width <= 24\"\r\n          mwlResizeHandle [resizeEdges]=\"{ left: true }\"></div>\r\n        <div class=\"drag-handle\" cdkDragHandle [cdkDragHandleDisabled]=\"getIfDisabled(task)\"></div>\r\n      </div>\r\n      <div\r\n        class=\"task-time new-date\"\r\n        *ngIf=\"task.unconfirmedBiggerWidth\"\r\n        [ngStyle]=\"{'left': task.left + 'px', 'width' : task.unconfirmedBiggerWidth + 'px'}\"\r\n      >\r\n        &#160;\r\n      </div>\r\n      <div\r\n        class=\"task-time new-date-smaller\"\r\n        *ngIf=\"task.unconfirmedSmallerWidth\"\r\n        [ngStyle]=\"{'left': task.unconfirmedLeft + 'px', 'width' : task.unconfirmedSmallerWidth + 'px'}\"\r\n      >\r\n        &#160;\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"production?.isExpanded\"\r\n  class=\"children\"\r\n  [class.highlighted-end]=\"childrenEndHighlighted\"\r\n  [class.test]=\"!isLeftPanel\"\r\n>\r\n  <!-- Группируем в один контейнер задачи без дочерних -->\r\n  <div\r\n    class=\"child-group\"\r\n    *ngFor=\"let group of production.groups\"\r\n    [style.background]=\"production.color\"\r\n  >\r\n    <pek-manufacturing-list-product-production\r\n      *ngFor=\"let child of group\"\r\n      [rootTask]=\"rootTask\"\r\n      [isLeftPanel]=\"isLeftPanel\"\r\n      [productionNameWidth]=\"productionNameWidth\"\r\n      [production]=\"child\"\r\n    >\r\n    </pek-manufacturing-list-product-production>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ManufacturingRouting } from './manufacturing.routing';\r\nimport {ManufacturingLayoutComponent} from './components/manufacturing-layout/manufacturing-layout.component';\r\nimport {LayoutModule} from '../layout/layout.module';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {ManufacturingPlanListComponent} from './components/manufacturing-plan-list/manufacturing-plan-list.component';\r\nimport { ManufacturingSliceTasksComponent } from './components/manufacturing-slice-tasks/manufacturing-slice-tasks.component';\r\nimport { ManufacturingEmployeesComponent } from './components/manufacturing-employees/manufacturing-employees.component';\r\nimport { CreateEditEmployeeComponent } from './modals/create-edit-employee/create-edit-employee.component';\r\nimport { ManufacturingPositionsComponent } from './components/manufacturing-positions/manufacturing-positions.component';\r\nimport { CreateEditPositionComponent } from './modals/create-edit-position/create-edit-position.component';\r\nimport { ManufacturingMachinesComponent } from './components/manufacturing-machines/manufacturing-machines.component';\r\nimport { CreateEditMachineComponent } from './modals/create-edit-machine/create-edit-machine.component';\r\nimport { ManufacturingOrderStatusesComponent } from './components/manufacturing-order-statuses/manufacturing-order-statuses.component';\r\nimport { ManufacturingOrdersComponent } from './components/manufacturing-orders/manufacturing-orders.component';\r\nimport {TriStateCheckboxModule} from 'primeng/tristatecheckbox';\r\nimport { ManufacturingOrderPageComponent } from './components/manufacturing-order-page/manufacturing-order-page.component';\r\nimport { ManufacturingOrderPagePrintComponent } from './components/manufacturing-order-page/manufacturing-order-page-print/manufacturing-order-page-print.component';\r\nimport { ManufacturingChartComponent } from './components/manufacturing-chart/manufacturing-chart.component';\r\nimport {ResizableModule} from 'angular-resizable-element';\r\nimport { ManufacturingListProductProductionComponent } from './components/manufaturing-list-product-production/manufacturing-list-product-production.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { ManufacturingPlanComponent } from './components/manufacturing-plan/manufacturing-plan.component';\r\nimport { ManufacturingCreateOrderComponent } from './modals/manufacturing-create-order/manufacturing-create-order.component';\r\nimport { ManufacturingMaterialPickerComponent } from './pickers/manufacturing-material-picker/manufacturing-material-picker.component';\r\nimport { ManufacturingTaskEditComponent } from './modals/manufacturing-task-edit/manufacturing-task-edit.component';\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport { ManufacturingAddTechnologyComponent } from './modals/manufacturing-add-technology/manufacturing-add-technology.component';\r\nimport { ManufacturingTasksEditComponent } from './modals/manufacturing-tasks-edit/manufacturing-tasks-edit.component';\r\nimport { ShiftByTypesComponent } from './pickers/shift-by-types/shift-by-types.component';\r\nimport { ManufacturingAddItemsComponent } from './modals/manufacturing-add-items/manufacturing-add-items.component';\r\nimport { ManufacturingPickerProductComponent } from './modals/manufacturing-picker-product/manufacturing-picker-product.component';\r\nimport { ManufacturingAllPlansComponent } from './components/manufacturing-all-plans/manufacturing-all-plans.component';\r\nimport { ManufacturingSplitPlanComponent } from './modals/manufacturing-split-plan/manufacturing-split-plan.component';\r\nimport { ManufacturingProductionCalendarComponent } from './components/manufacturing-production-calendar/manufacturing-production-calendar.component';\r\nimport { ManufacturingOrderProductsInfoPrintComponent } from './components/manufacturing-order-page/manufacturing-order-products-info-print/manufacturing-order-products-info-print.component';\r\nimport {AddTasksToChainComponent} from './modals/add-tasks-to-chain/add-tasks-to-chain.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManufacturingLayoutComponent,\r\n    ManufacturingPlanListComponent,\r\n    ManufacturingSliceTasksComponent,\r\n    ManufacturingEmployeesComponent,\r\n    CreateEditEmployeeComponent,\r\n    ManufacturingPositionsComponent,\r\n    CreateEditPositionComponent,\r\n    ManufacturingMachinesComponent,\r\n    CreateEditMachineComponent,\r\n    AddTasksToChainComponent,\r\n    ManufacturingOrderStatusesComponent,\r\n    ManufacturingOrdersComponent,\r\n    ManufacturingOrderPageComponent,\r\n    ManufacturingOrderPagePrintComponent,\r\n    ManufacturingChartComponent,\r\n    ManufacturingListProductProductionComponent,\r\n    ManufacturingPlanComponent,\r\n    ManufacturingCreateOrderComponent,\r\n    ManufacturingMaterialPickerComponent,\r\n    ManufacturingTaskEditComponent,\r\n    ManufacturingAddTechnologyComponent,\r\n    ManufacturingTasksEditComponent,\r\n    ShiftByTypesComponent,\r\n    ManufacturingAddItemsComponent,\r\n    ManufacturingPickerProductComponent,\r\n    ManufacturingAllPlansComponent,\r\n    ManufacturingSplitPlanComponent,\r\n    ManufacturingProductionCalendarComponent,\r\n    ManufacturingOrderProductsInfoPrintComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    ManufacturingRouting,\r\n    LayoutModule,\r\n    TriStateCheckboxModule,\r\n    ResizableModule,\r\n    DragDropModule,\r\n    AccordionModule\r\n  ]\r\n})\r\nexport class ManufacturingModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ManufacturingLayoutComponent} from './components/manufacturing-layout/manufacturing-layout.component';\r\nimport {ManufacturingPlanListComponent} from './components/manufacturing-plan-list/manufacturing-plan-list.component';\r\nimport {\r\n  ManufacturingSliceTasksComponent\r\n} from './components/manufacturing-slice-tasks/manufacturing-slice-tasks.component';\r\nimport {ManufacturingEmployeesComponent} from './components/manufacturing-employees/manufacturing-employees.component';\r\nimport {ManufacturingPositionsComponent} from './components/manufacturing-positions/manufacturing-positions.component';\r\nimport {ManufacturingMachinesComponent} from './components/manufacturing-machines/manufacturing-machines.component';\r\nimport {\r\n  ManufacturingOrderStatusesComponent\r\n} from './components/manufacturing-order-statuses/manufacturing-order-statuses.component';\r\nimport {ManufacturingOrdersComponent} from './components/manufacturing-orders/manufacturing-orders.component';\r\nimport {\r\n  ManufacturingOrderPageComponent\r\n} from './components/manufacturing-order-page/manufacturing-order-page.component';\r\nimport {ManufacturingPlanComponent} from './components/manufacturing-plan/manufacturing-plan.component';\r\nimport {ManufacturingAllPlansComponent} from './components/manufacturing-all-plans/manufacturing-all-plans.component';\r\nimport {\r\n  ManufacturingProductionCalendarComponent\r\n} from './components/manufacturing-production-calendar/manufacturing-production-calendar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ManufacturingLayoutComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'plans', pathMatch: 'full'},\r\n      {\r\n        path: 'plans',\r\n        children: [\r\n          {path: '', title: 'Plans', component: ManufacturingPlanListComponent},\r\n          {path: 'plan/:rootId', title: 'Plan', component: ManufacturingPlanComponent},\r\n          {path: 'all', title: 'All Plans', component: ManufacturingAllPlansComponent},\r\n        ]\r\n      },\r\n      {\r\n        path: 'orders',\r\n        children: [\r\n          {path: '', title: 'Execution Orders', component: ManufacturingOrdersComponent},\r\n          {path: 'order/:id', title: 'Order', component: ManufacturingOrderPageComponent},\r\n        ]\r\n      },\r\n      {path: 'slice-tasks', title: 'Slice Tasks', component: ManufacturingSliceTasksComponent},\r\n      {path: 'employees', title: 'Employees', component: ManufacturingEmployeesComponent},\r\n      {path: 'positions', title: 'Positions', component: ManufacturingPositionsComponent},\r\n      {path: 'machines', title: 'Machines', component: ManufacturingMachinesComponent},\r\n      {path: 'order-statuses', title: 'Order Statuses', component: ManufacturingOrderStatusesComponent},\r\n      {path: 'production-calendar', title: 'Production Calendar', component: ManufacturingProductionCalendarComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManufacturingRouting {\r\n}\r\n","import {Product} from '../../product-structure/models/product';\r\nimport {UITask} from '../components/manufacturing-chart/manufacturing-chart.component';\r\nimport {Color, Task} from '@shared/models/task';\r\n\r\nexport type ListProductProductionGroup = Array<ListProductProduction>;\r\n\r\nexport class ListProductProduction {\r\n  product: Product;\r\n  products: Product[] = [];\r\n  tasks: UITask[] = [];\r\n  task?: Task;\r\n  isGrouped: boolean;\r\n\r\n  /** Используется для фильтрации в списке */\r\n  isFiltered = true;\r\n  /** Используется для фильтрации в списке (видно в том числе родительские isFiltered) */\r\n  isVisible = true;\r\n  /** Свёрнута ли ветка дерева */\r\n  isExpanded = true;\r\n\r\n  /** Наведение на элемент */\r\n  isHover = false;\r\n\r\n  /** Выбрана в списке */\r\n  isSelected = true;\r\n\r\n  /** Выбрана для развертывания / свертывания */\r\n  isActive = false;\r\n\r\n  /** Порядковый номер */\r\n  index: number;\r\n\r\n  isRootProductionCompleted = false;\r\n\r\n  parent: ListProductProduction;\r\n  children: ListProductProduction[] = [];\r\n\r\n  color: Color;\r\n\r\n  /** Группируем дочерние элементы, чтобы у них был общий цветной прямоугольник */\r\n  groups: ListProductProductionGroup[] = [];\r\n\r\n  reservedFromOtherTaskQuantity?: number;\r\n\r\n  constructor(config?: Partial<ListProductProduction>) {\r\n    if (config) {\r\n      Object.assign(this, config);\r\n    }\r\n  }\r\n\r\n  get hasChildren(): boolean {\r\n    return Boolean(this.children.length || !this.parent);\r\n  }\r\n\r\n  getChildrenEnd() {\r\n    return new Date(Math.max(\r\n      ...this.children\r\n        .map(child => child.tasks)\r\n        .flat()\r\n        .map(task => task.end_date.getTime())\r\n    ));\r\n  }\r\n\r\n  get isBlocked(): boolean {\r\n    return this.tasks\r\n      .map(p => p.tasks)\r\n      .flat()\r\n      .some(t => t.status === 'On stock') && !this.isRootProductionCompleted && this.tasks.some(t => !t.created_orders.length);\r\n  }\r\n\r\n  getEnd() {\r\n    return new Date(Math.max(\r\n      ...this.tasks\r\n        .map(t => t.tasks)\r\n        .flat()\r\n        .map(task => task.end_date.getTime())\r\n    ));\r\n  }\r\n\r\n  public updateGroups() {\r\n    this.groups = [];\r\n    for (const child of this.children) {\r\n      // разбиваем всего на 2 группы: с дочерними, без дочерних\r\n      const groupIndex = child.product.nomenclature.type === '1' ? 0 : 1;\r\n      this.groups[groupIndex] = this.groups[groupIndex] ?? [] as ListProductProductionGroup;\r\n      this.groups[groupIndex].push(child);\r\n    }\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {WarehouseProduct} from '../../../warehouse/models/warehouse-product';\r\nimport {ModalService} from '@shared/services/modal.service';\r\nimport {WarehouseProductService} from '../../../warehouse/services/warehouse-product.service';\r\n\r\nexport class MaterialRequest {\r\n  warehouseProduct: WarehouseProduct;\r\n  quantity: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'pek-manufacturing-material-picker',\r\n  templateUrl: './manufacturing-material-picker.component.html',\r\n  styleUrls: ['./manufacturing-material-picker.component.scss']\r\n})\r\nexport class ManufacturingMaterialPickerComponent implements OnInit {\r\n  @Input() materials: MaterialRequest[] = [];\r\n  @Output() materialsChange = new EventEmitter<MaterialRequest[]>();\r\n\r\n  constructor(\r\n    private readonly modalService: ModalService,\r\n    private readonly warehouseProductService: WarehouseProductService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.materials.length) {\r\n      this.addMaterial();\r\n    }\r\n  }\r\n\r\n  addMaterial() {\r\n    this.materials.push({warehouseProduct: null, quantity: 1});\r\n  }\r\n\r\n  public removeMaterial(material: MaterialRequest) {\r\n    const index = this.materials.indexOf(material);\r\n    this.materials.splice(index, 1);\r\n  }\r\n\r\n  warehouseSearch(material: MaterialRequest) {\r\n    this.warehouseProductService.openSearchInWarehouseModal().subscribe(product => {\r\n      if (product) {\r\n        material.warehouseProduct = product;\r\n        this.materialsChange.emit(this.materials);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row header\">\r\n  <div class=\"col-9\">\r\n    <label> Warehouse Product</label>\r\n  </div>\r\n  <div class=\"col-2 pl-0\" style=\"margin-left: -7px\">\r\n    <label> Quantity</label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let material of materials; index as index\"\r\n       class=\"col-12 row pt-3 align-items-center\"\r\n  >\r\n    <div class=\"col-9 warehouse-product\">\r\n      <a class=\"btn-picker\" (click)=\"warehouseSearch(material)\">\r\n        <span *ngIf=\"!material.warehouseProduct\">\r\n          Search In Warehouse\r\n        </span>\r\n        <span *ngIf=\"material.warehouseProduct\">Change Material</span>\r\n      </a>\r\n      <span class=\"material-name\" *ngIf=\"material.warehouseProduct\">\r\n        {{material.warehouseProduct.nomenclature.name}} ({{material.warehouseProduct.nomenclature.code}})\r\n        Quantity: {{material.warehouseProduct.total_locator_quantity}}\r\n      </span>\r\n    </div>\r\n    <div class=\"col-2\">\r\n      <input min=\"1\" type=\"number\" pInputText [(ngModel)]=\"material.quantity\">\r\n    </div>\r\n    <div class=\"col-1\">\r\n      <button *ngIf=\"index\" class=\"btn-picker btn-danger btn-picker-danger\" (click)=\"removeMaterial(material)\">\r\n        <i class=\"fas fa-minus\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"pl-3 row mt-3\">\r\n  <div class=\"btn-pick\">\r\n    <a class=\"btn-picker btn-picker-add\" (click)=\"addMaterial()\"><i class=\"pi pi-plus\"></i> Add New Item</a>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {forkJoin, Observable, of} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '@env/environment';\r\nimport {map} from 'rxjs/operators';\r\nimport {Holiday} from '../models/calendar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalendarService {\r\n\r\n  API_URL = environment.base_url + environment.production_url;\r\n\r\n  private calendar = new Set<number>();\r\n  calendarWeekendDays = [0, 6]; // выходные суббота и воскресенье\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n    this.getDates().subscribe((dates) => {\r\n      const holidaysDates = dates.map(date => {\r\n        const dd = new Date(date.date).setHours(0, 0, 0, 0);\r\n        return {\r\n          ...date,\r\n          date: new Date(dd),\r\n        };\r\n      });\r\n      this.calendar = new Set(holidaysDates.map(d => new Date(d.date).getTime()));\r\n    });\r\n  }\r\n\r\n  saveDates(dates: Holiday[]): Observable<Holiday[]> {\r\n    return this.httpClient.post<{ data: Holiday[] }>(this.API_URL + 'holidays/bulk_create/', dates).pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  getDates(): Observable<Holiday[]> {\r\n    return this.httpClient.get<{ data: Holiday[] }>(this.API_URL + 'holidays/').pipe(\r\n      map(response => response.data)\r\n    );\r\n  }\r\n\r\n  deleteDates(holidays): Observable<Holiday[]> {\r\n    return forkJoin(...holidays.map(holiday => this.httpClient.delete<Holiday>(this.API_URL + 'holidays/' + `${holiday.id}/`, holiday.id)));\r\n  }\r\n\r\n  isVac(date: Date) {\r\n    const dow = date.getDay();\r\n    let isVac = this.calendarWeekendDays.includes(dow);\r\n    if (this.calendar.has(date.getTime())) isVac = !isVac;\r\n    return isVac;\r\n  }\r\n}\r\n","export enum ViewMode {\r\n  LIST = 0,\r\n  HIERARCHY = 1,\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n"],"names":["ManufacturingLayoutComponent","constructor","expandCollapseHeaderService","label","commands","ngOnInit","expandCollapse","isExpand","setExpandCollapseSingle","expandCollapseAll","setExpandCollapseAll","i0","selectors","decls","vars","consts","template","ctx","BehaviorSubject","iif","switchMap","filter","map","tap","UntilDestroy","untilDestroyed","ctx_r6","ManufacturingOrdersComponent","fb","orderService","adapterService","modalService","router","group","order_root_list_id","active_status__in","created_after","created_before","items","icon","command","onGoToOderPage","onRemoveOrder","generateQueryKey","searchForm","search$","pipe","prepareForSearch","isShowAll","getForPagination","query","response","ordersCount","count","results","orders","transformOrders","get","length","paginateToFistPage","isLoading","forEach","order","order_products","prod","is_task_date_overdue","isReceiptDateOverdue","statuses","status","value","list_ids","Set","selectedOrder","newQueryKey","queryKey","currentPage","isStartFirstPage","name","finalStatusSelected","push","key","controls","Date","dateAdapter","paginate","event","page","next","paginator","changePage","onShowAll","onSelectStatuses","ids","patchValue","join","onSelectRootList","id","onCreateOrder","confirm","subscribe","isCreating","create","accounting_type","can_select_supplier","navigate","delete","window","open","viewQuery","asyncScheduler","delayWhen","timer","delay","due","scheduler","duration","concat","take","ignoreElements","mapTo","mergeMap","delayDurationSelector","subscriptionDelay","source","index","operate","createOperatorSubscriber","noop","subscriber"],"sourceRoot":"webpack:///","x_google_ignoreList":[40,41,42]}